function nf(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const r in s)if(r!=="default"&&!(r in n)){const o=Object.getOwnPropertyDescriptor(s,r);o&&Object.defineProperty(n,r,o.get?o:{enumerable:!0,get:()=>s[r]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))s(r);new MutationObserver(r=>{for(const o of r)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const o={};return r.integrity&&(o.integrity=r.integrity),r.referrerpolicy&&(o.referrerPolicy=r.referrerpolicy),r.crossorigin==="use-credentials"?o.credentials="include":r.crossorigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function s(r){if(r.ep)return;r.ep=!0;const o=t(r);fetch(r.href,o)}})();const Zt={};function FC(n){Zt.context=n}const OC=(n,e)=>n===e,js=Symbol("solid-proxy"),ip=Symbol("solid-track"),yy=Symbol("solid-dev-component"),Vu={equals:OC};let wy=Ty;const Br=1,Wu=2,MC={owned:null,cleanups:null,context:null,owner:null};var ct=null;let mo=null,Ot=null,fn=null,ur=null,sf=0,LC=0;function Ou(n,e){const t=Ot,s=ct,r=n.length===0,o={owned:null,cleanups:null,context:null,owner:e||s},a=r?()=>n(()=>{throw new Error("Dispose method must be an explicit argument to createRoot function")}):()=>n(()=>Rs(()=>af(o)));s&&(o.name=`${s.name}-r${LC++}`),globalThis._$afterCreateRoot&&globalThis._$afterCreateRoot(o),ct=o,Ot=null;try{return Ma(a,!0)}finally{Ot=t,ct=s}}function Bt(n,e){e=e?Object.assign({},Vu,e):Vu;const t={value:n,observers:null,observerSlots:null,comparator:e.equals||void 0};e.internal||(t.name=Cy(e.name||vy(n),t));const s=r=>(typeof r=="function"&&(r=r(t.value)),of(t,r));return[Ny.bind(t),s]}function sn(n,e,t){const s=$d(n,e,!1,Br,t);Oa(s)}function Iy(n,e,t){wy=WC;const s=$d(n,e,!1,Br,t);s.user=!0,ur?ur.push(s):Oa(s)}function mn(n,e,t){t=t?Object.assign({},Vu,t):Vu;const s=$d(n,e,!0,0,t);return s.observers=null,s.observerSlots=null,s.comparator=t.equals||void 0,Oa(s),Ny.bind(s)}function ky(n){return Ma(n,!1)}function Rs(n){const e=Ot;Ot=null;try{return n()}finally{Ot=e}}function rf(n){return ct===null?console.warn("cleanups created outside a `createRoot` or `render` will never be run"):ct.cleanups===null?ct.cleanups=[n]:ct.cleanups.push(n),n}function $y(){return Ot}function PC(n,e){const t=$d(()=>Rs(()=>(Object.assign(n,{[yy]:!0}),n(e))),void 0,!0);return t.props=e,t.observers=null,t.observerSlots=null,t.state=0,t.componentName=n.name,Oa(t),t.tValue!==void 0?t.tValue:t.value}function vy(n){const e=new Set;return`s${bb(typeof n=="string"?n:Rs(()=>JSON.stringify(n,(t,s)=>{if(typeof s=="object"&&s!=null){if(e.has(s))return;e.add(s);const r=Object.keys(s),o=Object.getOwnPropertyDescriptors(s),a=r.reduce((i,c)=>{const u=o[c];return u.get||(i[c]=u),i},{});s=Object.create({},a)}return typeof s=="bigint"?`${s.toString()}n`:s})||""))}`}function Cy(n,e){let t=n;if(ct){let s=0;for(ct.sourceMap||(ct.sourceMap={});ct.sourceMap[t];)t=`${n}-${++s}`;ct.sourceMap[t]=e}return t}function BC(n){return n||(n=ct),n?{...Ay(n.sourceMap),...n.owned?Dy(n):{}}:{}}function Js(n,e){const t=Symbol("context");return{id:t,Provider:GC(t,e),defaultValue:n}}function Qs(n){let e;return(e=Ry(ct,n.id))!==void 0?e:n.defaultValue}function Sy(n){const e=mn(n),t=mn(()=>cp(e()));return t.toArray=()=>{const s=t();return Array.isArray(s)?s:s!=null?[s]:[]},t}function Ny(){const n=mo;if(this.sources&&(this.state||n))if(this.state===Br||n)Oa(this);else{const e=fn;fn=null,Ma(()=>Gu(this),!1),fn=e}if(Ot){const e=this.observers?this.observers.length:0;Ot.sources?(Ot.sources.push(this),Ot.sourceSlots.push(e)):(Ot.sources=[this],Ot.sourceSlots=[e]),this.observers?(this.observers.push(Ot),this.observerSlots.push(Ot.sources.length-1)):(this.observers=[Ot],this.observerSlots=[Ot.sources.length-1])}return this.value}function of(n,e,t){let s=n.value;return(!n.comparator||!n.comparator(s,e))&&(n.value=e,n.observers&&n.observers.length&&Ma(()=>{for(let r=0;r<n.observers.length;r+=1){const o=n.observers[r],a=mo&&mo.running;a&&mo.disposed.has(o),(a&&!o.tState||!a&&!o.state)&&(o.pure?fn.push(o):ur.push(o),o.observers&&Ey(o)),a||(o.state=Br)}if(fn.length>1e6){throw fn=[],new Error("Potential Infinite Loop Detected.");throw new Error}},!1)),e}function Oa(n){if(!n.fn)return;af(n);const e=ct,t=Ot,s=sf;Ot=ct=n,zC(n,n.value,s),Ot=t,ct=e}function zC(n,e,t){let s;try{s=n.fn(e)}catch(r){n.pure&&(n.state=Br),_y(r)}(!n.updatedAt||n.updatedAt<=t)&&(n.updatedAt!=null&&"observers"in n?of(n,s):n.value=s,n.updatedAt=t)}function $d(n,e,t,s=Br,r){const o={fn:n,state:s,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:e,owner:ct,context:null,pure:t};return ct===null?console.warn("computations created outside a `createRoot` or `render` will never be disposed"):ct!==MC&&(ct.owned?ct.owned.push(o):ct.owned=[o],o.name=r&&r.name||`${ct.name||"c"}-${(ct.owned||ct.tOwned).length}`),o}function Uu(n){const e=mo;if(n.state===0||e)return;if(n.state===Wu||e)return Gu(n);if(n.suspense&&Rs(n.suspense.inFallback))return n.suspense.effects.push(n);const t=[n];for(;(n=n.owner)&&(!n.updatedAt||n.updatedAt<sf);)(n.state||e)&&t.push(n);for(let s=t.length-1;s>=0;s--)if(n=t[s],n.state===Br||e)Oa(n);else if(n.state===Wu||e){const r=fn;fn=null,Ma(()=>Gu(n,t[0]),!1),fn=r}}function Ma(n,e){if(fn)return n();let t=!1;e||(fn=[]),ur?t=!0:ur=[],sf++;try{const s=n();return VC(t),s}catch(s){fn||(ur=null),_y(s)}}function VC(n){if(fn&&(Ty(fn),fn=null),n)return;const e=ur;ur=null,e.length?Ma(()=>wy(e),!1):globalThis._$afterUpdate&&globalThis._$afterUpdate()}function Ty(n){for(let e=0;e<n.length;e++)Uu(n[e])}function WC(n){let e,t=0;for(e=0;e<n.length;e++){const s=n[e];s.user?n[t++]=s:Uu(s)}for(Zt.context&&FC(),e=0;e<t;e++)Uu(n[e])}function Gu(n,e){const t=mo;n.state=0;for(let s=0;s<n.sources.length;s+=1){const r=n.sources[s];r.sources&&(r.state===Br||t?r!==e&&Uu(r):(r.state===Wu||t)&&Gu(r,e))}}function Ey(n){const e=mo;for(let t=0;t<n.observers.length;t+=1){const s=n.observers[t];(!s.state||e)&&(s.state=Wu,s.pure?fn.push(s):ur.push(s),s.observers&&Ey(s))}}function af(n){let e;if(n.sources)for(;n.sources.length;){const t=n.sources.pop(),s=n.sourceSlots.pop(),r=t.observers;if(r&&r.length){const o=r.pop(),a=t.observerSlots.pop();s<r.length&&(o.sourceSlots[a]=s,r[s]=o,t.observerSlots[s]=a)}}if(n.owned){for(e=0;e<n.owned.length;e++)af(n.owned[e]);n.owned=null}if(n.cleanups){for(e=0;e<n.cleanups.length;e++)n.cleanups[e]();n.cleanups=null}n.state=0,n.context=null,delete n.sourceMap}function UC(n){return n instanceof Error||typeof n=="string"?n:new Error("Unknown error")}function _y(n){throw n=UC(n),n}function Ry(n,e){return n?n.context&&n.context[e]!==void 0?n.context[e]:Ry(n.owner,e):void 0}function cp(n){if(typeof n=="function"&&!n.length)return cp(n());if(Array.isArray(n)){const e=[];for(let t=0;t<n.length;t++){const s=cp(n[t]);Array.isArray(s)?e.push.apply(e,s):e.push(s)}return e}return n}function GC(n,e){return function(s){let r;return sn(()=>r=Rs(()=>(ct.context={[n]:s.value},Sy(()=>s.children))),void 0,e),r}}function bb(n){for(var e=0,t=9;e<n.length;)t=Math.imul(t^n.charCodeAt(e++),9**9);return`${t^t>>>9}`}function Ay(n={}){const e=Object.keys(n),t={};for(let s=0;s<e.length;s++){const r=e[s];t[r]=n[r].value}return t}function Dy(n){const e={};for(let t=0,s=n.owned.length;t<s;t++){const r=n.owned[t];e[r.componentName?`${r.componentName}:${r.name}`:r.name]={...Ay(r.sourceMap),...r.owned?Dy(r):{}}}return e}const HC=Symbol("fallback");function xb(n){for(let e=0;e<n.length;e++)n[e]()}function jC(n,e,t={}){let s=[],r=[],o=[],a=0,i=e.length>1?[]:null;return rf(()=>xb(o)),()=>{let c=n()||[],u,l;return c[ip],Rs(()=>{let h=c.length,p,f,m,g,b,x,y,w,I;if(h===0)a!==0&&(xb(o),o=[],s=[],r=[],a=0,i&&(i=[])),t.fallback&&(s=[HC],r[0]=Ou(k=>(o[0]=k,t.fallback())),a=1);else if(a===0){for(r=new Array(h),l=0;l<h;l++)s[l]=c[l],r[l]=Ou(d);a=h}else{for(m=new Array(h),g=new Array(h),i&&(b=new Array(h)),x=0,y=Math.min(a,h);x<y&&s[x]===c[x];x++);for(y=a-1,w=h-1;y>=x&&w>=x&&s[y]===c[w];y--,w--)m[w]=r[y],g[w]=o[y],i&&(b[w]=i[y]);for(p=new Map,f=new Array(w+1),l=w;l>=x;l--)I=c[l],u=p.get(I),f[l]=u===void 0?-1:u,p.set(I,l);for(u=x;u<=y;u++)I=s[u],l=p.get(I),l!==void 0&&l!==-1?(m[l]=r[u],g[l]=o[u],i&&(b[l]=i[u]),l=f[l],p.set(I,l)):o[u]();for(l=x;l<h;l++)l in m?(r[l]=m[l],o[l]=g[l],i&&(i[l]=b[l],i[l](l))):r[l]=Ou(d);r=r.slice(0,a=h),s=c.slice(0)}return r});function d(h){if(o[l]=h,i){const[p,f]=Bt(l);return i[l]=f,e(c[l],p)}return e(c[l])}}}function se(n,e){return PC(n,e||{})}function wu(){return!0}const Fy={get(n,e,t){return e===js?t:n.get(e)},has(n,e){return n.has(e)},set:wu,deleteProperty:wu,getOwnPropertyDescriptor(n,e){return{configurable:!0,enumerable:!0,get(){return n.get(e)},set:wu,deleteProperty:wu}},ownKeys(n){return n.keys()}};function zh(n){return(n=typeof n=="function"?n():n)?n:{}}function Mu(...n){if(n.some(t=>t&&(js in t||typeof t=="function")))return new Proxy({get(t){for(let s=n.length-1;s>=0;s--){const r=zh(n[s])[t];if(r!==void 0)return r}},has(t){for(let s=n.length-1;s>=0;s--)if(t in zh(n[s]))return!0;return!1},keys(){const t=[];for(let s=0;s<n.length;s++)t.push(...Object.keys(zh(n[s])));return[...new Set(t)]}},Fy);const e={};for(let t=n.length-1;t>=0;t--)if(n[t]){const s=Object.getOwnPropertyDescriptors(n[t]);for(const r in s)r in e||Object.defineProperty(e,r,{enumerable:!0,get(){for(let o=n.length-1;o>=0;o--){const a=(n[o]||{})[r];if(a!==void 0)return a}}})}return e}function Oy(n,...e){const t=new Set(e.flat()),s=Object.getOwnPropertyDescriptors(n),r=js in n;r||e.push(Object.keys(s).filter(a=>!t.has(a)));const o=e.map(a=>{const i={};for(let c=0;c<a.length;c++){const u=a[c];!r&&!(u in n)||Object.defineProperty(i,u,s[u]?s[u]:{get(){return n[u]},set(){return!0},enumerable:!0})}return i});return r&&o.push(new Proxy({get(a){return t.has(a)?void 0:n[a]},has(a){return t.has(a)?!1:a in n},keys(){return Object.keys(n).filter(a=>!t.has(a))}},Fy)),o}function zr(n){const e="fallback"in n&&{fallback:()=>n.fallback};return mn(jC(()=>n.each,n.children,e||void 0))}function Hu(n){let e=!1;const t=n.keyed,s=mn(()=>n.when,void 0,{equals:(r,o)=>e?r===o:!r==!o});return mn(()=>{const r=s();if(r){const o=n.children,a=typeof o=="function"&&o.length>0;return e=t||a,a?Rs(()=>o(r)):o}return n.fallback})}function Dc(n){let e=!1,t=!1;const s=Sy(()=>n.children),r=mn(()=>{let o=s();Array.isArray(o)||(o=[o]);for(let a=0;a<o.length;a++){const i=o[a].when;if(i)return t=!!o[a].keyed,[a,i,o[a]]}return[-1]},void 0,{equals:(o,a)=>o[0]===a[0]&&(e?o[1]===a[1]:!o[1]==!a[1])&&o[2]===a[2]});return mn(()=>{const[o,a,i]=r();if(o<0)return n.fallback;const c=i.children,u=typeof c=="function"&&c.length>0;return e=t||u,u?Rs(()=>c(a)):c})}function qs(n){return n}let Lu;Lu={writeSignal:of,serializeGraph:BC,registerGraph:Cy,hashValue:vy};globalThis&&(globalThis.Solid$$?console.warn("You appear to have multiple instances of Solid. This can lead to unexpected behavior."):globalThis.Solid$$=!0);const qC=["allowfullscreen","async","autofocus","autoplay","checked","controls","default","disabled","formnovalidate","hidden","indeterminate","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","seamless","selected"],XC=new Set(["className","value","readOnly","formNoValidate","isMap","noModule","playsInline",...qC]),KC=new Set(["innerHTML","textContent","innerText","children"]),YC=Object.assign(Object.create(null),{className:"class",htmlFor:"for"}),yb=Object.assign(Object.create(null),{class:"className",formnovalidate:"formNoValidate",ismap:"isMap",nomodule:"noModule",playsinline:"playsInline",readonly:"readOnly"}),ZC=new Set(["beforeinput","click","dblclick","contextmenu","focusin","focusout","input","keydown","keyup","mousedown","mousemove","mouseout","mouseover","mouseup","pointerdown","pointermove","pointerout","pointerover","pointerup","touchend","touchmove","touchstart"]),JC=new Set(["altGlyph","altGlyphDef","altGlyphItem","animate","animateColor","animateMotion","animateTransform","circle","clipPath","color-profile","cursor","defs","desc","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","filter","font","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignObject","g","glyph","glyphRef","hkern","image","line","linearGradient","marker","mask","metadata","missing-glyph","mpath","path","pattern","polygon","polyline","radialGradient","rect","set","stop","svg","switch","symbol","text","textPath","tref","tspan","use","view","vkern"]),QC={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"};function eS(n,e,t){let s=t.length,r=e.length,o=s,a=0,i=0,c=e[r-1].nextSibling,u=null;for(;a<r||i<o;){if(e[a]===t[i]){a++,i++;continue}for(;e[r-1]===t[o-1];)r--,o--;if(r===a){const l=o<s?i?t[i-1].nextSibling:t[o-i]:c;for(;i<o;)n.insertBefore(t[i++],l)}else if(o===i)for(;a<r;)(!u||!u.has(e[a]))&&e[a].remove(),a++;else if(e[a]===t[o-1]&&t[i]===e[r-1]){const l=e[--r].nextSibling;n.insertBefore(t[i++],e[a++].nextSibling),n.insertBefore(t[--o],l),e[r]=t[o]}else{if(!u){u=new Map;let d=i;for(;d<o;)u.set(t[d],d++)}const l=u.get(e[a]);if(l!=null)if(i<l&&l<o){let d=a,h=1,p;for(;++d<r&&d<o&&!((p=u.get(e[d]))==null||p!==l+h);)h++;if(h>l-i){const f=e[a];for(;i<l;)n.insertBefore(t[i++],f)}else n.replaceChild(t[i++],e[a++])}else a++;else e[a++].remove()}}}const wb="_$DX_DELEGATE";function tS(n,e,t,s={}){let r;return Ou(o=>{r=o,e===document?n():go(e,n(),e.firstChild?null:void 0,t)},s.owner),()=>{r(),e.textContent=""}}function Jn(n,e,t){const s=document.createElement("template");if(s.innerHTML=n,e&&s.innerHTML.split("<").length-1!==e)throw`The browser resolved template HTML does not match JSX input:
${s.innerHTML}

${n}. Is your HTML properly formed?`;let r=s.content.firstChild;return t&&(r=r.firstChild),r}function vd(n,e=window.document){const t=e[wb]||(e[wb]=new Set);for(let s=0,r=n.length;s<r;s++){const o=n[s];t.has(o)||(t.add(o),e.addEventListener(o,lS))}}function Fn(n,e,t){t==null?n.removeAttribute(e):n.setAttribute(e,t)}function nS(n,e,t,s){s==null?n.removeAttributeNS(e,t):n.setAttributeNS(e,t,s)}function sS(n,e){e==null?n.removeAttribute("class"):n.className=e}function rS(n,e,t,s){if(s)Array.isArray(t)?(n[`$$${e}`]=t[0],n[`$$${e}Data`]=t[1]):n[`$$${e}`]=t;else if(Array.isArray(t)){const r=t[0];n.addEventListener(e,t[0]=o=>r.call(n,t[1],o))}else n.addEventListener(e,t)}function oS(n,e,t={}){const s=Object.keys(e||{}),r=Object.keys(t);let o,a;for(o=0,a=r.length;o<a;o++){const i=r[o];!i||i==="undefined"||e[i]||(Ib(n,i,!1),delete t[i])}for(o=0,a=s.length;o<a;o++){const i=s[o],c=!!e[i];!i||i==="undefined"||t[i]===c||!c||(Ib(n,i,!0),t[i]=c)}return t}function My(n,e,t){if(!e)return t?Fn(n,"style"):e;const s=n.style;if(typeof e=="string")return s.cssText=e;typeof t=="string"&&(s.cssText=t=void 0),t||(t={}),e||(e={});let r,o;for(o in t)e[o]==null&&s.removeProperty(o),delete t[o];for(o in e)r=e[o],r!==t[o]&&(s.setProperty(o,r),t[o]=r);return t}function cf(n,e={},t,s){const r={};return s||sn(()=>r.children=ga(n,e.children,r.children)),sn(()=>e.ref&&e.ref(n)),sn(()=>aS(n,e,t,!0,r,!0)),r}function lf(n,e,t){return Rs(()=>n(e,t))}function go(n,e,t,s){if(t!==void 0&&!s&&(s=[]),typeof e!="function")return ga(n,e,s,t);sn(r=>ga(n,e(),r,t),s)}function aS(n,e,t,s,r={},o=!1){e||(e={});for(const a in r)if(!(a in e)){if(a==="children")continue;r[a]=kb(n,a,null,r[a],t,o)}for(const a in e){if(a==="children"){s||ga(n,e.children);continue}const i=e[a];r[a]=kb(n,a,i,r[a],t,o)}}function iS(n){let e,t;if(!Zt.context||!(e=Zt.registry.get(t=uS()))){if(Zt.context&&console.warn("Unable to find DOM nodes for hydration key:",t),!n)throw new Error("Unrecoverable Hydration Mismatch. No template for key: "+t);return n.cloneNode(!0)}return Zt.completed&&Zt.completed.add(e),Zt.registry.delete(t),e}function cS(n){return n.toLowerCase().replace(/-([a-z])/g,(e,t)=>t.toUpperCase())}function Ib(n,e,t){const s=e.trim().split(/\s+/);for(let r=0,o=s.length;r<o;r++)n.classList.toggle(s[r],t)}function kb(n,e,t,s,r,o){let a,i,c;if(e==="style")return My(n,t,s);if(e==="classList")return oS(n,t,s);if(t===s)return s;if(e==="ref")o||t(n);else if(e.slice(0,3)==="on:"){const u=e.slice(3);s&&n.removeEventListener(u,s),t&&n.addEventListener(u,t)}else if(e.slice(0,10)==="oncapture:"){const u=e.slice(10);s&&n.removeEventListener(u,s,!0),t&&n.addEventListener(u,t,!0)}else if(e.slice(0,2)==="on"){const u=e.slice(2).toLowerCase(),l=ZC.has(u);if(!l&&s){const d=Array.isArray(s)?s[0]:s;n.removeEventListener(u,d)}(l||t)&&(rS(n,u,t,l),l&&vd([u]))}else if((c=KC.has(e))||!r&&(yb[e]||(i=XC.has(e)))||(a=n.nodeName.includes("-")))e==="class"||e==="className"?sS(n,t):a&&!i&&!c?n[cS(e)]=t:n[yb[e]||e]=t;else{const u=r&&e.indexOf(":")>-1&&QC[e.split(":")[0]];u?nS(n,u,e,t):Fn(n,YC[e]||e,t)}return t}function lS(n){const e=`$$${n.type}`;let t=n.composedPath&&n.composedPath()[0]||n.target;for(n.target!==t&&Object.defineProperty(n,"target",{configurable:!0,value:t}),Object.defineProperty(n,"currentTarget",{configurable:!0,get(){return t||document}}),Zt.registry&&!Zt.done&&(Zt.done=!0,document.querySelectorAll("[id^=pl-]").forEach(s=>s.remove()));t!==null;){const s=t[e];if(s&&!t.disabled){const r=t[`${e}Data`];if(r!==void 0?s.call(t,r,n):s.call(t,n),n.cancelBubble)return}t=t.host&&t.host!==t&&t.host instanceof Node?t.host:t.parentNode}}function ga(n,e,t,s,r){for(Zt.context&&!t&&(t=[...n.childNodes]);typeof t=="function";)t=t();if(e===t)return t;const o=typeof e,a=s!==void 0;if(n=a&&t[0]&&t[0].parentNode||n,o==="string"||o==="number"){if(Zt.context)return t;if(o==="number"&&(e=e.toString()),a){let i=t[0];i&&i.nodeType===3?i.data=e:i=document.createTextNode(e),t=sa(n,t,s,i)}else t!==""&&typeof t=="string"?t=n.firstChild.data=e:t=n.textContent=e}else if(e==null||o==="boolean"){if(Zt.context)return t;t=sa(n,t,s)}else{if(o==="function")return sn(()=>{let i=e();for(;typeof i=="function";)i=i();t=ga(n,i,t,s)}),()=>t;if(Array.isArray(e)){const i=[],c=t&&Array.isArray(t);if(lp(i,e,t,r))return sn(()=>t=ga(n,i,t,s,!0)),()=>t;if(Zt.context){if(!i.length)return t;for(let u=0;u<i.length;u++)if(i[u].parentNode)return t=i}if(i.length===0){if(t=sa(n,t,s),a)return t}else c?t.length===0?$b(n,i,s):eS(n,t,i):(t&&sa(n),$b(n,i));t=i}else if(e instanceof Node){if(Zt.context&&e.parentNode)return t=a?[e]:e;if(Array.isArray(t)){if(a)return t=sa(n,t,s,e);sa(n,t,null,e)}else t==null||t===""||!n.firstChild?n.appendChild(e):n.replaceChild(e,n.firstChild);t=e}else console.warn("Unrecognized value. Skipped inserting",e)}return t}function lp(n,e,t,s){let r=!1;for(let o=0,a=e.length;o<a;o++){let i=e[o],c=t&&t[o];if(i instanceof Node)n.push(i);else if(!(i==null||i===!0||i===!1))if(Array.isArray(i))r=lp(n,i,c)||r;else if(typeof i=="function")if(s){for(;typeof i=="function";)i=i();r=lp(n,Array.isArray(i)?i:[i],Array.isArray(c)?c:[c])||r}else n.push(i),r=!0;else{const u=String(i);c&&c.nodeType===3&&c.data===u?n.push(c):n.push(document.createTextNode(u))}}return r}function $b(n,e,t=null){for(let s=0,r=e.length;s<r;s++)n.insertBefore(e[s],t)}function sa(n,e,t,s){if(t===void 0)return n.textContent="";const r=s||document.createTextNode("");if(e.length){let o=!1;for(let a=e.length-1;a>=0;a--){const i=e[a];if(r!==i){const c=i.parentNode===n;!o&&!a?c?n.replaceChild(r,i):n.insertBefore(r,t):c&&i.remove()}else o=!0}}else n.insertBefore(r,t);return[r]}function uS(){const n=Zt.context;return`${n.id}${n.count++}`}const dS=!1,hS="http://www.w3.org/2000/svg";function pS(n,e=!1){return e?document.createElementNS(hS,n):document.createElement(n)}function fS(n){const[e,t]=Oy(n,["component"]),s=mn(()=>e.component);return mn(()=>{const r=s();switch(typeof r){case"function":return Object.assign(r,{[yy]:!0}),Rs(()=>r(t));case"string":const o=JC.has(r),a=Zt.context?iS():pS(r,o);return cf(a,t,o),a}})}let mS={data:""},gS=n=>typeof window=="object"?((n?n.querySelector("#_goober"):window._goober)||Object.assign((n||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:n||mS,bS=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,xS=/\/\*[^]*?\*\/|  +/g,vb=/\n+/g,ao=(n,e)=>{let t="",s="",r="";for(let o in n){let a=n[o];o[0]=="@"?o[1]=="i"?t=o+" "+a+";":s+=o[1]=="f"?ao(a,o):o+"{"+ao(a,o[1]=="k"?"":e)+"}":typeof a=="object"?s+=ao(a,e?e.replace(/([^,])+/g,i=>o.replace(/(^:.*)|([^,])+/g,c=>/&/.test(c)?c.replace(/&/g,i):i?i+" "+c:c)):o):a!=null&&(o=/^--/.test(o)?o:o.replace(/[A-Z]/g,"-$&").toLowerCase(),r+=ao.p?ao.p(o,a):o+":"+a+";")}return t+(e&&r?e+"{"+r+"}":r)+s},ir={},Ly=n=>{if(typeof n=="object"){let e="";for(let t in n)e+=t+Ly(n[t]);return e}return n},yS=(n,e,t,s,r)=>{let o=Ly(n),a=ir[o]||(ir[o]=(c=>{let u=0,l=11;for(;u<c.length;)l=101*l+c.charCodeAt(u++)>>>0;return"go"+l})(o));if(!ir[a]){let c=o!==n?n:(u=>{let l,d,h=[{}];for(;l=bS.exec(u.replace(xS,""));)l[4]?h.shift():l[3]?(d=l[3].replace(vb," ").trim(),h.unshift(h[0][d]=h[0][d]||{})):h[0][l[1]]=l[2].replace(vb," ").trim();return h[0]})(n);ir[a]=ao(r?{["@keyframes "+a]:c}:c,t?"":"."+a)}let i=t&&ir.g?ir.g:null;return t&&(ir.g=ir[a]),((c,u,l,d)=>{d?u.data=u.data.replace(d,c):u.data.indexOf(c)===-1&&(u.data=l?c+u.data:u.data+c)})(ir[a],e,s,i),a},wS=(n,e,t)=>n.reduce((s,r,o)=>{let a=e[o];if(a&&a.call){let i=a(t),c=i&&i.props&&i.props.className||/^go/.test(i)&&i;a=c?"."+c:i&&typeof i=="object"?i.props?"":ao(i,""):i===!1?"":i}return s+r+(a??"")},"");function ju(n){let e=this||{},t=n.call?n(e.p):n;return yS(t.unshift?t.raw?wS(t,[].slice.call(arguments,1),e.p):t.reduce((s,r)=>Object.assign(s,r&&r.call?r(e.p):r),{}):t,gS(e.target),e.g,e.o,e.k)}ju.bind({g:1});ju.bind({k:1});const IS=Js();function kS(n){let e=this||{};return(...t)=>{const s=r=>{const o=Qs(IS),a=Mu(r,{theme:o}),i=Mu(a,{get class(){const p=a.class,f="class"in a&&/^go[0-9]+/.test(p);let m=ju.apply({target:e.target,o:f,p:a,g:e.g},t);return[p,m].filter(Boolean).join(" ")}}),[c,u]=Oy(i,["as","theme"]),l=u,d=c.as||n;let h;return typeof d=="function"?h=d(l):e.g==1?(h=document.createElement(d),cf(h,l)):h=fS(Mu({component:d},l)),h};return s.class=r=>Rs(()=>ju.apply({target:e.target,p:r,g:e.g},t)),s}}const rt=new Proxy(kS,{get(n,e){return n(e)}}),$S=[0,0],uf=([n,e],[t,s])=>[n+t,e+s],uo=([n,e],[t,s])=>[n-t,e-s],Py=([n,e],t)=>[n*t,e*t],df=(n,e)=>Py(uf(n,e),.5),vS=([n,e])=>Math.sqrt(Math.pow(n,2)+Math.pow(e,2)),hf=(n,e)=>vS(uo(n,e)),CS=(n,e)=>{const[t,s,r,o,a,i,c,u,l]=n,[d,h,p,f,m,g,b,x,y]=e,w=t*d+s*f+r*b,I=t*h+s*m+r*x,k=t*p+s*g+r*y,$=o*d+a*f+i*b,C=o*h+a*m+i*x,N=o*p+a*g+i*y,T=c*d+u*f+l*b,_=c*h+u*m+l*x,O=c*p+u*g+l*y;return[w,I,k,$,C,N,T,_,O]},By=n=>{const[e,t,s,r,o,a,i,c,u]=n,l=o*u-a*c,d=r*u-a*i,h=r*c-o*i,p=t*u-s*c,f=e*u-s*i,m=e*c-t*i,g=t*a-s*o,b=e*a-s*r,x=e*o-t*r,w=1/(i*g-c*b+u*x);return[w*l,w*-p,w*g,w*-d,w*f,w*-b,w*h,w*-m,w*x]},up=(n,e)=>{const[t,s,r,o,a,i,c,u,l]=n,[d,h,p]=e,f=t*d+s*h+r*p,m=o*d+a*h+i*p,g=c*d+u*h+l*p;return[f,m,g]},Cb=(n,e)=>[1,0,n,0,1,e,0,0,1],SS=n=>[n,0,0,0,n,0,0,0,1],Sb=(n,e,t)=>Math.max(e,Math.min(t,n)),NS=()=>{const[n,e]=Bt([0,0]),[t,s]=Bt(1),r=()=>[t(),0,n()[0],0,t(),n()[1],0,0,1];return{position:n,zoom:t,transform:r,drag:o=>e(uf(n(),o)),pinch:(o,a)=>{let i=t()*Math.pow(2,Sb(a,-30,30)*-.01);i=Sb(i,.1,5);const c=[Cb(o[0],o[1]),SS(i/t()),Cb(-o[0],-o[1]),r()].reduce(CS);s(c[0]),e([c[2],c[5]])},worldSpace:o=>{const[a,i]=up(By(r()),[...o,1]);return[a,i]}}},zy=Js(),TS=n=>{const e=NS();return se(zy.Provider,{value:e,get children(){return n.children}})},Mo=()=>Qs(zy),qu=Symbol("store-raw"),bc=Symbol("store-node"),Xu=Symbol("store-name");function Vy(n,e){let t=n[js];if(!t){if(Object.defineProperty(n,js,{value:t=new Proxy(n,RS)}),!Array.isArray(n)){const s=Object.keys(n),r=Object.getOwnPropertyDescriptors(n);for(let o=0,a=s.length;o<a;o++){const i=s[o];if(r[i].get){const c=r[i].get.bind(t);Object.defineProperty(n,i,{enumerable:r[i].enumerable,get:c})}}}e&&Object.defineProperty(n,Xu,{value:e})}return t}function ba(n){let e;return n!=null&&typeof n=="object"&&(n[js]||!(e=Object.getPrototypeOf(n))||e===Object.prototype||Array.isArray(n))}function xa(n,e=new Set){let t,s,r,o;if(t=n!=null&&n[qu])return t;if(!ba(n)||e.has(n))return n;if(Array.isArray(n)){Object.isFrozen(n)?n=n.slice(0):e.add(n);for(let a=0,i=n.length;a<i;a++)r=n[a],(s=xa(r,e))!==r&&(n[a]=s)}else{Object.isFrozen(n)?n=Object.assign({},n):e.add(n);const a=Object.keys(n),i=Object.getOwnPropertyDescriptors(n);for(let c=0,u=a.length;c<u;c++)o=a[c],!i[o].get&&(r=n[o],(s=xa(r,e))!==r&&(n[o]=s))}return n}function pf(n){let e=n[bc];return e||Object.defineProperty(n,bc,{value:e={}}),e}function dp(n,e,t){return n[e]||(n[e]=Uy(t))}function ES(n,e){const t=Reflect.getOwnPropertyDescriptor(n,e);return!t||t.get||!t.configurable||e===js||e===bc||e===Xu||(delete t.value,delete t.writable,t.get=()=>n[js][e]),t}function Wy(n){if($y()){const e=pf(n);(e._||(e._=Uy()))()}}function _S(n){return Wy(n),Reflect.ownKeys(n)}function Uy(n){const[e,t]=Bt(n,{equals:!1,internal:!0});return e.$=t,e}const RS={get(n,e,t){if(e===qu)return n;if(e===js)return t;if(e===ip)return Wy(n),t;const s=pf(n),r=s.hasOwnProperty(e);let o=r?s[e]():n[e];if(e===bc||e==="__proto__")return o;if(!r){const a=Object.getOwnPropertyDescriptor(n,e);$y()&&(typeof o!="function"||n.hasOwnProperty(e))&&!(a&&a.get)&&(o=dp(s,e,o)())}return ba(o)?Vy(o,n[Xu]&&`${n[Xu]}:${e.toString()}`):o},has(n,e){return e===qu||e===js||e===ip||e===bc||e==="__proto__"?!0:(this.get(n,e,n),e in n)},set(){return console.warn("Cannot mutate a Store directly"),!0},deleteProperty(){return console.warn("Cannot mutate a Store directly"),!0},ownKeys:_S,getOwnPropertyDescriptor:ES};function ya(n,e,t,s=!1){if(!s&&n[e]===t)return;const r=n[e],o=n.length;globalThis._$onStoreNodeUpdate&&globalThis._$onStoreNodeUpdate(n,e,t,r),t===void 0?delete n[e]:n[e]=t;let a=pf(n),i;(i=dp(a,e,r))&&i.$(()=>t),Array.isArray(n)&&n.length!==o&&(i=dp(a,"length",o))&&i.$(n.length),(i=a._)&&i.$()}function Gy(n,e){const t=Object.keys(e);for(let s=0;s<t.length;s+=1){const r=t[s];ya(n,r,e[r])}}function AS(n,e){if(typeof e=="function"&&(e=e(n)),e=xa(e),Array.isArray(e)){if(n===e)return;let t=0,s=e.length;for(;t<s;t++){const r=e[t];n[t]!==r&&ya(n,t,r)}ya(n,"length",s)}else Gy(n,e)}function cc(n,e,t=[]){let s,r=n;if(e.length>1){s=e.shift();const a=typeof s,i=Array.isArray(n);if(Array.isArray(s)){for(let c=0;c<s.length;c++)cc(n,[s[c]].concat(e),t);return}else if(i&&a==="function"){for(let c=0;c<n.length;c++)s(n[c],c)&&cc(n,[c].concat(e),t);return}else if(i&&a==="object"){const{from:c=0,to:u=n.length-1,by:l=1}=s;for(let d=c;d<=u;d+=l)cc(n,[d].concat(e),t);return}else if(e.length>1){cc(n[s],e,[s].concat(t));return}r=n[s],t=[s].concat(t)}let o=e[0];typeof o=="function"&&(o=o(r,t),o===r)||s===void 0&&o==null||(o=xa(o),s===void 0||ba(r)&&ba(o)&&!Array.isArray(o)?Gy(r,o):ya(n,s,o))}function Hy(...[n,e]){const t=xa(n||{}),s=Array.isArray(t);if(typeof t!="object"&&typeof t!="function")throw new Error(`Unexpected type ${typeof t} received when initializing 'createStore'. Expected an object.`);const r=Vy(t,e&&e.name||Lu.hashValue(t));{const a=e&&e.name||Lu.hashValue(t);Lu.registerGraph(a,{value:t})}function o(...a){ky(()=>{s&&a.length===1?AS(t,a[0]):cc(t,a)})}return[r,o]}const Ku=new WeakMap,jy={get(n,e){if(e===qu)return n;const t=n[e];let s;return ba(t)?Ku.get(t)||(Ku.set(t,s=new Proxy(t,jy)),s):t},set(n,e,t){return ya(n,e,xa(t)),!0},deleteProperty(n,e){return ya(n,e,void 0,!0),!0}};function La(n){return e=>{if(ba(e)){let t;(t=Ku.get(e))||Ku.set(e,t=new Proxy(e,jy)),n(t)}return e}}const qy=(n,e,t,s)=>{switch(n.type){case"fn":return n.fn(e);case"fns":const r=n.fns[e[t].type];return qy(r,e,t+1,s);default:const o=e.map(a=>a.type);return{type:"error",message:`Cannot call ${s} with ${o}`}}},Xy=(n,e,t)=>{try{return qy(n[e],t,0,e)}catch(s){if(s instanceof Error)return{type:"error",message:s.message};throw s}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DS=1e-7,FS=1e-4;class ff{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Cd{refCount(e){return En("refCount")}incRef(e){return En("incRef")}timerAvailable(){return!0}time(e){return En("time")}read(e){return En("read")}readSync(e){return En("readSync")}readToGPU(e,t){return En("readToGPU")}numDataIds(){return En("numDataIds")}disposeData(e,t){return En("disposeData")}write(e,t,s){return En("write")}move(e,t,s,r,o){return En("move")}createTensorFromTexture(e,t,s){return En("createTensorFromTexture")}memory(){return En("memory")}floatPrecision(){return En("floatPrecision")}epsilon(){return this.floatPrecision()===32?DS:FS}dispose(){return En("dispose")}}function En(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OS(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,ia(n,e,t)}function Io(n,e,t){return Math.max(n,Math.min(e,t))}function mf(n){return n%2===0?n:n+1}function ia(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function MS(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function v(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Qn(n,e,t=""){v(Ke(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Ky(n){v(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function wa(n,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(n)||Xs(n)&&!t)for(let s=0;s<n.length;++s)wa(n[s],e,t);else e.push(n);return e}function L(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function Ke(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Ia(n){return n%1===0}function hp(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function ha(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function Nb(n,e=r=>0,t,s){return new Promise((r,o)=>{let a=0;const i=()=>{if(n()){r();return}a++;const c=e(a);if(t!=null&&a>=t){o();return}s!=null?s(i,c):setTimeout(i,c)};i()})}function gf(n,e){let t=1,s=-1;for(let o=0;o<n.length;++o)if(n[o]>=0)t*=n[o];else if(n[o]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${o}`);s=o}else if(n[o]<0)throw Error(`Shapes can not be < 0. Found ${n[o]} at dim ${o}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const r=n.slice();return r[s]=e/t,r}function Re(n,e){const t=e.length;return n=n==null?e.map((s,r)=>r):[].concat(n),v(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),v(n.every(s=>Ia(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function Vr(n,e){const t=[],s=[],r=e!=null&&Array.isArray(e)&&e.length===0,o=e==null||r?null:Re(e,n).sort();let a=0;for(let i=0;i<n.length;++i){if(o!=null){if(o[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(o[a]==null||o[a]>i)&&n[i]===1&&(t.push(n[i]),s.push(i)),o[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),s.push(i))}return{newShape:t,keptDims:s}}function Qt(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${n}`);return t}function At(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function LS(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function PS(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Yy(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Xs(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function xc(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function BS(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Fc(n){return typeof n=="string"||n instanceof String}function zS(n){return typeof n=="boolean"}function pp(n){return typeof n=="number"}function Oc(n){return Array.isArray(n)?Oc(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":pp(n)?"float32":Fc(n)?"string":zS(n)?"bool":"float32"}function fp(n){return!!(n&&n.constructor&&n.call&&n.apply)}function mp(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function me(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function Zy(n,e,t,s=!1){const r=new Array;if(e.length===1){const o=e[0]*(s?2:1);for(let a=0;a<o;a++)r[a]=t[n+a]}else{const o=e[0],a=e.slice(1),i=a.reduce((c,u)=>c*u)*(s?2:1);for(let c=0;c<o;c++)r[c]=Zy(n+c*i,a,t,s)}return r}function Ss(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((r,o)=>r*o)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return Zy(0,n,e,t)}function bf(n,e){const t=an(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function an(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function Jy(n,e){const t=n.reduce((s,r)=>s*r,1);if(e==null||e==="float32")return Ss(n,new Float32Array(t));if(e==="int32")return Ss(n,new Int32Array(t));if(e==="bool")return Ss(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function mr(n){n.forEach(e=>{v(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Ws(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let r=0;r<n.length-1;++r)s+=t[r]*n[r];return s}function Pa(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let r=0;r<s.length-1;++r)s[r]=Math.floor(n/t[r]),n-=s[r]*t[r];return s[s.length-1]=n,s}function Qy(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tb="tfjsflags";class VS{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=WS,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const r=this.urlFlags[e];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${r}.`),this.set(e,r)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Qy(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);Tb in e&&e[Tb].split(",").forEach(s=>{const[r,o]=s.split(":");this.urlFlags[r]=GS(r,o)})}}function WS(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(US(e,s[0],s[1]),s.join("="))),e}function US(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function GS(n,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${n}.`)}function H(){return e0}let e0=null;function HS(n){e0=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vh;function t0(){if(Vh==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Vh=n}return Vh}function jS(){const n=t0();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function xf(n,e){const t=jS();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Mc="Abs",Lc="Acos",Pc="Acosh",Lo="Add",Bc="AddN",zc="All",Vc="Any",Ba="ArgMax",Sd="ArgMin",Wc="Asin",Uc="Asinh",Gc="Atan",Hc="Atanh",jc="Atan2",za="AvgPool",yf="AvgPoolGrad",Nd="AvgPool3D",wf="AvgPool3DGrad",Va="BatchMatMul",qc="BatchToSpaceND",If="Bincount",qS="BroadcastTo",n0="BroadcastArgs",Wa="Cast",Ua="Ceil",Po="ClipByValue",kf="Complex",Td="ComplexAbs",Xc="Concat",Ga="Conv2D",$f="Conv2DBackpropFilter",Ha="Conv2DBackpropInput",Ed="Conv3D",vf="Conv3DBackpropFilterV2",Cf="Conv3DBackpropInputV2",ja="Cos",qa="Cosh",Kc="Cumprod",Xa="Cumsum",Yc="CropAndResize",Sf="DenseBincount",Zc="DepthToSpace",Ka="DepthwiseConv2dNative",Nf="DepthwiseConv2dNativeBackpropFilter",Tf="DepthwiseConv2dNativeBackpropInput",s0="Diag",_d="Dilation2D",gp="Dilation2DBackpropInput",bp="Dilation2DBackpropFilter",Ya="RealDiv",r0="Einsum",Za="Elu",Ef="EluGrad",Jc="Erf",Qc="Equal",Ja="Exp",el="ExpandDims",tl="Expm1",_f="FFT",Rd="Fill",nl="FlipLeftRight",Qa="Floor",ei="FloorDiv",ti="FusedBatchNorm",sl="GatherV2",Ad="GatherNd",rl="Greater",ni="GreaterEqual",si="Identity",Rf="IFFT",Af="Imag",ol="IsFinite",al="IsInf",ri="IsNan",oi="LeakyRelu",il="Less",cl="LessEqual",Df="LinSpace",ai="Log",ll="Log1p",ul="LogicalAnd",dl="LogicalNot",hl="LogicalOr",XS="LogicalXor",KS="LogSoftmax",Dd="LRN",Ff="LRNGrad",ii="Max",ci="Maximum",li="MaxPool",Of="MaxPoolGrad",Fd="MaxPool3D",Mf="MaxPool3DGrad",o0="MaxPoolWithArgmax",ui="Mean",di="Min",hi="Minimum",pi="MirrorPad",pl="Mod",a0="Multinomial",fi="Multiply",fl="Neg",ml="NotEqual",gl="NonMaxSuppressionV3",bl="NonMaxSuppressionV4",xl="NonMaxSuppressionV5",yl="OnesLike",mi="OneHot",wl="Pack",gi="PadV2",bi="Pow",xi="Prelu",yi="Prod",i0="RaggedGather",c0="RaggedRange",l0="RaggedTensorToTensor",Od="Range",Lf="Real",wi="Reciprocal",Ii="Relu",Il="Reshape",ki="ResizeNearestNeighbor",Pf="ResizeNearestNeighborGrad",$i="ResizeBilinear",Bf="ResizeBilinearGrad",vi="Relu6",Ci="Reverse",Si="Round",Ni="Rsqrt",Md="ScatterNd",u0="SearchSorted",kl="Select",$l="Selu",vl="Slice",Ti="Sin",Cl="Sinh",Sl="Sign",Ei="Sigmoid",Nl="Softplus",_i="Sqrt",Ri="Sum",Tl="SpaceToBatchND",El="SplitV",Ai="Softmax",Ld="SparseFillEmptyRows",_l="SparseReshape",Pd="SparseSegmentMean",Bd="SparseSegmentSum",d0="SparseToDense",Di="SquaredDifference",zd="Square",Rl="StridedSlice",Vd="StringNGrams",Wd="StringSplit",Ud="StringToHashBucketFast",Fi="Sub",Oi="Tan",Mi="Tanh",Bo="Tile",Al="TopK",Dl="Transform",vr="Transpose",zf="Unique",Fl="Unpack",Gd="UnsortedSegmentSum",Ol="ZerosLike",zo="Step",YS="FromPixels",Ml="RotateWithOffset",ka="_FusedMatMul",$a="FusedConv2D",Hd="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jn(...n){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...n)}function ZS(...n){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yu=xf("kernelRegistry",()=>new Map),xp=xf("gradRegistry",()=>new Map);function Eb(n,e){const t=h0(n,e);return Yu.get(t)}function _b(n){return xp.get(n)}function Rb(n){const e=Yu.entries(),t=[];for(;;){const{done:s,value:r}=e.next();if(s)break;const[o,a]=r,[i]=o.split("_");i===n&&t.push(a)}return t}function Vf(n){const{kernelName:e,backendName:t}=n,s=h0(e,t);Yu.has(s)&&jn(`The kernel '${e}' for backend '${t}' is already registered`),Yu.set(s,n)}function JS(n){const{kernelName:e}=n;xp.has(e)&&H().getBool("DEBUG")&&jn(`Overriding the gradient for '${e}'`),xp.set(e,n)}function h0(n,e){return`${e}_${n}`}var hr=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function QS(n){var e=n.default;if(typeof e=="function"){var t=function(){return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var r=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,r.get?r:{enumerable:!0,get:function(){return n[s]}})}),t}var yp=mt,is=null;try{is=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function mt(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}mt.prototype.__isLong__;Object.defineProperty(mt.prototype,"__isLong__",{value:!0});function Bn(n){return(n&&n.__isLong__)===!0}mt.isLong=Bn;var Ab={},Db={};function Vo(n,e){var t,s,r;return e?(n>>>=0,(r=0<=n&&n<256)&&(s=Db[n],s)?s:(t=gt(n,(n|0)<0?-1:0,!0),r&&(Db[n]=t),t)):(n|=0,(r=-128<=n&&n<128)&&(s=Ab[n],s)?s:(t=gt(n,n<0?-1:0,!1),r&&(Ab[n]=t),t))}mt.fromInt=Vo;function cs(n,e){if(isNaN(n))return e?ho:ls;if(e){if(n<0)return ho;if(n>=p0)return g0}else{if(n<=-Ob)return An;if(n+1>=Ob)return m0}return n<0?cs(-n,e).neg():gt(n%va|0,n/va|0,e)}mt.fromNumber=cs;function gt(n,e,t){return new mt(n,e,t)}mt.fromBits=gt;var Zu=Math.pow;function Wf(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return ls;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return Wf(n.substring(1),e,t).neg();for(var r=cs(Zu(t,8)),o=ls,a=0;a<n.length;a+=8){var i=Math.min(8,n.length-a),c=parseInt(n.substring(a,a+i),t);if(i<8){var u=cs(Zu(t,i));o=o.mul(u).add(cs(c))}else o=o.mul(r),o=o.add(cs(c))}return o.unsigned=e,o}mt.fromString=Wf;function As(n,e){return typeof n=="number"?cs(n,e):typeof n=="string"?Wf(n,e):gt(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}mt.fromValue=As;var Fb=1<<16,e2=1<<24,va=Fb*Fb,p0=va*va,Ob=p0/2,Mb=Vo(e2),ls=Vo(0);mt.ZERO=ls;var ho=Vo(0,!0);mt.UZERO=ho;var ua=Vo(1);mt.ONE=ua;var f0=Vo(1,!0);mt.UONE=f0;var wp=Vo(-1);mt.NEG_ONE=wp;var m0=gt(-1,2147483647,!1);mt.MAX_VALUE=m0;var g0=gt(-1,-1,!0);mt.MAX_UNSIGNED_VALUE=g0;var An=gt(0,-2147483648,!1);mt.MIN_VALUE=An;var ie=mt.prototype;ie.toInt=function(){return this.unsigned?this.low>>>0:this.low};ie.toNumber=function(){return this.unsigned?(this.high>>>0)*va+(this.low>>>0):this.high*va+(this.low>>>0)};ie.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(An)){var t=cs(e),s=this.div(t),r=s.mul(t).sub(this);return s.toString(e)+r.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var o=cs(Zu(e,6),this.unsigned),a=this,i="";;){var c=a.div(o),u=a.sub(c.mul(o)).toInt()>>>0,l=u.toString(e);if(a=c,a.isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}};ie.getHighBits=function(){return this.high};ie.getHighBitsUnsigned=function(){return this.high>>>0};ie.getLowBits=function(){return this.low};ie.getLowBitsUnsigned=function(){return this.low>>>0};ie.getNumBitsAbs=function(){if(this.isNegative())return this.eq(An)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};ie.isZero=function(){return this.high===0&&this.low===0};ie.eqz=ie.isZero;ie.isNegative=function(){return!this.unsigned&&this.high<0};ie.isPositive=function(){return this.unsigned||this.high>=0};ie.isOdd=function(){return(this.low&1)===1};ie.isEven=function(){return(this.low&1)===0};ie.equals=function(e){return Bn(e)||(e=As(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};ie.eq=ie.equals;ie.notEquals=function(e){return!this.eq(e)};ie.neq=ie.notEquals;ie.ne=ie.notEquals;ie.lessThan=function(e){return this.comp(e)<0};ie.lt=ie.lessThan;ie.lessThanOrEqual=function(e){return this.comp(e)<=0};ie.lte=ie.lessThanOrEqual;ie.le=ie.lessThanOrEqual;ie.greaterThan=function(e){return this.comp(e)>0};ie.gt=ie.greaterThan;ie.greaterThanOrEqual=function(e){return this.comp(e)>=0};ie.gte=ie.greaterThanOrEqual;ie.ge=ie.greaterThanOrEqual;ie.compare=function(e){if(Bn(e)||(e=As(e)),this.eq(e))return 0;var t=this.isNegative(),s=e.isNegative();return t&&!s?-1:!t&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};ie.comp=ie.compare;ie.negate=function(){return!this.unsigned&&this.eq(An)?An:this.not().add(ua)};ie.neg=ie.negate;ie.add=function(e){Bn(e)||(e=As(e));var t=this.high>>>16,s=this.high&65535,r=this.low>>>16,o=this.low&65535,a=e.high>>>16,i=e.high&65535,c=e.low>>>16,u=e.low&65535,l=0,d=0,h=0,p=0;return p+=o+u,h+=p>>>16,p&=65535,h+=r+c,d+=h>>>16,h&=65535,d+=s+i,l+=d>>>16,d&=65535,l+=t+a,l&=65535,gt(h<<16|p,l<<16|d,this.unsigned)};ie.subtract=function(e){return Bn(e)||(e=As(e)),this.add(e.neg())};ie.sub=ie.subtract;ie.multiply=function(e){if(this.isZero())return ls;if(Bn(e)||(e=As(e)),is){var t=is.mul(this.low,this.high,e.low,e.high);return gt(t,is.get_high(),this.unsigned)}if(e.isZero())return ls;if(this.eq(An))return e.isOdd()?An:ls;if(e.eq(An))return this.isOdd()?An:ls;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Mb)&&e.lt(Mb))return cs(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,r=this.high&65535,o=this.low>>>16,a=this.low&65535,i=e.high>>>16,c=e.high&65535,u=e.low>>>16,l=e.low&65535,d=0,h=0,p=0,f=0;return f+=a*l,p+=f>>>16,f&=65535,p+=o*l,h+=p>>>16,p&=65535,p+=a*u,h+=p>>>16,p&=65535,h+=r*l,d+=h>>>16,h&=65535,h+=o*u,d+=h>>>16,h&=65535,h+=a*c,d+=h>>>16,h&=65535,d+=s*l+r*u+o*c+a*i,d&=65535,gt(p<<16|f,d<<16|h,this.unsigned)};ie.mul=ie.multiply;ie.divide=function(e){if(Bn(e)||(e=As(e)),e.isZero())throw Error("division by zero");if(is){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?is.div_u:is.div_s)(this.low,this.high,e.low,e.high);return gt(t,is.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?ho:ls;var s,r,o;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return ho;if(e.gt(this.shru(1)))return f0;o=ho}else{if(this.eq(An)){if(e.eq(ua)||e.eq(wp))return An;if(e.eq(An))return ua;var a=this.shr(1);return s=a.div(e).shl(1),s.eq(ls)?e.isNegative()?ua:wp:(r=this.sub(e.mul(s)),o=s.add(r.div(e)),o)}else if(e.eq(An))return this.unsigned?ho:ls;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();o=ls}for(r=this;r.gte(e);){s=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(s)/Math.LN2),c=i<=48?1:Zu(2,i-48),u=cs(s),l=u.mul(e);l.isNegative()||l.gt(r);)s-=c,u=cs(s,this.unsigned),l=u.mul(e);u.isZero()&&(u=ua),o=o.add(u),r=r.sub(l)}return o};ie.div=ie.divide;ie.modulo=function(e){if(Bn(e)||(e=As(e)),is){var t=(this.unsigned?is.rem_u:is.rem_s)(this.low,this.high,e.low,e.high);return gt(t,is.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};ie.mod=ie.modulo;ie.rem=ie.modulo;ie.not=function(){return gt(~this.low,~this.high,this.unsigned)};ie.and=function(e){return Bn(e)||(e=As(e)),gt(this.low&e.low,this.high&e.high,this.unsigned)};ie.or=function(e){return Bn(e)||(e=As(e)),gt(this.low|e.low,this.high|e.high,this.unsigned)};ie.xor=function(e){return Bn(e)||(e=As(e)),gt(this.low^e.low,this.high^e.high,this.unsigned)};ie.shiftLeft=function(e){return Bn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?gt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):gt(0,this.low<<e-32,this.unsigned)};ie.shl=ie.shiftLeft;ie.shiftRight=function(e){return Bn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?gt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):gt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};ie.shr=ie.shiftRight;ie.shiftRightUnsigned=function(e){if(Bn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var s=this.low;return gt(s>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?gt(t,0,this.unsigned):gt(t>>>e-32,0,this.unsigned)};ie.shru=ie.shiftRightUnsigned;ie.shr_u=ie.shiftRightUnsigned;ie.toSigned=function(){return this.unsigned?gt(this.low,this.high,!1):this};ie.toUnsigned=function(){return this.unsigned?this:gt(this.low,this.high,!0)};ie.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};ie.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};ie.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};mt.fromBytes=function(e,t,s){return s?mt.fromBytesLE(e,t):mt.fromBytesBE(e,t)};mt.fromBytesLE=function(e,t){return new mt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};mt.fromBytesBE=function(e,t){return new mt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const t2=nf({__proto__:null,default:yp},[yp]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const io=yp||t2;function jd(n){return io.fromString(n,!0,16)}const b0=jd("c3a5c85c97cb3127"),oo=jd("b492b66fbe98f273"),hn=jd("9ae16a3b2f90404f");function Ip(n){return n.xor(n.shru(47))}function x0(n,e,t){const s=n.slice(e,e+t);return io.fromBytes(Array.from(s),!0,!0)}function lt(n,e){return x0(n,e,8)}function Lb(n,e){return x0(n,e,4)}function Gt(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function Cr(n,e,t=jd("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let r=e.xor(s).mul(t);return r=r.xor(r.shru(47)),r=r.mul(t),r}function n2(n,e,t,s,r,o){r=r.add(n),o=Gt(o.add(r).add(s),21);const a=r;return r=r.add(e),r=r.add(t),o=o.add(Gt(r,44)),[r.add(s),o.add(a)]}function Iu(n,e,t,s){return n2(lt(n,e),lt(n,e+8),lt(n,e+16),lt(n,e+24),t,s)}function s2(n,e=n.length){if(e>=8){const t=hn.add(e*2),s=lt(n,0).add(hn),r=lt(n,e-8),o=Gt(r,37).mul(t).add(s),a=Gt(s,25).add(r).mul(t);return Cr(o,a,t)}if(e>=4){const t=hn.add(e*2),s=Lb(n,0);return Cr(s.shl(3).add(e),Lb(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],r=n[e-1],o=t+(s<<8),a=e+(r<<2);return Ip(hn.mul(o).xor(b0.mul(a))).mul(hn)}return hn}function r2(n,e=n.length){const t=hn.add(e*2),s=lt(n,0).mul(oo),r=lt(n,8),o=lt(n,e-8).mul(t),a=lt(n,e-16).mul(hn);return Cr(Gt(s.add(r),43).add(Gt(o,30)).add(a),s.add(Gt(r.add(hn),18)).add(o),t)}function o2(n,e=n.length){const t=hn.add(e*2),s=lt(n,0).mul(hn),r=lt(n,8),o=lt(n,e-8).mul(t),a=lt(n,e-16).mul(hn),i=Gt(s.add(r),43).add(Gt(o,30)).add(a),c=Cr(i,s.add(Gt(r.add(hn),18)).add(o),t),u=lt(n,16).mul(t),l=lt(n,24),d=i.add(lt(n,e-32)).mul(t),h=c.add(lt(n,e-24)).mul(t);return Cr(Gt(u.add(l),43).add(Gt(d,30)).add(h),u.add(Gt(l.add(s),18)).add(d),t)}function a2(n,e=n.length){const t=io.fromNumber(81,!0);if(e<=32)return e<=16?s2(n,e):r2(n,e);if(e<=64)return o2(n,e);let s=t,r=t.mul(oo).add(113),o=Ip(r.mul(hn).add(113)).mul(hn),a=[io.UZERO,io.UZERO],i=[io.UZERO,io.UZERO];s=s.mul(hn).add(lt(n,0));let c=0;const u=(e-1>>6)*64,l=u+(e-1&63)-63;do s=Gt(s.add(r).add(a[0]).add(lt(n,c+8)),37).mul(oo),r=Gt(r.add(a[1]).add(lt(n,c+48)),42).mul(oo),s=s.xor(i[1]),r=r.add(a[0]).add(lt(n,c+40)),o=Gt(o.add(i[0]),33).mul(oo),a=Iu(n,c,a[1].mul(oo),s.add(i[0])),i=Iu(n,c+32,o.add(i[1]),r.add(lt(n,c+16))),[o,s]=[s,o],c+=64;while(c!==u);const d=oo.add(o.and(255).shl(1));return c=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),s=Gt(s.add(r).add(a[0]).add(lt(n,c+8)),37).mul(d),r=Gt(r.add(a[1]).add(lt(n,c+48)),42).mul(d),s=s.xor(i[1].mul(9)),r=r.add(a[0].mul(9).add(lt(n,c+40))),o=Gt(o.add(i[0]),33).mul(d),a=Iu(n,c,a[1].mul(d),s.add(i[0])),i=Iu(n,c+32,o.add(i[1]),r.add(lt(n,c+16))),[o,s]=[s,o],Cr(Cr(a[0],i[0],d).add(Ip(r).mul(b0)).add(o),Cr(a[1],i[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wr(n,e){return e==="string"?Sr(n):Wo([n],e)}function i2(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Wo(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=wa(n)),H().getBool("DEBUG")&&LS(n,e),i2(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function nn(){return H().platform.now()}function Sr(n,e="utf-8"){return e=e||"utf-8",H().platform.encode(n,e)}function _r(n,e="utf-8"){return e=e||"utf-8",H().platform.decode(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class c2{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new u2)}profileKernel(e,t,s){let r;const o=()=>{r=s()};let a;const i=nn();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(o);else{o();for(const u of r)u.dataSync();a=Promise.resolve({kernelMs:nn()-i})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<r.length;u++){const l=r[u];l.data().then(d=>{l2(d,l.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:r,inputs:o,extraInfo:a}=e;s.forEach(i=>{Promise.all([i.data(),r,a]).then(c=>{this.logger.logKernelProfile(t,i,c[0],c[1],o,c[2])})})}}function l2(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const r=n[s];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${t}'`),!0}return!1}class u2{logKernelProfile(e,t,s,r,o,a){const i=typeof r=="number"?ha(`${r}ms`,9):r.error,c=ha(e,25),u=t.rank,l=t.size,d=ha(t.shape.toString(),14);let h="";for(const p in o){const f=o[p];if(f!=null){const m=f.shape||t.shape,g=m.length;h+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${c}	%c${i}	%c${u}D ${d}	%c${l}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d2(n,e,t){const s={},r={};for(let c=0;c<e.length;c++)s[e[c].id]=!0;for(let c=0;c<n.length;c++){const u=n[c],l=u.inputs;for(const d in l){const h=l[d];let p=!1;for(let f=0;f<e.length;f++)if(s[h.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,r[u.id]=!0;break}if(p)break}}const o={};o[t.id]=!0;const a={};for(let c=n.length-1;c>=0;c--){const u=n[c],l=u.inputs;for(let d=0;d<u.outputs.length;d++)if(o[u.outputs[d].id]){for(const h in l)o[l[h].id]=!0,a[u.id]=!0;break}}const i=[];for(let c=0;c<n.length;c++){const u=n[c];if(r[u.id]&&a[u.id]){const l={};for(const h in u.inputs){const p=u.inputs[h];s[p.id]&&(l[h]=p)}const d=Object.assign({},u);d.inputs=l,d.outputs=u.outputs,i.push(d)}}return i}function h2(n,e,t,s){for(let r=e.length-1;r>=0;r--){const o=e[r],a=[];if(o.outputs.forEach(c=>{const u=n[c.id];u!=null?a.push(u):a.push(null)}),o.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const i=o.gradient(a);for(const c in o.inputs){if(!(c in i))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(i)}.`);const u=t(()=>i[c]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${u.dtype}'`);const l=o.inputs[c];if(!Ke(u.shape,l.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${c}' has shape '${u.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=u;else{const d=n[l.id];n[l.id]=s(d,u),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pb=20,oc=3,Wh=7;function p2(n,e,t,s){const r=me(e),o=f2(n,e,t,r),a=e.length,i=Pu(n,e,t,r,o),c=["Tensor"];return s&&(c.push(`  dtype: ${t}`),c.push(`  rank: ${a}`),c.push(`  shape: [${e}]`),c.push("  values:")),c.push(i.map(u=>"    "+u).join(`
`)),c.join(`
`)}function f2(n,e,t,s){const r=L(e),o=s[s.length-1],a=new Array(o).fill(0),i=e.length,c=t==="complex64"?uc(n):n;if(i>1)for(let u=0;u<r/o;u++){const l=u*o;for(let d=0;d<o;d++)a[d]=Math.max(a[d],lc(c[l+d],0,t).length)}return a}function lc(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Wh))} + ${parseFloat(n[1].toFixed(Wh))}j`:Fc(n)?s=`'${n}'`:t==="bool"?s=y0(n):s=parseFloat(n.toFixed(Wh)).toString(),ha(s,e)}function y0(n){return n===0?"false":"true"}function Pu(n,e,t,s,r,o=!0){const a=t==="complex64"?2:1,i=e[0],c=e.length;if(c===0){if(t==="complex64"){const m=uc(n);return[lc(m[0],0,t)]}return t==="bool"?[y0(n[0])]:[n[0].toString()]}if(c===1){if(i>Pb){const g=oc*a;let b=Array.from(n.slice(0,g)),x=Array.from(n.slice((i-oc)*a,i*a));return t==="complex64"&&(b=uc(b),x=uc(x)),["["+b.map((y,w)=>lc(y,r[w],t)).join(", ")+", ..., "+x.map((y,w)=>lc(y,r[i-oc+w],t)).join(", ")+"]"]}return["["+(t==="complex64"?uc(n):Array.from(n)).map((g,b)=>lc(g,r[b],t)).join(", ")+"]"]}const u=e.slice(1),l=s.slice(1),d=s[0]*a,h=[];if(i>Pb){for(let m=0;m<oc;m++){const g=m*d,b=g+d;h.push(...Pu(n.slice(g,b),u,t,l,r,!1))}h.push("...");for(let m=i-oc;m<i;m++){const g=m*d,b=g+d;h.push(...Pu(n.slice(g,b),u,t,l,r,m===i-1))}}else for(let m=0;m<i;m++){const g=m*d,b=g+d;h.push(...Pu(n.slice(g,b),u,t,l,r,m===i-1))}const p=c===2?",":"";h[0]="["+h[0]+p;for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<c;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(o?"":f),h}function uc(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rn{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=L(e),s!=null){const r=s.length;v(r===this.size,()=>`Length of values '${r}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||At(t,this.size),this.strides=me(e)}set(e,...t){t.length===0&&(t=[0]),v(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const r of e){if(r<0||r>=this.shape[t]){const o=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(o)}t++}let s=e[e.length-1];for(let r=0;r<e.length-1;++r)s+=this.strides[r]*e[r];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return $s().makeTensor(this.values,this.shape,this.dtype)}}let $s=null,ca=null;function m2(n){$s=n}function g2(n){ca=n}class Rt{constructor(e,t,s,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=L(e),this.strides=me(e),this.dataId=s,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ca.buffer(this.shape,this.dtype,e)}bufferSync(){return ca.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Ss(this.shape,e,this.dtype==="complex64")}arraySync(){return Ss(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=$s().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>_r(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),$s().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=$s().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>_r(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await $s().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||($s().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ca.print(this,e)}clone(){return this.throwIfDisposed(),ca.clone(this)}toString(e=!1){const t=this.dataSync();return p2(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ca.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),$s().makeVariable(this,e,t,s)}}Object.defineProperty(Rt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function j(){return xf("Tensor",()=>Rt)}j();class Ju extends Rt{constructor(e,t,s,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ke(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);$s().disposeTensor(this),this.dataId=e.dataId,$s().incRef(this,null)}dispose(){$s().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Ju,Symbol.hasInstance,{value:n=>n instanceof Rt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Bb;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Bb||(Bb={}));var kp;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})(kp||(kp={}));var $p;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})($p||($p={}));var vp;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(vp||(vp={}));var Cp;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Cp||(Cp={}));const b2={float32:vp,int32:kp,bool:$p,complex64:Cp};function On(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return b2[n][e]}function Uf(n){return On(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tt(n,e){if(n.dtype===e.dtype)return[n,e];const t=On(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function w0(n){const e=[];return I0(n,e,new Set),e}function I0(n,e,t){if(n==null)return;if(n instanceof Rt){e.push(n);return}if(!x2(n))return;const s=n;for(const r in s){const o=s[r];t.has(o)||(t.add(o),I0(o,e,t))}}function x2(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uh(n){return n.kernelName!=null}class zb{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ca{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new zb}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(jn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new c2(this.backendInstance),!0}setupRegisteredKernels(){Rb(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Rb(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Cd)&&typeof s.then=="function"){const r=++this.pendingBackendInitId,o=s.then(a=>r<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(r<this.pendingBackendInitId||(this.pendingBackendInit=null,jn(`Initialization of backend ${e} failed`),jn(a.stack||a.message)),!1));return this.pendingBackendInit=o,{success:o,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return jn(`Initialization of backend ${e} failed`),jn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:r,asyncInit:o}=this.initializeBackend(s);if(o||r)return{name:s,asyncInit:o}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),r=s.backend,o=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),s.backend=e,e.move(t,o,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let r;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(r),()=>(r=t(),r instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),r))}scopedRun(e,t,s){e();try{const r=s();return t(),r}catch(r){throw t(),r}}nextTensorId(){return Ca.nextTensorId++}nextVariableId(){return Ca.nextVariableId++}clone(e){const t=D.runKernel(si,{x:e}),s={x:e},r=a=>({x:()=>{const i="float32",c={x:a},u={dtype:i};return D.runKernel(Wa,c,u)}}),o=[];return this.addTapeNode(this.state.activeScope.name,s,[t],r,o,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(Eb(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const r=this.backend.numDataIds();let o=0;s.forEach(c=>{o+=c.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-o-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const r=this.isTapeOn(),o=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let c;const u=Uh(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Uh(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const b=Eb(f,this.backendName);v(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const x=this.backend.numDataIds();c=b.kernelFunc({inputs:m,attrs:g,backend:this.backend});const y=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,y);const w=y.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(r){const I=this.getTensorsForGradient(f,m,w);s=this.saveTensorsForBackwardMode(I)}return w}}else{const{forwardFunc:f}=e,m=g=>{!r||(s=g.map(b=>this.keep(this.clone(b))))};i=()=>{const g=this.backend.numDataIds();c=this.tidy(()=>f(this.backend,m));const b=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,b),b}}const{inputs:l,attrs:d}=e,h=Uh(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(p=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),r&&this.addTapeNode(u,l,t,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-o,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const r=_b(e);if(r!=null){const o=r.inputsToSave||[],a=r.outputsToSave||[];let i;r.saveAllInputs?(v(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=o.map(u=>t[u]);const c=s.filter((u,l)=>a[l]);return i.concat(c)}return[]}makeTensor(e,t,s,r){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",r=r||this.backend;let o=e;s==="string"&&Fc(e[0])&&(o=e.map(c=>Sr(c)));const a=r.write(o,t,s),i=new Rt(t,s,a,this.nextTensorId());if(this.trackTensor(i,r),s==="string"){const c=this.state.tensorInfo.get(a),u=BS(o);this.state.numBytes+=u-c.bytes,c.bytes=u}return i}makeTensorFromDataId(e,t,s,r){s=s||"float32";const o={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(o,r)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:r,dtype:o}=e,a=new Rt(r,o,s,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,s,r){s=s||this.nextVariableId().toString(),r!=null&&r!==e.dtype&&(e=e.cast(r));const o=new Ju(e,t,s,this.nextTensorId());if(this.state.registeredVariables[o.name]!=null)throw new Error(`Variable with name ${o.name} was already registered`);return this.state.registeredVariables[o.name]=o,this.incRef(o,this.backend),o}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*xc(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Ju||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*xc(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(r=>r.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const r of this.state.activeProfile.kernels)r.kernelTimeMs=await r.kernelTimeMs,r.extraInfo=await r.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,r,o,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:o},c=_b(e);c!=null&&(r=c.gradFunc),r!=null&&(i.gradient=u=>(u=u.map((l,d)=>{if(l==null){const h=s[d],p=an(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return l}),r(u.length>1?u:u[0],o,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=w0(e),s=new Set(t.map(o=>o.id));for(let o=0;o<this.state.activeScope.track.length;o++){const a=this.state.activeScope.track[o];!a.kept&&!s.has(a.id)&&a.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(o=>{!o.kept&&o.scopeId===r.id&&this.track(o)})}gradients(e,t,s,r=!1){if(v(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const o=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));v(o instanceof Rt,()=>"The result y returned by f() must be a tensor.");const a=d2(this.state.activeTape,t,o);if(!r&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[o.id]=s??y2(o.shape),h2(i,a,u=>this.tidy(u),w2);const c=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const l of u.saved)l.dispose()}),this.state.activeTape=null),{value:o,grads:c}})}customGrad(e){return v(fp(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{v(t.every(i=>i instanceof Rt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const r={};t.forEach((i,c)=>{r[c]=i});const o=(i,c)=>(s=e(...t,c),v(s.value instanceof Rt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),v(fp(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(i,c)=>{const u=s.gradFunc(i,c),l=Array.isArray(u)?u:[u];v(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),v(l.every(h=>h instanceof Rt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return l.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:o,backwardsFunc:a,inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=nn(),s=await this.backend.time(e);return s.wallMs=nn()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new zb;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ca.nextTensorId=0;Ca.nextVariableId=0;function y2(n){const e=bf(L(n),"float32");return D.makeTensor(e,n,"float32")}function k0(){const n=t0();if(n._tfengine==null){const e=new VS(n);n._tfengine=new Ca(e)}return HS(n._tfengine.ENV),m2(()=>n._tfengine),n._tfengine}const D=k0();function w2(n,e){const t={a:n,b:e};return D.runKernel(Lo,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function I2(){return typeof navigator<"u"&&navigator!=null}function $0(n){if(n||I2()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function v0(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yn=H();Yn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Yn.registerFlag("IS_BROWSER",()=>v0());Yn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Yn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Yn.registerFlag("PROD",()=>!1);Yn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Yn.getBool("DEBUG"));Yn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Yn.registerFlag("IS_TEST",()=>!1);Yn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Yn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Yn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Yn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qd(n,e){let t=n;if(Xs(n))return e==="string"?[]:[n.length];if(typeof n=="object"&&"texture"in n){const r=n.channels||"RGBA";return[n.height,n.width*r.length]}if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||Xs(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&C0(n,s,[]),s}function C0(n,e,t){if(t=t||[],!Array.isArray(n)&&!Xs(n)){v(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}v(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),v(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let r=0;r<n.length;++r)C0(n[r],s,t.concat(r))}function Vb(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function S(n,e,t,s="numeric"){if(n instanceof Rt)return Vb(s,n.dtype,e,t),n;let r=Oc(n);if(r!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Vb(s,r,e,t),n==null||!Xs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const c=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${c}'`)}const o=qd(n,r);!Xs(n)&&!Array.isArray(n)&&(n=[n]);const i=r!=="string"?Wo(n,r):wa(n,[],!0);return D.makeTensor(i,o,r)}function S0(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((o,a)=>S(o,`${e}[${a}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k2="__op";function F(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+k2;const r=(...o)=>{D.startScope(t);try{const a=s(...o);return Qy(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(r,"name",{value:t,configurable:!0}),r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $2(n,e){const t=S(n,"real","complex"),s=S(e,"imag","complex");Qn(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:t,imag:s};return D.runKernel(kf,r)}const Sa=F({complex_:$2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xd(n,e,t,s){if(s==null&&(s=Oc(n)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof n=="object"&&"texture"in n){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return n.channels=n.channels||"RGBA",D.backend.createTensorFromTexture(n,e||t,s)}if(!Xs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){mr(e);const r=L(e),o=L(t);v(r===o,()=>`Based on the provided shape, [${e}], the tensor should have ${r} values but has ${o}`);for(let a=0;a<t.length;++a){const i=t[a],c=a===t.length-1?i!==L(e.slice(a)):!0;v(t[a]===e[a]||!c,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Xs(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?Wo(n,s):wa(n,[],!0),D.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gf(n,e,t){const s=qd(n,t);return Xd(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Wb=4;async function Ub(n,e){const t=[],s=[],r=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<r.length;++a){const i=r[a],c=Array.isArray(n)?n[a].tensor:n[i];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${c.dtype}`);const u={name:i,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const l=new Promise(async d=>{const h=await c.bytes(),p=h.reduce((g,b)=>g+b.length,0)+Wb*h.length,f=new Uint8Array(p);let m=0;for(let g=0;g<h.length;g++){const b=h[g],x=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(x,m),m+=Wb,f.set(b,m),m+=b.length}d(f)});s.push(l)}else s.push(c.data());e!=null&&(u.group=e),t.push(u)}const o=await Promise.all(s);return{data:v2(o),specs:t}}function v2(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(o=>{if(e+=o.byteLength,t.push(o.byteLength===o.buffer.byteLength?o:new o.constructor(o)),!(o instanceof Float32Array||o instanceof Int32Array||o instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${o.constructor.name}`)});const s=new Uint8Array(e);let r=0;return t.forEach(o=>{s.set(new Uint8Array(o.buffer),r),r+=o.byteLength}),s.buffer}const Hf=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function Gb(n){return Hf?Buffer.byteLength(n):new Blob([n]).size}function C2(n){if(Hf)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,r=e.length;s<r;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function S2(n){if(Hf){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function N0(n){if(n.length===1)return n[0];let e=0;n.forEach(r=>{e+=r.byteLength});const t=new Uint8Array(e);let s=0;return n.forEach(r=>{t.set(new Uint8Array(r),s),s+=r.byteLength}),t.buffer}function T0(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function N2(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function T2(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),N2(n,t,s)}function Kd(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:Gb(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:Gb(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function E2(n){const e=[];for(const t of n)e.push(...t.weights);return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ut{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ut.instance==null&&(Ut.instance=new Ut),Ut.instance}static registerSaveRouter(e){Ut.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ut.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ut.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ut.getHandlers(e,"load",t)}static getHandlers(e,t,s){const r=[];return(t==="load"?Ut.getInstance().loadRouters:Ut.getInstance().saveRouters).forEach(a=>{const i=a(e,s);i!==null&&r.push(i)}),r}}const _2=n=>Ut.getSaveHandlers(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sp="tensorflowjs",Np=1,po="models_store",Ir="model_info_store";function E0(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function Tp(n){const e=n.result;e.createObjectStore(po,{keyPath:"modelPath"}),e.createObjectStore(Ir,{keyPath:"modelPath"})}class ko{constructor(e){if(this.indexedDB=E0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,r)=>{const o=this.indexedDB.open(Sp,Np);o.onupgradeneeded=()=>Tp(o),o.onsuccess=()=>{const a=o.result;if(t==null){const i=a.transaction(po,"readonly"),u=i.objectStore(po).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),r(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=l=>(a.close(),r(u.error)),i.oncomplete=()=>a.close()}else{const i=Kd(t),c=a.transaction(Ir,"readwrite");let u=c.objectStore(Ir);const l=u.put({modelPath:this.modelPath,modelArtifactsInfo:i});let d;l.onsuccess=()=>{d=a.transaction(po,"readwrite");const p=d.objectStore(po).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});p.onsuccess=()=>s({modelArtifactsInfo:i}),p.onerror=f=>{u=c.objectStore(Ir);const m=u.delete(this.modelPath);m.onsuccess=()=>(a.close(),r(p.error)),m.onerror=g=>(a.close(),r(p.error))}},l.onerror=h=>(a.close(),r(l.error)),c.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},o.onerror=a=>r(o.error)})}}ko.URL_SCHEME="indexeddb://";const _0=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(ko.URL_SCHEME)?R2(n.slice(ko.URL_SCHEME.length)):null;Ut.registerSaveRouter(_0);Ut.registerLoadRouter(_0);function R2(n){return new ko(n)}function A2(n){return n.startsWith(ko.URL_SCHEME)?n.slice(ko.URL_SCHEME.length):n}class D2{constructor(){this.indexedDB=E0()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(Sp,Np);s.onupgradeneeded=()=>Tp(s),s.onsuccess=()=>{const r=s.result,o=r.transaction(Ir,"readonly"),i=o.objectStore(Ir).getAll();i.onsuccess=()=>{const c={};for(const u of i.result)c[u.modelPath]=u.modelArtifactsInfo;e(c)},i.onerror=c=>(r.close(),t(i.error)),o.oncomplete=()=>r.close()},s.onerror=r=>t(s.error)})}async removeModel(e){return e=A2(e),new Promise((t,s)=>{const r=this.indexedDB.open(Sp,Np);r.onupgradeneeded=()=>Tp(r),r.onsuccess=()=>{const o=r.result,a=o.transaction(Ir,"readwrite"),i=a.objectStore(Ir),c=i.get(e);let u;c.onsuccess=()=>{if(c.result==null)return o.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const l=i.delete(e),d=()=>{u=o.transaction(po,"readwrite");const p=u.objectStore(po).delete(e);p.onsuccess=()=>t(c.result.modelArtifactsInfo),p.onerror=f=>s(c.error)};l.onsuccess=d,l.onerror=h=>(d(),o.close(),s(c.error))}},c.onerror=l=>(o.close(),s(c.error)),a.oncomplete=()=>{u==null?o.close():u.oncomplete=()=>o.close()}},r.onerror=o=>s(r.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lr="/",la="tensorflowjs_models",R0="info",F2="model_topology",O2="weight_specs",M2="weight_data",L2="model_metadata";function A0(n){return{info:[la,n,R0].join(lr),topology:[la,n,F2].join(lr),weightSpecs:[la,n,O2].join(lr),weightData:[la,n,M2].join(lr),modelMetadata:[la,n,L2].join(lr)}}function D0(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function P2(n){const e=n.split(lr);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(lr)}function B2(n){return n.startsWith($o.URL_SCHEME)?n.slice($o.URL_SCHEME.length):n}class $o{constructor(e){if(!H().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=A0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),r=Kd(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,C2(e.weightData));const o={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(o)),{modelArtifactsInfo:r}}catch{throw D0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(r==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const o=this.LS.getItem(this.keys.modelMetadata);if(o!=null){const i=JSON.parse(o);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=S2(a),t}}$o.URL_SCHEME="localstorage://";const F0=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith($o.URL_SCHEME)?z2(n.slice($o.URL_SCHEME.length)):null;Ut.registerSaveRouter(F0);Ut.registerLoadRouter(F0);function z2(n){return new $o(n)}class V2{constructor(){v(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),v(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=la+lr,s=lr+R0;for(let r=0;r<this.LS.length;++r){const o=this.LS.key(r);if(o.startsWith(t)&&o.endsWith(s)){const a=P2(o);e[a]=JSON.parse(this.LS.getItem(o))}}return e}async removeModel(e){e=B2(e);const t=A0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return D0(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hb="://";class Os{constructor(){this.managers={}}static getInstance(){return Os.instance==null&&(Os.instance=new Os),Os.instance}static registerManager(e,t){v(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Hb)&&(e=e.slice(0,e.indexOf(Hb))),v(e.length>0,()=>"scheme must not be an empty string.");const s=Os.getInstance();v(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=Os.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Os.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class W2{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!H().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const r=this.functionRefs[s.data.index];r(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(H().get("IS_BROWSER")){H().setPlatform("browser",new W2);try{Os.registerManager($o.URL_SCHEME,new V2)}catch{}try{Os.registerManager(ko.URL_SCHEME,new D2)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U2={importFetch:()=>require("node-fetch")};let Gh;class G2{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return H().global.fetch!=null?H().global.fetch(e,t):(Gh==null&&(Gh=U2.importFetch()),Gh(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}}H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new G2);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Me(n,e="float32",t){return e=e||"float32",mr(n),new rn(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H2(n,e){const t=S(n,"x","cast");if(!PS(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},r={dtype:e};return D.runKernel(Wa,s,r)}const he=F({cast_:H2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j2(n){const t={x:S(n,"x","clone","string_or_numeric")};return D.runKernel(si,t)}const bo=F({clone_:j2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */k0();const X2={buffer:Me,cast:he,clone:bo,print:q2};g2(X2);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K2="model",Y2=".json",Z2=".weights.bin";function jb(n){return new Promise(e=>setTimeout(e)).then(n)}class vo{constructor(e){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(vo.URL_SCHEME)&&(e=e.slice(vo.URL_SCHEME.length)),(e==null||e.length===0)&&(e=K2),this.modelJsonFileName=e+Y2,this.weightDataFileName=e+Z2}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],r=T0(e,s),o=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=o,await jb(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await jb(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Kd(e)}}}}vo.URL_SCHEME="downloads://";const J2=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(vo.URL_SCHEME)?Q2(n.slice(vo.URL_SCHEME.length)):null;Ut.registerSaveRouter(J2);function Q2(n="model"){return new vo(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qb(n,e,t,s){a(n),t=t??0,s=s??1,i(t,s);let r=0;const o=c=>(c.then(u=>{const l=t+ ++r/n.length*(s-t);return e(l),u}),c);function a(c){v(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function i(c,u){v(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),v(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),v(u>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${u}`)}return Promise.all(n.map(o))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function eN(n,e){e==null&&(e={});const t=e.fetchFunc==null?H().platform.fetch:e.fetchFunc,s=n.map(d=>t(d,e.requestInit,{isBinary:!0})),r=0,o=.5,i=(e.onProgress==null?await Promise.all(s):await qb(s,e.onProgress,r,o)).map(d=>d.arrayBuffer()),c=.5,u=1;return e.onProgress==null?await Promise.all(i):await qb(i,e.onProgress,c,u)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tN="application/octet-stream",nN="application/json";class jf{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?(v(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=H().platform.fetch,v(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&v(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],r=T0(e,s);t.body.append("model.json",new Blob([JSON.stringify(r)],{type:nN}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:tN}),"model.weights.bin");const o=await this.fetch(this.path,t);if(o.ok)return{modelArtifactsInfo:Kd(e),responses:[o]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${o.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const s=t.modelTopology,r=t.weightsManifest;if(s==null&&r==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return T2(t,o=>this.loadWeights(o))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,r]=sN(t),o=this.weightPathPrefix||s,a=E2(e),i=[],c=[];for(const l of e)for(const d of l.paths)this.weightUrlConverter!=null?c.push(this.weightUrlConverter(d)):i.push(o+d+r);this.weightUrlConverter&&i.push(...await Promise.all(c));const u=await eN(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,N0(u)]}}jf.URL_SCHEME_REGEX=/^https?:\/\//;function sN(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),r=t>e?n.substring(t):"";return[s+"/",r]}function Xb(n){return n.match(jf.URL_SCHEME_REGEX)!=null}const O0=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>Xb(s)):t=Xb(n),t)return rN(n,e)}return null};Ut.registerSaveRouter(O0);Ut.registerLoadRouter(O0);function rN(n,e){return new jf(n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oN(n,e,t=!1,s=!1){let r=S(n,"a","matMul"),o=S(e,"b","matMul");[r,o]=Tt(r,o);const a={a:r,b:o},i={transposeA:t,transposeB:s};return D.runKernel(Va,a,i)}const Xe=F({matMul_:oN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aN(n,e,t=1,s=0,r="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:S(n,"indices","oneHot","int32")},i={dtype:r,depth:e,onValue:t,offValue:s};return D.runKernel(mi,a,i)}const M0=F({oneHot_:aN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ks(){return D}function Ep(){return D.memory()}function G(n,e){return D.tidy(n,e)}function Pe(n){w0(n).forEach(t=>t.dispose())}function Us(n){return D.keep(n)}function iN(n){return D.setBackend(n)}function qf(n,e,t=1){return D.registerBackend(n,e,t)}function cN(){return D.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lN(n){const t={input:S(n,"input","imag")};return D.runKernel(Af,t)}const Xf=F({imag_:lN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uN(n){const t={x:S(n,"x","neg")};return D.runKernel(fl,t)}const vt=F({neg_:uN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(n){const t={input:S(n,"input","real")};return D.runKernel(Lf,t)}const Qu=F({real_:dN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n,e,t){const s=S(n,"x","transpose");if(e==null&&(e=s.shape.map((a,i)=>i).reverse()),v(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(a=>{v(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const r={x:s},o={perm:e};return s.dtype==="complex64"?G(()=>{let a=Qu(s),i=Xf(s);return a=D.runKernel(vr,{x:a},o),i=D.runKernel(vr,{x:i},o),t&&(i=vt(i)),Sa(a,i)}):D.runKernel(vr,r,o)}const We=F({transpose_:hN});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(n,e){const t=n.length,s=[];for(let r=0;r<t;r++){const o=t-1-r,a=n[o]||1;(e[e.length-1-r]||1)>1&&a===1&&s.unshift(o)}return s}function Wt(n,e){const t=[];for(let s=0;s<e.length;s++){const r=n[n.length-s-1],o=e.length-s-1,a=e[o];(r==null||r===1&&a>1)&&t.unshift(o)}return t}function Ee(n,e){const t=[],s=Math.max(n.length,e.length);for(let r=0;r<s;r++){let o=n[n.length-r-1];o==null&&(o=1);let a=e[e.length-r-1];if(a==null&&(a=1),o===1)t.unshift(a);else if(a===1)t.unshift(o);else if(o!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(i)}else t.unshift(o)}return t}function Yd(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(L(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const r=e.shape,o=r[r.length-1];let a=1;for(let d=0;d<r.length-1;++d)a*=r[d];const i=n.shape,c=r.slice();c.pop();let u=1;for(let d=o;d<t;++d)u*=i[d],c.push(i[d]);const l=[...me(n.shape).map(d=>d/u),1].slice(0,o);return[c,a,u,l]}function L0(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,r=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${r}.`;if(t.rank<r)throw new Error(o+` update.rank < ${r}. `);if(n.length<s+(t.rank-r))throw new Error(o+` Output shape length < ${s+(t.rank-r)}`);if(t.rank!==r+n.length-s)throw new Error(o+` update.rank != ${r+n.length-s}`);for(let a=0;a<r;++a)if(t.shape[a]!==e.shape[a])throw new Error(o+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-r;++a)if(t.shape[a+r]!==n[a+s])throw new Error(o+` updates.shape[${a+r}] (${t.shape[a+r]}) != shape[${a+r}] (${n[a+r]})`)}function pN(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}L0(t,e,n)}function Li(n,e,t){const s=e.shape.length,r=s>1?e.shape[s-1]:1,o=t.length;let a=1;for(let d=r;d<o;++d)a*=t[d];const i=r<1?1:r,c=L(e.shape)/i,u=[...me(t.slice(0,r)),1],l=L(t);return{sliceRank:r,numUpdates:c,sliceSize:a,strides:u,outputSize:l}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _p=-2,fN=-1;function Kf(n,e,t){const s=n.shape.length;v(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),v(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let r=0;r<s;++r)v(e[r]+t[r]<=n.shape[r],()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${e[r]+t[r]}) would overflow input.shape[${r}] (${n.shape[r]})`)}function mN(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Zd(n,e,t){const s=[];for(let r=0;r<n.length;r++)s[r]=Math.ceil((e[r]-n[r])/t[r]);return s}function P0(n,e,t,s){const r=[...n];for(let o=r.length;o<s.length;o++)r.push(1);for(let o=0;o<t;o++)o===0?r[e]=1:(r.splice(e,0,1),r.pop());return r}function B0(n,e,t){return t<=n?t:t-(e-1)}function z0(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function gN(n,e,t,s,r,o,a,i,c){const u=n.length;let l=new Array(u),d=new Array(u),h=new Array(u);if(e.length&&t>0){const p=e[0],f=t+1;l=V0(a,p,f,s,n),d=W0(i,p,f,r,n),h=P0(o,p,f,n)}else for(let p=0;p<u;p++)l[p]=G0(a,s,o,n,p,c),d[p]=H0(i,r,o,n,p,c),h[p]=U0(o,p,c);return{begin:l,end:d,strides:h}}function V0(n,e,t,s,r){const o=[...r],a=z0(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=0;else{const c=B0(e,t,i);let u=s[c];n&1<<c&&(u=0),o[i]=u}return o}function W0(n,e,t,s,r){const o=[...r],a=z0(t,e);for(let i=0;i<o.length;i++)if(a.indexOf(i)>-1)o[i]=Number.MAX_SAFE_INTEGER;else{const c=B0(e,t,i);let u=s[c];n&1<<c&&(u=Number.MAX_SAFE_INTEGER),o[i]=u}for(let i=0;i<o.length;i++){const c=r[i];o[i]<0&&(o[i]+=c),o[i]=Io(0,o[i],r[i])}return o}function U0(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function G0(n,e,t,s,r,o){let a=e[r];const i=t[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const c=s[r];return a<0&&(a+=c),a=Io(0,a,c-1),a}function H0(n,e,t,s,r,o){let a=e[r];const i=t[r]||1;(n&1<<r||o&1<<r||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const c=s[r];return a<0&&(a+=c),i>0?a=Io(0,a,c):a=Io(-1,a,c-1),a}function Jd(n,e,t){let s=t.length;for(let r=0;r<t.length;r++)if(t[r]>1){s=r;break}for(let r=s+1;r<t.length;r++)if(e[r]>0||t[r]!==n[r])return!1;return!0}function Qd(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function Ll(n,e,t){let s;const r=n.shape.length;typeof e=="number"?s=[e,...new Array(r-1).fill(0)]:e.length<r?s=e.concat(new Array(r-e.length).fill(0)):s=e.slice(),s.forEach(a=>{v(a!==-1,()=>"slice() does not support negative begin indexing.")});let o;return t==null?o=new Array(r).fill(-1):typeof t=="number"?o=[t,...new Array(r-1).fill(-1)]:t.length<r?o=t.concat(new Array(r-t.length).fill(-1)):o=t,o=o.map((a,i)=>a>=0?a:(v(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,o]}function eh(n,e,t,s,r,o,a,i,c){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:c};for(let y=0;y<d.dims;y++)l&&(1<<y&i)!==0&&d.numAddAxisAfterEllipsis++,1<<y&a&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};bN(d,h);let p=!0,f=!0,m=!0;const g=[],b=[];for(let y=0;y<n.length;++y){if(h.strides[y]===0)throw Error(`strides[${y}] must be non-zero`);const w=!!(h.shrinkAxisMask&1<<y),I=n[y];if(I===-1){g.push(w?1:-1);continue}const k=[h.beginMask&1<<y,h.endMask&1<<y],$=[h.strides[y]>0?0:-1,h.strides[y]>0?I:I-1];if(w&&h.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[y]===1;const C=!!(h.beginMask&1<<y&&h.endMask&1<<y);if(h.beginValid&&h.endValid){if(w){const O=h.begin[y]<0?I+h.begin[y]:h.begin[y];if(h.begin[y]=O,h.end[y]=h.begin[y]+1,O<0||O>=I)throw Error(`slice index ${h.begin[y]} of dimension ${y} out of bounds.`)}else h.begin[y]=Kb(h.begin[y],0,h.strides[y],I,k,$),h.end[y]=Kb(h.end[y],1,h.strides[y],I,k,$);const _=h.strides[y]===1&&h.begin[y]===0&&h.end[y]===I;p=p&&_,f=f&&(y===0&&h.strides[y]===1||_)}else p=p&&h.strides[y]===1&&C,f=f&&(y===0&&h.strides[y]===1||C);let N,T=!1;if(h.beginValid&&h.endValid?(N=h.end[y]-h.begin[y],T=!0):w?(N=1,T=!0):C&&I>=0&&(h.strides[y]<0?N=-I:N=I,T=!0),T){let _;N===0||N<0!=h.strides[y]<0?_=0:_=Math.trunc(N/h.strides[y])+(N%h.strides[y]!==0?1:0),g.push(_)}else g.push(-1)}for(let y=0;y<h.finalShapeGatherIndices.length;++y){const w=h.finalShapeGatherIndices[y];w>=0?b.push(g[w]):w===_p&&b.push(1)}return{finalShapeSparse:b.filter((y,w)=>h.finalShapeGatherIndices[w]!==_p),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function bN(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const r=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<r;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(_p),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(fN),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function Kb(n,e,t,s,r,o){if(r[e])return t>0?o[e]:o[e+1&1];{const a=n<0?s+n:n;return a<o[0]?o[0]:a>o[1]?o[1]:a}}const xN=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Kf,maskToAxes:mN,computeOutShape:Zd,stridesWithElidedDims:P0,getNormalizedAxes:gN,startIndicesWithElidedDims:V0,stopIndicesWithElidedDims:W0,stridesForAxis:U0,startForAxis:G0,stopForAxis:H0,isSliceContinous:Jd,computeFlatOffset:Qd,parseSliceParams:Ll,sliceInfo:eh},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pi{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class as{constructor(){this.classNameMap={}}static getMap(){return as.instance==null&&(as.instance=new as),as.instance}static register(e){as.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Q(n){v(n.className!=null,()=>"Class being registered does not have the static className property defined."),v(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),v(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),as.register(n)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yN(n,e){let t=S(n,"a","add"),s=S(e,"b","add");[t,s]=Tt(t,s);const r={a:t,b:s};return D.runKernel(Lo,r)}const ee=F({add_:yN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wN(n,e){let t=S(n,"a","floorDiv"),s=S(e,"b","floorDiv");[t,s]=Tt(t,s);const r={a:t,b:s};return D.runKernel(ei,r)}const j0=F({floorDiv_:wN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(n,e){let t=S(n,"a","div"),s=S(e,"b","div");if([t,s]=Tt(t,s),t.dtype==="int32"&&s.dtype==="int32")return j0(t,s);const r={a:t,b:s},o={};return D.runKernel(Ya,r,o)}const ke=F({div_:IN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(n,e){let t=S(n,"a","mul"),s=S(e,"b","mul");[t,s]=Tt(t,s);const r={a:t,b:s};return D.runKernel(fi,r)}const R=F({mul_:kN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n){const e=S(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return D.runKernel(Td,t)}else{const t={x:e};return D.runKernel(Mc,t)}}const Mt=F({abs_:$N});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n){const t={x:S(n,"x","acos")};return D.runKernel(Lc,t)}const CN=F({acos_:vN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n){const t={x:S(n,"x","acosh")};return D.runKernel(Pc,t)}const NN=F({acosh_:SN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n,e=null,t=!1){const r={x:S(n,"x","all","bool")},o={axis:e,keepDims:t};return D.runKernel(zc,r,o)}const q0=F({all_:TN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EN(n,e=null,t=!1){const r={x:S(n,"x","any","bool")},o={axis:e,keepDims:t};return D.runKernel(Vc,r,o)}const Rp=F({any_:EN});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n,e=0){const s={x:S(n,"x","argMax")},r={axis:e};return D.runKernel(Ba,s,r)}const yc=F({argMax_:_N});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(n,e=0){const s={x:S(n,"x","argMin")},r={axis:e};return D.runKernel(Sd,s,r)}const AN=F({argMin_:RN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(n){const t={x:S(n,"x","asin")};return D.runKernel(Wc,t)}const FN=F({asin_:DN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(n){const t={x:S(n,"x","asinh")};return D.runKernel(Uc,t)}const MN=F({asinh_:ON});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(n){const t={x:S(n,"x","atan")};return D.runKernel(Gc,t)}const PN=F({atan_:LN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(n,e){let t=S(n,"a","atan2"),s=S(e,"b","atan2");[t,s]=Tt(t,s);const r={a:t,b:s};return D.runKernel(jc,r)}const zN=F({atan2_:BN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n){const t={x:S(n,"x","atanh")};return D.runKernel(Hc,t)}const WN=F({atanh_:VN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pl(n,e,t,s,r="NHWC",o){const a=n[3],i=[...e,a],c=Ds(r);return Nt(n,i,t,o,s,null,null,c)}function zn(n,e,t,s,r,o,a="channelsLast"){const[i,c]=ed(e);let u;if(a==="channelsLast")u=[i,c,n[3],n[3]];else if(a==="channelsFirst")u=[i,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Nt(n,u,t,s,r,o,!1,a)}function gr(n,e,t,s,r,o,a="NDHWC"){const[i,c,u]=Ap(e);let l,d;if(a==="NDHWC")d="channelsLast",l=[i,c,u,n[4],n[4]];else if(a==="NCDHW")d="channelsFirst",l=[i,c,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Ur(n,l,t,s,r,!1,d,o)}function Nt(n,e,t,s,r,o,a=!1,i="channelsLast"){let[c,u,l,d]=[-1,-1,-1,-1];if(i==="channelsLast")[c,u,l,d]=n;else if(i==="channelsFirst")[c,d,u,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[h,p,,f]=e,[m,g]=ed(t),[b,x]=ed(s),y=pa(h,b),w=pa(p,x),{padInfo:I,outHeight:k,outWidth:$}=HN(r,u,l,m,g,y,w,o,i),C=a?f*d:f;let N;return i==="channelsFirst"?N=[c,C,k,$]:i==="channelsLast"&&(N=[c,k,$,C]),{batchSize:c,dataFormat:i,inHeight:u,inWidth:l,inChannels:d,outHeight:k,outWidth:$,outChannels:C,padInfo:I,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:n,outShape:N,filterShape:e}}function Ur(n,e,t,s,r,o=!1,a="channelsLast",i){let[c,u,l,d,h]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[c,u,l,d,h]=n;else if(a==="channelsFirst")[c,h,u,l,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,m,,g]=e,[b,x,y]=Ap(t),[w,I,k]=Ap(s),$=pa(p,w),C=pa(f,I),N=pa(m,k),{padInfo:T,outDepth:_,outHeight:O,outWidth:P}=jN(r,u,l,d,b,x,y,$,C,N,i),V=o?g*h:g;let B;return a==="channelsFirst"?B=[c,V,_,O,P]:a==="channelsLast"&&(B=[c,_,O,P,V]),{batchSize:c,dataFormat:a,inDepth:u,inHeight:l,inWidth:d,inChannels:h,outDepth:_,outHeight:O,outWidth:P,outChannels:V,padInfo:T,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:$,effectiveFilterHeight:C,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:I,dilationWidth:k,inShape:n,outShape:B,filterShape:e}}function UN(n,e,t,s,r){s==null&&(s=Yf(n,e,t));const o=n[0],a=n[1],i=xo((o-e+2*s)/t+1,r),c=xo((a-e+2*s)/t+1,r);return[i,c]}function GN(n,e,t,s,r,o){r==null&&(r=Yf(n,e,s));const a=n[0],i=n[1],c=n[2],u=xo((a-e+2*r)/s+1,o),l=xo((i-e+2*r)/s+1,o),d=xo((c-e+2*r)/s+1,o);return[u,l,d,t]}function Yf(n,e,t,s=1){const r=pa(e,s);return Math.floor((n[0]*(t-1)-t+r)/2)}function ed(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Ap(n){return typeof n=="number"?[n,n,n]:n}function pa(n,e){return e<=1?n:n+(n-1)*(e-1)}function HN(n,e,t,s,r,o,a,i,c){let u,l,d;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=UN([e,t],o,s,n,i);l=p[0],d=p[1]}else if(n==="same"){l=Math.ceil(e/s),d=Math.ceil(t/r);const h=Math.max(0,(l-1)*s+o-e),p=Math.max(0,(d-1)*r+a-t),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),b=p-g;u={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-o+1)/s),d=Math.ceil((t-a+1)/r);else if(typeof n=="object"){const h=c==="channelsLast"?n[1][0]:n[2][0],p=c==="channelsLast"?n[1][1]:n[2][1],f=c==="channelsLast"?n[2][0]:n[3][0],m=c==="channelsLast"?n[2][1]:n[3][1];u={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=xo((e-o+h+p)/s+1,i),d=xo((t-a+f+m)/r+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:l,outWidth:d}}function jN(n,e,t,s,r,o,a,i,c,u,l){let d,h,p,f;if(typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=GN([e,t,s,1],i,1,r,n,l);h=g[0],p=g[1],f=g[2]}else if(n==="same"){h=Math.ceil(e/r),p=Math.ceil(t/o),f=Math.ceil(s/a);const m=(h-1)*r+i-e,g=(p-1)*o+c-t,b=(f-1)*a+u-s,x=Math.floor(m/2),y=m-x,w=Math.floor(g/2),I=g-w,k=Math.floor(b/2),$=b-k;d={top:w,bottom:I,left:k,right:$,front:x,back:y,type:"SAME"}}else if(n==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((e-i+1)/r),p=Math.ceil((t-c+1)/o),f=Math.ceil((s-u+1)/a);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function xo(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Co(n){const[e,t,s]=ed(n);return e===1&&t===1&&s===1}function cn(n,e){return Co(n)||Co(e)}function Ds(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function vn(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")v(Ia(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(r=>{v(Ia(r),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${r}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qN(n,e){const s={x:S(n,"x","reshape","string_or_numeric")},r={shape:e};return D.runKernel(Il,s,r)}const M=F({reshape_:qN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XN(n,e,t,s,r){const o=S(n,"x","avgPool","float32"),a=1;v(cn(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=o,c=!1;o.rank===3&&(c=!0,i=M(o,[1,o.shape[0],o.shape[1],o.shape[2]])),v(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),vn("avgPool",s,r);const u={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:r};let d=D.runKernel(za,u,l);return d=he(d,o.dtype),c?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const Zf=F({avgPool_:XN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n,e,t,s,r,o="NDHWC"){const a=S(n,"x","avgPool3d","float32");let i=a,c=!1;a.rank===4&&(c=!0,i=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),v(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),v(o==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),vn("avgPool3d",s,r);const u={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o};let d=D.runKernel(Nd,u,l);return d=he(d,i.dtype),c?M(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const YN=F({avgPool3d_:KN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(n,e=0){v(n.length>=1,()=>"Pass at least one tensor to concat");const t=S0(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(o=>{if(o.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${o.dtype}. `)}),t.length===1)return bo(t[0]);const s=t,r={axis:e};return D.runKernel(Xc,s,r)}const on=F({concat_:ZN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JN(n){const t={x:S(n,"x","sigmoid","float32")};return D.runKernel(Ei,t)}const Bi=F({sigmoid_:JN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n,e,t){const s=S(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const r={x:s},o={begin:e,size:t};return D.runKernel(vl,r,o)}const Qe=F({slice_:QN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eT(n){const t={x:S(n,"x","tanh","float32")};return D.runKernel(Mi,t)}const Jf=F({tanh_:eT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tT(n,e,t){const s=S(n,"x","batchToSpaceND"),r=e.reduce((i,c)=>i*c);v(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),v(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),v(s.shape[0]%r===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${r}`);const o={x:s},a={blockShape:e,crops:t};return D.runKernel(qc,o,a)}const Qf=F({batchToSpaceND_:tT});function nT(n){let e;return n.rank===0||n.rank===1?e=M(n,[1,1,1,n.size]):n.rank===2?e=M(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n,e,t,s,r,o){o==null&&(o=.001);const a=S(n,"x","batchNorm"),i=S(e,"mean","batchNorm"),c=S(t,"variance","batchNorm");let u;r!=null&&(u=S(r,"scale","batchNorm"));let l;s!=null&&(l=S(s,"offset","batchNorm")),v(i.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:nT(a),scale:u,offset:l,mean:i,variance:c},p={varianceEpsilon:o},f=D.runKernel(ti,h,p);return M(f,a.shape)}const th=F({batchNorm_:sT});function rT(n,e,t,s,r,o){const a=S(n,"x","batchNorm"),i=S(e,"mean","batchNorm"),c=S(t,"variance","batchNorm");let u;r!=null&&(u=S(r,"scale","batchNorm"));let l;return s!=null&&(l=S(s,"offset","batchNorm")),v(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),v(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),v(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&v(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&v(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),th(a,i,c,l,u,o)}const oT=F({batchNorm2d_:rT});function aT(n,e,t,s,r,o){const a=S(n,"x","batchNorm"),i=S(e,"mean","batchNorm"),c=S(t,"variance","batchNorm");let u;r!=null&&(u=S(r,"scale","batchNorm"));let l;return s!=null&&(l=S(s,"offset","batchNorm")),v(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),v(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),v(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&v(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&v(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),th(a,i,c,l,u,o)}const iT=F({batchNorm3d_:aT});function cT(n,e,t,s,r,o){const a=S(n,"x","batchNorm"),i=S(e,"mean","batchNorm"),c=S(t,"variance","batchNorm");let u;r!=null&&(u=S(r,"scale","batchNorm"));let l;return s!=null&&(l=S(s,"offset","batchNorm")),v(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),v(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),v(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&v(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&v(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),th(a,i,c,l,u,o)}const lT=F({batchNorm4d_:cT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uT(n,e,t){const s=S(n,"x","bincount"),r=S(e,"weights","bincount");v(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),v(t>=0,()=>`size must be non-negative, but got ${t}.`),v(r.size===s.size||r.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`);const o={x:s,weights:r},a={size:t};return D.runKernel(If,o,a)}const dT=F({bincount_:uT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n,e){let t=S(n,"broadcastTo","x");const s=t.shape;if(mr(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=M(t,u)}const r=t.shape,o=Array.from(e);for(let u=e.length-1;u>=0;u--)if(r[u]===e[u])o[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(o.map((u,l)=>u>1?l:-1).filter(u=>u>=0).length===0)return bo(t);const i={x:t},c={reps:o};return D.runKernel(Bo,i,c)}const mc=F({broadcastTo_:hT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pT(n){const t={x:S(n,"x","ceil","float32")};return D.runKernel(Ua,t)}const fT=F({ceil_:pT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bl(n,e,t){mr(n);const s={shape:n,value:e,dtype:t};return D.runKernel(Rd,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n,e,t){const s=S(n,"x","clipByValue");if(v(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return Bl(s.shape,e,s.dtype);const r={x:s},o={clipValueMin:e,clipValueMax:t};return D.runKernel(Po,r,o)}const Zn=F({clipByValue_:mT});function gT(n){return on(n,0)}const bT=F({concat1d_:gT});function xT(n,e){return on(n,e)}const yT=F({concat2d_:xT});function wT(n,e){return on(n,e)}const IT=F({concat3d_:wT});function kT(n,e){return on(n,e)}const $T=F({concat4d_:kT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vT(n,e,t,s,r="NHWC",o=[1,1],a){const i=S(n,"x","conv2d","float32"),c=S(e,"filter","conv2d","float32");let u=i,l=!1;i.rank===3&&(l=!0,u=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),v(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),v(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),vn("conv2d",s,a);const d=r==="NHWC"?u.shape[3]:u.shape[1];v(d===c.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${c.shape[2]}.`),v(cn(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const h={x:u,filter:c},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=D.runKernel(Ga,h,p);return l?M(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const So=F({conv2d_:vT});function CT(n,e,t,s,r="NWC",o=1,a){const i=S(n,"x","conv1d"),c=S(e,"filter","conv1d");let u=i,l=!1;i.rank===2&&(l=!0,u=M(i,[1,i.shape[0],i.shape[1]])),v(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),v(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),vn("conv1d",s,a),v(u.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${c.shape[1]}.`),v(cn(t,o),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${o}'`),v(r==="NWC",()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`);const d=M(c,[1,c.shape[0],c.shape[1],c.shape[2]]),h=M(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=So(h,d,[1,t],s,"NHWC",[1,o],a);return l?M(g,[g.shape[2],g.shape[3]]):M(g,[g.shape[0],g.shape[2],g.shape[3]])}const X0=F({conv1d_:CT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(n,e,t,s,r,o="NHWC",a){v(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,c=e,u=!1;e.rank===3&&(u=!0,c=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,n[0],n[1],n[2]]),v(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),v(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),v(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const l=o==="NHWC"?i[3]:i[1],d=o==="NHWC"?c.shape[3]:c.shape[1];v(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),v(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),vn("conv2dDerInput",r,a);const h={dy:c,filter:t},p={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,inputShape:i},f=D.runKernel(Ha,h,p);return u?M(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const em=F({conv2DBackpropInput_:ST});function NT(n,e,t,s,r,o){const a=S(n,"x","conv2dTranspose"),i=S(e,"filter","conv2dTranspose");return em(t,a,i,s,r,"NHWC",o)}const K0=F({conv2dTranspose_:NT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(n,e,t,s,r="NDHWC",o=[1,1,1]){const a=S(n,"x","conv3d"),i=S(e,"filter","conv3d");let c=a,u=!1;a.rank===4&&(u=!0,c=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),v(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),v(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),v(c.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${i.shape[3]}.`),v(cn(t,o),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`),v(r==="NDHWC",()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`);const l={x:c,filter:i},d={strides:t,pad:s,dataFormat:r,dilations:o},h=D.runKernel(Ed,l,d);return u?M(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const ET=F({conv3d_:TT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _T(n,e,t,s,r){v(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let o=n,a=e,i=!1;e.rank===4&&(i=!0,a=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,n[0],n[1],n[2],n[3]]);const c=o[4],u=a.shape[4];v(o.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`),v(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),v(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),v(c===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[3]}.`),v(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const l={dy:a,filter:t},d={pad:r,strides:s,inputShape:o},h=D.runKernel(Cf,l,d);return i?M(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const Y0=F({conv3DBackpropInput_:_T});function RT(n,e,t,s,r){const o=S(n,"x","conv3dTranspose"),a=S(e,"filter","conv3dTranspose");return Y0(t,o,a,s,r)}const AT=F({conv3dTranspose_:RT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DT(n){const t={x:S(n,"x","cos","float32")};return D.runKernel(ja,t)}const tm=F({cos_:DT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FT(n){const t={x:S(n,"x","cosh","float32")};return D.runKernel(qa,t)}const Z0=F({cosh_:FT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(n,e=0,t=!1,s=!1){const o={x:S(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:s};return D.runKernel(Kc,o,a)}const Dp=F({cumprod_:OT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(n,e=0,t=!1,s=!1){const o={x:S(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:s};return D.runKernel(Xa,o,a)}const J0=F({cumsum_:MT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LT(n,e,t,s=!1){const r=S(n,"x","denseBincount"),o=S(e,"weights","denseBincount");v(r.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`),v(r.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`),v(t>=0,()=>`size must be non-negative, but got ${t}.`),v(o.size===r.size||o.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${o.shape}.`);const a={x:r,weights:o},i={size:t,binaryOutput:s};return D.runKernel(Sf,a,i)}const Yb=F({denseBincount_:LT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT(n,e,t="NHWC"){const s=S(n,"x","depthToSpace","float32"),r=t==="NHWC"?s.shape[1]:s.shape[2],o=t==="NHWC"?s.shape[2]:s.shape[3],a=t==="NHWC"?s.shape[3]:s.shape[1];v(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),v(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e}  for depthToSpace with input shape
    ${s.shape}`),v(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e} for depthToSpace with input shape
        ${s.shape}`),v(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`);const i={x:s},c={blockSize:e,dataFormat:t};return D.runKernel(Zc,i,c)}const BT=F({depthToSpace_:PT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(n,e,t,s,r="NHWC",o=[1,1],a){const i=S(n,"x","depthwiseConv2d","float32"),c=S(e,"filter","depthwiseConv2d","float32");let u=i,l=!1;i.rank===3&&(l=!0,u=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),v(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),v(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`);const d=r==="NHWC"?u.shape[3]:u.shape[1];v(d===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${c.shape[2]}.`),vn("depthwiseConv2d",s,a);const h={x:u,filter:c},p={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a},f=D.runKernel(Ka,h,p);return l?M(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const nm=F({depthwiseConv2d_:zT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VT(n,e,t,s,r=[1,1],o="NHWC"){const a=S(n,"x","dilation2d"),i=S(e,"filter","dilation2d");v(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),v(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),v(o==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${o}`);let c=a,u=!1;a.rank===3&&(c=M(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const l={x:c,filter:i},d={strides:t,pad:s,dilations:r},h=D.runKernel(_d,l,d);return u?M(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const WT=F({dilation2d_:VT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(n,e){let t=S(n,"a","equal","string_or_numeric"),s=S(e,"b","equal","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(Qc,r)}const Ks=F({equal_:UT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GT(n,e,t){const s=S(e,"a","where"),r=S(t,"b","where"),o=S(n,"condition","where","bool"),a=Ee(Ee(o.shape,s.shape),r.shape),i=mc(o,a),c=mc(s,a),u=mc(r,a),l={condition:i,t:c,e:u};return D.runKernel(kl,l)}const Mn=F({where_:GT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HT(n){const t={x:S(n,"x","zerosLike")};return D.runKernel(Ol,t)}const Ge=F({zerosLike_:HT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,e){let t=S(n,"a","div"),s=S(e,"b","div");[t,s]=Tt(t,s);const r=ke(t,s),o=Ge(r),a=Ks(s,o);return Mn(a,o,r)}const qT=F({divNoNan_:jT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(n,e){const t=S(n,"t1","dot"),s=S(e,"t2","dot");v((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const r=t.rank===1?t.size:t.shape[1],o=s.rank===1?s.size:s.shape[0];if(v(r===o,()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${o}.`),t.rank===1&&s.rank===1){const a=M(t,[1,-1]),i=M(s,[-1,1]),c=Xe(a,i);return M(c,[])}else if(t.rank===1&&s.rank===2){const a=M(t,[1,-1]),i=M(s,[s.shape[0],s.shape[1]]),c=Xe(a,i);return M(c,[c.size])}else if(t.rank===2&&s.rank===1){const a=M(s,[-1,1]),i=Xe(t,a);return M(i,[i.size])}else{const a=M(s,[s.shape[0],s.shape[1]]);return Xe(t,a)}}const KT=F({dot_:XT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n){const t={x:S(n,"x","elu","float32")};return D.runKernel(Za,t)}const nh=F({elu_:YT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZT(n){let e=S(n,"x","erf");v(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=he(e,"float32"));const t={x:e};return D.runKernel(Jc,t)}const JT=F({erf_:ZT});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sm(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function Q0(n,e,t){const s=n.length+e.length,r=[];let o=0,a=0;for(let i=0;i<s;i++)t.indexOf(i)===-1?r.push(n[o++]):r.push(e[a++]);return r}function bt(n,e){const t=[],s=n.length;for(let o=0;o<s;o++)e.indexOf(o)===-1&&t.push(n[o]);const r=e.map(o=>n[o]);return[t,r]}function et(n,e){const t=e.map(s=>1);return Q0(n,t,e)}function ht(n,e,t){v(sm(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function pt(n,e){if(sm(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function er(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function ot(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n,e=null,t=!1){const r={x:S(n,"x","max")},o={reductionIndices:e,keepDims:t};return D.runKernel(ii,r,o)}const hs=F({max_:QT});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eE(n,e=null,t=!1){const r={x:S(n,"x","min")},o={axis:e,keepDims:t};return D.runKernel(di,r,o)}const wc=F({min_:eE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(n,e){let t=S(n,"base","pow"),s=S(e,"exp","pow");[t,s]=Tt(t,s);const r={a:t,b:s};return D.runKernel(bi,r)}const No=F({pow_:tE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Se(n,e){if((Xs(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Xs(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Xd(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(n){const t={x:S(n,"x","sqrt","float32")};return D.runKernel(_i,t)}const gn=F({sqrt_:nE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(n){const e=S(n,"x","square"),t={};return D.runKernel("Square",{x:e},t)}const nt=F({square_:sE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(n,e=null,t=!1){let s=S(n,"x","sum");s.dtype==="bool"&&(s=he(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return D.runKernel(Ri,r,o)}const ye=F({sum_:rE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oE(n,e="euclidean",t=null,s=!1){n=S(n,"x","norm");const r=ew(n,e,t);let o=r.shape;if(s){const a=Re(t,n.shape);o=et(r.shape,a)}return M(r,o)}function ew(n,e,t=null){if(n.rank===0)return Mt(n);if(n.rank!==1&&t===null)return ew(M(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return ye(Mt(n),t);if(e===1/0)return hs(Mt(n),t);if(e===-1/0)return wc(Mt(n),t);if(e==="euclidean"||e===2)return gn(ye(No(Mt(n),Se(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return hs(ye(Mt(n),t[0]),t[1]-1);if(e===1/0)return hs(ye(Mt(n),t[1]),t[0]);if(e===-1/0)return wc(ye(Mt(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return gn(ye(nt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const sh=F({norm_:oE});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(n,e=null,t=!1){return sh(n,"euclidean",e,t)}const iE=F({euclideanNorm_:aE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(n){const t={x:S(n,"x","exp")};return D.runKernel(Ja,t)}const ps=F({exp_:cE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lE(n,e=0){const t=S(n,"x","expandDims","string_or_numeric");v(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},r={dim:e};return D.runKernel(el,s,r)}const _n=F({expandDims_:lE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(n){const t={x:S(n,"x","expm1")};return D.runKernel(tl,t)}const dE=F({expm1_:uE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(n,e){const t=S(n,"x","tile","string_or_numeric");v(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},r={reps:e};return D.runKernel(Bo,s,r)}const Cs=F({tile_:hE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pE(n,e,t,s="float32"){e==null&&(e=n);const r=Me([n,e],s),o=n<=e?n:e;for(let i=0;i<o;++i)r.set(1,i,i);const a=M(r.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return Cs(_n(a,0),[t[0],1,1]);if(t.length===2)return Cs(_n(_n(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return Cs(_n(_n(_n(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const tw=F({eye_:pE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(n){const t={x:S(n,"x","floor","float32")};return D.runKernel(Qa,t)}const rh=F({floor_:fE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(n,e,t=0,s=0){const r=S(n,"x","gather"),o=S(e,"indices","gather","int32"),a={x:r,indices:o},i={axis:t,batchDims:s};return D.runKernel(sl,a,i)}const rm=F({gather_:mE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(n,e){let t=S(n,"a","greater","string_or_numeric"),s=S(e,"b","greater","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(rl,r)}const es=F({greater_:gE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n,e){let t=S(n,"a","greaterEqual","string_or_numeric"),s=S(e,"b","greaterEqual","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(ni,r)}const Uo=F({greaterEqual_:bE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(n){const t={x:S(n,"x","isFinite")};return D.runKernel(ol,t)}const yE=F({isFinite_:xE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n){const t={x:S(n,"x","isInf")};return D.runKernel(al,t)}const IE=F({isInf_:wE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(n){const t={x:S(n,"x","isNaN")};return D.runKernel(ri,t)}const $E=F({isNaN_:kE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vE(n,e=.2){const s={x:S(n,"x","leakyRelu")},r={alpha:e};return D.runKernel(oi,s,r)}const om=F({leakyRelu_:vE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CE(n,e){let t=S(n,"a","less","string_or_numeric"),s=S(e,"b","less","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(il,r)}const nw=F({less_:CE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(n,e){let t=S(n,"a","lessEqual","string_or_numeric"),s=S(e,"b","lessEqual","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(cl,r)}const zi=F({lessEqual_:SE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return D.runKernel(Df,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(n,e=5,t=1,s=1,r=.5){const o=S(n,"x","localResponseNormalization");v(o.rank===4||o.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${o.rank}.`),v(Ia(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=o,i=!1;o.rank===3&&(i=!0,a=M(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const c={x:a},u={depthRadius:e,bias:t,alpha:s,beta:r},l=D.runKernel(Dd,c,u);return i?M(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const EE=F({localResponseNormalization_:TE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(n){const t={x:S(n,"x","log","float32")};return D.runKernel(ai,t)}const fs=F({log_:_E});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RE(n){const t={x:S(n,"x","log1p")};return D.runKernel(ll,t)}const am=F({log1p_:RE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AE(n,e){v(fp(n),()=>"The f passed in variableGrads(f) must be a function"),v(e==null||Array.isArray(e)&&e.every(u=>u instanceof Ju),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in D.registeredVariables)e.push(D.registeredVariables[u])}const s=t?e.filter(u=>!u.trainable):null,r=e.length;e=e.filter(u=>u.trainable),v(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`);const o=!0,{value:a,grads:i}=D.gradients(n,e,null,o);v(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),v(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const c={};return e.forEach((u,l)=>{i[l]!=null&&(c[u.name]=i[l])}),s?.forEach(u=>c[u.name]=null),{value:a,grads:c}}function To(n){return D.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(n){const t={x:S(n,"x","softplus")};return D.runKernel(Nl,t)}const zl=F({softplus_:DE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n){const e=S(n,"x","logSigmoid");return To(s=>({value:vt(zl(vt(s))),gradFunc:a=>R(a,Bi(vt(s)))}))(e)}const OE=F({logSigmoid_:FE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(n,e){let t=S(n,"a","sub"),s=S(e,"b","sub");[t,s]=Tt(t,s);const r={a:t,b:s};return D.runKernel(Fi,r)}const xe=F({sub_:ME});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LE(n,e=-1){const t=S(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return To((r,o)=>{const i=hs(r,e,!0),c=xe(r,i),u=xe(he(c,"float32"),fs(ye(ps(c),e,!0)));return o([u]),{value:u,gradFunc:(d,h)=>{const[p]=h,f=!0,m=ps(p);return xe(d,R(ye(d,e,f),m))}}})(t)}const sw=F({logSoftmax_:LE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PE(n,e=null,t=!1){const s=S(n,"x","logSumExp"),r=Re(e,s.shape),o=hs(s,r,!0),a=xe(s,o),i=ps(a),c=ye(i,r),u=fs(c),l=ee(M(o,u.shape),u);if(t){const d=et(l.shape,r);return M(l,d)}return l}const rw=F({logSumExp_:PE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(n,e){const t=S(n,"a","logicalAnd","bool"),s=S(e,"b","logicalAnd","bool");Ee(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(ul,r)}const pr=F({logicalAnd_:BE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n){const t={x:S(n,"x","logicalNot","bool")};return D.runKernel(dl,t)}const im=F({logicalNot_:zE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(n,e){const t=S(n,"a","logicalOr","bool"),s=S(e,"b","logicalOr","bool");Ee(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(hl,r)}const ow=F({logicalOr_:VE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(n,e){const t=S(n,"a","logicalXor","bool"),s=S(e,"b","logicalXor","bool");return Ee(t.shape,s.shape),pr(ow(n,e),im(pr(n,e)))}const UE=F({logicalXor_:WE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n,e,t,s,r){const o=S(n,"x","maxPool"),a=1;let i=o,c=!1;o.rank===3&&(c=!0,i=M(o,[1,o.shape[0],o.shape[1],o.shape[2]])),v(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),v(cn(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),vn("maxPool",s,r);const u={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:r},d=D.runKernel(li,u,l);return c?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const cm=F({maxPool_:GE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HE(n,e=[1,1,1],t,s,r,o="NDHWC"){const a=S(n,"x","maxPool3d");let i=a,c=!1;a.rank===4&&(c=!0,i=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),v(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),v(o==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`),vn("maxPool3d",s,r);const u={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:r,dataFormat:o},d=D.runKernel(Fd,u,l);return c?M(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const jE=F({maxPool3d_:HE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qE(n,e){let t=S(n,"a","maximum"),s=S(e,"b","maximum");[t,s]=Tt(t,s),t.dtype==="bool"&&(t=he(t,"int32"),s=he(s,"int32")),Ee(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(ci,r)}const br=F({maximum_:qE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XE(n,e=null,t=!1){const r={x:S(n,"x","mean")},o={axis:e,keepDims:t};return D.runKernel(ui,r,o)}const St=F({mean_:XE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(n,e="float32"){if(mr(n),e==="complex64"){const s=Ht(n,"float32"),r=Ht(n,"float32");return Sa(s,r)}const t=an(L(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gr(n,e="float32"){if(mr(n),e==="complex64"){const s=Gr(n,"float32"),r=Ht(n,"float32");return Sa(s,r)}const t=bf(L(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(n,e){let t=S(n,"a","minimum"),s=S(e,"b","minimum");[t,s]=Tt(t,s),t.dtype==="bool"&&(t=he(t,"int32"),s=he(s,"int32")),Ee(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(hi,r)}const Vl=F({minimum_:KE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YE(n,e,t){v(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=S(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");v(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const r=t==="reflect"?1:0;for(let i=0;i<s.rank;i++)v(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),v(e[i][0]>=0&&e[i][0]<=s.shape[i]-r&&e[i][1]>=0&&e[i][1]<=s.shape[i]-r,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-r} or less than 0 for input of shape ${s.shape}`);const o={paddings:e,mode:t},a={x:s};return D.runKernel(pi,a,o)}const ZE=F({mirrorPad_:YE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JE(n,e){let t=S(n,"a","mod"),s=S(e,"b","mod");[t,s]=Tt(t,s);const r={a:t,b:s};return D.runKernel(pl,r)}const aw=F({mod_:JE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QE(n,e=null,t=!1){n=S(n,"x","moments");const s=Re(e,n.shape),r=St(n,s,t);let o=r.shape;t||(o=et(r.shape,s));const a=nt(xe(he(n,"float32"),M(r,o))),i=St(a,s,t);return{mean:r,variance:i}}const lm=F({moments_:QE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e_(n,e){let t=S(n,"a","notEqual","string_or_numeric"),s=S(e,"b","notEqual","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const r={a:t,b:s};return D.runKernel(ml,r)}const Ic=F({notEqual_:e_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_(n){const t={x:S(n,"x","onesLike")};return D.runKernel(yl,t)}const ms=F({onesLike_:t_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n,e,t=0){const s=S(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:e,constantValue:t},o={x:s};return D.runKernel(gi,o,r)}const um=F({pad_:n_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(n,e,t){const s=S(n,"x","spaceToBatchND");v(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),v(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),v(s.shape.reduce((a,i,c)=>c>0&&c<=e.length?a&&(i+t[c-1][0]+t[c-1][1])%e[c-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const r={x:s},o={blockShape:e,paddings:t};return D.runKernel(Tl,r,o)}const dm=F({spaceToBatchND_:s_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_(n,e,t,s,r,o,a){r==null&&(r=[1,1]),o==null&&(o=1),s===0&&(s="valid");const i=S(n,"x","maxPool");let c=i,u=!1;i.rank===3&&(u=!0,c=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),v(cn(o,r),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${r}'`);const l=zn(c.shape,e,o,r,s),d=[l.dilationHeight,l.dilationWidth];let h;s==="same"?h=a_([l.filterHeight,l.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[f,m]=o_([l.inHeight,l.inWidth],d,h),g=p?s:"valid",b=p?c:dm(c,d,f),y=(t==="avg"?()=>Zf(b,e,o,g,a):()=>cm(b,e,o,g,a))(),w=p?y:Qf(y,d,m);return u?M(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function o_(n,e,t){const s=t.map(l=>l[0]),r=t.map(l=>l[1]),o=n.concat(s,r),a=e.map((l,d)=>(l-o[d]%l)%l),i=r.map((l,d)=>l+a[d]),c=e.map((l,d)=>[s[d],i[d]]),u=e.map((l,d)=>[0,a[d]]);return[c,u]}function a_(n,e){const s=n.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),r=s.map(a=>Math.floor(a/2)),o=s.map((a,i)=>a-r[i]);return s.map((a,i)=>[r[i],o[i]])}const i_=F({pool_:r_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c_(n,e){const t=S(n,"x","prelu"),s=S(e,"alpha","prelu"),r={x:t,alpha:s};return D.runKernel(xi,r)}const hm=F({prelu_:c_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l_(n,e=null,t=!1){let s=S(n,"x","prod");s.dtype==="bool"&&(s=he(s,"int32"));const r={x:s},o={axis:e,keepDims:t};return D.runKernel(yi,r,o)}const u_=F({prod_:l_});var iw={exports:{}};(function(n){(function(e,t,s){function r(c){var u=this,l=i();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(c),u.s0<0&&(u.s0+=1),u.s1-=l(c),u.s1<0&&(u.s1+=1),u.s2-=l(c),u.s2<0&&(u.s2+=1),l=null}function o(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function a(c,u){var l=new r(c),d=u&&u.state,h=l.next;return h.int32=function(){return l.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&o(d,l),h.state=function(){return o(l,{})}),h}function i(){var c=4022871197,u=function(l){l=String(l);for(var d=0;d<l.length;d++){c+=l.charCodeAt(d);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.alea=a})(hr,n,!1)})(iw);var cw={exports:{}};(function(n){(function(e,t,s){function r(i){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},i===(i|0)?c.x=i:u+=i;for(var l=0;l<u.length+64;l++)c.x^=u.charCodeAt(l)|0,c.next()}function o(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c}function a(i,c){var u=new r(i),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,l&&(typeof l=="object"&&o(l,u),d.state=function(){return o(u,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xor128=a})(hr,n,!1)})(cw);var lw={exports:{}};(function(n){(function(e,t,s){function r(i){var c=this,u="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,i===(i|0)?c.x=i:u+=i;for(var l=0;l<u.length+64;l++)c.x^=u.charCodeAt(l)|0,l==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function o(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c.v=i.v,c.d=i.d,c}function a(i,c){var u=new r(i),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,l&&(typeof l=="object"&&o(l,u),d.state=function(){return o(u,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xorwow=a})(hr,n,!1)})(lw);var uw={exports:{}};(function(n){(function(e,t,s){function r(i){var c=this;c.next=function(){var l=c.x,d=c.i,h,p;return h=l[d],h^=h>>>7,p=h^h<<24,h=l[d+1&7],p^=h^h>>>10,h=l[d+3&7],p^=h^h>>>3,h=l[d+4&7],p^=h^h<<7,h=l[d+7&7],h=h^h<<13,p^=h^h<<9,l[d]=p,c.i=d+1&7,p};function u(l,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],l.x=p,l.i=0,h=256;h>0;--h)l.next()}u(c,i)}function o(i,c){return c.x=i.x.slice(),c.i=i.i,c}function a(i,c){i==null&&(i=+new Date);var u=new r(i),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,l&&(l.x&&o(l,u),d.state=function(){return o(u,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xorshift7=a})(hr,n,!1)})(uw);var dw={exports:{}};(function(n){(function(e,t,s){function r(i){var c=this;c.next=function(){var l=c.w,d=c.X,h=c.i,p,f;return c.w=l=l+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,c.i=h,f+(l^l>>>16)|0};function u(l,d){var h,p,f,m,g,b=[],x=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,x=Math.max(x,d.length)),f=0,m=-32;m<x;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,h=b[m&127]^=p+g,f=h==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=b[f+34&127],h=b[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,b[f]=p^h;l.w=g,l.X=b,l.i=f}u(c,i)}function o(i,c){return c.i=i.i,c.w=i.w,c.X=i.X.slice(),c}function a(i,c){i==null&&(i=+new Date);var u=new r(i),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,l&&(l.X&&o(l,u),d.state=function(){return o(u,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xor4096=a})(hr,n,!1)})(dw);var hw={exports:{}};(function(n){(function(e,t,s){function r(i){var c=this,u="";c.next=function(){var d=c.b,h=c.c,p=c.d,f=c.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,c.b=d=d<<20^d>>>12^h,c.c=h=h-p|0,c.d=p<<16^h>>>16^f,c.a=f-d|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,i===Math.floor(i)?(c.a=i/4294967296|0,c.b=i|0):u+=i;for(var l=0;l<u.length+20;l++)c.b^=u.charCodeAt(l)|0,c.next()}function o(i,c){return c.a=i.a,c.b=i.b,c.c=i.c,c.d=i.d,c}function a(i,c){var u=new r(i),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,l&&(typeof l=="object"&&o(l,u),d.state=function(){return o(u,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.tychei=a})(hr,n,!1)})(hw);var pw={exports:{}};const d_={},h_=Object.freeze(Object.defineProperty({__proto__:null,default:d_},Symbol.toStringTag,{value:"Module"})),Ms=QS(h_);(function(n){(function(e,t,s){var r=256,o=6,a=52,i="random",c=s.pow(r,o),u=s.pow(2,a),l=u*2,d=r-1,h;function p(w,I,k){var $=[];I=I==!0?{entropy:!0}:I||{};var C=b(g(I.entropy?[w,y(t)]:w??x(),3),$),N=new f($),T=function(){for(var _=N.g(o),O=c,P=0;_<u;)_=(_+P)*r,O*=r,P=N.g(1);for(;_>=l;)_/=2,O/=2,P>>>=1;return(_+P)/O};return T.int32=function(){return N.g(4)|0},T.quick=function(){return N.g(4)/4294967296},T.double=T,b(y(N.S),t),(I.pass||k||function(_,O,P,V){return V&&(V.S&&m(V,N),_.state=function(){return m(N,{})}),P?(s[i]=_,O):_})(T,C,"global"in I?I.global:this==s,I.state)}function f(w){var I,k=w.length,$=this,C=0,N=$.i=$.j=0,T=$.S=[];for(k||(w=[k++]);C<r;)T[C]=C++;for(C=0;C<r;C++)T[C]=T[N=d&N+w[C%k]+(I=T[C])],T[N]=I;($.g=function(_){for(var O,P=0,V=$.i,B=$.j,W=$.S;_--;)O=W[V=d&V+1],P=P*r+W[d&(W[V]=W[B=d&B+O])+(W[B]=O)];return $.i=V,$.j=B,P})(r)}function m(w,I){return I.i=w.i,I.j=w.j,I.S=w.S.slice(),I}function g(w,I){var k=[],$=typeof w,C;if(I&&$=="object")for(C in w)try{k.push(g(w[C],I-1))}catch{}return k.length?k:$=="string"?w:w+"\0"}function b(w,I){for(var k=w+"",$,C=0;C<k.length;)I[d&C]=d&($^=I[d&C]*19)+k.charCodeAt(C++);return y(I)}function x(){try{var w;return h&&(w=h.randomBytes)?w=w(r):(w=new Uint8Array(r),(e.crypto||e.msCrypto).getRandomValues(w)),y(w)}catch{var I=e.navigator,k=I&&I.plugins;return[+new Date,e,k,e.screen,y(t)]}}function y(w){return String.fromCharCode.apply(0,w)}if(b(s.random(),t),n.exports){n.exports=p;try{h=Ms}catch{}}else s["seed"+i]=p})(typeof self<"u"?self:hr,[],Math)})(pw);var p_=iw.exports,f_=cw.exports,m_=lw.exports,g_=uw.exports,b_=dw.exports,x_=hw.exports,Go=pw.exports;Go.alea=p_;Go.xor128=f_;Go.xorwow=m_;Go.xorshift7=g_;Go.xor4096=b_;Go.tychei=x_;var pm=Go;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fw{constructor(e,t,s,r,o){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=o||Math.random();this.random=pm.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const r=this.nextVal;return this.nextVal=NaN,r}let e,t,s=!1;for(;!s;){let r,o,a;do r=2*this.random()-1,o=2*this.random()-1,a=r*r+o*o;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*o*i,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class y_{constructor(e=0,t=1,s,r){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,r==null&&(r=Math.random()),typeof r=="number"&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=pm.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w_(n,e=0,t=1,s,r){if(mr(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const o=new fw(e,t,s,!1,r),a=Me(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const I_=F({randomNormal_:w_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_(n,e=0,t=1,s="float32",r){mr(n);const o=Me(n,s),a=new y_(e,t,null,r);for(let i=0;i<o.values.length;i++)o.values[i]=a.nextValue();return o.toTensor()}const oh=F({randomUniform_:k_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kc(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const r={start:n,stop:e,step:t,dtype:s};return D.runKernel(Od,{},r)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_(n){const t={x:S(n,"x","reciprocal")};return D.runKernel(wi,t)}const v_=F({reciprocal_:$_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(n){const t={x:S(n,"x","relu")};return D.runKernel(Ii,t)}const xr=F({relu_:C_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S_(n){const t={x:S(n,"x","relu6")};return D.runKernel(vi,t)}const mw=F({relu6_:S_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N_(n,e){const s={x:S(n,"x","reverse")},r={dims:e};return D.runKernel(Ci,s,r)}const Eo=F({reverse_:N_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(n){const t={x:S(n,"x","round")};return D.runKernel(Si,t)}const gw=F({round_:T_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_(n){const t={x:S(n,"x","rsqrt","float32")};return D.runKernel(Ni,t)}const bw=F({rsqrt_:E_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __(n){const t={x:S(n,"x","selu")};return D.runKernel($l,t)}const xw=F({selu_:__});function R_(n,e,t,s,r,o=[1,1],a="NHWC"){const i=S(n,"x","separableConv2d"),c=S(e,"depthwiseFilter","separableConv2d"),u=S(t,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(i.rank===3&&(d=!0,l=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");v(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),v(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),v(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),v(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),v(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const h=c.shape[2],p=c.shape[3];v(u.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${u.shape[2]}.`);const f=nm(l,c,s,r,a,o),g=So(f,u,1,"valid",a);return d?M(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const yw=F({separableConv2d_:R_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n){const t={x:S(n,"x","sign")};return D.runKernel(Sl,t)}const D_=F({sign_:A_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(n){const t={x:S(n,"x","sin","float32")};return D.runKernel(Ti,t)}const ww=F({sin_:F_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O_(n){const t={x:S(n,"x","sinh")};return D.runKernel(Cl,t)}const Iw=F({sinh_:O_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(n,e,t){const s=S(n,"x","slice1d");return v(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Qe(s,[e],[t])}const fm=F({slice1d_:M_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_(n,e,t){const s=S(n,"x","slice2d");return v(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Qe(s,e,t)}const kw=F({slice2d_:L_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n,e,t){const s=S(n,"x","slice3d");return v(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Qe(s,e,t)}const mm=F({slice3d_:P_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(n,e,t){const s=S(n,"x","slice4d");return v(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Qe(s,e,t)}const td=F({slice4d_:B_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z_(n,e=-1){const t=S(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},r={dim:e};return D.runKernel(Ai,s,r)}const gm=F({softmax_:z_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V_(n){v(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(_f,e)}const $w=F({fft_:V_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(n){v(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(Rf,e)}const Fp=F({ifft_:W_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const r=M(n,[t,e]);s=Fp(r)}else{const r=[t,2*(e-1)],o=M(Qu(n),[t,e]),a=M(Xf(n),[t,e]),i=Eo(Qe(o,[0,1],[t,e-2]),1),c=R(Eo(Qe(a,[0,1],[t,e-2]),1),Se(-1)),u=on([o,i],1),l=on([a,c],1),d=M(Sa(u,l),[r[0],r[1]]);s=Fp(d)}if(s=Qu(s),n.rank===3&&n.shape[0]!==0){const r=s,o=n.shape[0];s=M(s,[o,s.shape[0]/o,s.shape[1]]),r.dispose()}return s}const G_=F({irfft_:U_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n,e,t=0){const r={x:S(n,"x","split")},o={numOrSizeSplits:e,axis:t};return D.runKernel(El,r,o)}const Xn=F({split_:H_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j_(n,e){v(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let r;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,r=Qe(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,r=on([n,Ht(f)],n.shape.length-1),t=e}else r=n;const o=Ge(r),a=M(Sa(r,o),[s,t]),i=$w(a),c=Math.floor(t/2)+1,u=Qu(i),l=Xf(i),d=Xn(u,[c,t-c],u.shape.length-1),h=Xn(l,[c,t-c],l.shape.length-1),p=r.shape.slice();return p[r.shape.length-1]=c,M(Sa(d[0],h[0]),p)}const vw=F({rfft_:j_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_(n,e){let t=S(n,"a","squaredDifference"),s=S(e,"b","squaredDifference");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const r={a:t,b:s},o={};return D.runKernel(Di,r,o)}const bm=F({squaredDifference_:q_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(n,e){const t=S(n,"x","squeeze","string_or_numeric");return M(t,Vr(t.shape,e).newShape)}const Wl=F({squeeze_:X_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(n,e=0){const t=S0(n,"tensors","stack","string_or_numeric");v(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&v(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,r={axis:e};return D.runKernel(wl,s,r)}const Rr=F({stack_:K_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(n,e=0){const s={x:S(n,"x","step")},r={alpha:e};return D.runKernel(zo,s,r)}const Ul=F({step_:Y_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(n,e,t,s,r=0,o=0,a=0,i=0,c=0){const l={x:S(n,"x","stridedSlice","string_or_numeric")},d={begin:e,end:t,strides:s,beginMask:r,endMask:o,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:c};return D.runKernel(Rl,l,d)}const J_=F({stridedSlice_:Z_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(n){const t={x:S(n,"x","tan","float32")};return D.runKernel(Oi,t)}const eR=F({tan_:Q_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dn(n,e){Ky(n);const t=qd(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Xd(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bu(n,e,t){if(Ky(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=qd(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Xd(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tR(n,e=1,t=!0){const s=S(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${e}`);const o={x:s},a={k:e,sorted:t},[i,c]=D.runKernel(Al,o,a);return{values:i,indices:c}}const nR=F({topk_:tR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(n,e=0,t=1,s,r){if(mr(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const o=new fw(e,t,s,!0,r),a=Me(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=o.nextValue();return a.toTensor()}const Cw=F({truncatedNormal_:sR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rR(n,e=0){const t=S(n,"x","unique","string_or_numeric");v(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},r={axis:e},[o,a]=D.runKernel(zf,s,r);return{values:o,indices:a}}const oR=F({unique_:rR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aR(n,e,t){const s=S(n,"x","unsortedSegmentSum"),r=S(e,"segmentIds","unsortedSegmentSum","int32");v(Ia(t),()=>"numSegments must be of dtype int");const o={x:s,segmentIds:r},a={numSegments:t};return D.runKernel(Gd,o,a)}const Sw=F({unsortedSegmentSum_:aR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iR(n,e=0){const t=S(n,"x","unstack","string_or_numeric");v(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},r={axis:e};return D.runKernel(Fl,s,r)}const _o=F({unstack_:iR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(n,e=!0,t,s){return D.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nw(n,e){const t=[];for(let o=0;o<e.length;o++)e[o]&&t.push(o);const s=Me(n,"int32"),r=Me([t.length,n.length],"int32");for(let o=0;o<t.length;o++){const a=s.indexToLoc(t[o]),i=o*n.length;r.values.set(a,i)}return r.toTensor()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(n,e){if(e==null)return n.shape.slice();if(Ke(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uR(n,e,t,s){const r=S(n,"x","dropout");if(v(r.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`),v(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Rt?r.clone():r;const o=lR(r,t),a=1-e,i=ke(rh(ee(oh(o,0,1,"float32",s),a)),a);return R(r,i)}const dR=F({dropout_:uR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hR(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function Tw(n,e,t){const s=1-n%2,r=new Float32Array(n);for(let o=0;o<n;++o){const a=2*Math.PI*o/(n+s-1);r[o]=e-t*Math.cos(a)}return Dn(r,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pR(n,e,t,s,r,o="NHWC",a){let i=n;n.rank===3&&(i=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),v(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),v(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),v(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=o==="NHWC"?i.shape[3]:i.shape[1],l=o==="NHWC"?c.shape[3]:c.shape[1];v(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),v(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),vn("conv2dDerFilter",r,a);const d={x:i,dy:c},h={strides:s,pad:r,dataFormat:o,dimRoundingMode:a,filterShape:t};return D.runKernel($f,d,h)}const xm=F({conv2DBackpropFilter_:pR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ym(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return R(n,Ul(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function wm(n,e){let t=e;const s=Wt(n.shape,e.shape);return s.length>0&&(t=ye(t,s)),M(t,n.shape)}function Im(n,e,t,s){if(e==="linear")return n;if(e==="relu")return xr(n);if(e==="elu")return nh(n);if(e==="relu6")return mw(n);if(e==="prelu")return hm(n,t);if(e==="leakyrelu")return om(n,s);if(e==="sigmoid")return Bi(n);throw new Error(`Unknown fused activation ${e}.`)}const km=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR({x:n,filter:e,strides:t,pad:s,dataFormat:r="NHWC",dilations:o=[1,1],dimRoundingMode:a,bias:i,activation:c="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(c=c||"linear",km(D.state.gradientDepth,c)===!1){v(r==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${r} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=So(n,e,t,s,r,o,a);return i!=null&&(k=ee(k,i)),Im(k,c,u,l)}const d=S(n,"x","conv2d","float32"),h=S(e,"filter","conv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=M(d,[1,d.shape[0],d.shape[1],d.shape[2]])),v(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),v(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),vn("fused conv2d",s,a);const m=r==="NHWC"?p.shape[3]:p.shape[1];v(h.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),v(cn(t,o),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${o}'`);const g=Nt(p.shape,h.shape,t,o,s,a);let b;i!=null&&(b=S(i,"bias","fused conv2d"),[b]=Tt(b,d),r==="NHWC"?Ee(g.outShape,b.shape):(v(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),v(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(u!=null){const k=u.shape;if(v(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)v(k[0]===1||k[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${g.outChannels}).`);else if(k.length===3)try{Ee(k,g.outShape)}catch{const C=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(C)}x=S(u,"prelu weights","fused conv2d")}const y=(k,$)=>{v(r==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${r} but only NHWC is currently supported.`);const[C,N,T,_]=$,O=ym(k,T,c);v(Co(o),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`);const P=em(N.shape,O,C,t,s),V=xm(N,O,C.shape,t,s),B=[P,V];if(_!=null){const W=wm(_,O);B.push(W)}return B},w={x:p,filter:h,bias:b,preluActivationWeights:x},I={strides:t,pad:s,dataFormat:r,dilations:o,dimRoundingMode:a,activation:c,leakyreluAlpha:l};return i==null?To(($,C,N)=>{let T=D.runKernel($a,w,I);return N([C,$,T]),f&&(T=M(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:y}})(p,h):To(($,C,N,T)=>{let _=D.runKernel($a,w,I);return T([C,$,_,N]),f&&(_=M(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:y}})(p,h,b)}const mR=F({fusedConv2d_:fR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR(n,e,t,s,r,o=[1,1],a){let i=n;n.rank===3&&(i=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:i,dy:c},l={strides:s,pad:r,dimRoundingMode:a,dilations:o,filterShape:t};return D.runKernel(Nf,u,l)}const bR=F({depthwiseConv2dNativeBackpropFilter_:gR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(n,e,t,s,r,o=[1,1],a){let i=e,c=!1;e.rank===3&&(c=!0,i=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:i,filter:t},l={strides:s,pad:r,dimRoundingMode:a,dilations:o,inputShape:n},d=D.runKernel(Tf,u,l);return c?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const yR=F({depthwiseConv2dNativeBackpropInput_:xR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:r,activation:o="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(km(D.state.gradientDepth,o)===!1){let _=Xe(n,e,t,s);return r!=null&&(_=ee(_,r)),Im(_,o,a,i)}let c=S(n,"a","fused matMul"),u=S(e,"b","fused matMul");[c,u]=Tt(c,u);const l=t?c.shape[c.rank-2]:c.shape[c.rank-1],d=s?u.shape[u.rank-1]:u.shape[u.rank-2],h=t?c.shape[c.rank-1]:c.shape[c.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=c.shape.slice(0,-2),m=u.shape.slice(0,-2),g=L(f),b=L(m);v(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${c.shape} and ${u.shape} and transposeA=${t} and transposeB=${s} must match.`);const y=Ee(c.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,p]),w=t?M(c,[g,l,h]):M(c,[g,h,l]),I=s?M(u,[b,p,d]):M(u,[b,d,p]);let k;r!=null&&(k=S(r,"bias","fused matMul"),[k]=Tt(k,c),Ee(y,k.shape));let $;a!=null&&($=S(a,"prelu weights","fused matMul"));const C=(_,O)=>{const[P,V,B,W]=O,q=ym(M(_,B.shape),B,o);let z,X;if(!t&&!s?(z=Xe(q,V,!1,!0),X=Xe(P,q,!0,!1)):!t&&s?(z=Xe(q,V,!1,!1),X=Xe(q,P,!0,!1)):t&&!s?(z=Xe(V,q,!1,!0),X=Xe(P,q,!1,!1)):(z=Xe(V,q,!0,!0),X=Xe(q,P,!0,!0)),r!=null){const Y=wm(W,q);return[z,X,Y]}else return[z,X]},N={a:w,b:I,bias:k,preluActivationWeights:$},T={transposeA:t,transposeB:s,activation:o,leakyreluAlpha:i};return r==null?To((O,P,V)=>{const B=D.runKernel(ka,N,T);return V([O,P,B]),{value:M(B,y),gradFunc:C}})(w,I):To((O,P,V,B)=>{const W=D.runKernel(ka,N,T);return B([O,P,W,V]),{value:M(W,y),gradFunc:C}})(w,I,k)}const Zb=F({fusedMatMul_:wR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IR(n){return Tw(n,.54,.46)}const nee=F({hammingWindow_:IR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR(n){return Tw(n,.5,.5)}const $R=F({hannWindow_:kR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(n,e,t,s=!1,r=0){let o=0;const a=[];for(;o+e<=n.size;)a.push(Qe(n,o,e)),o+=t;if(s)for(;o<n.size;){const i=o+e-n.size,c=on([Qe(n,o,e-i),Bl([i],r)]);a.push(c),o+=t}return a.length===0?Bu([],[0,e]):M(on(a),[a.length,e])}const CR=F({frame_:vR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n,e,t,s,r=$R){s==null&&(s=hR(e));const o=CR(n,e,t),a=R(o,r(e));return vw(a,s)}const see=F({stft_:SR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NR(n,e,t,s,r="bilinear",o=0){const a=S(n,"image","cropAndResize"),i=S(e,"boxes","cropAndResize","float32"),c=S(t,"boxInd","cropAndResize","int32"),u=i.shape[0];v(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),v(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),v(c.rank===1&&c.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),v(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),v(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),v(r==="bilinear"||r==="nearest",()=>`method must be bilinear or nearest, but was ${r}`);const l={image:a,boxes:i,boxInd:c},d={method:r,extrapolationValue:o,cropSize:s};return D.runKernel(Yc,l,d)}const TR=F({cropAndResize_:NR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ER(n){const e=S(n,"image","flipLeftRight","float32");v(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return D.runKernel(nl,t,{})}const _R=F({flipLeftRight_:ER});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(n){const e=S(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];v(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),v(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const r=new Array(e.rank);return r.fill(1,0,t),r[t]=3,Cs(e,r)}const AR=F({grayscaleToRGB_:RR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n,e,t=0,s=.5){const r=S(n,"image","rotateWithOffset","float32");v(r.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`);const o={image:r},a={radians:e,fillValue:t,center:s};return D.runKernel(Ml,o,a)}const FR=F({rotateWithOffset_:DR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vi(n,e,t,s,r,o){s==null&&(s=.5),r==null&&(r=Number.NEGATIVE_INFINITY),o==null&&(o=0);const a=n.shape[0];return t=Math.min(t,a),v(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),v(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),v(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),v(e.rank===1,()=>"scores must be a 1D tensor"),v(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),v(0<=o&&o<=1,()=>`softNmsSigma must be in [0, 1], but was '${o}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=S(n,"boxes","nonMaxSuppression","float32"),a=S(e,"scores","nonMaxSuppression","float32"),i=Vi(o,a,t,s,r);t=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const c={maxOutputSize:t,iouThreshold:s,scoreThreshold:r};return D.runKernel(gl,{boxes:o,scores:a},c)}const MR=F({nonMaxSuppression_:OR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(n,e,t){const s=PR(n,e,t),r=s<0?-(s+1):s;n.splice(r,0,e)}function PR(n,e,t){return zR(n,e,t||BR)}function BR(n,e){return n>e?1:n<e?-1:0}function zR(n,e,t){let s=0,r=n.length,o=0,a=!1;for(;s<r;){o=s+(r-s>>>1);const i=t(e,n[o]);i>0?s=o+1:(r=o,a=!i)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $m(n,e,t,s,r){return Sm(n,e,t,s,r,0)}function vm(n,e,t,s,r,o){return Sm(n,e,t,s,r,0,!1,o,!0)}function Cm(n,e,t,s,r,o){return Sm(n,e,t,s,r,o,!0)}function Sm(n,e,t,s,r,o,a=!1,i=!1,c=!1){const u=[];for(let g=0;g<e.length;g++)e[g]>r&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(Jb);const l=o>0?-.5/o:0,d=[],h=[];for(;d.length<t&&u.length>0;){const g=u.pop(),{score:b,boxIndex:x,suppressBeginIndex:y}=g;if(b<r)break;let w=!1;for(let I=d.length-1;I>=y;--I){const k=VR(n,x,d[I]);if(k>=s){w=!0;break}if(g.score=g.score*WR(s,l,k),g.score<=r)break}g.suppressBeginIndex=d.length,w||(g.score===b?(d.push(x),h.push(g.score)):g.score>r&&LR(u,g,Jb))}const p=d.length,f=t-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return a&&(m.selectedScores=h),c&&(m.validOutputs=p),m}function VR(n,e,t){const s=n.subarray(e*4,e*4+4),r=n.subarray(t*4,t*4+4),o=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),c=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),l=Math.min(r[1],r[3]),d=Math.max(r[0],r[2]),h=Math.max(r[1],r[3]),p=(i-o)*(c-a),f=(d-u)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(o,u),g=Math.max(a,l),b=Math.min(i,d),x=Math.min(c,h),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function WR(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function Jb(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function UR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY){const o=S(n,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),i=Vi(o,a,t,s,r);t=i.maxOutputSize,s=i.iouThreshold,r=i.scoreThreshold;const c=await Promise.all([o.data(),a.data()]),u=c[0],l=c[1],{selectedIndices:d}=$m(u,l,t,s,r);return o!==n&&o.dispose(),a!==e&&a.dispose(),Dn(d,"int32")}const GR=UR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=S(n,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),c=Vi(a,i,t,s,r,o);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const u={boxes:a,scores:i},l={maxOutputSize:t,iouThreshold:s,scoreThreshold:r,softNmsSigma:o},d=D.runKernel(xl,u,l);return{selectedIndices:d[0],selectedScores:d[1]}}const jR=F({nonMaxSuppressionWithScore_:HR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function qR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=0){const a=S(n,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),c=Vi(a,i,t,s,r,o);t=c.maxOutputSize,s=c.iouThreshold,r=c.scoreThreshold,o=c.softNmsSigma;const u=await Promise.all([a.data(),i.data()]),l=u[0],d=u[1],{selectedIndices:h,selectedScores:p}=Cm(l,d,t,s,r,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Dn(h,"int32"),selectedScores:Dn(p)}}const XR=qR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=S(n,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),c=Vi(a,i,t,s,r,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,h={boxes:a,scores:i},p={maxOutputSize:u,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:o},f=D.runKernel(bl,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const YR=F({nonMaxSuppressionPadded_:KR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function ZR(n,e,t,s=.5,r=Number.NEGATIVE_INFINITY,o=!1){const a=S(n,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),c=Vi(a,i,t,s,r,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,[h,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=vm(h,p,u,l,d,o);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Dn(f,"int32"),validOutputs:Se(m,"int32")}}const JR=ZR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QR(n,e,t=!1,s=!1){const r=S(n,"images","resizeBilinear");v(r.rank===3||r.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`),v(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),v(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=M(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},c={alignCorners:t,halfPixelCenters:s,size:e},u=D.runKernel($i,i,c);return a?M(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Ew=F({resizeBilinear_:QR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eA(n,e,t=!1,s=!1){const r=S(n,"images","resizeNearestNeighbor");v(r.rank===3||r.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`),v(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),v(r.dtype==="float32"||r.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),v(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let o=r,a=!1;r.rank===3&&(a=!0,o=M(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const i={images:o},c={alignCorners:t,halfPixelCenters:s,size:e},u=D.runKernel(ki,i,c);return a?M(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const _w=F({resizeNearestNeighbor_:eA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n,e="binary",t=!1,s=.5){const r=S(n,"image","threshold"),o=.2989,a=.587,i=.114,c=r.shape[0]*r.shape[1];let u=R(Dn([s]),255),l,d,h,p;if(v(r.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`),v(r.shape[2]===3||r.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`),v(r.dtype==="int32"||r.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`),v(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),r.shape[2]===3){[l,d,h]=Xn(r,[1,1,1],-1);const g=R(l,o),b=R(d,a),x=R(h,i);p=ee(ee(g,b),x)}else p=n;if(e==="otsu"){const g=dT(he(gw(p),"int32"),Gf([]),256);u=nA(g,c)}const f=t?zi(p,u):es(p,u);return he(R(f,255),"int32")}function nA(n,e){let t=Dn([-1]),s=Dn([0]),r=Dn([0]),o,a,i,c,u,l;for(let d=0;d<n.size-1;d++){o=Qe(n,0,d+1),a=Qe(n,d+1),u=ke(ye(o),e),l=ke(ye(a),e);const h=ye(R(o,kc(0,o.size)));i=ke(h,ye(o));const p=Bl(a.shape,o.size),f=ee(kc(0,a.size),p),m=R(a,f);c=ke(ye(m),ye(a));const g=xe(i,c),b=xe(i,c),x=R(u,l);r=R(R(x,g),b);const y=es(r,s);s=Mn(y,r,s),t=Mn(y,Dn([d]),t)}return t}const sA=F({threshold_:tA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rA(n,e,t="nearest",s="constant",r=0,o){const a=S(n,"image","transform","float32"),i=S(e,"transforms","transform","float32");v(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),v(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),v(o==null||o.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${o}.`);const c={image:a,transforms:i},u={interpolation:t,fillMode:s,fillValue:r,outputShape:o};return D.runKernel(Dl,c,u)}const oA=F({transform_:rA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n,e,t){v(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),v(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);const s=S(n,"a","bandPart");v(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const r=s.shape,[o,a]=s.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=o),t<0&&(t=a);const i=M(kc(0,o,1,"int32"),[-1,1]),c=kc(0,a,1,"int32"),u=xe(i,c),l=pr(zi(u,Se(+e,"int32")),Uo(u,Se(-t,"int32"))),d=Ht([o,a],s.dtype);return M(Rr(_o(M(s,[-1,o,a])).map(h=>Mn(l,h,d))),r)}const iA=F({bandPart_:aA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(n){let e;if(Array.isArray(n)){e=!1,v(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const r=n[0].shape[0];for(let o=1;o<n.length;++o)v(n[o].shape[0]===r,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[o].shape[0]} vs. ${r})`)}else e=!0,n=Xn(n,n.shape[0],0).map(r=>Wl(r,[0]));v(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let r=0;r<n.length;++r)t.push(D.tidy(()=>{let o=s[r];if(r>0)for(let a=0;a<r;++a){const i=R(ye(R(t[a],o)),t[a]);o=xe(o,i)}return ke(o,sh(o,"euclidean"))}));return e?Rr(t,0):t}const lA=F({gramSchmidt_:cA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(n,e=!1){if(v(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return Qb(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((c,u)=>c*u),s=_o(M(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),r=[],o=[];s.forEach(c=>{const[u,l]=Qb(c,e);r.push(u),o.push(l)});const a=M(Rr(r,0),n.shape),i=M(Rr(o,0),n.shape);return[a,i]}}function Qb(n,e=!1){return D.tidy(()=>{v(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let r=tw(t),o=bo(n);const a=Bu([[1]],[1,1]);let i=bo(a);const c=t>=s?s:t;for(let u=0;u<c;++u){const l=o,d=i,h=r;[i,o,r]=D.tidy(()=>{const p=Qe(o,[u,u],[t-u,1]),f=sh(p),m=Qe(o,[u,u],[1,1]),g=Mn(es(m,0),Bu([[-1]]),Bu([[1]])),b=xe(m,R(g,f)),x=ke(p,b);x.shape[0]===1?i=bo(a):i=on([a,Qe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const y=vt(ke(Xe(g,b),f)),w=Qe(o,[u,0],[t-u,s]),I=R(y,i),k=We(i);if(u===0)o=xe(w,Xe(I,Xe(k,w)));else{const N=xe(w,Xe(I,Xe(k,w)));o=on([Qe(o,[0,0],[u,s]),N],0)}const $=We(I),C=Qe(r,[0,u],[t,r.shape[1]-u]);if(u===0)r=xe(C,Xe(Xe(C,i),$));else{const N=xe(C,Xe(Xe(C,i),$));r=on([Qe(r,[0,0],[t,u]),N],1)}return[i,o,r]}),Pe([l,d,h])}return!e&&t>s&&(r=Qe(r,[0,0],[t,s]),o=Qe(o,[0,0],[s,s])),[r,o]})}const dA=F({qr_:uA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var In;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(In||(In={}));function hA(n,e,t=In.SUM_BY_NONZERO_WEIGHTS){const s=S(n,"losses","computeWeightedLoss");let r=null;e!=null&&(r=S(e,"weights","computeWeightedLoss"));const o=r==null?s:R(s,r);if(t===In.NONE)return o;if(t===In.SUM)return ye(o);if(t===In.MEAN){if(r==null)return St(o);{const a=s.size/r.size,i=ke(ye(o),ye(r));return a>1?ke(i,Se(a)):i}}if(t===In.SUM_BY_NONZERO_WEIGHTS){if(r==null)return ke(ye(o),Se(s.size));{const a=R(r,Gr(s.shape)),i=he(ye(Ic(a,Se(0))),"float32");return ke(ye(o),i)}}throw Error(`Unknown reduction: ${t}`)}const Hr=F({computeWeightedLoss_:hA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pA(n,e,t,s=In.SUM_BY_NONZERO_WEIGHTS){const r=S(n,"labels","absoluteDifference"),o=S(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=S(t,"weights","absoluteDifference")),Qn(r.shape,o.shape,"Error in absoluteDifference: ");const i=Mt(xe(r,o));return Hr(i,a,s)}const ree=F({absoluteDifference_:pA});function fA(n,e,t,s,r=In.SUM_BY_NONZERO_WEIGHTS){const o=S(n,"labels","cosineDistance"),a=S(e,"predictions","cosineDistance");let i=null;s!=null&&(i=S(s,"weights","cosineDistance")),Qn(o.shape,a.shape,"Error in cosineDistance: ");const c=Se(1),u=xe(c,ye(R(o,a),t,!0));return Hr(u,i,r)}const oee=F({cosineDistance_:fA});function mA(n,e,t,s=In.SUM_BY_NONZERO_WEIGHTS){let r=S(n,"labels","hingeLoss");const o=S(e,"predictions","hingeLoss");let a=null;t!=null&&(a=S(t,"weights","hingeLoss")),Qn(r.shape,o.shape,"Error in hingeLoss: ");const i=Se(1);r=xe(R(Se(2),r),i);const c=xr(xe(i,R(r,o)));return Hr(c,a,s)}const aee=F({hingeLoss_:mA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gA(n,e,t,s=1,r=In.SUM_BY_NONZERO_WEIGHTS){const o=S(n,"labels","huberLoss"),a=S(e,"predictions","huberLoss");let i=null;t!=null&&(i=S(t,"weights","huberLoss")),Qn(o.shape,a.shape,"Error in huberLoss: ");const c=Se(s),u=Mt(xe(a,o)),l=Vl(u,c),d=xe(u,l),h=ee(R(Se(.5),nt(l)),R(c,d));return Hr(h,i,r)}const iee=F({huberLoss_:gA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bA(n,e,t,s=1e-7,r=In.SUM_BY_NONZERO_WEIGHTS){const o=S(n,"labels","logLoss"),a=S(e,"predictions","logLoss");let i=null;t!=null&&(i=S(t,"weights","logLoss")),Qn(o.shape,a.shape,"Error in logLoss: ");const c=Se(1),u=Se(s),l=vt(R(o,fs(ee(a,u)))),d=R(xe(c,o),fs(ee(xe(c,a),u))),h=xe(l,d);return Hr(h,i,r)}const cee=F({logLoss_:bA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n,e,t,s=In.SUM_BY_NONZERO_WEIGHTS){const r=S(n,"labels","meanSquaredError"),o=S(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=S(t,"weights","meanSquaredError")),Qn(r.shape,o.shape,"Error in meanSquaredError: ");const i=bm(r,o);return Hr(i,a,s)}const lee=F({meanSquaredError_:xA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(n,e){const t=S(n,"labels","sigmoidCrossEntropyWithLogits"),s=S(e,"logits","sigmoidCrossEntropyWithLogits");Qn(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=xr(s),o=R(s,t),a=am(ps(vt(Mt(s))));return ee(xe(r,o),a)}function wA(n,e,t,s=0,r=In.SUM_BY_NONZERO_WEIGHTS){let o=S(n,"multiClassLabels","sigmoidCrossEntropy");const a=S(e,"logits","sigmoidCrossEntropy");let i=null;if(t!=null&&(i=S(t,"weights","sigmoidCrossEntropy")),Qn(o.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Se(s),l=Se(1),d=Se(.5);o=ee(R(o,xe(l,u)),R(d,u))}const c=yA(o,a);return Hr(c,i,r)}const uee=F({sigmoidCrossEntropy_:wA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return To((r,o,a)=>{const c=rw(o,[t],!0),u=xe(he(o,"float32"),c);a([r,u]);const l=vt(R(u,r));return{value:ye(l,[t]),gradFunc:(p,f)=>{const[m,g]=f,b=et(p.shape,[t]);return[R(M(p,b),xe(he(m,"float32"),ps(g))),R(M(p,b),xe(ps(g),he(m,"float32")))]}}})(n,e)}function kA(n,e,t,s=0,r=In.SUM_BY_NONZERO_WEIGHTS){let o=S(n,"onehotLabels","softmaxCrossEntropy");const a=S(e,"logits","softmaxCrossEntropy");let i=null;if(t!=null&&(i=S(t,"weights","softmaxCrossEntropy")),Qn(o.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Se(s),l=Se(1),d=Se(o.shape[1]);o=ee(R(o,xe(l,u)),ke(u,d))}const c=IA(o,a);return Hr(c,i,r)}const dee=F({softmaxCrossEntropy_:kA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $A(n,e,t,s){const r=S(n,"indices","sparseFillEmptyRows","int32"),o=S(e,"values","sparseFillEmptyRows"),a=S(t,"denseShape","sparseFillEmptyRows","int32"),i=S(s,"defaultValue","sparseFillEmptyRows",o.dtype);if(r.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${r.shape}`);if(o.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${o.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const c={indices:r,values:o,denseShape:a,defaultValue:i},u=D.runKernel(Ld,c);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const hee=F({sparseFillEmptyRows_:$A});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n,e,t){const s=S(n,"inputIndices","sparseReshape","int32"),r=S(e,"inputShape","sparseReshape","int32"),o=S(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(r.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(o.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${o.shape}`);const a={inputIndices:s,inputShape:r,newShape:o},i=D.runKernel(_l,a);return{outputIndices:i[0],outputShape:i[1]}}const pee=F({sparseReshape_:vA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n,e,t){const s=S(n,"data","sparseSegmentMean"),r=S(e,"indices","sparseSegmentMean","int32"),o=S(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${o.shape}`);const a={data:s,indices:r,segmentIds:o};return D.runKernel(Pd,a)}const fee=F({sparseSegmentMean_:CA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(n,e,t){const s=S(n,"data","sparseSegmentSum"),r=S(e,"indices","sparseSegmentSum","int32"),o=S(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${r.shape}`);if(o.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${o.shape}`);const a={data:s,indices:r,segmentIds:o};return D.runKernel(Bd,a)}const mee=F({sparseSegmentSum_:SA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n,e,t,s,r,o,a,i){const c=S(n,"data","stringNGrams","string");if(c.dtype!=="string")throw new Error("Data must be of datatype string");if(c.shape.length!==1)throw new Error(`Data must be a vector, saw: ${c.shape}`);const u=S(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const l={separator:t,nGramWidths:s,leftPad:r,rightPad:o,padWidth:a,preserveShortSequences:i},d={data:c,dataSplits:u},h=D.runKernel(Vd,d,l);return{nGrams:h[0],nGramsSplits:h[1]}}const gee=F({stringNGrams_:NA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n,e,t=!0){const s=S(n,"input","stringSplit","string"),r=S(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(r.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const o={skipEmpty:t},a={input:s,delimiter:r},i=D.runKernel(Wd,a,o);return{indices:i[0],values:i[1],shape:i[2]}}const bee=F({stringSplit_:TA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EA(n,e){const t=S(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const r={input:t};return D.runKernel(Ud,r,s)}const xee=F({stringToHashBucketFast_:EA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fo={flipLeftRight:_R,grayscaleToRGB:AR,resizeNearestNeighbor:_w,resizeBilinear:Ew,rotateWithOffset:FR,cropAndResize:TR,nonMaxSuppression:MR,nonMaxSuppressionAsync:GR,nonMaxSuppressionWithScore:jR,nonMaxSuppressionWithScoreAsync:XR,nonMaxSuppressionPadded:YR,nonMaxSuppressionPaddedAsync:JR,threshold:sA,transform:oA},_A={bandPart:iA,gramSchmidt:lA,qr:dA};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jr extends Pi{minimize(e,t=!1,s){const{value:r,grads:o}=this.computeGradients(e,s);if(s!=null){const a=s.map(i=>({name:i.name,tensor:o[i.name]}));this.applyGradients(a)}else this.applyGradients(o);return Pe(o),t?r:(r.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return AE(e,t)}dispose(){this.iterations_!=null&&Pe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Se(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(jr,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Nm extends jr{constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=D.registeredVariables[s],a=!1;this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accum_grad`,variable:G(()=>Ge(o).variable(a))}),this.accumulatedUpdates[r]==null&&(this.accumulatedUpdates[r]={originalName:`${s}/accum_var`,variable:G(()=>Ge(o).variable(a))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const c=this.accumulatedGrads[r].variable,u=this.accumulatedUpdates[r].variable;G(()=>{const l=ee(R(c,this.rho),R(nt(i),1-this.rho)),d=R(ke(gn(ee(u,this.epsilon)),gn(ee(c,this.epsilon))),i),h=ee(R(u,this.rho),R(nt(d),1-this.rho));c.assign(l),u.assign(h);const p=ee(R(d,-this.learningRate),o);o.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Pe(this.accumulatedGrads.map(e=>e.variable)),Pe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Nm.className="Adadelta";Q(Nm);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Tm extends jr{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=D.registeredVariables[s];this.accumulatedGrads[r]==null&&(this.accumulatedGrads[r]={originalName:`${s}/accumulator`,variable:G(()=>Bl(o.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[r].tensor:e[s];if(a==null)return;const i=this.accumulatedGrads[r].variable;G(()=>{const c=ee(i,nt(a));i.assign(c);const u=ee(R(ke(a,gn(ee(c,D.backend.epsilon()))),-this.learningRate),o);o.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Pe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Tm.className="Adagrad";Q(Tm);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Em extends jr{constructor(e,t,s,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],G(()=>{this.accBeta1=Se(t).variable(),this.accBeta2=Se(s).variable()}),r==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);G(()=>{const s=xe(1,this.accBeta1),r=xe(1,this.accBeta2);t.forEach((o,a)=>{const i=D.registeredVariables[o],c=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:G(()=>Ge(i).variable(c))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${o}/v`,variable:G(()=>Ge(i).variable(c))});const u=Array.isArray(e)?e[a].tensor:e[o];if(u==null)return;const l=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,h=ee(R(l,this.beta1),R(u,1-this.beta1)),p=ee(R(d,this.beta2),R(nt(u),1-this.beta2)),f=ke(h,s),m=ke(p,r);l.assign(h),d.assign(p);const g=ee(R(ke(f,ee(gn(m),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(R(this.accBeta1,this.beta1)),this.accBeta2.assign(R(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Pe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Pe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),G(()=>{this.accBeta1.assign(No(this.beta1,this.iterations_+1)),this.accBeta2.assign(No(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Em.className="Adam";Q(Em);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _m extends jr{constructor(e,t,s,r=null,o=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=r,this.decay=o,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],G(()=>{this.iteration=Se(0).variable(),this.accBeta1=Se(t).variable()}),r==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);G(()=>{const s=xe(1,this.accBeta1),r=ke(-this.learningRate,ee(R(this.iteration,this.decay),1));t.forEach((o,a)=>{const i=D.registeredVariables[o],c=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${o}/m`,variable:Ge(i).variable(c)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${o}/v`,variable:Ge(i).variable(c)});const u=Array.isArray(e)?e[a].tensor:e[o];if(u==null)return;const l=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,h=ee(R(l,this.beta1),R(u,1-this.beta1)),p=R(d,this.beta2),f=Mt(u),m=br(p,f);l.assign(h),d.assign(m);const g=ee(R(ke(r,s),ke(h,ee(m,this.epsilon))),i);i.assign(g)}),this.iteration.assign(ee(this.iteration,1)),this.accBeta1.assign(R(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Pe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Pe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}_m.className="Adamax";Q(_m);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ah extends jr{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=Array.isArray(e)?e[r].tensor:e[s];if(o==null)return;const a=D.registeredVariables[s];G(()=>{const i=ee(R(this.c,o),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Us(Se(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}ah.className="SGD";Q(ah);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rm extends ah{constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Se(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=D.registeredVariables[s];this.accumulations[r]==null&&(this.accumulations[r]={originalName:`${s}/momentum`,variable:G(()=>Ge(o).variable(!1))});const a=this.accumulations[r].variable,i=Array.isArray(e)?e[r].tensor:e[s];i!=null&&G(()=>{let c;const u=ee(R(this.m,a),i);this.useNesterov?c=ee(R(this.c,ee(i,R(u,this.m))),o):c=ee(R(this.c,u),o),a.assign(u),o.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Pe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Rm.className="Momentum";Q(Rm);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Am extends jr{constructor(e,t=.9,s=0,r=null,o=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=o,r==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,r)=>{const o=D.registeredVariables[s],a=!1;this.accumulatedMeanSquares[r]==null&&(this.accumulatedMeanSquares[r]={originalName:`${s}/rms`,variable:G(()=>Ge(o).variable(a))}),this.accumulatedMoments[r]==null&&(this.accumulatedMoments[r]={originalName:`${s}/momentum`,variable:G(()=>Ge(o).variable(a))}),this.accumulatedMeanGrads[r]==null&&this.centered&&(this.accumulatedMeanGrads[r]={originalName:`${s}/mg`,variable:G(()=>Ge(o).variable(a))});const i=Array.isArray(e)?e[r].tensor:e[s];if(i==null)return;const c=this.accumulatedMeanSquares[r].variable,u=this.accumulatedMoments[r].variable;G(()=>{const l=ee(R(c,this.decay),R(nt(i),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[r].variable,h=ee(R(d,this.decay),R(i,1-this.decay)),p=ke(R(i,this.learningRate),gn(xe(l,ee(nt(h),this.epsilon)))),f=ee(R(u,this.momentum),p);c.assign(l),d.assign(h),u.assign(f);const m=xe(o,f);o.assign(m)}else{const d=ee(R(c,this.decay),R(nt(i),1-this.decay)),h=ee(R(u,this.momentum),ke(R(i,this.learningRate),gn(ee(d,this.epsilon))));c.assign(d),u.assign(h);const p=xe(o,h);o.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Pe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Pe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Pe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(r=>({originalName:r.name,variable:r.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Am.className="RMSProp";Q(Am);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class no{static sgd(e){return new ah(e)}static momentum(e,t,s=!1){return new Rm(e,t,s)}static rmsprop(e,t=.9,s=0,r=null,o=!1){return new Am(e,t,s,r,o)}static adam(e=.001,t=.9,s=.999,r=null){return new Em(e,t,s,r)}static adadelta(e=.001,t=.95,s=null){return new Nm(e,t,s)}static adamax(e=.002,t=.9,s=.999,r=null,o=0){return new _m(e,t,s,r,o)}static adagrad(e,t=.1){return new Tm(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ra={sgd:no.sgd,momentum:no.momentum,adadelta:no.adadelta,adagrad:no.adagrad,rmsprop:no.rmsprop,adamax:no.adamax,adam:no.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RA=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function Rw(){return new Promise(n=>RA(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ih(n,e){const t=n[0].length;n.forEach((r,o)=>{v(r.length===t,()=>`Error in concat${t}D: rank of tensors[${o}] must be the same as the rank of the rest (${t})`)}),v(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((r,o)=>{for(let a=0;a<t;a++)v(a===e||r[a]===s[a],()=>`Error in concat${t}D: Shape of tensors[${o}] (${r}) does not match the shape of the rest (${s}) along the non-concatenated axis ${o}.`)})}function Kn(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vs;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(vs||(vs={}));function Aw(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let r=1;r<t.length;++r){const o=t[r],a=s[s.length-t.length+r],i=s[a];if(o>=0)if(i>=0){if(i!==o)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${r+n}] = ${o} but shape[${r+n}] = ${i}`)}else s[a]=o}return s}function Dw(n){const e={FIRST_DIM_SIZE:vs.FIRST_DIM_SIZE,VALUE_ROWIDS:vs.VALUE_ROWIDS,ROW_LENGTHS:vs.ROW_LENGTHS,ROW_SPLITS:vs.ROW_SPLITS,ROW_LIMITS:vs.ROW_LIMITS,ROW_STARTS:vs.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function Fw(n){return n.length===0?0:n[0]===vs.FIRST_DIM_SIZE?n.length-1:n.length}function Ow(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let r=0;r<Math.min(t,s-1);++r){const o=n[r],a=e[r+1];if(o>=0&&a>=0&&o!==1&&o!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${r-n.length}] = ${o} but ragged tensor input.flatValues.shape[${r-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dm=30;function ch(n){return n<=Dm?n:mp(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lh(n,e,t){const s=t*(typeof n=="number"?n:n[0]),r=e*(typeof n=="number"?n:n[1]);return[s,r]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(n,e,t,s=!0){let r=[];if(s)r=r.concat(e.slice(0)),r.push(n[0]/t),r=r.concat(n.slice(1));else{r=r.concat(n[0]);const o=e.length;for(let a=0;a<o;++a)r=r.concat([n[a+1]/e[a],e[a]]);r=r.concat(n.slice(o+1))}return r}function jo(n,e,t=!0){const s=[];if(t){s.push(e);for(let r=e+1;r<n;++r)r<=2*e?(s.push(r),s.push(r-(e+1))):s.push(r)}else{const r=[],o=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?o.push(a):r.push(a);s.push(...r),s.push(0),s.push(...o)}return s}function qo(n,e,t,s=!0){const r=[];s?r.push(n[0]/t):r.push(n[0]*t);for(let o=1;o<n.length;++o)o<=e.length?s?r.push(e[o-1]*n[o]):r.push(n[o]/e[o-1]):r.push(n[o]);return r}function uh(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function dh(n,e,t){const s=n.slice(0,1);for(let r=0;r<t;++r)s.push(n[r+1]-e[r][0]-e[r][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hh=1.7580993408473768,ph=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fm=.3275911,Om=.254829592,Mm=-.284496736,Lm=1.421413741,Pm=-1.453152027,Bm=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fr(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function Mw(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function Lw(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=0;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function Pw(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let r=2;r<n.length;r+=4)t[Math.floor(r/4)]=n[r],s[Math.floor(r/4)]=n[r+1];return{real:t,imag:s}}function zm(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function Bw(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function zw(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let r=0;r<Math.ceil(n/2);r++){const o=(e?2:-2)*Math.PI*(r/n);t[r]=Math.cos(o),s[r]=Math.sin(o)}return{real:t,imag:s}}function Vw(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),r=Math.cos(s),o=Math.sin(s);return{real:r,imag:o}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hh="->",AA=/->/g,ex=",",tx="...";function Vm(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(AA,"").length)/Hh.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${Hh}").`);const[s,r]=n.split(Hh);v(s.indexOf(tx)===-1,()=>`The ellipsis notation ("${tx}") is not supported yet.`);const o=s.split(ex),a=o.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<r.length;++h){const p=r[h];if(!o.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let h=0;h<s.length;++h){const p=s[h];i.indexOf(p)===-1&&p!==ex&&i.push(p)}const c=new Array(o.length);for(let h=0;h<a;++h){if(new Set(o[h].split("")).size!==o[h].length)throw new Error(`Found duplicate axes in input component ${o[h]}. Support for duplicate axes in input is not implemented yet.`);c[h]=[];for(let p=0;p<o[h].length;++p)c[h].push(i.indexOf(o[h][p]))}const u=i.length,l=r.length,d=[];for(let h=l;h<u;++h)d.push(h);return{allDims:i,summedDims:d,idDims:c}}function Wm(n,e){let t=new Array(n);t.fill(-1);for(let r=0;r<e.length;++r)t[e[r]]=r;const s=[];for(let r=0;r<n;++r)t[r]===-1&&s.push(r);return t=t.filter(r=>r!==-1),{permutationIndices:t,expandDims:s}}function Um(n,e,t){const s=new Array(n);for(let r=0;r<t.length;++r){const o=t[r].shape;for(let a=0;a<e[r].length;++a)s[e[r][a]]===void 0?s[e[r][a]]=o[a]:v(s[e[r][a]]===o[a],()=>`Expected dimension ${s[e[r][a]]} at axis ${a} of input shaped ${JSON.stringify(o)}, but got dimension ${o[a]}`)}}function Gm(n,e){const t=n,s=[];let r=0;n.length===0&&t.push(-1),r=n.length+1;for(let a=0;a<r;++a)s.push([]);const o=[];for(let a=0;a<t.length;++a){const i=t[a],c=DA(e,i);for(const u of c)o.indexOf(u)===-1&&(s[a].push(u),o.push(u))}return{path:t,steps:s}}function Hm(n){return n.every((e,t)=>e===t)}function DA(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function fh(n,e,t=0){let s=[];if(typeof e=="number")v(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const r=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);v(r<=1,()=>"There should be only one negative value in split array.");const o=e.indexOf(-1);if(o!==-1){const a=e.reduce((i,c)=>c>0?i+c:i);e[o]=n.shape[t]-a}v(n.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jm(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function qm(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function Xm(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Km(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function Ym(n,e){return`size ${n} must be non-negative, not ${e}`}function Zm(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function Jm(n,e){const t=L(n),s=L(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function Qm(n,e){const t=L(n),s=L(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $c(){return"segment ids must be >= 0"}function eg(){return"segment ids are not increasing"}function tg(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function ng(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ww(n,e){let t=!1,s;for(n<=Dm?(s=n,t=!0):s=mp(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=mp(n,s+1);return s}function Uw(n,e,t){const s=[],r=n.length;for(let o=0;o<r;o++)o!==e?s.push(n[o]):s.push(t);return s}function mh(n,e,t,s){const r=e.shape.length,o=n.shape.length;if(s!==0&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>o)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${o}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let d=0;d<s;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const a=n.shape[t],i=[];let c=1,u=1,l=1;for(let d=0;d<s;++d)i.push(n.shape[d]),c*=n.shape[d];for(let d=s;d<t;d++)i.push(n.shape[d]),u*=n.shape[d];for(let d=s;d<r;d++)i.push(e.shape[d]);for(let d=t+1;d<o;d++)i.push(n.shape[d]),l*=n.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:a,outputShape:i}}const FA=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:Ww,computeOutShape:Uw,collectGatherOpShapeInfo:mh},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ro(n){try{return n.map(e=>_r(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function sg(n){return n.map(e=>Sr(e))}const OA=Object.freeze(Object.defineProperty({__proto__:null,slice_util:xN,segment_util:FA,fromUint8ToStringArray:Ro,fromStringArrayToUint8:sg,upcastType:On,axesAreInnerMostDims:sm,combineLocations:Q0,computeOutAndReduceShapes:bt,expandShapeToKeepDim:et,assertAxesAreInnerMostDims:ht,getAxesPermutation:pt,getUndoAxesPermutation:er,getInnerMostAxes:ot,getBroadcastDims:Na,getReductionAxes:Wt,assertAndGetBroadcastShape:Ee,assertParamsConsistent:ih,computeOutShape:Kn,computeDilation2DInfo:Pl,computePool2DInfo:zn,computePool3DInfo:gr,computeConv2DInfo:Nt,computeConv3DInfo:Ur,computeDefaultPad:Yf,tupleValuesAreOne:Co,eitherStridesOrDilationsAreOne:cn,convertConv2DDataFormat:Ds,checkPadOnDimRoundingMode:vn,getFusedDyActivation:ym,getFusedBiasGradient:wm,applyActivation:Im,shouldFuse:km,get RowPartitionType(){return vs},combineRaggedTensorToTensorShapes:Aw,getRowPartitionTypesHelper:Dw,getRaggedRank:Fw,validateDefaultValueShape:Ow,PARALLELIZE_THRESHOLD:Dm,computeOptimalWindowSize:ch,getImageCenter:lh,getReshaped:Ho,getPermuted:jo,getReshapedPermuted:qo,getSliceBeginCoords:uh,getSliceSize:dh,prepareAndValidate:Yd,validateUpdateShape:L0,validateInput:pN,calculateShapes:Li,SELU_SCALEALPHA:hh,SELU_SCALE:ph,ERF_P:Fm,ERF_A1:Om,ERF_A2:Mm,ERF_A3:Lm,ERF_A4:Pm,ERF_A5:Bm,warn:jn,log:ZS,mergeRealAndImagArrays:fr,splitRealAndImagArrays:Mw,complexWithEvenIndex:Lw,complexWithOddIndex:Pw,getComplexWithIndex:zm,assignToTypedArray:Bw,exponents:zw,exponent:Vw,decodeEinsumEquation:Vm,getEinsumPermutation:Wm,checkEinsumDimSizes:Um,getEinsumComputePath:Gm,isIdentityPermutation:Hm,prepareSplitSize:fh,getSparseFillEmptyRowsIndicesDenseShapeMismatch:jm,getSparseFillEmptyRowsNegativeIndexErrorMessage:qm,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Xm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Km,getSparseReshapeNegativeOutputDimErrorMessage:Ym,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:Zm,getSparseReshapeInputOutputMultipleErrorMessage:Jm,getSparseReshapeInputOutputMismatchErrorMessage:Qm,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:$c,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:eg,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:tg,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:ng},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gw={kernelName:Mc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,Ul(he(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MA={kernelName:Lc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=nt(he(t,"float32")),r=gn(xe(Se(1),s));return vt(ke(n,r))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LA={kernelName:Pc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=gn(xe(nt(he(t,"float32")),1));return ke(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PA={kernelName:Lo,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ee(t.shape,s.shape);return{a:()=>{let i=n;const c=Wt(t.shape,r);return c.length>0&&(i=ye(i,c)),M(i,t.shape)},b:()=>{let i=n;const c=Wt(s.shape,r);return c.length>0&&(i=ye(i,c)),M(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BA={kernelName:Bc,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,r)=>{t[r]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zA={kernelName:Ba,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ge(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VA={kernelName:Sd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ge(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WA={kernelName:Wc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,gn(xe(Se(1),nt(he(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UA={kernelName:Uc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=gn(ee(Se(1),nt(he(t,"float32"))));return ke(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA={kernelName:jc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ee(t.shape,s.shape);return{a:()=>{const i=ee(nt(t),nt(s));let c=R(n,ke(s,i));const u=Wt(t.shape,r);return u.length>0&&(c=ye(c,u)),M(c,t.shape)},b:()=>{const i=ee(nt(t),nt(s));let c=vt(R(n,ke(t,i)));const u=Wt(s.shape,r);return u.length>0&&(c=ye(c,u)),M(c,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HA={kernelName:Gc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,ee(nt(he(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA={kernelName:Hc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,xe(Se(1),nt(he(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qA(n,e,t,s,r,o){const a=S(n,"dy","avgPool3dGrad"),i=S(e,"input","avgPool3dGrad");let c=a,u=i,l=!1;i.rank===4&&(l=!0,c=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),v(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),v(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),vn("avgPool3dGrad",r,o);const d={dy:c,input:u},h={filterSize:t,strides:s,pad:r,dimRoundingMode:o},p=D.runKernel(wf,d,h);return l?M(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const XA=F({avgPool3dGrad_:qA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KA={kernelName:Nd,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:a,dimRoundingMode:i}=t;return{x:()=>XA(n,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YA(n,e,t,s,r){const o=S(n,"dy","avgPoolGrad"),a=S(e,"input","avgPoolGrad");v(a.rank===o.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${o.rank})`);let i=a,c=o,u=!1;a.rank===3&&(u=!0,i=M(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=M(o,[1,o.shape[0],o.shape[1],o.shape[2]])),v(c.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),v(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const l={dy:c,input:i},d={filterSize:t,strides:s,pad:r},h=D.runKernel(yf,l,d);return u?M(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const ZA=F({avgPoolGrad_:YA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JA={kernelName:za,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:r,strides:o,pad:a}=t;return{x:()=>ZA(n,s,r,o,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QA={kernelName:Va,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,r]=e,{transposeA:o,transposeB:a}=t;return!o&&!a?{a:()=>Xe(n,r,!1,!0),b:()=>Xe(s,n,!0,!1)}:!o&&a?{a:()=>Xe(n,r,!1,!1),b:()=>Xe(n,s,!0,!1)}:o&&!a?{a:()=>Xe(r,n,!1,!0),b:()=>Xe(s,n,!1,!1)}:{a:()=>Xe(r,n,!0,!0),b:()=>Xe(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eD={kernelName:qc,gradFunc:(n,e,t)=>{const{blockShape:s,crops:r}=t;return{x:()=>dm(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tD={kernelName:qS,gradFunc:(n,e,t)=>{const s=t,r=s.inputShape,o=s.shape,a=Array.from(o);for(let c=r.length-1;c>=0;c--)if(r[c]===o[c])a[c]=1;else if(r[c]!==1)throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${o}].`);const i=[];for(let c=0;c<a.length;c++)a[c]>1&&i.push(c);return{x:()=>ye(n,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nD={kernelName:Wa,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sD={kernelName:Ua,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rD={kernelName:Po,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:r,clipValueMax:o}=t;return{x:()=>Mn(pr(Uo(s,r),zi(s,o)),n,Ge(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oD={kernelName:Td,inputsToSave:["x"],gradFunc:Gw.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aD={kernelName:Xc,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(c=>c.shape),{axis:r}=t,o=Re(r,e[0].shape)[0],a=s.map(c=>c[o]);return Xn(n,a,o).map(c=>()=>c)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iD={kernelName:Ga,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{dilations:o,strides:a,pad:i,dataFormat:c}=t;return v(Co(o),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`),{x:()=>em(s.shape,n,r,a,i,c),filter:()=>xm(s,n,r.shape,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cD={kernelName:Ha,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,{strides:o,pad:a,dataFormat:i,dimRoundingMode:c}=t;return{dy:()=>So(n,r,o,a,i,1,c),filter:()=>xm(n,s,r.shape,o,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lD(n,e,t,s,r){let o=n;n.rank===4&&(o=M(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),v(o.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`),v(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),v(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),v(o.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${t[3]}.`),v(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const i={x:o,dy:a},c={strides:s,pad:r,filterShape:t};return D.runKernel(vf,i,c)}const uD=F({conv3DBackpropFilter_:lD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dD={kernelName:Ed,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o}=t;v(Co(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,i]=e;return{x:()=>Y0(a.shape,n,i,r,o),filter:()=>uD(a,n,i.shape,r,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hD={kernelName:ja,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(vt(ww(he(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pD={kernelName:qa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(Iw(he(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fD={kernelName:Xa,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r,exclusive:o,reverse:a}=t;return{x:()=>{const i=pt([r],s.rank);let c=J0(n,r,o,!a);return i!=null&&(c=We(c,i)),c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mD={kernelName:Ka,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:r,pad:o,dimRoundingMode:a}=t,i=s??[1,1];v(Co(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[c,u]=e;return v(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${c.rank}.`),v(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),v(c.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),v(cn(r,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${i}'.`),vn("depthwiseConv2d",o,a),{x:()=>yR(c.shape,n,u,r,o,i,a),filter:()=>bR(c,n,u.shape,r,o,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gD={kernelName:_d,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,r]=e,o={x:s,filter:r,dy:n},a={x:s,filter:r,dy:n};return{x:()=>D.runKernel(gp,o,t),filter:()=>D.runKernel(bp,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bD={kernelName:Za,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>D.runKernel(Ef,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xD={kernelName:Jc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=R(ps(vt(nt(t))),2/Math.sqrt(Math.PI));return{x:()=>R(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yD={kernelName:Ja,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wD={kernelName:el,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>M(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ID={kernelName:tl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,ps(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kD={kernelName:Qa,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $D={kernelName:ei,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ee(t.shape,s.shape);return{a:()=>{const i=ke(n,he(s,"float32")),c=Wt(t.shape,r);return c.length>0?M(ye(i,c),t.shape):i},b:()=>{let i=R(n,he(t,"float32"));const c=Wt(s.shape,r);c.length>0&&(i=M(ye(i,c),s.shape));const u=nt(s);return vt(ke(i,he(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vD={kernelName:ti,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[r,o,a,i]=e,c=i??Se(1),u=Wt(o.shape,r.shape),l=[];if(o.rank===1){for(let w=0;w<r.shape.length-1;++w)l.push(r.shape[w]);l.push(1)}const d=xe(r,o),h=R(n,c),p=bw(ee(a,Se(s))),f=R(R(R(p,p),p),Se(-.5));return{x:()=>o.rank===1?M(R(R(n,Cs(M(p,[1,1,1,o.shape[0]]),l)),c),r.shape):M(R(R(n,p),c),r.shape),mean:()=>{let w=R(R(p,Se(-1)),h);return o.rank===1&&(w=ye(w,u)),M(w,o.shape)},variance:()=>{let w=R(R(f,d),h);return o.rank===1&&(w=ye(w,u)),M(w,o.shape)},scale:()=>{const w=R(d,p);let I=R(n,w);return o.rank===1&&(I=ye(I,u)),M(I,o.shape)},offset:()=>{let w=n;return o.rank===1&&(w=ye(w,u)),M(w,o.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CD={kernelName:sl,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,r]=e,{axis:o}=t,a=Re(o,s.shape)[0];return{x:()=>{const c=s.shape,u=r.size,l=c.slice(0,a),d=l.length,h=c.slice(o,c.length).slice(1),p=h.length,f=nx(0,d),m=nx(d+1,d+1+p),g=sx([l,[u],h]),b=M(n,g),x=M(r,[u]),y=sx([[d],f,m]),w=We(b,y);let I=Sw(w,x,s.shape[a]);const k=er(y);return I=We(I,k),I},indices:()=>r}}};function nx(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function sx(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SD={kernelName:ni,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Ge(t),b:()=>Ge(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ND={kernelName:si,gradFunc:n=>({x:()=>he(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TD={kernelName:ol,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ED={kernelName:al,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _D={kernelName:ri,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RD={kernelName:oi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:r}=t,o=es(s,0);return{x:()=>Mn(o,n,R(n,r))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AD={kernelName:ll,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,ee(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DD={kernelName:ai,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,he(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FD={kernelName:KS,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;return{logits:()=>{const a=ps(s);return xe(n,R(ye(n,r,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OD(n,e,t,s=5,r=1,o=1,a=.5){const i={x:n,y:e,dy:t},c={depthRadius:s,bias:r,alpha:o,beta:a};return D.runKernel(Ff,i,c)}const MD=F({localResponseNormalizationBackprop_:OD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LD={kernelName:Dd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{depthRadius:o,bias:a,alpha:i,beta:c}=t;return{x:()=>MD(s,r,n,o,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hw(n,e,t,s){return e.rank<t.rank&&(e=M(e,et(e.shape,s))),n.rank<t.rank&&(n=M(n,et(n.shape,s))),{x:()=>R(n,he(Ks(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rx={kernelName:ii,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:r}=s,o=e[0],a=e[1],i=Re(r,o.shape),c=Hw(n,a,o,i);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PD={kernelName:ci,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>R(n,he(Uo(t,s),"float32")),b:()=>R(n,he(nw(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BD(n,e,t,s,r,o,a){const i=S(n,"dy","maxPool3dGrad"),c=S(e,"input","maxPool3dGrad"),u=S(t,"output","maxPool3dGrad");let l=i,d=c,h=u,p=!1;c.rank===4&&(p=!0,l=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=M(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=M(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),v(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),v(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),v(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),vn("maxPool3dGrad",o,a);const f={dy:l,input:d,output:h},m={filterSize:s,strides:r,pad:o,dimRoundingMode:a},g=D.runKernel(Mf,f,m);return p?M(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const zD=F({maxPool3dGrad_:BD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VD={kernelName:Fd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=t;return{x:()=>zD(n,s,r,o,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WD(n,e,t,s,r,o,a){const i=S(n,"dy","maxPoolGrad"),c=S(e,"input","maxPoolGrad"),u=S(t,"output","maxPoolGrad");v(c.rank===i.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${i.rank})`),v(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),v(c.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`),vn("maxPoolGrad",o,a);const l={dy:i,input:c,output:u},d={filterSize:s,strides:r,pad:o,dimRoundingMode:a};return D.runKernel(Of,l,d)}const UD=F({maxPoolGrad_:WD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GD={kernelName:li,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,r]=e,{filterSize:o,strides:a,pad:i}=t;return{x:()=>UD(n,s,r,o,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HD={kernelName:ui,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t,o=Re(r,s.shape),i=bt(s.shape,o)[1],c=L(i);return{x:()=>{const l=s.shape.slice();o.forEach(p=>{l[p]=1});const d=M(n,l);return ke(R(d,Gr(s.shape,"float32")),c)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jD={kernelName:di,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:r}=s,[o,a]=e,i=Re(r,o.shape),c=Hw(n,a,o,i);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qD={kernelName:hi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>R(n,he(zi(t,s),"float32")),b:()=>R(n,he(es(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XD={kernelName:pi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(a=>a[0]);return{x:()=>Qe(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KD={kernelName:pl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ee(t.shape,s.shape);return{a:()=>{const i=Wt(t.shape,r);return i.length>0?M(ye(n,i),t.shape):n},b:()=>{const i=R(n,vt(rh(ke(t,s)))),c=Wt(s.shape,r);return c.length>0?M(ye(i,c),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YD={kernelName:fi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ee(t.shape,s.shape);return{a:()=>{const i=R(n,he(s,"float32")),c=Wt(t.shape,r);return c.length>0?M(ye(i,c),t.shape):i},b:()=>{const i=R(n,he(t,"float32")),c=Wt(s.shape,r);return c.length>0?M(ye(i,c),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZD={kernelName:fl,gradFunc:n=>({x:()=>vt(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JD={kernelName:mi,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>Ht(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QD={kernelName:yl,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eF={kernelName:wl,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return _o(n,s).map(o=>()=>o)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ox={kernelName:gi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:r}=t,o=r.map(a=>a[0]);return{x:()=>Qe(n,o,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tF={kernelName:bi,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,r]=e,o=t,a=s,i=Ee(o.shape,a.shape);return{a:()=>{const l=he(a,"float32");let d=R(n,R(l,No(o,xe(l,Se(1)))));const h=Wt(o.shape,i);return h.length>0&&(d=ye(d,h)),M(d,o.shape)},b:()=>{const l=es(o,0),d=Mn(l,fs(o),Ge(o));let h=R(n,R(r,d));const p=Wt(a.shape,i);return p.length>0&&(h=ye(h,p)),M(h,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nF={kernelName:xi,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,r=es(t,0);return{x:()=>Mn(r,n,R(n,s)),alpha:()=>{let o=Mn(r,Ge(n),R(n,t));const a=Wt(s.shape,n.shape);return a.length>0&&(o=ye(o,a)),M(o,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sF(n,e,t){const s=n.shape.slice();s[t]=1;const r=M(e,s),o=Dp(n,t,!0,!1),a=Dp(n,t,!0,!0),i=R(o,a);return R(r,i)}function rF(n,e,t){const s=n.shape.length,r=s-t.length,o=pt(t,s);let a=n;o!=null&&(a=We(n,o));const i=a.shape.slice(),u=i.splice(s-t.length,t.length).reduce((h,p)=>h*p,1);i.push(u);const l=a.reshape(i);let d=sF(l,e,r);if(d=d.reshape(a.shape),o!=null){const h=er(o);d=We(d,h)}return d}const oF={kernelName:yi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:r}=t;let o=[];return r==null?o=s.shape.map((a,i)=>i):typeof r=="number"?o=[r]:o=r,{x:()=>rF(s,n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aF={kernelName:Ya,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ee(t.shape,s.shape);return{a:()=>{const i=ke(n,he(s,"float32")),c=Wt(t.shape,r);return c.length>0?M(ye(i,c),t.shape):i},b:()=>{let i=R(n,he(t,"float32"));const c=Wt(s.shape,r);c.length>0&&(i=M(ye(i,c),s.shape));const u=nt(s);return vt(ke(i,he(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iF={kernelName:wi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,vt(nt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cF={kernelName:vi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=R(zi(t,6),Ul(t));return{x:()=>R(n,he(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lF={kernelName:Ii,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,he(Ul(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uF={kernelName:Il,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>M(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dF={kernelName:$i,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>D.runKernel(Bf,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hF={kernelName:ki,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,r={dy:n,images:s};return{images:()=>D.runKernel(Pf,r,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pF={kernelName:Ci,gradFunc:(n,e,t)=>{const{dims:s}=t,r=Re(s,n.shape);return{x:()=>Eo(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fF={kernelName:Si,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mF={kernelName:Ni,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>vt(ke(n,R(No(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gF={kernelName:kl,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>he(Ge(t),"float32"),t:()=>R(n,he(t,n.dtype)),e:()=>R(n,he(im(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bF={kernelName:$l,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=es(t,Se(0)),r=Se(hh),o=Se(ph),a=R(n,o),i=R(R(n,r),ps(he(t,"float32")));return Mn(s,a,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xF={kernelName:Ei,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,R(t,xe(Se(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yF={kernelName:Sl,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wF={kernelName:Ti,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(tm(he(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IF={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(Z0(he(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kF={kernelName:vl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:r,size:o}=t,a=s.shape,[i,c]=Ll(s,r,o),u=[];for(let l=0;l<n.rank;l++)u.push([i[l],a[l]-i[l]-c[l]]);return{x:()=>um(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F={kernelName:Ai,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:r}=t,o=!0,a=R(n,s);return{logits:()=>xe(a,R(ye(a,[r],o),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vF={kernelName:Nl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,Bi(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ax={kernelName:Tl,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:r}=t;return{x:()=>Qf(n,s,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ix={kernelName:El,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>on(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CF={kernelName:_i,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,R(gn(he(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SF={kernelName:zd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,R(he(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NF={kernelName:Di,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Se(2);return{a:()=>R(n,R(r,xe(t,s))),b:()=>R(n,R(r,xe(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TF={kernelName:zo,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EF={kernelName:Fi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,r=Ee(t.shape,s.shape);return{a:()=>{let i=n;const c=Wt(t.shape,r);return c.length>0&&(i=ye(i,c)),M(i,t.shape)},b:()=>{let i=n;const c=Wt(s.shape,r);return c.length>0&&(i=ye(i,c)),M(vt(i),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _F={kernelName:Ri,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,r=s.shape.slice(),{axis:o}=t;Re(o,s.shape).forEach(u=>{r[u]=1});const i=M(n,r),c=R(i,Gr(s.shape,"float32"));return{x:()=>c}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF={kernelName:Oi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,nt(tm(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AF={kernelName:Mi,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(xe(Se(1),nt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF={kernelName:Bo,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:r}=t;return{x:()=>{let a=Ge(s);if(s.rank===1)for(let i=0;i<r[0];++i)a=ee(a,Qe(n,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<r[0];++i)for(let c=0;c<r[1];++c)a=ee(a,Qe(n,[i*s.shape[0],c*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<r[0];++i)for(let c=0;c<r[1];++c)for(let u=0;u<r[2];++u)a=ee(a,Qe(n,[i*s.shape[0],c*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<r[0];++i)for(let c=0;c<r[1];++c)for(let u=0;u<r[2];++u)for(let l=0;l<r[3];++l)a=ee(a,Qe(n,[i*s.shape[0],c*s.shape[1],u*s.shape[2],l*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FF={kernelName:vr,gradFunc:(n,e,t)=>{const s=t,{perm:r}=s,o=er(r);return{x:()=>We(n,o)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OF={kernelName:Fl,gradFunc:(n,e,t)=>{const s=t,{axis:r}=s;return{value:()=>Rr(n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MF={kernelName:Gd,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>LF(n,t)}}};function LF(n,e){const t=br(e,Ge(e)),s=rm(n,t);let r=Uo(e,Se(0,"int32"));const o=s.rank-r.rank;for(let i=0;i<o;++i)r=_n(r,i+1);r=pr(r,Gr(s.shape,"bool"));const a=Ge(s);return Mn(r,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PF={kernelName:Ol,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BF=[Gw,MA,LA,PA,BA,zA,VA,WA,UA,GA,HA,jA,KA,JA,QA,eD,tD,nD,sD,rD,oD,aD,cD,iD,dD,hD,pD,fD,mD,gD,aF,bD,xD,yD,wD,ID,$D,kD,vD,CD,SD,ND,TD,ED,_D,RD,AD,DD,FD,LD,rx,rx,PD,VD,GD,HD,jD,qD,XD,KD,YD,ZD,JD,QD,eF,ox,ox,tF,nF,oF,iF,cF,lF,uF,dF,hF,pF,fF,mF,gF,bF,xF,yF,wF,IF,kF,$F,vF,ax,ax,ix,ix,CF,NF,SF,TF,EF,_F,RF,AF,DF,FF,OF,MF,PF];for(const n of BF)JS(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.abs=function(){return this.throwIfDisposed(),Mt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.acos=function(){return this.throwIfDisposed(),CN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.acosh=function(){return this.throwIfDisposed(),NN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.add=function(n){return this.throwIfDisposed(),ee(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.all=function(n,e){return this.throwIfDisposed(),q0(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.any=function(n,e){return this.throwIfDisposed(),Rp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.argMax=function(n){return this.throwIfDisposed(),yc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.argMin=function(n){return this.throwIfDisposed(),AN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.asScalar=function(){return this.throwIfDisposed(),v(this.size===1,()=>"The array must have only 1 element."),M(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.asType=function(n){return this.throwIfDisposed(),he(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.as1D=function(){return this.throwIfDisposed(),M(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.as2D=function(n,e){return this.throwIfDisposed(),M(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),M(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),M(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.as5D=function(n,e,t,s,r){return this.throwIfDisposed(),M(this,[n,e,t,s,r])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.asin=function(){return this.throwIfDisposed(),FN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.asinh=function(){return this.throwIfDisposed(),MN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.atan=function(){return this.throwIfDisposed(),PN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.atan2=function(n){return this.throwIfDisposed(),zN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.atanh=function(){return this.throwIfDisposed(),WN(this)};j().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),Zf(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),Qf(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.batchNorm=function(n,e,t,s,r){return this.throwIfDisposed(),th(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.broadcastTo=function(n){return this.throwIfDisposed(),mc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.cast=function(n){return this.throwIfDisposed(),he(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.ceil=function(){return this.throwIfDisposed(),fT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),Zn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Rt&&(n=[n]),on([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.conv1d=function(n,e,t,s,r,o){return this.throwIfDisposed(),X0(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.conv2dTranspose=function(n,e,t,s,r){return this.throwIfDisposed(),K0(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.conv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),So(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.cos=function(){return this.throwIfDisposed(),tm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.cosh=function(){return this.throwIfDisposed(),Z0(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),Dp(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),J0(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),BT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.depthwiseConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),nm(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.dilation2d=function(n,e,t,s,r){return this.throwIfDisposed(),WT(this,n,e,t,s,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.divNoNan=function(n){return this.throwIfDisposed(),qT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.div=function(n){return this.throwIfDisposed(),ke(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.dot=function(n){return this.throwIfDisposed(),KT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.elu=function(){return this.throwIfDisposed(),nh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.equal=function(n){return this.throwIfDisposed(),Ks(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.erf=function(){return this.throwIfDisposed(),JT(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),iE(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.exp=function(){return this.throwIfDisposed(),ps(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.expandDims=function(n){return this.throwIfDisposed(),_n(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.expm1=function(){return this.throwIfDisposed(),dE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.fft=function(){return this.throwIfDisposed(),$w(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.flatten=function(){return this.throwIfDisposed(),M(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.floor=function(){return this.throwIfDisposed(),rh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.floorDiv=function(n){return this.throwIfDisposed(),j0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.gather=function(n,e){return this.throwIfDisposed(),rm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Uo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.greater=function(n){return this.throwIfDisposed(),es(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.ifft=function(){return this.throwIfDisposed(),Fp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.irfft=function(){return this.throwIfDisposed(),G_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.isFinite=function(){return this.throwIfDisposed(),yE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.isInf=function(){return this.throwIfDisposed(),IE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.isNaN=function(){return this.throwIfDisposed(),$E(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.leakyRelu=function(n){return this.throwIfDisposed(),om(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.lessEqual=function(n){return this.throwIfDisposed(),zi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.less=function(n){return this.throwIfDisposed(),nw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),EE(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logSigmoid=function(){return this.throwIfDisposed(),OE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logSoftmax=function(n){return this.throwIfDisposed(),sw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),rw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.log=function(){return this.throwIfDisposed(),fs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.log1p=function(){return this.throwIfDisposed(),am(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logicalAnd=function(n){return this.throwIfDisposed(),pr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logicalNot=function(){return this.throwIfDisposed(),im(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logicalOr=function(n){return this.throwIfDisposed(),ow(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logicalXor=function(n){return this.throwIfDisposed(),UE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Xe(this,n,e,t)};j().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),cm(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.max=function(n,e){return this.throwIfDisposed(),hs(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.maximum=function(n){return this.throwIfDisposed(),br(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.mean=function(n,e){return this.throwIfDisposed(),St(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.min=function(n,e){return this.throwIfDisposed(),wc(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.minimum=function(n){return this.throwIfDisposed(),Vl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),ZE(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.mod=function(n){return this.throwIfDisposed(),aw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.mul=function(n){return this.throwIfDisposed(),R(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.neg=function(){return this.throwIfDisposed(),vt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.norm=function(n,e,t){return this.throwIfDisposed(),sh(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.notEqual=function(n){return this.throwIfDisposed(),Ic(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),M0(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.onesLike=function(){return this.throwIfDisposed(),ms(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.pad=function(n,e){return this.throwIfDisposed(),um(this,n,e)};j().prototype.pool=function(n,e,t,s,r,o){return this.throwIfDisposed(),i_(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.pow=function(n){return this.throwIfDisposed(),No(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.prelu=function(n){return this.throwIfDisposed(),hm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.prod=function(n,e){return this.throwIfDisposed(),u_(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.reciprocal=function(){return this.throwIfDisposed(),v_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.relu=function(){return this.throwIfDisposed(),xr(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.relu6=function(){return this.throwIfDisposed(),mw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.reshapeAs=function(n){return this.throwIfDisposed(),M(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.reshape=function(n){return this.throwIfDisposed(),M(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),Ew(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),_w(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.reverse=function(n){return this.throwIfDisposed(),Eo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.rfft=function(){return this.throwIfDisposed(),vw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.round=function(){return this.throwIfDisposed(),gw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.rsqrt=function(){return this.throwIfDisposed(),bw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.selu=function(){return this.throwIfDisposed(),xw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.separableConv2d=function(n,e,t,s,r,o){return this.throwIfDisposed(),yw(this,n,e,t,s,r,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sigmoid=function(){return this.throwIfDisposed(),Bi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sign=function(){return this.throwIfDisposed(),D_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sin=function(){return this.throwIfDisposed(),ww(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sinh=function(){return this.throwIfDisposed(),Iw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.slice=function(n,e){return this.throwIfDisposed(),Qe(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.softmax=function(n){return this.throwIfDisposed(),gm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.softplus=function(){return this.throwIfDisposed(),zl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),dm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.split=function(n,e){return this.throwIfDisposed(),Xn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sqrt=function(){return this.throwIfDisposed(),gn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.square=function(){return this.throwIfDisposed(),nt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.squaredDifference=function(n){return this.throwIfDisposed(),bm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.squeeze=function(n){return this.throwIfDisposed(),Wl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Rt?[this,n]:[this,...n];return Rr(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.step=function(n){return this.throwIfDisposed(),Ul(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.stridedSlice=function(n,e,t,s,r,o,a,i){return this.throwIfDisposed(),J_(this,n,e,t,s,r,o,a,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sub=function(n){return this.throwIfDisposed(),xe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sum=function(n,e){return this.throwIfDisposed(),ye(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.tan=function(){return this.throwIfDisposed(),eR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.tanh=function(){return this.throwIfDisposed(),Jf(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.tile=function(n){return this.throwIfDisposed(),Cs(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.toBool=function(){return this.throwIfDisposed(),he(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.toFloat=function(){return this.throwIfDisposed(),he(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.toInt=function(){return this.throwIfDisposed(),he(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.topk=function(n,e){return this.throwIfDisposed(),nR(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.transpose=function(n){return this.throwIfDisposed(),We(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.unique=function(n){return this.throwIfDisposed(),oR(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Sw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.unstack=function(n){return this.throwIfDisposed(),_o(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.where=function(n,e){return this.throwIfDisposed(),Mn(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.zerosLike=function(){return this.throwIfDisposed(),Ge(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ls extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ls.prototype)}}class us extends Error{constructor(e){super(e),Object.setPrototypeOf(this,us.prototype)}}class A extends Error{constructor(e){super(e),Object.setPrototypeOf(this,A.prototype)}}class De extends Error{constructor(e){super(e),Object.setPrototypeOf(this,De.prototype)}}class rg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,rg.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class jw{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ao(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Ps(n,e){if(!n)throw new rg(e)}function cx(n,e){let t=0;for(const s of n)s===e&&t++;return t}function wn(n){return n.length===1?n[0]:n}function ft(n){return Array.isArray(n)?n:[n]}function cr(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function co(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let ss={};function og(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Op(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Op(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Op(s))}}}function Gl(n,e={},t={},s="object",r=!1){if(typeof n=="string"){const o=n;let a;if(o in t)a=t[o];else if(o in ss)a=ss[o];else if(a=e[o],a==null)throw new A(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const o=n;if(o.className==null||o.config==null)throw new A(`${s}: Improper config format: ${JSON.stringify(o)}.
'className' and 'config' must set.`);const a=o.className;let i,c;if(a in t?[i,c]=t[a]:a in ss?[i,c]=ss.className:a in e&&([i,c]=e[a]),i==null)throw new A(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(c!=null){const u={};for(const p of Object.keys(ss))u[p]=ss[p];for(const p of Object.keys(t))u[p]=t[p];const l=o.config;l.customObjects=u;const d=Object.assign({},ss);for(const p of Object.keys(t))ss[p]=t[p];Op(o.config);const h=c(i,o.config,t,r);return ss=Object.assign({},d),h}else{const u=Object.assign({},ss);for(const d of Object.keys(t))ss[d]=t[d];const l=new i(o.config);return ss=Object.assign({},u),l}}}function zF(n,e){return n<e?-1:n>e?1:0}function ku(n,e){return-1*zF(n,e)}function Nr(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function VF(n){if(n==null)throw new A(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Xo(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new A(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function ag(n,e,t=0,s=1/0){return Ps(t>=0),Ps(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(r=>typeof r===e)}function jt(n,e){Array.isArray(n)?(v(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>jt(t,`element ${s+1} of ${e}`))):v(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${qw(n)}.`)}function qw(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>qw(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function WF(n,e,t){let s=t!=null?t():nn(),r;return(...a)=>{const i=t!=null?t():nn();return i-s<e||(s=i,r=n(...a)),r}}function Xw(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let UF=0;function Kw(){return UF++}const $u={};function gh(n=""){return n in $u||($u[n]=0),$u[n]+=1,n+$u[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const GF=["channelsFirst","channelsLast"],HF=["nearest","bilinear"],jF=["valid","same","causal"],qF=["max","avg"],XF=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const oa=new Map;function Et(n){Xo(GF,"DataFormat",n)}function KF(n){Xo(HF,"InterpolationFormat",n)}function ts(n){Xo(jF,"PaddingMode",n)}function Yw(n){Xo(qF,"PoolMode",n)}const gc=[],lx="/";function yo(n,e){gc.push(n);try{const t=e();return gc.pop(),t}catch(t){throw gc.pop(),t}}function YF(){return gc.length===0?"":gc.join(lx)+lx}function Zw(n){if(!Qw(n))throw new Error("Not a valid tensor name: '"+n+"'");return YF()+n}function Jw(n){if(!Qw(n))throw new Error("Not a valid tensor name: '"+n+"'");oa.has(n)||oa.set(n,0);const e=oa.get(n);if(oa.set(n,oa.get(n)+1),e>0){const t=`${n}_${e}`;return oa.set(t,1),t}else return n}const ZF=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Qw(n){return!!n.match(ZF)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function JF(n){return n===parseInt(n.toString(),10)}function Tr(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let r=e;r<t;++r)s*=n[r];return s}function Ta(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function Ar(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function Ts(n,e){if(e<n)throw new A(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let jh;function Lt(){return jh==null&&(jh=cN().epsilon()),jh}function Es(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gs(n,e){return he(n,e)}function Hl(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),M(n,t)}function QF(n,e){return G(()=>{if(n.shape.length!==2)throw new A(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=Hl(n,1);return Mp(t,[1,e,1])})}function eO(n){const e=[Tr(n.shape)];return M(n,e)}function tO(n){if(n.rank<=1)throw new A(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],Tr(n.shape,1)];return M(n,e)}function wo(n,e,t){return G(()=>{switch(n.rank){case 1:return fm(n,e,t);case 2:return kw(n,[e,0],[t,n.shape[1]]);case 3:return mm(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return td(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Qe(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Qe(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new A(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function qh(n,e,t){return G(()=>{switch(n.rank){case 1:return fm(n,e,t);case 2:return kw(n,[0,e],[n.shape[0],t]);case 3:return mm(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return td(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new A(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function vu(n,e,t,s){return G(()=>{switch(n.rank){case 1:return fm(n,e,t);case 2:switch(s){case 1:return wo(n,e,t);case 2:return qh(n,e,t);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return wo(n,e,t);case 2:return mm(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return qh(n,e,t);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return wo(n,e,t);case 2:return td(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return td(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return qh(n,e,t);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}default:throw new A(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function ig(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),on(n,e)}function ux(n,e){switch(n.rank){case 1:return bT([n,e]);case 2:return yT([n,e],0);case 3:return IT([n,e],0);case 4:return $T([n,e],0);default:throw new A(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Mp(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new A(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return Cs(n,e)}function bh(n,e=0,t=1,s,r){return I_(n,e,t,s,r)}function Hs(n,e,t,s){if(n.rank<2||e.rank<2)throw new De(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const r=n.shape.slice(-1)[0],o=e.shape.slice(-2)[0];if(r!==o)throw new De(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return Zb({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Lp(n.rank,s,Es()):null,activation:t});{const r=n.shape.slice(),o=r.pop();n=M(n,[-1,o]);const a=e.shape.slice(),i=a.pop(),c=a.pop(),u=[...a,i],l=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=M(We(e,l),[c,-1]);const d=[...r,...u];return M(Zb({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Lp(n.rank,s,Es()):null,activation:t}),d)}}function e1(n,e,t){return G(()=>(Array.isArray(e)?e=Dn(e,"int32"):e=he(e,"int32"),rm(n,e,t)))}function jl(n){return R(n,n)}function Lp(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new A(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?M(e,[1,s[0],1,1,1]):M(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?M(e,[1,1,1,1,s[0]]):M(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?M(e,[1,s[0],1,1]):M(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?M(e,[1,1,1,s[0]]):M(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?M(e,[1,s[0],1]):M(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?M(e,[1,1,s[0]]):M(e,[1].concat(s))}else if(n<3)return e;throw new A(`Unsupported input rank by biasAdd: ${e.rank}`)}function Fs(n,e,t){return G(()=>(t==null&&(t=Es()),Et(t),ee(n,Lp(n.rank,e,t))))}function nO(n,e=1){if(e!==1)throw new De(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return nh(n)}function sO(n){return G(()=>ke(n,ee(Mt(n),1)))}function t1(n,e,t,s){return G(()=>dR(n,e,t,s))}function rO(n){return G(()=>{const e=ee(.5,R(.2,n));return Zn(e,0,1)})}function ql(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const oO=["fanIn","fanOut","fanAvg"],aO=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function iO(n){Xo(oO,"FanMode",n)}function cO(n){Xo(aO,"Distribution",n)}class gs extends Pi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class n1 extends gs{apply(e,t){return Ht(e,t)}}n1.className="Zeros";Q(n1);class cg extends gs{apply(e,t){return Gr(e,t)}}cg.className="Ones";Q(cg);class s1 extends gs{constructor(e){if(super(),typeof e!="object")throw new A(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new A(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return G(()=>R(Se(this.value),Gr(e,t)))}getConfig(){return{value:this.value}}}s1.className="Constant";Q(s1);class r1 extends gs{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return oh(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}r1.className="RandomUniform";Q(r1);class o1 extends gs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new De(`randomNormal does not support dType ${t}.`);return bh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}o1.className="RandomNormal";Q(o1);class a1 extends gs{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new De(`truncatedNormal does not support dType ${t}.`);return Cw(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}a1.className="TruncatedNormal";Q(a1);class i1 extends gs{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return G(()=>{if(e.length!==2||e[0]!==e[1])throw new A("Identity matrix initializer can only be used for 2D square matrices.");return R(this.gain,tw(e[0]))})}getConfig(){return{gain:this.gain}}}i1.className="Identity";Q(i1);function lO(n,e="channelsLast"){let t,s;if(Et(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const r=Tr(n,2);t=n[1]*r,s=n[0]*r}else if(e==="channelsLast"){const r=Tr(n,0,n.length-2);t=n[n.length-2]*r,s=n[n.length-1]*r}}else{const r=Tr(n);t=Math.sqrt(r),s=Math.sqrt(r)}return[t,s]}class Ln extends gs{constructor(e){if(super(),e.scale<0)throw new A(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,iO(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,cO(this.distribution),this.seed=e.seed}apply(e,t){const s=lO(e),r=s[0],o=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,r):this.mode==="fanOut"?a/=Math.max(1,o):a/=Math.max(1,(r+o)/2),this.distribution==="normal"){const i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new De(`${this.getClassName()} does not support dType ${t}.`);return Cw(e,0,i,t,this.seed)}else{const i=Math.sqrt(3*a);return oh(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Ln.className="VarianceScaling";Q(Ln);class lg extends Ln{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Ln.className}}lg.className="GlorotUniform";Q(lg);class ug extends Ln{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Ln.className}}ug.className="GlorotNormal";Q(ug);class dg extends Ln{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Ln.className}}dg.className="HeNormal";Q(dg);class hg extends Ln{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Ln.className}}hg.className="HeUniform";Q(hg);class pg extends Ln{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Ln.className}}pg.className="LeCunNormal";Q(pg);class fg extends Ln{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Ln.className}}fg.className="LeCunNormal";Q(fg);class c1 extends gs{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new De("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return G(()=>{if(e.length<2)throw new De("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const s=e[0]>e[1]?[e[1],e[0]]:e,r=bh(s,0,1,"float32");let o=_A.gramSchmidt(r);return e[0]>e[1]&&(o=We(o)),R(this.gain,o)})}getConfig(){return{gain:this.gain,seed:this.seed}}}c1.className="Orthogonal";Q(c1);const dx={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function hx(n,e={}){return Gl(n,as.getMap().classNameMap,e,"initializer")}function $t(n){return og(n)}function wt(n){if(typeof n=="string"){const e=n in dx?dx[n]:n;if(e==="GlorotNormal")return new ug;if(e==="GlorotUniform")return new lg;if(e==="HeNormal")return new dg;if(e==="HeUniform")return new hg;if(e==="LeCunNormal")return new pg;if(e==="LeCunUniform")return new fg;{const t={};return t.className=e,t.config={},hx(t)}}else return n instanceof gs?n:hx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Pp(n){return Array.isArray(n)&&Array.isArray(n[0])}function nd(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Ce(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new A(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function je(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new A(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sd(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,r)=>s*r);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const px="Variable";class uO{constructor(e,t="float32",s=px,r=!0,o=null){this.dtype=t??"float32",this.shape=e.shape,this.id=Kw(),s=s??px,this.originalName=Zw(s),this.name=Jw(this.originalName),this.trainable_=r,this.constraint=o,this.val=cR(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),dO(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function dO(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Bp(n){return n.map(e=>e.read())}function mg(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Pt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class zs{constructor(e,t,s,r,o,a,i){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=r,this.callArgs=o,this.outputTensorIndex=i,this.id=Kw(),a!=null&&(this.originalName=Zw(a),this.name=Jw(this.originalName)),this.rank=t.length}}let hO=0;class xh{constructor(e,t){this.callArgs=t,this.id=hO++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let pO=0;class Be extends Pi{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=pO++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=cr(s)+"_"+gh(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let o=null;e.batchSize!=null&&(o=e.batchSize),s=[o].concat(e.inputShape)}this.batchInputShape=s;let r=e.dtype;r==null&&(r=e.inputDType),r==null&&(r="float32"),this.dtype=r}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new us(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new A(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return wn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return wn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ls(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ls(`Layer ${this.name} is not connected, no input to return.`);return wn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ls(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ls(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return wn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ft(e),this.inputSpec==null||this.inputSpec.length===0)return;const t=ft(this.inputSpec);if(e.length!==t.length)throw new A(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const r=e[s],o=t[s];if(o==null)continue;const a=r.rank;if(o.ndim!=null&&a!==o.ndim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${o.ndim}, found ndim=${a}`);if(o.maxNDim!=null&&a>o.maxNDim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${o.maxNDim}, found ndim=${a}`);if(o.minNDim!=null&&a<o.minNDim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${o.minNDim}, found ndim=${a}.`);if(o.dtype!=null&&r.dtype!==o.dtype)throw new A(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${o.dtype}, found dtype=${r.dtype}.`);if(o.axes){const i=r.shape;for(const c in o.axes){const u=Number(c),l=o.axes[c],d=u>=0?i[u]:i[i.length+u];if(l!=null&&[l,null].indexOf(d)===-1)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${l} but got shape ${i}.`)}}if(o.shape!=null)for(let i=0;i<o.shape.length;++i){const c=o.shape[i],u=r.shape[i];if(c!=null&&u!=null&&c!==u)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected shape=${o.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=ft(e);let r=!0;for(const a of s)if(!(a instanceof zs)){r=!1;break}let o=!0;for(const a of s)if(a instanceof zs){o=!1;break}if(r===o)throw new A("Arguments to apply() must be all SymbolicTensors or all Tensors");return yo(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const i of ft(e))a.push(i.shape);this.build(wn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&o&&(this._refCount=1)}if(this.assertInputCompatibility(e),o){let a=this.call(e,t);const i=ft(a),c=[];for(let u of i)s.indexOf(u)!==-1&&(u=u.clone()),c.push(u);if(a=wn(c),this.activityRegularizer!=null)throw new De("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=fO(e),i=this.computeOutputShape(a);let c;const u=mO(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?c=i.map((l,d)=>new zs(u,l,this,ft(e),t,this.name,d)):c=new zs(u,i,this,ft(e),t,this.name),this.addInboundNode(e,c,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new De("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return c}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,r)=>{s!=null&&e[r]!=null&&e[r]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ls(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Ls(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new us(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return sd(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Bp(e?this.trainableWeights:this.weights)}setWeights(e){G(()=>{const t=this.weights;if(t.length!==e.length)throw new A(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],r=Bp(t);for(let o=0;o<r.length;++o){const a=r[o],i=t[o],c=e[o];if(!Ke(a.shape,c.shape))throw new A(`Layer weight shape ${a.shape} not compatible with provided weight shape ${c.shape}`);s.push([i,c])}mg(s)})}addWeight(e,t,s,r,o,a,i,c){if(this._addedWeightNames.indexOf(e)!==-1)throw new A(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(r=c!=null?c():wt("zeros"));const u=r.apply(t,s),l=new uO(u,s,e,a,i);return u.dispose(),o!=null&&this.addLoss(()=>o.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=ft(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,s,r,o,a,i=null){const c=ft(e);t=ft(t),s=ft(s),r=ft(r),o=nd(o),a=nd(a);const u=[],l=[],d=[];for(const h of c)u.push(h.sourceLayer),l.push(h.nodeIndex),d.push(h.tensorIndex);new xh({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:d,inputTensors:c,outputTensors:t,inputMasks:s,outputMasks:r,inputShapes:o,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function fO(n){n=ft(n);const e=[];for(const t of n)e.push(t.shape);return wn(e)}function mO(n){return"float32"}function l1(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const r=[];for(let o=0;o<s.inboundLayers.length;o++){const a=s.inputTensors[o],i=s.inboundLayers[o],c=s.nodeIndices[o],u=l1(a,i,c);for(const l of u)r.indexOf(l)===-1&&r.push(l)}return r}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Xl extends Be{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:gh("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new A("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new A("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new A("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const r=new zs(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new xh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new A(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Xl.className="InputLayer";Q(Xl);function gO(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new A("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new Xl({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bO(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return he(e,n.dtype)}catch{throw new A(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class kr{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof kr)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=bO(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new A(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof zs){if(this.id2Value[e.id]==null)throw new A(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new A(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof zs){if(this.id2Value[e.id]==null)throw new A(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new A(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Pe(this.id2Mask)}}const rd=new jw,od=new jw;function xO(n){rd?.setMaxEntries(n),od?.setMaxEntries(n)}function dc(n,e,t,s){const r=t==null?!1:t.training,o=Array.isArray(n),a=o?n:[n],i=a.map(f=>f.name),c=[],u=e.names();for(const f of i)u.indexOf(f)!==-1?c.push(e.getValue(f)):c.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const l=i.join(",")+"|"+e.names().sort().join(",");let d=rd.get(l),h;if(d==null){const f=yO(a,e);d=f.sorted,h=f.recipientCounts,rd.put(l,d),od.put(l,h)}h={},r||Object.assign(h,od.get(l));const p=new kr(e);for(let f=0;f<d.length;++f){if(s!=null){const N=Ep().numTensors;N>s.maxNumTensors&&(s.maxNumTensors=N),N<s.minNumTensors&&(s.minNumTensors=N)}const m=d[f],g=m.sourceLayer;if(g instanceof Xl)continue;const b=[],x=[],y=[];let w=!1;for(const N of m.inputs){const T=p.getValue(N),_=p.getMask(N);b.push(T),x.push(_),_!=null&&(w=!0),r||(h[N.name]--,h[N.name]===0&&!e.hasKey(N)&&i.indexOf(N.name)===-1&&!T.isDisposed&&N.sourceLayer.stateful!==!0&&y.push(T))}w&&(t=t||{},t.mask=x[0]);const I=ft(g.apply(b,t));let k=null;g.supportsMasking&&(k=g.computeMask(b,x));const $=IO(m),C=Array.isArray($)?$:[$];for(let N=0;N<C.length;++N){p.hasKey(C[N])||p.add(C[N],I[N],Array.isArray(k)?k[0]:k);const T=i.indexOf(C[N].name);T!==-1&&(c[T]=I[N])}r||Pe(y)}return p.disposeMasks(),o?c:c[0]}function yO(n,e){v(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const r=fx(n[0],e);t=r.sorted,s=r.recipientMap}else{const r=new Set;for(const o of n){const{sorted:a,recipientMap:i}=fx(o,e);for(const c of a)r.has(c.name)||(t.push(c),r.add(c.name));for(const c in i)s[c]==null&&(s[c]=new Set),i[c].forEach(u=>s[c].add(u))}}return{sorted:t,recipientCounts:wO(s)}}function wO(n){const e={};for(const t in n)e[t]=n[t].size;return e}function fx(n,e){const t=new Set,s=[],r={};for(const i of e.names())t.add(i);const o=[],a=[];for(o.push(n);o.length>0;){const i=o[o.length-1];if(t.has(i.name)){o.pop();continue}const c=a[a.length-1]===o.length-1;if(i.inputs.length===0||c)o.pop(),s.push(i),t.add(i.name),c&&a.pop();else{a.push(o.length-1);for(const u of i.inputs)r[u.name]==null&&(r[u.name]=new Set),r[u.name].add(i.name),!t.has(u.name)&&o.push(u)}}return{sorted:s,recipientMap:r}}function IO(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const r of n.sourceLayer.inboundNodes[s].outputTensors)if(r.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kO=H();kO.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,xO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gg(n,e){return G(()=>gn(ye(R(n,n),e,!0)))}class Kl extends Pi{getConfig(){return{}}}class u1 extends Kl{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{const t=gg(e,this.axis),s=Zn(t,0,this.maxValue);return R(e,ke(s,ee(Lt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}u1.className="MaxNorm";Q(u1);class d1 extends Kl{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>ke(e,ee(Lt(),gg(e,this.axis))))}getConfig(){return{axis:this.axis}}}d1.className="UnitNorm";Q(d1);class h1 extends Kl{apply(e){return xr(e)}}h1.className="NonNeg";Q(h1);class p1 extends Kl{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{const t=gg(e,this.axis),s=ee(R(this.rate,Zn(t,this.minValue,this.maxValue)),R(1-this.rate,t));return R(e,ke(s,ee(Lt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}p1.className="MinMaxNorm";Q(p1);const mx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function zt(n){return og(n)}function gx(n,e={}){return Gl(n,as.getMap().classNameMap,e,"constraint")}function Vt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in mx?mx[n]:n,config:{}};return gx(t)}else return n instanceof Kl?n:gx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function so(n){if(n==null)return;const e=[],t=[],s=[];for(const r in n){const o=n[r];if(typeof o!="number"){const a=o;e.push(a.data()),t.push(r),s.push(a)}}if(e.length>0){const r=await Promise.all(e);for(let o=0;o<r.length;++o)n[t[o]]=r[o][0];Pe(s)}}function f1(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var bx;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(bx||(bx={}));const $O=125;class vc{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class vO{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class CO extends vc{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const r in t){const o=t[r];if(typeof o=="number")this.totals.hasOwnProperty(r)||(this.totals[r]=0),this.totals[r]=this.totals[r]+o*s;else{let a;r in this.totals?a=this.totals[r]:this.totals[r]=0;const i=G(()=>ee(this.totals[r],R(o,s)));this.totals[r]=i,a?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:G(()=>{const r=R(ke(1,this.seen),this.totals[s]);t[s]=r,this.totals[s].dispose(),Us(t[s])}))}}class SO extends vc{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const o in this.history){const a=this.history[o];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){const c=a[i];e.push(c.data()),t.push(o),s.push(i)}}const r=await Promise.all(e);for(let o=0;o<r.length;++o)this.history[t[o]][s[o]].dispose(),this.history[t[o]][s[o]]=r[o][0]}}class NO extends vc{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Rw,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=$O),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");pp(this.yieldEvery)&&(this.maybeWait=WF(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const r=[];this.yield!=null&&(await so(s),r.push(this.yield(e,t,s))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await so(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await so(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await so(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await so(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):pp(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await so(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await so(e),await this.trainEnd(e))}}function m1(n,e){return n==null&&(n={}),n instanceof vc?[n]:Array.isArray(n)&&n[0]instanceof vc?n:ft(n).map(s=>new NO(s,e))}class os{constructor(){}static registerCallbackConstructor(e,t){v(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),os.checkForDuplicate(t),os.constructors[e]==null&&(os.constructors[e]=[]),os.constructors[e].push(t)}static checkForDuplicate(e){for(const t in os.constructors)os.constructors[+t].forEach(r=>{if(r===e)throw new A("Duplicate callback constructor.")})}static clear(){os.constructors={}}static createCallbacks(e){const t=[];for(const s in os.constructors){const r=+s;e>=r&&t.push(...os.constructors[r])}return t.map(s=>new s)}}os.constructors={};function g1(n,e,t,s,r,o,a,i,c){const u=new SO,l=[new CO,...os.createCallbacks(e)];n!=null&&l.push(...n),l.push(u);const d=new vO(l);return d.setParams({epochs:t,initialEpoch:s,samples:r,steps:o,batchSize:a,verbose:e,doValidation:i,metrics:c}),{callbackList:d,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dr(n,e={},t=!1){return Gl(n,as.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ad(n,e){return G(()=>{n.dtype!=="float32"&&(n=he(n,"float32"));const t=ye(jl(n),e,!0),s=Bl(t.shape,Lt()),r=gn(br(t,s));return ke(n,r)})}function yh(n,e){return G(()=>St(jl(xe(e,n)),-1))}function bg(n,e){return G(()=>St(Mt(xe(e,n)),-1))}function xg(n,e){return G(()=>{const t=xe(n,e),s=Zn(Mt(n),Lt(),Number.MAX_VALUE),r=Mt(ke(t,s));return R(100,St(r,-1))})}function TO(n,e){return G(()=>{const t=Zn(e,Lt(),Number.MAX_VALUE),s=fs(ee(1,t)),r=Zn(n,Lt(),Number.MAX_VALUE),o=fs(ee(1,r));return St(jl(xe(s,o)),-1)})}function EO(n,e){return G(()=>{const t=br(0,xe(1,R(n,e)));return St(jl(t),-1)})}function _O(n,e){return G(()=>{const t=br(0,xe(1,R(n,e)));return St(t,-1)})}function RO(n,e){return G(()=>{const t=ye(R(n,e),-1),s=hs(R(xe(1,n),e),-1);return br(0,ee(1,xe(s,t)))})}function AO(n,e){return G(()=>{const t=Math.log(2),s=xe(e,n),r=xe(ee(s,zl(R(-2,s))),t);return St(r,-1)})}function Cc(n,e,t=!1){return G(()=>{if(t)e=gm(e);else{const s=ye(e,e.shape.length-1,!0);e=ke(e,s)}return e=Zn(e,Lt(),1-Lt()),vt(ye(R(he(n,"float32"),fs(e)),e.shape.length-1))})}function id(n,e,t=!1){return G(()=>{const s=he(rh(eO(n)),"int32");e=Zn(e,Lt(),1-Lt());const r=e.shape,o=M(M0(s,r[r.length-1]),r);return Cc(o,e,t)})}function DO(n,e){if(!Ke(n.shape,e.shape))throw new A(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return G(()=>{const t=xr(e),s=vt(Mt(e));return ee(xe(t,R(e,n)),am(ps(s)))})}function wh(n,e){return G(()=>{let t;return t=Zn(e,Lt(),1-Lt()),t=fs(ke(t,xe(1,t))),St(DO(n,t),-1)})}function FO(n,e){return G(()=>{const t=Zn(n,Lt(),1),s=Zn(e,Lt(),1);return ye(R(n,fs(ke(t,s))),-1)})}function OO(n,e){return G(()=>{const t=fs(ee(Lt(),e));return St(xe(e,R(n,t)),-1)})}function b1(n,e){return G(()=>{const t=ad(n,-1),s=ad(e,-1),r=R(t,s);return vt(ye(r,-1))})}const cd={meanSquaredError:yh,meanAbsoluteError:bg,meanAbsolutePercentageError:xg,meanSquaredLogarithmicError:TO,squaredHinge:EO,hinge:_O,categoricalHinge:RO,logcosh:AO,categoricalCrossentropy:Cc,sparseCategoricalCrossentropy:id,binaryCrossentropy:wh,kullbackLeiblerDivergence:FO,poisson:OO,cosineProximity:b1};function Xh(n){if(typeof n=="string"){if(n in cd)return cd[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new A(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function x1(n,e){return G(()=>{const t=R(.5,ms(e)),s=Gs(es(e,t),n.dtype);return St(Ks(n,s),-1)})}function y1(n,e){return G(()=>Gs(Ks(yc(n,-1),yc(e,-1)),"float32"))}function MO(n,e){return G(()=>he(ye(pr(Ks(n,1),Ks(e,1))),"float32"))}function LO(n,e){return G(()=>he(ye(pr(Ks(n,0),Ks(e,1))),"float32"))}function PO(n,e){return G(()=>{const t=MO(n,e),s=LO(n,e),r=ee(t,s);return he(Mn(es(r,0),ke(t,r),0),"float32")})}function BO(n,e){return wh(n,e)}function zO(n,e){return n.rank===e.rank&&(n=Wl(n,[n.rank-1])),e=yc(e,-1),e.dtype!==n.dtype&&(e=he(e,n.dtype)),he(Ks(n,e),"float32")}const VO=yh,WO=yh,UO=bg,GO=bg,HO=xg,jO=xg,w1=Cc,qO=b1,I1=id,ld={binaryAccuracy:x1,categoricalAccuracy:y1,precision:PO,categoricalCrossentropy:w1,sparseCategoricalCrossentropy:I1,mse:VO,MSE:WO,mae:UO,MAE:GO,mape:HO,MAPE:jO,cosine:qO};function XO(n){if(typeof n=="string"&&n in ld)return ld[n];if(typeof n!="string"&&n!=null)return n;throw new A(`Unknown metric ${n}`)}function Cu(n){if(Ps(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(cd))if(cd[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(ld))if(ld[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function KO(n){const e={Adagrad:()=>ra.adagrad(.01),Adadelta:()=>ra.adadelta(1,.95,Lt()),Adam:()=>ra.adam(.001,.9,.999,Lt()),Adamax:()=>ra.adamax(.002,.9,.999,Lt(),0),RMSProp:()=>ra.rmsprop(.001,.9,0,Lt()),SGD:()=>ra.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new A(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const xx=1*1024*1024;function yx(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!zp(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>xx&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${xx}.`)}}function zp(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!zp(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!zp(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function YO(n,e,t,s=console.log){const r=JO(n),o=["Layer (type)","Input Shape","Output shape","Param #"];r?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(l=>Math.floor(e*l)));let a;if(!r){o.push("Receives inputs"),a=[];for(const l in n.nodesByDepth)a.push(...n.nodesByDepth[l])}s("_".repeat(e)),ud(o,t,s),s("=".repeat(e));const i=n.layers;for(let l=0;l<i.length;++l)r?QO(i[l],t,s):eM(i[l],t,a,s),s((l===i.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const c=ZO(n),u=sd(n.nonTrainableWeights);s(`Total params: ${c+u}`),s(`Trainable params: ${c}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function ZO(n){let e;return n.collectedTrainableWeights!=null?e=sd(n.collectedTrainableWeights):e=sd(n.trainableWeights),e}function JO(n){let e=!0;const t=[],s=[];for(const r in n.nodesByDepth)t.push(n.nodesByDepth[r]);for(const r of t){if(r.length>1||r.length===1&&r[0].inboundLayers.length>1){e=!1;break}s.push(...r)}if(e)for(const r of n.layers){let o=!1;for(const a of r.inboundNodes)if(s.indexOf(a)!==-1)if(o){e=!1;break}else o=!0;if(!e)break}return e}function ud(n,e,t=console.log){let s="";for(let r=0;r<n.length;++r)r>0&&(s=s.slice(0,s.length-1)+" "),s+=n[r],s=s.slice(0,e[r]),s+=" ".repeat(e[r]-s.length);t(s)}function QO(n,e,t){let s,r;try{r=n.inboundNodes.map(c=>JSON.stringify(c.inputShapes)).join(",")}catch{r="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const o=n.name,a=n.getClassName(),i=[`${o} (${a})`,r,s,n.countParams().toString()];ud(i,e,t)}function eM(n,e,t,s){let r,o;try{o=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{o="multiple"}try{r=JSON.stringify(n.outputShape)}catch{r="multiple"}const a=[];for(const d of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){const p=d.inboundLayers[h].name,f=d.nodeIndices[h],m=d.tensorIndices[h];a.push(`${p}[${f}][${m}]`)}const i=n.name,c=n.getClassName(),u=a.length===0?"":a[0],l=[`${i} (${c})`,o,r,n.countParams().toString(),u];ud(l,e,s);for(let d=1;d<a.length;++d)ud(["","","","",a[d]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function k1(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Vp(n,e){if(n===null)return null;if(typeof n=="string")return co(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];k1(e,r,o)?t.push(o):t.push(Vp(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s];if(s==="name"&&typeof r=="string")t[s]=r;else{const o=co(s);t[o]=Vp(r,o)}}return t}}function Wp(n,e){if(n==null)return null;if(typeof n=="string")return cr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let r=0;r<s;++r){const o=n[r];k1(e,r,o)?t.push(o):t.push(Wp(o,e))}return t}else{const t={};for(const s of Object.keys(n)){const r=n[s],o=cr(s);(s==="name"||s==="className")&&typeof r=="string"?t[o]=r:t[o]=Wp(r,s)}return t}}/** @license See the LICENSE file. */const $1="4.1.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Is extends Be{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=gh(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Nr(this.inputs).length!==this.inputs.length)throw new A(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Nr(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const y=x.sourceLayer,w=x.nodeIndex,I=x.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(I)}for(const x of this.inputs){const y=x.sourceLayer,w=x.nodeIndex,I=x.tensorIndex;Ps(w===0,"input layer has >1 nodes"),Ps(I===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const y=this.inputLayers[x];if(!(y instanceof Xl))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const t={},s={},r={},o={},a={},i=[],c=(x,y,w,I,k,$)=>{(I==null||k==null||$==null)&&(I=x.sourceLayer,k=x.nodeIndex,$=x.tensorIndex);const C=I.inboundNodes[k];if(w.indexOf(C)!==-1)throw new us(`The tensor ${x.name} at layer "${I.name}" is part of a cycle.`);if(y.indexOf(C)!==-1)return;this.containerNodes.add(Is.nodeKey(I,k)),I.id in a||(a[I.id]=Object.keys(a).length),w.indexOf(C)===-1&&w.push(C);const N=C.inboundLayers.length;for(let T=0;T<N;T++){const _=C.inputTensors[T],O=C.inboundLayers[T],P=C.nodeIndices[T],V=C.tensorIndices[T];c(_,y,w,O,P,V)}for(y.push(C);w.indexOf(C)>=0;)w.splice(w.indexOf(C),1);i.push(C)},u=[],l=[];for(const x of this.outputs)c(x,u,l);const d=i.slice().reverse();for(const x of d){s[x.id]=x,x.id in t||(t[x.id]=0);let y=t[x.id];const w=r[x.outboundLayer.id]==null?0:r[x.outboundLayer.id];y=Math.max(y,w),r[x.outboundLayer.id]=y,o[x.outboundLayer.id]=x.outboundLayer,t[x.id]=y;for(let I=0;I<x.inboundLayers.length;I++){const k=x.inboundLayers[I],$=x.nodeIndices[I],C=k.inboundNodes[$],N=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(y+1,N),s[C.id]=C}}const h={};for(const x in t){const y=t[x];y in h||(h[y]=[]),h[y].push(s[x])}const p={};for(const x in r){const y=r[x];y in p||(p[y]=[]),p[y].push(o[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(ku);this.layers=[];for(const x of f){const y=p[x];y.sort((w,I)=>{const k=a[w.id],$=a[I.id];return k<$?-1:k>$?1:0});for(const w of y)w instanceof Is&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(h).map(x=>parseInt(x,10)).sort(ku);const m=this.inputs.slice(),g=[];for(const x of f)for(const y of h[x]){const w=y.outboundLayer;if(w!=null){for(const I of y.inputTensors)if(m.indexOf(I)===-1)throw new us(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${w.name}". The following previous layers were accessed without issue: ${g}`);for(const I of y.outputTensors)m.push(I);g.push(w.name)}}this.nodesByDepth=h;const b=this.layers.map(x=>x.name);for(const x of b){const y=b.filter(w=>w===x).length;if(y!==1)throw new us(`The name "${x}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new xh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new A("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let r=0;for(const a of this.layers)for(const i of a.weights){if(s[i.originalName]!=null)throw new A(`Duplicate weight name: ${i.originalName}`);s[i.originalName]=i,r++}const o=[];for(const a in e){let i=a;if(s[a]==null){const c=a.split("/");i=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[i]!=null)o.push([s[i],e[a]]);else if(t)throw new A(`Provided weight data has no target variable: ${a}`);delete s[i]}if(t){const a=[];for(const i in s)a.push(i);if(a.length>0)throw new A(`${a.length} of ${r} weights are not set: ${a}`)}mg(o)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${$1}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Wp(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return G(()=>{e=ft(e);const s=new kr;for(let r=0;r<this.inputs.length;++r)s.add(this.inputs[r],e[r]);return dc(this.outputs,s,t)})}computeMask(e,t){return G(()=>{e=ft(e);let s;return t==null?s=Ao(null,e.length):s=ft(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=nd(e);if(t.length!==this.inputLayers.length)throw new A(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<t.length;i++){const c=this.inputLayers[i],u=t[i],l=c.name+"_0_0";s[l]=u}const r=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(ku);if(r.length>1)for(const i of r){const c=this.nodesByDepth[i];for(const u of c){const l=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(l.id)!==-1)continue;const d=[];for(let m=0;m<u.inboundLayers.length;m++){const g=u.inboundLayers[m],b=u.nodeIndices[m],x=u.tensorIndices[m],y=`${g.name}_${b}_${x}`,w=s[y];d.push(w)}const h=l.computeOutputShape(wn(d)),p=nd(h),f=l.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++){const g=`${l.name}_${f}_${m}`;s[g]=p[m]}}}const o=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const c=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],d=`${c.name}_${u}_${l}`;a.push(d)}for(let i=0;i<a.length;i++){const c=a[i];Ps(c in s),o.push(s[c])}return wn(o)}runInternalGraph(e,t){t==null&&(t=Ao(null,e.length));const s={};for(let c=0;c<this.inputs.length;++c){const u=this.inputs[c],l=e[c],d=t[c];s[u.id]=[l,d]}const r=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(ku);for(const c of r){const u=this.nodesByDepth[c];for(const l of u){const d=l.outboundLayer,h=l.inputTensors,p=l.outputTensors,f=new Array;for(const m of h)m.id in s&&f.push(s[m.id]);if(f.length===h.length){let m={},g,b,x,y;if(l.callArgs!=null&&(m=l.callArgs),f.length===1){const[w,I]=f[0];m.mask==null&&(m.mask=I),x=ft(d.call(w,m)),y=ft(d.computeMask(w,I)),g=[w],b=[I]}else g=f.map(w=>w[0]),b=f.map(w=>w[1]),m.mask==null&&(m.mask=b),x=ft(d.call(g,m)),y=ft(d.computeMask(g,b));if(d.activityRegularizer)throw new De("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w){const I=p[w],k=x[w],$=y[w];s[I.id]=[k,$]}}}}const o=[],a=[],i=[];for(const c of this.outputs){Ps(c.id in s,`Could not compute output ${c.name} : ${c.id}`);const[u,l]=s[c.id];i.push(u.shape),o.push(u),a.push(l)}return[o,a,i]}buildNodeConversionMap(e){const t={};let s;for(const r of this.layers){s=r instanceof Is?1:0;for(let o=0;o<r.inboundNodes.length;o++){const a=Is.nodeKey(r,o);this.containerNodes.has(a)&&(t[a]=s,s+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new A(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new A("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new A(`No such layer: ${e}`)}calculateLosses(){return G(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const r=Is.nodeKey(t,s);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const i=a.getClassName(),c=a.getConfig(),u=[];for(let d=0;d<a.inboundNodes.length;d++){const h=a.inboundNodes[d],p=Is.nodeKey(a,d);let f={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),f=h.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(h.inboundLayers.length>0){const m=[];for(let g=0;g<h.inboundLayers.length;g++){const b=h.inboundLayers[g],x=h.nodeIndices[g],y=h.tensorIndices[g],w=Is.nodeKey(b,x);let I=t[w];I==null&&(I=0),m.push([b.name,I,y,f])}u.push(m)}}}const l={};l.name=a.name,l.className=i,l.config=c,l.inboundNodes=u,s.push(l)}e.layers=s;const r=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],c=this.inputLayersNodeIndices[a],u=Is.nodeKey(i,c);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);const d=this.inputLayersTensorIndices[a];r.push([i.name,l,d])}e.inputLayers=r;const o=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=Is.nodeKey(i,c);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);const d=this.outputLayersTensorIndices[a];o.push([i.name,l,d])}return e.outputLayers=o,e}static fromConfig(e,t,s={},r=!1){const o={},a={};function i(g,b){g.name in a?a[g.name].push(b):a[g.name]=[b]}function c(g,b){const x=[];let y;for(const w of b){const I=w[0],k=w[1],$=w[2];if(y=w[3]==null?{}:w[3],!(I in o)){i(g,b);return}const C=o[I];if(C.inboundNodes.length<=k){i(g,b);return}const N=C.inboundNodes[k];x.push(N.outputTensors[$])}x.length>0&&g.apply(wn(x),y)}function u(g){const b=g.name,x=dr(g,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(r),o[b]=x,g.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new A(`Corrupted configuration, expected array for nodeData: ${w}`);i(x,w)})}const l=t.name,d=t.layers;for(const g of d)u(g);for(;!VF(a);)for(const g of d){const b=o[g.name];if(b.name in a){const x=a[b.name];delete a[b.name];for(const y of x)c(b,y)}}const h=[],p=[],f=t.inputLayers;for(const g of f){const b=g[0],x=g[1],y=g[2];Ps(b in o);const I=o[b].inboundNodes[x].outputTensors;h.push(I[y])}const m=t.outputLayers;for(const g of m){const b=g[0],x=g[1],y=g[2];Ps(b in o);const I=o[b].inboundNodes[x].outputTensors;p.push(I[y])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new A("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){G(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function tM(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(r=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const r=[];return e.forEach(o=>{o in n?r.push(n[o]):r.push(null)}),r}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function v1(n,e){return tM(n,e,"classWeight")}async function C1(n,e,t,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){const r=G(()=>{if(n.shape.length===1)return bo(n);if(n.shape.length===2){if(n.shape[1]>1)return yc(n,1);if(n.shape[1]===1)return M(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),o=Array.from(await r.data());Pe(r);const a=[];return o.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Dn(a,"float32")}else return null}function nM(n,e){return R(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const sM=32;function S1(n,e){let t,s;const r=e;t=r.xs,s=r.ys,v(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const o=wx("input",n.inputNames,t),a=wx("output",n.outputNames,s),i=o[0].shape[0];v(o.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${o.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),v(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let c=0;c<o.length;c++)v(o[c].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[c]} has ${o[c].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let c=0;c<a.length;c++)v(a[c].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[c]} has ${a[c].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:o,ys:a}}function wx(n,e,t){if(t instanceof Rt)return[t];if(Array.isArray(t))return v(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const r of e){if(t[r]==null)throw new A(`The feature data generated by the dataset lacks the required ${n} key '${r}'.`);s.push(t[r])}return s}}function rM(n){if(n.length===3)throw new De("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function oM(n,e,t){const s=t.batchesPerEpoch!=null;if(v(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),v(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),v(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),v(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),v(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const r=t.validationData!=null;let o,a;if(r)if(Ix(t.validationData))v(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=rM(t.validationData);o=g.xs,a=g.ys}const i=n.makeTrainFunction(),c=n.getDedupedMetricsNames();let u;r?u=c.slice().concat(c.map(g=>"val_"+g)):u=c.slice();const l=m1(t.callbacks,t.yieldEvery),d=t.verbose==null?1:t.verbose,{callbackList:h,history:p}=g1(l,d,t.epochs,null,null,aM(e,t),null,r,u);h.setModel(n),n.history=p,await h.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await h.onEpochBegin(f);let b=0,x=0;for(s||(m=await e.iterator());!s||b<t.batchesPerEpoch;){const y=await m.next();if(s&&y.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(y.value!=null){const{xs:w,ys:I}=S1(n,y.value),k={};k.batch=x,k.size=w[0].shape[0],await h.onBatchBegin(x,k);const $=[];if(t.classWeight!=null){const T=v1(t.classWeight,n.outputNames);for(let _=0;_<T.length;++_)$.push(await C1(I[_],null,T[_]))}const C=w.concat(I).concat($),N=i(C);Pe(C);for(let T=0;T<c.length;++T){const _=c[T],O=N[T];k[_]=O,Us(O)}await h.onBatchEnd(x,k),f1(k),x++,b++}if(s?b>=t.batchesPerEpoch:y.done){if(r){let w;Ix(t.validationData)?w=ft(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):w=ft(n.evaluate(o,a,{batchSize:t.validationBatchSize==null?sM:t.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)g[`val_${n.metricsNames[I]}`]=w[I]}break}if(n.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,n.stopTraining_)break}return await h.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function aM(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function Ix(n){return typeof n.iterator=="function"}function iM(n){return typeof n.next=="function"}async function cM(n,e,t){t=t||{};const s=t.batches!=null,r=n.testFunction;let o=[];if(t.verbose>0)throw new De("Verbose mode is not implemented yet.");v(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=iM(e)?e:await e.iterator();let i=0,c=0;for(;!s||c<t.batches;){const u=await a.next();if(o=G(()=>{if(u.value){const{xs:l,ys:d}=S1(n,u.value),h=l.concat(d),p=G(()=>r(h));if(Pe(h),c===0)for(let m=0;m<p.length;++m)o.push(Se(0));const f=h[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],b=o[m];o[m]=G(()=>ee(o[m],R(f,g))),c>0&&Pe(b)}Pe(p),i+=f,++c}return o}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<o.length;++u){const l=o[u];o[u]=ke(o[u],i),Pe(l)}return wn(o)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Kh(n){v(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function ac(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>wo(s,e,t-e)):wo(n,e,t-e)}function Up(n,e){return G(()=>n==null?null:Array.isArray(n)?n.map(t=>Up(t,e)):e1(n,e.dtype==="int32"?e:he(e,"int32")))}function Yh(n,e){const t=[];let s=0,r=null;for(;s<n;)r=s+e,r>=n&&(r=n),t.push([s,r]),s=r;return t}function N1(n){const e=[];n instanceof Rt&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(Hl(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function ws(n,e){if(n==null)return;const t=[];if(e instanceof Rt)t.push(e.id);else if(Array.isArray(e))e.forEach(r=>t.push(r.id));else if(e!=null)for(const r in e){const o=e[r];t.push(o.id)}const s=[];if(n instanceof Rt)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(r=>{t.indexOf(r.id)===-1&&s.push(r)});else if(n!=null)for(const r in n){const o=n[r];t.indexOf(o.id)===-1&&s.push(o)}s.forEach(r=>{r.isDisposed||r.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lM(n){return n instanceof Rt}function Gp(n){return Array.isArray(n)}function kx(n){return!lM(n)&&!Gp(n)}function $x(n,e,t,s=!0,r=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(Gp(n)&&n.length>0)a=!0;else if(kx(n)){for(const i in n)if(n.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new A(`Error when checking model ${r} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let o;if(kx(n)){n=n,o=[];for(const a of e){if(n[a]==null)throw new A(`No data provided for "${a}". Need data for each key in: ${e}`);o.push(n[a])}}else if(Gp(n)){if(n=n,n.length!==e.length)throw new A(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);o=n}else{if(n=n,e.length>1)throw new A(`The model ${r} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);o=[n]}if(o=N1(o),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=o[a];if(i.shape.length!==t[a].length)throw new A(`Error when checking ${r}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let c=0;c<t[a].length;++c){if(c===0&&!s)continue;const u=i.shape[c],l=t[a][c];if(l!=null&&l>=0&&u!==l)throw new A(`${r} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return o}function uM(n,e,t){const s=Nr(n.map(o=>o.shape[0]));s.sort();const r=Nr(e.map(o=>o.shape[0]));if(r.sort(),s.length>1)throw new A(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(o=>o.shape))}`);if(r.length>1)throw new A(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(o=>o.shape))}`);if(s.length>0&&r.length>0&&!Ke(s,r))throw new A(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}function dM(n,e,t){const s=[yh,wh,Cc];for(let r=0;r<n.length;++r){const o=n[r],a=e[r],i=t[r];if(a!=null){if(a===Cc&&o.shape[o.shape.length-1]===1)throw new A(`You are passing a target array of shape ${o.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const c=o.shape.slice(1),u=i.slice(1);for(let l=0;l<c.length;++l){const d=c[l],h=u[l];if(h!=null&&d!==h)throw new A(`A target Tensor with shape ${o.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function vx(n,e,t,s=!0,r=""){let o;if(Array.isArray(n)){if(n.length!==e.length)throw new A(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);o=n}else{if(e.length>1)throw new A(`The model expects ${e.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);o=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=o[a];if(i.shape.length!==t[a].length)throw new A(`Error when checking ${r}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let c=0;c<t[a].length;++c){if(c===0&&!s)continue;const u=i.shape[c],l=t[a][c];if(l!=null&&l!==u)throw new A(`Error when checking ${r}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function hM(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const r of e){let o=t.hasOwnProperty(r)?t[r]:[];Array.isArray(o)||(o=[o]),s.push(o)}return s}}const pM="layers-model";class fa extends Is{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new A("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");YO(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=KO(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof jr))throw new A("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new A(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Xh(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new A(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Xh(i))}else{const a=Xh(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const i=this.internalOutputShapes[a],c=this.outputNames[a];this.feedOutputNames.push(c),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],yo("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const r=hM(e.metrics,this.outputNames),o=(a,i,c)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([c,a])};yo("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=r[a];(u=>{const l="";let d,h,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===wh?["accuracy","acc"].indexOf(f)!==-1?h=x1:["crossentropy","ce"].indexOf(f)!==-1&&(h=BO):this.lossFunctions[a]===id?["accuracy","acc"].indexOf(f)!==-1?h=zO:["crossentropy","ce"].indexOf(f)!==-1&&(h=I1):["accuracy","acc"].indexOf(f)!==-1?h=y1:["crossentropy","ce"].indexOf(f)!==-1&&(h=w1);let b;["accuracy","acc"].indexOf(f)!==-1?b="acc":["crossentropy","ce"].indexOf(f)!==-1&&(b="ce"),p=h,d=l+b}else p=XO(f),d=l+Cu(f);let m;yo(d,()=>{m=p}),o(a,d,m)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const r=s.batchSize==null?32:s.batchSize;Kh(r);const o=!0,a=this.standardizeUserDataXY(e,t,o,r);try{const i=a[0].concat(a[1]);this.makeTestFunction();const c=this.testFunction,u=this.testLoop(c,i,r,s.verbose,s.steps);return wn(u)}finally{ws(a[0],e),ws(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),cM(this,e,t)}checkNumSamples(e,t,s,r="steps"){let o;if(s!=null){if(o=null,t!=null)throw new A(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?o=e[0].shape[0]:o=e.shape[0];else throw new A(`Either the input data should have a defined shape, or ${r} shoud be specified.`);return o}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new A("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),r=s?t:[t],o=this.retrieveSymbolicTensors(r),a=new kr;if(e instanceof Rt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new A(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let c=0;c<this.inputs.length;++c)a.add(this.inputs[c],e[c])}else for(const c of this.inputs){const u=e[c.name];if(u==null)throw new A(`No value is provided for the model's input ${c.name}`);a.add(c,u)}const i=dc(o,a);return s?i:i[0]}retrieveSymbolicTensors(e){const t=Ao(null,e.length);let s=e.length;for(const r of this.layers){const o=Array.isArray(r.output)?r.output:[r.output],a=o.map(i=>i.name);for(let i=0;i<e.length;++i){const c=a.indexOf(e[i]);if(c!==-1&&(t[i]=o[c],s--),s===0)break}if(s===0)break}if(s>0){const r=[];throw t.forEach((o,a)=>{o==null&&r.push(e[a])}),new A(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(r)}`)}return t}predictLoop(e,t=32,s=!1){return G(()=>{const r=this.checkNumSamples(e);if(s)throw new De("Verbose predictLoop() is not implemented yet.");const o=Yh(r,t),a=this.outputs.map(i=>[]);for(let i=0;i<o.length;++i)G(()=>{const u=o[i][0],l=o[i][1],d=ac(e,u,l),h=[];if(Array.isArray(d))for(let f=0;f<d.length;++f)h.push({key:this.inputs[f],value:d[f]});else h.push({key:this.inputs[0],value:d});const p=new kr(h);return dc(this.outputs,p)}).forEach((u,l)=>a[l].push(u));return wn(a.map(i=>on(i,0)))})}predict(e,t={}){const s=N1(e);vx(s,this.inputNames,this.feedInputShapes,!1);try{const r=t.batchSize==null?32:t.batchSize;return Kh(r),this.predictLoop(s,r)}finally{ws(s,e)}}predictOnBatch(e){vx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,r){if(this.optimizer_==null)throw new us("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const o=[];for(let a=0;a<this.feedOutputShapes.length;++a){const i=this.feedOutputShapes[a];this.feedLossFns[a]===id?o.push(i.slice(0,i.length-1).concat([1])):o.push(i)}if(e=$x(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=$x(t,this.feedOutputNames,o,!1,"target"),uM(e,t),dM(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&r!=null&&r>0&&e[0].shape[0]%r!==0)throw new A(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,r,o=!0,a){const[i,c]=this.standardizeUserDataXY(e,t,o,a);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(r!=null){const l=v1(r,this.outputNames);u=[];for(let d=0;d<l.length;++d)u.push(await C1(c[d],null,l[d]))}return[i,c,u]}testLoop(e,t,s,r=0,o){return G(()=>{const a=this.checkNumSamples(t,s,o,"steps"),i=[];if(r>0)throw new De("Verbose mode is not implemented yet.");if(o!=null)throw new De("steps mode in testLoop() is not implemented yet");{const c=Yh(a,s),u=Dn(Ts(0,a));for(let l=0;l<c.length;++l){const d=c[l][0],h=c[l][1],p=wo(u,d,h-d),f=Up(t,p),m=e(f);if(l===0)for(let g=0;g<m.length;++g)i.push(Se(0));for(let g=0;g<m.length;++g){const b=m[g];i[g]=ee(i[g],R(h-d,b))}}for(let l=0;l<i.length;++l)i[l]=ke(i[l],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const r=e[s];let o=r;if(cx(e,r)>1){const a=cx(e.slice(0,s),r);o+=`_${a}`}t.push(o)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),o=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:s[m]});const h=new kr(d),p=dc(this.outputs,h,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let b=g(r[m],p[m]);o[m]!=null&&(b=nM(b,o[m]));const x=St(b);t.push(x),m===0?f=b:f=ee(f,b)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const b=this.metricsTensors[m][0],x=this.metricsTensors[m][1];g=St(b(r[x],p[x]))}Us(g),a.push(g)}return f=St(f),this.calculateLosses().forEach(m=>{f=ee(f,m)}),f},c=this.collectedTrainableWeights.map(d=>d.read()),u=!0;return[this.optimizer_.minimize(i,u,c)].concat(a)}}makeTestFunction(){this.testFunction=e=>G(()=>{const t=[];let s;const r=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:r[u]});const i=new kr(a),c=dc(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){const l=this.lossFunctions[u],d=St(l(o[u],c[u]));u===0?s=d:s=ee(s,d),t.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const l=this.metricsTensors[u][0],d=this.metricsTensors[u][1],h=St(l(o[d],c[d]));t.push(h)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let r,o,a,i,c,u,l,d,h;try{const p=s.batchSize==null?32:s.batchSize;Kh(p);const f=!1,m=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,f,p);r=m[0],o=m[1],h=m[2];let g=!1,b;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)c=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new De("validationData including sample weights is not supported yet."):new A(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const N=!0,T=await this.standardizeUserData(c,u,null,null,N,p);l=T[0],d=T[1],b=l.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const N=Math.floor(r[0].shape[0]*(1-s.validationSplit)),T=r[0].shape[0];l=ac(r,N,T),a=r,r=ac(r,0,N),d=ac(o,N,T),i=o,o=ac(o,0,N),b=l.concat(d)}else s.validationSteps!=null&&(g=!0);const x=r.concat(o).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),w=this.getDedupedMetricsNames();let I,k;g?(this.makeTestFunction(),I=this.testFunction,k=w.slice().concat(w.map(N=>"val_"+N))):(I=null,b=[],k=w.slice());const $=m1(s.callbacks,s.yieldEvery);return await this.fitLoop(y,x,w,p,s.epochs,s.verbose,$,I,b,s.shuffle,k,s.initialEpoch,null,null)}finally{this.isTraining=!1,ws(r,e),ws(o,t),ws(a,e),ws(i,t),ws(l,c),ws(d,u),h!=null&&Pe(h)}}async fitLoop(e,t,s,r,o,a,i,c,u,l,d,h,p,f){r==null&&(r=32),o==null&&(o=1),l==null&&(l=!0),h==null&&(h=0);let m=!1;if(c!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new A("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,r,p,"steps_per_epoch");let b;g!=null&&(b=Ts(0,g)),a==null&&(a=1);const{callbackList:x,history:y}=g1(i,a,o,h,g,p,r,m,d);x.setModel(this),this.history=y,await x.onTrainBegin(),this.stopTraining_=!1;for(let w=h;w<o;++w){await x.onEpochBegin(w);const I={};if(p!=null)throw new De("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new De("batch shuffling is not implemneted yet");l&&OS(b);const k=Dn(b),$=Yh(g,r);for(let C=0;C<$.length;++C){const N={};if(await x.onBatchBegin(C,N),G(()=>{const T=$[C][0],_=$[C][1],O=wo(k,T,_-T);N.batch=C,N.size=_-T;const P=Up(t,O),V=e(P);for(let B=0;B<s.length;++B){const W=s[B],q=V[B];N[W]=q,Us(q)}if(C===$.length-1&&m){const B=this.testLoop(c,u,r);for(let W=0;W<s.length;++W){const q=s[W],z=B[W];Us(z),I["val_"+q]=z}}}),await x.onBatchEnd(C,N),f1(N),this.stopTraining_)break}k.dispose()}if(await x.onEpochEnd(w,I),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return oM(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),r=s[0],o=s[1],i=this.makeTrainFunction()(r.concat(o)),c=[];for(const u of i){const l=await u.data();c.push(l[0])}return Pe(i),ws(s[0],e),ws(s[1],t),wn(c)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,r=s?this.trainableWeights:this.weights,o=this.getWeights(s);for(let a=0;a<r.length;++a)s&&!r[a].trainable||t.push({name:r[a].originalName,tensor:o[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=Ep().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ep().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=cr(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>cr(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const r of t)if(typeof s[r]=="string")e[r]=cr(s[r]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[cr(Cu(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>cr(Cu(e)));{const e={};for(const t in this.metrics)e[t]=cr(Cu(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Vp(e.optimizer_config),s=dr(t);let r;if(typeof e.loss=="string")r=co(e.loss);else if(Array.isArray(e.loss))r=e.loss.map(a=>co(a));else if(e.loss!=null){r={};for(const a in e.loss)r[a]=co(e.loss[a])}let o;if(Array.isArray(e.metrics))o=e.metrics.map(a=>co(a));else if(e.metrics!=null){o={};for(const a in e.metrics)o[a]=co(e.metrics[a])}this.compile({loss:r,metrics:o,optimizer:s})}async save(e,t){if(typeof e=="string"){const u=_2(e);if(u.length===0)throw new A(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new A(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new A("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await Ub(this.getNamedWeights(t)),r=!1,o=null,i={modelTopology:this.toJSON(o,r),format:pM,generatedBy:`TensorFlow.js tfjs-layers v${$1}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:l,specs:d}=await Ub(await this.optimizer.getWeights(),u);s.specs.push(...d),s.data=N0([s.data,l])}return this.userDefinedMetadata!=null&&(yx(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=s.data,i.weightSpecs=s.specs,e.save(i)}setUserDefinedMetadata(e){yx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}fa.className="Model";Q(fa);class T1 extends fa{}T1.className="Functional";Q(T1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sc extends fa{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:gh("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new A(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Sc||e instanceof fa;let s;if(t){if(s=e,s.outputs.length!==1)throw new A("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new A("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new A("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const r=gO({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(r)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new A(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new A("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=l1(this.outputs[0])}this.inboundNodes=[],new xh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ao(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(r=>r.shape),outputShapes:this.outputs[0].shape})}else{const r=e.apply(this.outputs[0]);if(Array.isArray(r))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[r],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(je(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new fa({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new us("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new us("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new us("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new us("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},r=!1){let o,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new A("Legacy serialization format not supported yet.");o=t}else v(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),o=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Sc))throw new De(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const c of o){const l=dr(c,void 0,r);r&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new A("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new A("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Sc.className="Sequential";Q(Sc);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Cn extends Pi{getConfig(){return{}}}class E1 extends Cn{apply(e,t=1){return nO(e,t)}}E1.className="elu";Q(E1);class _1 extends Cn{apply(e){return xw(e)}}_1.className="selu";Q(_1);class R1 extends Cn{apply(e){return xr(e)}}R1.className="relu";Q(R1);class A1 extends Cn{apply(e){return G(()=>Vl(6,xr(e)))}}A1.className="relu6";Q(A1);class D1 extends Cn{apply(e){return e}}D1.className="linear";Q(D1);class F1 extends Cn{apply(e){return Bi(e)}}F1.className="sigmoid";Q(F1);class O1 extends Cn{apply(e){return rO(e)}}O1.className="hardSigmoid";Q(O1);class M1 extends Cn{apply(e){return zl(e)}}M1.className="softplus";Q(M1);class L1 extends Cn{apply(e){return sO(e)}}L1.className="softsign";Q(L1);class P1 extends Cn{apply(e){return Jf(e)}}P1.className="tanh";Q(P1);class yg extends Cn{apply(e,t=-1){return gm(e,t)}}yg.className="softmax";Q(yg);class B1 extends Cn{apply(e,t=-1){return sw(e,t)}}B1.className="logSoftmax";Q(B1);class z1 extends Cn{apply(e,t=1){return G(()=>R(Bi(R(e,t)),e))}}z1.className="swish";Q(z1);class V1 extends Cn{apply(e){return G(()=>R(e,Jf(zl(e))))}}V1.className="mish";Q(V1);function Dr(n){return n.getClassName()}function Zh(n,e={}){return Gl(n,as.getMap().classNameMap,e,"activation")}function Fr(n){if(n==null){const e={};return e.className="linear",e.config={},Zh(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Zh(e)}else return n instanceof Cn?n:Zh(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function fM(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class W1 extends Pi{}class U1 extends W1{constructor(e){super(),fM(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return G(()=>{let t=Ht([1]);return this.hasL1&&(t=ee(t,ye(R(this.l1,Mt(e))))),this.hasL2&&(t=ee(t,ye(R(this.l2,jl(e))))),M(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}U1.className="L1L2";Q(U1);const Cx={l1l2:"L1L2"};function st(n){return og(n)}function Sx(n,e={}){return Gl(n,as.getMap().classNameMap,e,"regularizer")}function It(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in Cx?Cx[n]:n,config:{}};return Sx(t)}else return n instanceof W1?n:Sx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class G1 extends Be{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ce(e);let s=xr(e);return this.maxValue!=null&&(s=Zn(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}G1.className="ReLU";Q(G1);class H1 extends Be{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ce(e);return om(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}H1.className="LeakyReLU";Q(H1);class j1 extends Be{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=wt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=It(e.alphaRegularizer),this.alphaConstraint=Vt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new A(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=je(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const r of this.sharedAxes)t[r-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let r=1;r<e.length;++r)s[r]=e[r];this.inputSpec=[new Pt({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=Ce(e),hm(e,this.alpha.read())}getConfig(){const e={alphaInitializer:$t(this.alphaInitializer),alphaRegularizer:st(this.alphaRegularizer),alphaConstraint:zt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}j1.className="PReLU";Q(j1);class q1 extends Be{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new De(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ce(e);return nh(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}q1.className="ELU";Q(q1);class X1 extends Be{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=Ce(e);return R(s,he(es(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}X1.className="ThresholdedReLU";Q(X1);class K1 extends Be{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new yg().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){const s=Ce(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}K1.className="Softmax";Q(K1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ma(n,e,t){if(typeof n=="number")return Ao(n,e);if(n.length!==e)throw new A(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const r=n[s];if(!JF(r))throw new A(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${r}`)}return n}function Ns(n,e,t,s,r=1){if(n==null)return n;const o=e+(e-1)*(r-1);let a;return t==="same"?a=n:a=n-o+1,Math.floor((a+s-1)/s)}function Bs(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+Ar([t-e,0]);else if(s==="same")n=n*e;else throw new A(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wg(n,e){return G(()=>(Et(e),e==="channelsFirst"?We(n,[0,2,3,1]):n))}function Y1(n,e){return G(()=>(Et(e),e==="channelsFirst"?We(n,[0,2,3,4,1]):n))}function mM(n,e,t,s=1,r="valid",o,a=1){return G(()=>{if(o==null&&(o=Es()),Et(o),n.shape.length!==3)throw new A(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new A(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new A(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(o==="channelsFirst"&&(n=We(n,[0,2,1])),r==="causal")throw new De("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=X0(n,e,s,r==="same"?"same":"valid","NWC",a);return t!=null&&(i=Fs(i,t)),i})}function Nx(n,e,t,s=[1,1],r="valid",o,a,i=null){return G(()=>{if(o==null&&(o=Es()),Et(o),n.rank!==3&&n.rank!==4)throw new A(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new A(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let c=wg(n,o);if(r==="causal")throw new De("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=mR({x:c,filter:e,strides:s,pad:r==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),o==="channelsFirst"&&(c=We(c,[0,3,1,2])),c})}function gM(n,e,t,s=[1,1,1],r="valid",o,a){return G(()=>{if(o==null&&(o=Es()),Et(o),n.rank!==4&&n.rank!==5)throw new A(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new A(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=Y1(n,o);if(r==="causal")throw new De("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=ET(i,e,s,r==="same"?"same":"valid","NDHWC",a),t!=null&&(i=Fs(i,t)),o==="channelsFirst"&&(i=We(i,[0,4,1,2,3])),i})}class Ih extends Be{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Ih.verifyArgs(t),this.rank=e,jt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new De(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ma(t.kernelSize,e,"kernelSize"),this.strides=ma(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,ts(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Et(this.dataFormat),this.activation=Fr(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=wt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Vt(t.biasConstraint),this.biasRegularizer=It(t.biasRegularizer),this.activityRegularizer=It(t.activityRegularizer),this.dilationRate=ma(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new A(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new A(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new A(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Ps("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!ag(e.kernelSize,"number",1,3))throw new A(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Dr(this.activation),useBias:this.useBias,biasInitializer:$t(this.biasInitializer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Wi extends Ih{constructor(e,t){super(e,t),this.kernel=null,Wi.verifyArgs(t),this.filters=t.filters,jt(this.filters,"filters"),this.kernelInitializer=wt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Vt(t.kernelConstraint),this.kernelRegularizer=It(t.kernelRegularizer)}build(e){e=je(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new A(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],r=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return G(()=>{e=Ce(e);let s;const r=this.bias==null?null:this.bias.read(),o=Xw(this.activation.getClassName());if(o!=null&&this.rank===2)s=Nx(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate,o);else{if(this.rank===1)s=mM(e,this.kernel.read(),r,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=Nx(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=gM(e,this.kernel.read(),r,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new De("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=je(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let o=0;o<s.length;++o){const a=Ns(s[o],this.kernelSize[o],this.padding,this.strides[o],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[o]);t.push(a)}let r=[e[0]];return this.dataFormat==="channelsLast"?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:$t(this.kernelInitializer),kernelRegularizer:st(this.kernelRegularizer),kernelConstraint:zt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new A(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Yl extends Wi{constructor(e){super(2,e),Yl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ag(e.kernelSize,"number",1,2))throw new A(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Yl.className="Conv2D";Q(Yl);class Zl extends Wi{constructor(e){super(3,e),Zl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new A(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Zl.className="Conv3D";Q(Zl);class Z1 extends Yl{constructor(e){if(super(e),this.inputSpec=[new Pt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new A(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=je(e),e.length!==4)throw new A("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new A("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return G(()=>{let s=Ce(e);if(s.shape.length!==4)throw new A(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);const c=r[a],u=r[i],l=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],f=Bs(c,h,l,this.padding),m=Bs(u,p,d,this.padding),g=[o,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=We(s,[0,2,3,1]));let b=K0(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(b=We(b,[0,3,1,2])),this.bias!=null&&(b=Fs(b,this.bias.read(),this.dataFormat)),this.activation!=null&&(b=this.activation.apply(b)),b})}computeOutputShape(e){e=je(e);const t=e.slice();let s,r,o;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3):(s=3,r=1,o=2);const a=this.kernelSize[0],i=this.kernelSize[1],c=this.strides[0],u=this.strides[1];return t[s]=this.filters,t[r]=Bs(t[r],c,a,this.padding),t[o]=Bs(t[o],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Z1.className="Conv2DTranspose";Q(Z1);class J1 extends Zl{constructor(e){if(super(e),this.inputSpec=[new Pt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new A(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=je(e),e.length!==5)throw new A("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new A("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],r=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return G(()=>{let s=Ce(e);if(s.shape.length!==5)throw new A(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const r=s.shape,o=r[0];let a,i,c;this.dataFormat==="channelsFirst"?(c=2,a=3,i=4):(c=1,a=2,i=3);const u=r[c],l=r[a],d=r[i],h=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],b=this.strides[2],x=Bs(u,m,h,this.padding),y=Bs(l,g,p,this.padding),w=Bs(d,b,f,this.padding),I=[o,x,y,w,this.filters];this.dataFormat!=="channelsLast"&&(s=We(s,[0,2,3,4,1]));let k=AT(s,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=We(k,[0,4,1,2,3])),this.bias!==null&&(k=Fs(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(e){e=je(e);const t=e.slice();let s,r,o,a;this.dataFormat==="channelsFirst"?(s=1,r=2,o=3,a=4):(s=4,r=1,o=2,a=3);const i=this.kernelSize[0],c=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],d=this.strides[1],h=this.strides[2];return t[s]=this.filters,t[r]=Bs(t[r],l,i,this.padding),t[o]=Bs(t[o],d,c,this.padding),t[a]=Bs(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}J1.className="Conv3DTranspose";Q(J1);class Q1 extends Wi{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new A("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new A("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new A(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=wt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=It(t.depthwiseRegularizer),this.depthwiseConstraint=Vt(t.depthwiseConstraint),this.pointwiseInitializer=wt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=It(t.pointwiseRegularizer),this.pointwiseConstraint=Vt(t.pointwiseConstraint)}build(e){if(e=je(e),e.length<this.rank+2)throw new A(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new A(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],r=this.kernelSize.concat([s,this.depthMultiplier]),o=[];for(let i=0;i<this.rank;++i)o.push(1);o.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",o,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Pt({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return G(()=>{e=Ce(e);let s;if(this.rank===1)throw new De("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=We(e,[0,2,3,1])),s=yw(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Fs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=We(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=$t(this.depthwiseInitializer),e.pointwiseInitializer=$t(this.pointwiseInitializer),e.depthwiseRegularizer=st(this.depthwiseRegularizer),e.pointwiseRegularizer=st(this.pointwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseConstraint),e.pointwiseConstraint=zt(this.pointwiseConstraint),e}}Q1.className="SeparableConv";class eI extends Q1{constructor(e){super(2,e)}}eI.className="SeparableConv2D";Q(eI);class kh extends Wi{constructor(e){super(1,e),kh.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ag(e.kernelSize,"number",1,1))throw new A(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}kh.className="Conv1D";Q(kh);class tI extends Be{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return G(()=>{if(e=Ce(e),this.dataFormat==="channelsLast"){const s=vu(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return vu(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=vu(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return vu(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}tI.className="Cropping2D";Q(tI);class nI extends Be{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,KF(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return G(()=>{let s=Ce(e);const r=s.shape;if(this.dataFormat==="channelsFirst"){s=We(s,[0,2,3,1]);const o=this.size[0]*r[2],a=this.size[1]*r[3],i=this.interpolation==="nearest"?fo.resizeNearestNeighbor(s,[o,a]):fo.resizeBilinear(s,[o,a]);return We(i,[0,3,1,2])}else{const o=this.size[0]*r[1],a=this.size[1]*r[2];return this.interpolation==="nearest"?fo.resizeNearestNeighbor(s,[o,a]):fo.resizeBilinear(s,[o,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}nI.className="UpSampling2D";Q(nI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function bM(n,e,t=[1,1],s="valid",r,o){return G(()=>{r==null&&(r=Es()),Et(r);let a=wg(n,r);if(n.rank!==4)throw new A(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new A(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=nm(a,e,t,s==="same"?"same":"valid","NHWC",o),r==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}class sI extends Ih{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=wt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Vt(e.depthwiseConstraint),this.depthwiseRegularizer=It(e.depthwiseRegularizer)}build(e){if(e=je(e),e.length<4)throw new A(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new A(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],r=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{e=Ce(e);let s=bM(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Fs(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=je(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,o=Ns(t,this.kernelSize[0],this.padding,this.strides[0]),a=Ns(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],r,o,a]:[e[0],o,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=$t(this.depthwiseInitializer),e.depthwiseRegularizer=st(this.depthwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseRegularizer),e}}sI.className="DepthwiseConv2D";Q(sI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function rI(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new A("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function r(o){return o==null||Array.isArray(o)?o:[o]}return e=r(e),t=r(t),{inputs:n,initialState:e,constants:t}}function oI(n,e,t,s=!1,r,o,a=!1,i=!1){return G(()=>{const c=e.shape.length;if(c<3)throw new A(`Input should be at least 3D, but is ${c}D.`);const u=[1,0].concat(Ts(2,c));if(e=We(e,u),o!=null)throw new De("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),r!=null&&(r=he(he(r,"bool"),"float32"),r.rank===c-1&&(r=_n(r,-1)),r=We(r,u)),s&&(e=Eo(e,0),r!=null&&(r=Eo(r,0)));const l=[];let d,h=t;const p=e.shape[0],f=_o(e);let m;r!=null&&(m=_o(r));for(let b=0;b<p;++b){const x=f[b],y=G(()=>n(x,h));if(r==null)d=y[0],h=y[1];else{const w=G(()=>{const I=m[b],k=xe(ms(I),I),$=ee(R(y[0],I),R(h[0],k)),C=h.map((N,T)=>ee(R(y[1][T],I),R(N,k)));return{output:$,newStates:C}});d=w.output,h=w.newStates}i&&l.push(d)}let g;return i&&(g=Rr(l,1)),[d,g,h]})}class qr extends Be{constructor(e){super(e);let t;if(e.cell==null)throw new A("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new $g({cells:e.cell}):t=e.cell,t.stateSize==null)throw new A("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Pt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ts(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){Pp(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let r;if(this.returnSequences?r=[e[0],e[1],s]:r=[e[0],s],this.returnState){const o=[];for(const a of t)o.push([e[0],a]);return[r].concat(o)}else return r}computeMask(e,t){return G(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const r=this.states.map(o=>null);return[s].concat(r)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new De("Constants support is not implemented in RNN yet.");Pp(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Pt({shape:[t,null,...s]});const r=[e[0]].concat(e.slice(2));this.cell.build(r);let o;if(Array.isArray(this.cell.stateSize)?o=this.cell.stateSize:o=[this.cell.stateSize],this.stateSpec!=null){if(!Ke(this.stateSpec.map(a=>a.shape[a.shape.length-1]),o))throw new A(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=o.map(a=>new Pt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new Ls("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new A("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Ht([s,r])):this.states_=[Ht([s,this.cell.stateSize])];else if(e==null)Pe(this.states_),this.keptStates!=null&&(Pe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(r=>Ht([s,r])):this.states_[0]=Ht([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new A(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Pe(this.states_);for(let r=0;r<this.states_.length;++r){const o=e[r],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[r]:this.cell.stateSize,i=[s,a];if(!Ke(o.shape,i))throw new A(`State ${r} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${o.shape}`);this.states_[r]=o}}this.states_=this.states_.map(r=>Us(r.clone()))})}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=rI(e,s,r,this.numConstants);e=o.inputs,s=o.initialState,r=o.constants;let a=[],i=[];if(s!=null){t.initialState=s,a=a.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Pt({shape:u.shape}));i=i.concat(this.stateSpec)}if(r!=null&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof zs){const u=[e].concat(a),l=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=l;const h=super.apply(u,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return G(()=>{const s=t==null?null:t.mask,r=t==null?null:t.training;let o=t==null?null:t.initialState;e=Ce(e),o==null&&(this.stateful?o=this.states_:o=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(o.length!==a)throw new A(`RNN Layer has ${a} state(s) but was passed ${o.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},u=oI((f,m)=>{const g=this.cell.call([f].concat(m),i);return[g[0],g.slice(1)]},e,o,this.goBackwards,s,null,this.unroll,this.returnSequences),l=u[0],d=u[1],h=u[2];this.stateful&&this.resetStates(h,r);const p=this.returnSequences?d:l;return this.returnState?[p].concat(h):p})}getInitialState(e){return G(()=>{let t=Ht(e.shape);return t=ye(t,[1,2]),t=Hl(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Mp(t,[1,s]):t):this.cell.stateSize>1?[Mp(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===qr.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const r=t.cell,o=dr(r,s);return new e(Object.assign(t,{cell:o}))}}qr.className="RNN";Q(qr);class $h extends Be{}class Ig extends $h{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jt(this.units,"units"),this.activation=Fr(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=It(e.kernelRegularizer),this.recurrentRegularizer=It(e.recurrentRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.kernelConstraint=Vt(e.kernelConstraint),this.recurrentConstraint=Vt(e.recurrentConstraint),this.biasConstraint=Vt(e.biasConstraint),this.dropout=Ta([1,Ar([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ta([1,Ar([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=je(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new A(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const r=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Or({ones:()=>ms(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Or({ones:()=>ms(s),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));let o;const a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?o=Hs(R(e,a),this.kernel.read()):o=Hs(e,this.kernel.read()),this.bias!=null&&(o=Fs(o,this.bias.read())),i!=null&&(s=R(s,i));let c=ee(o,Hs(s,this.recurrentKernel.read()));return this.activation!=null&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Dr(this.activation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),recurrentInitializer:$t(this.recurrentInitializer),biasInitializer:$t(this.biasInitializer),kernelRegularizer:st(this.kernelRegularizer),recurrentRegularizer:st(this.recurrentRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Ig.className="SimpleRNNCell";Q(Ig);class aI extends qr{constructor(e){e.cell=new Ig(e),super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return new e(t)}}aI.className="SimpleRNN";Q(aI);class kg extends $h{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new A("GRUCell does not support reset_after parameter set to true.");this.units=e.units,jt(this.units,"units"),this.activation=Fr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Fr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=It(e.kernelRegularizer),this.recurrentRegularizer=It(e.recurrentRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.kernelConstraint=Vt(e.kernelConstraint),this.recurrentConstraint=Vt(e.recurrentConstraint),this.biasConstraint=Vt(e.biasConstraint),this.dropout=Ta([1,Ar([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ta([1,Ar([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=je(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new A(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Or({ones:()=>ms(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Or({ones:()=>ms(r),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const o=this.dropoutMask,a=this.recurrentDropoutMask;let i,c,u;0<this.dropout&&this.dropout<1&&(e=R(e,o[0]));let l=Hs(e,this.kernel.read());this.useBias&&(l=Fs(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=R(r,a[0]));const d=this.recurrentKernel.read(),[h,p]=Xn(d,[2*this.units,this.units],d.rank-1),f=Hs(r,h),[m,g,b]=Xn(l,3,l.rank-1),[x,y]=Xn(f,2,f.rank-1);i=this.recurrentActivation.apply(ee(m,x)),c=this.recurrentActivation.apply(ee(g,y));const w=Hs(R(c,r),p);u=this.activation.apply(ee(b,w));const I=ee(R(i,r),R(ee(1,vt(i)),u));return[I,I]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Dr(this.activation),recurrentActivation:Dr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),recurrentInitializer:$t(this.recurrentInitializer),biasInitializer:$t(this.biasInitializer),kernelRegularizer:st(this.kernelRegularizer),recurrentRegularizer:st(this.recurrentRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}kg.className="GRUCell";Q(kg);class iI extends qr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new kg(e),super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}iI.className="GRU";Q(iI);class vh extends $h{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jt(this.units,"units"),this.activation=Fr(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Fr(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=It(e.kernelRegularizer),this.recurrentRegularizer=It(e.recurrentRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.kernelConstraint=Vt(e.kernelConstraint),this.recurrentConstraint=Vt(e.recurrentConstraint),this.biasConstraint=Vt(e.biasConstraint),this.dropout=Ta([1,Ar([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ta([1,Ar([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=je(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let r;if(this.useBias){if(this.unitForgetBias){const o=this.biasInitializer,a=this.units;r=new(t=class extends gs{apply(c,u){const l=o.apply([a]),d=new cg().apply([a]),h=o.apply([a*2]);return ux(ux(l,d),h)}},t.className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return G(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new A(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const o=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Or({ones:()=>ms(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Or({ones:()=>ms(r),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let c,u,l,d;0<this.dropout&&this.dropout<1&&(e=R(e,a[0]));let h=Hs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=R(r,i[0])),h=ee(h,Hs(r,this.recurrentKernel.read())),this.useBias&&(h=Fs(h,this.bias.read()));const[p,f,m,g]=Xn(h,4,h.rank-1);c=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),l=ee(R(u,o),R(c,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const b=R(d,this.activation.apply(l));return[b,b,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Dr(this.activation),recurrentActivation:Dr(this.recurrentActivation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),recurrentInitializer:$t(this.recurrentInitializer),biasInitializer:$t(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:st(this.kernelRegularizer),recurrentRegularizer:st(this.recurrentRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}vh.className="LSTMCell";Q(vh);class cI extends qr{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new vh(e),super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}cI.className="LSTM";Q(cI);class $g extends $h{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return G(()=>{e=e;let s=e.slice(1);const r=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?r.push(s.splice(0,i.stateSize.length)):r.push(s.splice(0,1));r.reverse();const o=[];let a;for(let i=0;i<this.cells.length;++i){const c=this.cells[i];s=r[i],i===0?a=[e[0]].concat(s):a=[a[0]].concat(s),a=c.call(a,t),o.push(a.slice(1))}s=[];for(const i of o.slice().reverse())s.push(...i);return[a[0]].concat(s)})}build(e){Pp(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,r)=>{yo(`RNNCell_${r}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=o=>({className:o.getClassName(),config:o.getConfig()}),r={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),r)}static fromConfig(e,t,s={}){const r=[];for(const o of t.cells)r.push(dr(o,s));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Bp(e)}setWeights(e){const t=[];for(const s of this.cells){const r=s.weights.length,o=e.splice(r);for(let a=0;a<s.weights.length;++a)t.push([s.weights[a],o[a]])}mg(t)}}$g.className="StackedRNNCells";Q($g);function Or(n){const{ones:e,rate:t,training:s=!1,count:r=1,dropoutFunc:o}=n,a=()=>o!=null?o(e(),t):t1(e(),t),i=()=>ql(a,e,s);return!r||r<=1?Us(i().clone()):Array(r).fill(void 0).map(i).map(u=>Us(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var xM=globalThis&&globalThis.__rest||function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var r=0,s=Object.getOwnPropertySymbols(n);r<s.length;r++)e.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(n,s[r])&&(t[s[r]]=n[s[r]]);return t};class lI extends qr{constructor(e){if(e.unroll)throw new De("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new De("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Pt({ndim:5})]}call(e,t){return G(()=>{if(this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new A("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,r=t==null?null:t.training,o=t==null?null:t.initialState;return super.call(e,{mask:s,training:r,initialState:o})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return G(()=>{const{stateSize:t}=this.cell,s=e.shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)],a=Ht(o);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new Ls("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,r=this.computeSingleOutputShape(s),o=[r[0],...r.slice(2)];if(s[0]==null)throw new A("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(o)):this.states_=[Ht(o)];else if(e==null)Pe(this.states_),this.keptStates!=null&&(Pe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(o)):this.states_[0]=Ht(o);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new A(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Pe(this.states_);for(let i=0;i<this.states_.length;++i){const c=e[i],u=o;if(!Ke(c.shape,u))throw new A(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${c.shape}`);this.states_[i]=c}}this.states_=this.states_.map(i=>Us(i.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:r,padding:o,strides:a,dilationRate:i}=this.cell,c=t==="channelsFirst",u=e[c?3:2],l=e[c?4:3],d=Ns(u,r[0],o,a[0],i[0]),h=Ns(l,r[1],o,a[1],i[1]);return[...e.slice(0,2),...c?[s,d,h]:[d,h,s]]}}lI.className="ConvRNN2D";class vg extends vh{constructor(e){const{filters:t,kernelSize:s,strides:r,padding:o,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,jt(this.filters,"filters"),this.kernelSize=ma(s,2,"kernelSize"),this.kernelSize.forEach(c=>jt(c,"kernelSize")),this.strides=ma(r||1,2,"strides"),this.strides.forEach(c=>jt(c,"strides")),this.padding=o||"valid",ts(this.padding),this.dataFormat=a||"channelsLast",Et(this.dataFormat),this.dilationRate=ma(i||1,2,"dilationRate"),this.dilationRate.forEach(c=>jt(c,"dilationRate"))}build(e){var t;e=je(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new A(`The channel dimension of the input should be defined. Found ${e[s]}`);const r=e[s],o=4,a=this.kernelSize.concat([r,this.filters*o]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*o]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let c;if(this.unitForgetBias){const u=this.biasInitializer,l=this.filters;c=new(t=class extends gs{apply(h,p){const f=u.apply([l]),m=Gr([l]),g=u.apply([l*2]);return ig([f,m,g])}},t.className="CustomInit",t)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*o],null,c,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return G(()=>{if(e.length!==3)throw new A(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,r=e[0],o=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Or({ones:()=>ms(r),rate:this.dropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,u=(Y,Z,ne)=>!Z||!Z[ne]?Y:R(Z[ne],Y);let l=u(r,c,0),d=u(r,c,1),h=u(r,c,2),p=u(r,c,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Or({ones:()=>ms(o),rate:this.recurrentDropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=u(o,f,0),g=u(o,f,1),b=u(o,f,2),x=u(o,f,3);const y=3,[w,I,k,$]=Xn(this.kernel.read(),i,y),[C,N,T,_]=this.useBias?Xn(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,w,C,this.padding),d=this.inputConv(d,I,N,this.padding),h=this.inputConv(h,k,T,this.padding),p=this.inputConv(p,$,_,this.padding);const[O,P,V,B]=Xn(this.recurrentKernel.read(),i,y);m=this.recurrentConv(m,O),g=this.recurrentConv(g,P),b=this.recurrentConv(b,V),x=this.recurrentConv(x,B);const W=this.recurrentActivation.apply(ee(l,m)),q=this.recurrentActivation.apply(ee(d,g)),z=ee(R(q,a),R(W,this.activation.apply(ee(h,b)))),X=R(this.recurrentActivation.apply(ee(p,x)),this.activation.apply(z));return[X,X,z]})}getConfig(){const e=super.getConfig(),t=xM(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,r){const o=So(e,t,this.strides,r||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Fs(o,s,this.dataFormat):o}recurrentConv(e,t){return So(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}vg.className="ConvLSTM2DCell";Q(vg);class uI extends lI{constructor(e){const t=new vg(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}uI.className="ConvLSTM2D";Q(uI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Cg extends Be{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let r=0;r<this.noiseShape.length;++r)s.push(this.noiseShape[r]==null?t[r]:this.noiseShape[r]);return s}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e);if(0<this.rate&&this.rate<1){const r=t.training==null?!1:t.training,o=this.getNoiseShape(s);return ql(()=>t1(s,this.rate,o,this.seed),()=>s,r)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Cg.className="Dropout";Q(Cg);class dI extends Cg{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}dI.className="SpatialDropout1D";Q(dI);class hI extends Be{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,jt(this.units,"units"),this.activation=Fr(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Vt(e.kernelConstraint),this.biasConstraint=Vt(e.biasConstraint),this.kernelRegularizer=It(e.kernelRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.activityRegularizer=It(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=je(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=je(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e),r=Xw(this.activation.getClassName());let o;return r!=null?o=Hs(s,this.kernel.read(),r,this.bias?this.bias.read():null):(o=Hs(s,this.kernel.read()),this.bias!=null&&(o=Fs(o,this.bias.read())),this.activation!=null&&(o=this.activation.apply(o))),o})}getConfig(){const e={units:this.units,activation:Dr(this.activation),useBias:this.useBias,kernelInitializer:$t(this.kernelInitializer),biasInitializer:$t(this.biasInitializer),kernelRegularizer:st(this.kernelRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}hI.className="Dense";Q(hI);class pI extends Be{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=je(e);for(const t of e.slice(1))if(t==null)throw new A(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Tr(e,1)]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let s=Ce(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const r=[0];for(let o=2;o<s.rank;++o)r.push(o);r.push(1),s=We(s,r)}return tO(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}pI.className="Flatten";Q(pI);class fI extends Be{constructor(e){super(e),this.supportsMasking=!0,this.activation=Fr(e.activation)}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e);return this.activation.apply(s)})}getConfig(){const e={activation:Dr(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}fI.className="Activation";Q(fI);class mI extends Be{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return G(()=>(e=Ce(e),QF(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}mI.className="RepeatVector";Q(mI);class gI extends Be{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",r=t.slice();let o=1,a=null;for(let c=0;c<r.length;++c){const u=r[c];if(this.isUnknown(u))if(a===null)a=c;else throw new A("Can only specifiy one unknown dimension.");else o*=u}const i=Tr(e);if(a!==null){if(o===0||i%o!==0)throw new A(s);r[a]=i/o}else if(i!==o)throw new A(s);return r}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e),r=s.shape,o=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return M(s,o)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}gI.className="Reshape";Q(gI);class bI extends Be{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ts(1,e.dims.length+1);if(!Ke(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Pt({ndim:this.dims.length+1})]}computeOutputShape(e){e=je(e);const t=e.slice();return this.dims.forEach((s,r)=>{t[r+1]=e[s]}),t}call(e,t){return We(Ce(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}bI.className="Permute";Q(bI);class xI extends Be{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=Ce(e),r=-1;return Rp(Ic(s,this.maskValue),r)}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e),r=-1,o=!0,a=Rp(Ic(s,this.maskValue),r,o);return R(s,he(a,s.dtype))})}}xI.className="Masking";Q(xI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class yI extends Be{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ft(e.inputLength))}this.inputDim=e.inputDim,jt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,jt(this.outputDim,"outputDim"),this.embeddingsInitializer=wt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=It(e.embeddingsRegularizer),this.activityRegularizer=It(e.activityRegularizer),this.embeddingsConstraint=Vt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return G(()=>this.maskZero?(e=Ce(e),Ic(e,Ge(e))):null)}computeOutputShape(e){if(e=je(e),this.inputLength==null)return[...e,this.outputDim];const t=ft(this.inputLength);if(t.length!==e.length-1)throw new A(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let r=0;r<t.length;++r){const o=t[r],a=e[r+1];if(o!=null&&a!=null&&o!==a)throw new A(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);o==null&&(t[s]=a),s++}}return[e[0],...t,this.outputDim]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let s=Ce(e);s.dtype!=="int32"&&(s=Gs(s,"int32"));const r=e1(this.embeddings.read(),M(s,[s.size]));return M(r,je(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:$t(this.embeddingsInitializer),embeddingsRegularizer:st(this.embeddingsRegularizer),activityRegularizer:st(this.activityRegularizer),embeddingsConstraint:zt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}yI.className="Embedding";Q(yI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ko extends Be{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new De}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const o=e[e.length-t.length+r],a=t[r];if(o==null||a==null||o<0||a<0)s.push(null);else if(o===1)s.push(a);else if(a===1)s.push(o);else{if(o!==a)throw new A("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(o)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[je(e)]),e=e,e.length<2)throw new A(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const o of e)o!=null&&o[0]!==null&&t.push(o[0]);if(t=Nr(t),t.length>1)throw new A(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let o=1;o<e.length;++o){const a=e[o]==null?null:e[o].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const r=e.map(o=>o.length);e.indexOf(null)===-1&&Nr(r).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return G(()=>{if(e=e,this.reshapeRequired){const s=[],r=e.map(o=>o.rank);if(r.indexOf(null)===-1){const o=Ar(r);for(let a of e){const i=a.rank;for(let c=0;c<o-i;++c)a=Hl(a,1);s.push(a)}return this.mergeFunction(s)}else{let o=!1;for(const c of e){const u=c.rank;if(u==null){const l=c.shape,d=l[0],h=l.slice(1).concat([d]);let p=M(c,[d].concat(Tr(l.slice(1))));p=We(p,[1,0]),p=M(p,h),s.push(p),o=!0}else if(u>1){const l=Ts(1,u).concat([0]);s.push(We(c,l)),o=!0}else s.push(c)}let a=this.mergeFunction(s);const i=a.rank;if(o){if(i==null){const c=a.shape,u=c.length,l=c[u-1],d=[l].concat(c.slice(0,c.length-1));a=M(We(M(a,[-1,l]),[1,0]),d)}else if(i>1){const c=[i-1].concat(Ts(0,i-1));a=We(a,c)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let r=1;r<e.length;++r){const o=e[r]==null?null:e[r].slice(1);t=this.computeElementwiseOpOutputShape(t,o)}let s=[];for(const r of e)r!=null&&r[0]!==null&&s.push(r[0]);return s=Nr(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return G(()=>{if(t==null)return null;if(!Array.isArray(t))throw new A("`mask` should be an Array");if(!Array.isArray(e))throw new A("`inputs` should be an Array");if(t.length!==e.length)throw new A(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(r=>r==null))return null;t=t.map(r=>r==null?r:_n(r,0));let s=t[0];for(let r=1;r<t.length-1;++r)s=pr(s,t[r]);return s})}}class wI extends Ko{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ee(t,e[s]);return t})}}wI.className="Add";Q(wI);class II extends Ko{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=R(t,e[s]);return t})}}II.className="Multiply";Q(II);class kI extends Ko{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ee(t,e[s]);return R(1/e.length,t)})}}kI.className="Average";Q(kI);class $I extends Ko{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=br(t,e[s]);return t})}}$I.className="Maximum";Q($I);class vI extends Ko{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Vl(t,e[s]);return t})}}vI.className="Minimum";Q(vI);class CI extends Ko{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new A("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const r of e)if(r!=null){t=!1;break}if(t)return;const s=[];for(let r=0;r<e.length;++r){const o=e[r].slice();o.splice(this.axis,1);let a=!1;for(const i of s)if(Ke(i,o)){a=!0;break}a||s.push(o)}if(s.length>1)throw new A("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return G(()=>ig(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new A("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),r=this.axis<0?s.length+this.axis:this.axis;for(const o of t.slice(1)){if(s[r]==null||o[r]==null){s[r]=null;break}s[r]+=o[r]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new A("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new A("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new A(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return G(()=>{let s=!0;if(t.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const r=[];for(let a=0;a<e.length;++a)t[a]==null?r.push(he(ms(e[a]),"bool")):t[a].rank<e[a].rank?r.push(_n(t[a],-1)):r.push(t[a]);const o=on(r,this.axis);return q0(o,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}CI.className="Concatenate";Q(CI);function ic(n,e){for(;n<0;)n+=e;return n}function yM(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new De("batchDot is not implemented for tensors of 4D or higher rank yet");if(v(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),v(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new De("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,r=e.shape.length;t==null&&(t=[s-1,r-2]);const o=t;return G(()=>{let a;if(s>r){a=s-r;const c=[];for(let u=0;u<a;++u)c.push(1);e=M(e,e.shape.concat(c))}else if(r>s){a=r-s;const c=[];for(let u=0;u<a;++u)c.push(1);n=M(n,n.shape.concat(c))}else a=0;let i;if(n.shape.length===2&&e.shape.length===2)o[0]===o[1]?i=ye(R(n,e),o[0]):i=ye(R(We(n,[1,0]),e),o[1]);else{const c=o[0]!==n.shape.length-1,u=o[1]===e.shape.length-1;i=Xe(n,e,c,u)}if(a>0){let c;s>r?c=s+r-3:c=s-1;const u=[];for(let l=c;l<c+a;++l)u.push(l);i=Wl(i,u)}return i.shape.length===1&&(i=_n(i,1)),i})}class SI extends Ko{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){v(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new De("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);if(t[r[0]]!==s[r[1]])throw new A(`Dimension incompatibility: ${t[r[0]]} !== ${s[r[1]]}`)}mergeFunction(e){if(e.length!==2)throw new A(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],r;return Array.isArray(this.axes)?r=this.axes.map((o,a)=>ic(o,e[a].shape.length)):r=[ic(this.axes,t.shape.length),ic(this.axes,s.shape.length)],this.normalize&&(t=ad(t,r[0]),s=ad(s,r[1])),yM(t,s,r)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[ic(this.axes,e.length),ic(this.axes,t.length)],s}computeOutputShape(e){v(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new De("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,s);t.splice(r[0],1),s.splice(r[1],1),s.splice(0,1);const o=t.concat(s);return o.length===1&&o.push(1),o}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}SI.className="Dot";Q(SI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class NI extends Be{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e);return ql(()=>ee(bh(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}NI.className="GaussianNoise";Q(NI);class TI extends Be{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e);return this.rate>0&&this.rate<1?ql(()=>{const o=Math.sqrt(this.rate/(1-this.rate));return R(s,bh(s.shape,1,o))},()=>s,t.training||!1):s})}}TI.className="GaussianDropout";Q(TI);class EI extends Be{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ce(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return ql(()=>{const o=Ce(e),a=1.6732632423543772,i=1.0507009873554805,c=-a*i;let u=Uo(oh(s),this.rate);u=Gs(u,"float32");const l=((1-this.rate)*(1+this.rate*c**2))**-.5,d=-l*c*this.rate,h=ee(R(o,u),R(ee(u,-1),c));return ee(R(h,l),d)},()=>Ce(e),t.training||!1)}return e})}}EI.className="AlphaDropout";Q(EI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Nc(n,e,t,s,r,o=.001){let a;if(n.rank===2)a=oT(n,e,t,s,r,o);else if(n.rank===3)a=iT(n,e,t,s,r,o);else if(n.rank===4)a=lT(n,e,t,s,r,o);else throw new De(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function wM(n,e,t,s,r=.001){return G(()=>{const o=lm(n,s),a=o.mean,i=o.variance;return[Nc(n,a,i,t,e,r),a,i]})}function IM(n,e,t,s,r=.001){return G(()=>{const o=lm(n,s),a=o.mean,i=o.variance,c=[];for(const f of Ts(0,n.rank))s.indexOf(f)!==-1?c.push(1):c.push(n.shape[f]);const u=M(a,c),l=M(i,c),d=e==null?null:M(e,c),h=t==null?null:M(t,c);return[Nc(n,u,l,h,d,r),a,i]})}function kM(n,e,t,s,r=.001){return Ke(s.slice().sort(),Ts(0,n.rank-1))?wM(n,e,t,s,r):IM(n,e,t,s,r)}class _I extends Be{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=wt(e.betaInitializer||"zeros"),this.gammaInitializer=wt(e.gammaInitializer||"ones"),this.movingMeanInitializer=wt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=wt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Vt(e.betaConstraint),this.gammaConstraint=Vt(e.gammaConstraint),this.betaRegularizer=It(e.betaRegularizer),this.gammaRegularizer=It(e.gammaRegularizer)}build(e){e=je(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new A(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Pt({ndim:e.length,axes:{[t]:s}})];const r=[s];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return G(()=>{const s=t.training==null?!1:t.training,r=Ce(e),o=r.shape,a=o.length,i=Ts(0,a),c=this.axis>=0?this.axis:this.axis+a;i.splice(c,1);const u=Ao(1,a);u[c]=o[c];const l=i.slice();l.sort();const d=!Ke(l,Ts(0,a).slice(0,a-1)),h=()=>{if(d){const x=M(this.movingMean.read(),u),y=M(this.movingVariance.read(),u),w=this.center?M(this.beta.read(),u):null,I=this.scale?M(this.gamma.read(),u):null;return Nc(r,x,y,w,I,this.epsilon)}else return Nc(r,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return h();const[p,f,m]=kM(r,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(x,y,w)=>{G(()=>{const I=1-w,k=x.read(),$=R(xe(k,y),I);x.write(xe(k,$))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:$t(this.betaInitializer),gammaInitializer:$t(this.gammaInitializer),movingMeanInitializer:$t(this.movingMeanInitializer),movingVarianceInitializer:$t(this.movingVarianceInitializer),betaRegularizer:st(this.betaRegularizer),gammaRegularizer:st(this.gammaRegularizer),betaConstraint:zt(this.betaConstraint),gammaConstraint:zt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}_I.className="BatchNormalization";Q(_I);class RI extends Be{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=wt(e.betaInitializer||"zeros"),this.gammaInitializer=wt(e.gammaInitializer||"ones"),this.betaRegularizer=It(e.betaRegularizer),this.gammaRegularizer=It(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=je(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let o=0;o<this.axis.length;++o)this.axis[o]<0&&(this.axis[o]+=t);for(const o of this.axis)if(o<0||o>=t)throw new Error(`Invalid axis: ${o}`);if(this.axis.length!==Nr(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(o=>e[o]),r=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const s=Ce(e),r=s.shape,o=r.length;return G(()=>{let{mean:i,variance:c}=lm(s,this.axis,!0);const u=Ao(1,o);for(const m of this.axis)u[m]=r[m];const l=m=>m!=null&&m.shape.length!==o?M(m,u):m;let d=this.scale?l(this.gamma.read()):null,h=this.center?l(this.beta.read()):null;const p=[],f=[];for(let m=0;m<o;++m)this.axis.indexOf(m)!==-1?(p.push(r[m]),f.push(1)):(p.push(1),f.push(r[m]));return i=Cs(i,p),c=Cs(c,p),d!=null&&(d=Cs(d,f)),h!=null&&(h=Cs(h,f)),Nc(s,i,c,h,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:$t(this.betaInitializer),gammaInitializer:$t(this.gammaInitializer),betaRegularizer:st(this.betaRegularizer),gammaRegularizer:st(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}RI.className="LayerNormalization";Q(RI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $M(n,e,t){return G(()=>{if(n.rank!==4)throw new A(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new A("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Es()),t!=="channelsLast"&&t!=="channelsFirst")throw new A(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],um(n,s)})}class AI extends Be{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Es():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new A(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new A(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new A(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=je(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return G(()=>$M(Ce(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}AI.className="ZeroPadding2D";Q(AI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ch(n,e,t,s,r,o){return G(()=>{Et(r),Yw(o),ts(s),t==null&&(t=[1,1]),s==null&&(s="valid"),r==null&&(r=Es()),o==null&&(o="max"),n=wg(n,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=cm(n,e,t,i):a=Zf(n,e,t,i),r==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}function DI(n,e,t,s,r,o){return G(()=>{Et(r),Yw(o),ts(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),r==null&&(r=Es()),o==null&&(o="max"),n=Y1(n,r);let a;const i=s==="same"?"same":"valid";return o==="max"?a=jE(n,e,t,i):a=YN(n,e,t,i),r==="channelsFirst"&&(a=We(a,[0,4,1,2,3])),a})}class FI extends Be{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new A(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(jt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new A(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,ts(this.padding),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){e=je(e);const t=Ns(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return G(()=>{this.invokeCallHook(e,t),e=Hl(Ce(e),2);const s=this.poolingFunction(Ce(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Wl(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class OI extends FI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Et(o),ts(r),Ch(e,t,s,r,o,"max")}}OI.className="MaxPooling1D";Q(OI);class MI extends FI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Et(o),ts(r),Ch(e,t,s,r,o,"avg")}}MI.className="AveragePooling1D";Q(MI);class LI extends Be{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new A(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];jt(this.poolSize,"poolSize"),jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),ts(this.padding),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=je(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Ns(t,this.poolSize[0],this.padding,this.strides[0]),s=Ns(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class PI extends LI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Et(o),ts(r),Ch(e,t,s,r,o,"max")}}PI.className="MaxPooling2D";Q(PI);class BI extends LI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Et(o),ts(r),Ch(e,t,s,r,o,"avg")}}BI.className="AveragePooling2D";Q(BI);class zI extends Be{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new A(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];jt(this.poolSize,"poolSize"),jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),ts(this.padding),this.inputSpec=[new Pt({ndim:5})]}computeOutputShape(e){e=je(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],r=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Ns(t,this.poolSize[0],this.padding,this.strides[0]),s=Ns(s,this.poolSize[1],this.padding,this.strides[1]),r=Ns(r,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,r]:[e[0],t,s,r,e[4]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class VI extends zI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Et(o),ts(r),DI(e,t,s,r,o,"max")}}VI.className="MaxPooling3D";Q(VI);class WI extends zI{constructor(e){super(e)}poolingFunction(e,t,s,r,o){return Et(o),ts(r),DI(e,t,s,r,o,"avg")}}WI.className="AveragePooling3D";Q(WI);class UI extends Be{constructor(e){super(e),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new De}}class GI extends UI{constructor(e){super(e||{})}call(e,t){return G(()=>{const s=Ce(e);return St(s,1)})}}GI.className="GlobalAveragePooling1D";Q(GI);class HI extends UI{constructor(e){super(e||{})}call(e,t){return G(()=>{const s=Ce(e);return hs(s,1)})}}HI.className="GlobalMaxPooling1D";Q(HI);class jI extends Be{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new De}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class qI extends jI{call(e,t){return G(()=>{const s=Ce(e);return this.dataFormat==="channelsLast"?St(s,[1,2]):St(s,[2,3])})}}qI.className="GlobalAveragePooling2D";Q(qI);class XI extends jI{call(e,t){return G(()=>{const s=Ce(e);return this.dataFormat==="channelsLast"?hs(s,[1,2]):hs(s,[2,3])})}}XI.className="GlobalMaxPooling2D";Q(XI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class KI extends Be{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const r=t.layer,o=dr(r,s);delete t.layer;const a={layer:o};return Object.assign(a,t),new e(a)}}class YI extends KI{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=je(e),e.length<3)throw new A(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=je(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),r=e[1];return[s[0],r].concat(s.slice(1))}call(e,t){return G(()=>(e=Ce(e),oI((a,i)=>[Ce(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}YI.className="TimeDistributed";Q(YI);function vM(n){Xo(XF,"BidirectionalMergeMode",n)}const CM="concat";class ZI extends KI{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=dr(s),t.goBackwards=t.goBackwards!==!0;const r={};if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=dr(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?CM:e.mergeMode,vM(this.mergeMode),e.weights)throw new De("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,r,o;return this.returnState&&(o=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,r=[s]):this.mergeMode==null?r=[s,s.slice()]:r=[s],this.returnState?this.mergeMode==null?r.concat(o).concat(o.slice()):[s].concat(o).concat(o.slice()):wn(r)}apply(e,t){let s=t==null?null:t.initialState,r=t==null?null:t.constants;t==null&&(t={});const o=rI(e,s,r,this.numConstants);if(e=o.inputs,s=o.initialState,r=o.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&r==null)return super.apply(e,t);const a=[],i=[];if(s!=null){const u=s.length;if(u%2>0)throw new A("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,a.push(...s);const l=s.map(d=>new Pt({shape:d.shape}));this.forwardLayer.stateSpec=l.slice(0,u/2),this.backwardLayer.stateSpec=l.slice(u/2),i.push(...l)}if(r!=null)throw new De("Support for constants in Bidirectional layers is not implemented yet.");const c=a[0]instanceof zs;for(const u of a)if(u instanceof zs!==c)throw new A("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(c){const u=[e].concat(a),l=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=l;const h=super.apply(u,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return G(()=>{const s=t.initialState;let r,o;if(s==null)r=this.forwardLayer.call(e,t),o=this.backwardLayer.call(e,t);else{const c=s.slice(0,s.length/2),u=s.slice(s.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:c})),o=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(o.slice(1))),r=r[0],o=o[0]),this.returnSequences&&(o=Eo(o,1));let i;return this.mergeMode==="concat"?i=ig([r,o]):this.mergeMode==="sum"?i=ee(r,o):this.mergeMode==="ave"?i=R(.5,ee(r,o)):this.mergeMode==="mul"?i=R(r,o):this.mergeMode==null&&(i=[r,o]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){yo(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),yo(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const o=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(o).concat(o):[s].concat(o).concat(o)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=dr(t.layer);if(delete t.layer,t.numConstants!=null)throw new De("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=s,new e(r)}}ZI.className="Bidirectional";Q(ZI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class JI extends Be{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return G(()=>(e=Ce(e),e.dtype!=="float32"&&(e=Gs(e,"float32")),ee(R(e,this.scale),this.offset)))}}JI.className="Rescaling";Q(JI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:SM,cropAndResize:NM}=fo;class QI extends Be{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,r,o,a,i,c){return G(()=>{let u,l=!1;const d=t/a,h=s/i,p=(r+t)/a,f=(o+s)/i,m=[d,h,p,f],g=[];e.rank===3?(l=!0,u=Rr([e])):u=e;for(let I=0;I<u.shape[0];I++)g.push(m);const b=Gf(g,[g.length,4]),x=kc(0,g.length,1,"int32"),w=NM(u,b,x,[r,o],"nearest");return Gs(l?Ce(_o(w)):w,c)})}upsize(e,t,s,r){return G(()=>{const o=SM(e,[t,s]);return Gs(o,r)})}call(e,t){return G(()=>{const s=Ce(e),r=s.dtype,o=s.shape,a=o[o.length-3],i=o[o.length-2];let c=0;a!==this.height&&(c=Math.floor((a-this.height)/2));let u=0;return i!==this.width&&(u=Math.floor((i-this.width)/2),u===0&&(u=1)),c>=0&&u>=0?this.centerCrop(s,c,u,this.height,this.width,a,i,r):this.upsize(e,this.height,this.width,r)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=je(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}QI.className="CenterCrop";Q(QI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function TM(n,e,t,s){let r=Ce(n);if(r.dtype!=="int32"&&(r=Gs(r,"int32")),e==="int")return r;const o=r.shape;if(r.rank===0&&(r=_n(r,-1)),e==="oneHot"&&r.shape[r.shape.length-1]!==1&&(r=_n(r,-1)),r.rank>2)throw new A(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${o} which would result in output rank ${r.rank}.`);const a=["multiHot","oneHot"].includes(e),i=r;let c;if(typeof s<"u"&&e==="count"?c=Yb(i,s,t,a):c=Yb(i,[],t,a),e!=="tfIdf")return c;if(s)return R(c,s);throw new A("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ek extends Be{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=je(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return G(()=>{e=Ce(e),e.dtype!=="int32"&&(e=Gs(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new A(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=Ce(t.countWeights)}const r=hs(e),o=wc(e),a=es(this.numTokens,r).bufferSync().get(0),i=Uo(o,0).bufferSync().get(0);if(!(a&&i))throw new A(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return TM(e,this.outputMode,this.numTokens,s)})}}ek.className="CategoryEncoding";Q(ek);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const EM=["bilinear","nearest"],Tx=new Set(EM);class tk extends Be{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(Tx.has(e.interpolation))this.interpolation=e.interpolation;else throw new A(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=je(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return G(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return fo.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return fo.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Tx]} are supported`)})}}tk.className="Resizing";Q(tk);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _M=H();_M.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Ex;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Ex||(Ex={}));var _x;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(_x||(_x={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Rx;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Rx||(Rx={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function be(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&v(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RM=Nw;class Sh extends Cd{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new ff(this,ks())}nextDataId(){return Sh.nextDataId++}write(e,t,s){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&jn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:s,refCount:1}),r}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Fc(s[0])){const o=s.map(a=>Sr(a));r=this.write(o,e,t)}else r=this.write(s,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,r,o){this.data.set(e,{values:t,dtype:r,refCount:o})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const r=this.readSync(s.real.dataId),o=this.readSync(s.imag.dataId);return fr(r,o)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>_r(r));return Me(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(e.shape,e.dtype,t)}makeOutput(e,t,s){return ks().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=nn();return e(),{kernelMs:nn()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){be([e],"where");const t=this.readSync(e.dataId);return RM(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Sh.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nk(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const AM=n=>{const{x:e}=n.inputs,t=n.backend;be(e,"abs");let s=new Float32Array(L(e.shape));const r=t.data.get(e.dataId).values;return s=nk(r),t.makeOutput(s,e.shape,e.dtype)},DM={kernelName:Mc,backendName:"cpu",kernelFunc:AM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(n){return(e,t,s,r,o)=>{const a=Ee(e,t),i=a.length,c=me(a),u=L(a),l=Qt(o,u),d=e.length,h=t.length,p=me(e),f=me(t),m=Na(e,a),g=Na(t,a);if(m.length+g.length===0)for(let b=0;b<l.length;++b)l[b]=n(s[b%s.length],r[b%r.length]);else for(let b=0;b<l.length;++b){const x=Pa(b,i,c),y=x.slice(-d);m.forEach($=>y[$]=0);const w=Ws(y,d,p),I=x.slice(-h);g.forEach($=>I[$]=0);const k=Ws(I,h,f);l[b]=n(s[w],r[k])}return[l,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rn(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,i=t.makeTensorInfo(s.shape,"complex64"),c=t.data.get(i.dataId);return c.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",o),imag:t.makeTensorInfo(r.shape,"float32",a)},i}const FM={kernelName:kf,backendName:"cpu",kernelFunc:Rn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dd(n,e,t="float32"){if(t==="complex64"){const r=dd(n,e,"float32"),o=dd(n,e,"float32");return Rn({inputs:{real:r,imag:o},backend:n})}const s=an(L(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const OM={kernelName:si,backendName:"cpu",kernelFunc:Ys};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Do(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.real,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const MM={kernelName:Lf,backendName:"cpu",kernelFunc:Do};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sk(n,e,t,s){if(s==="int32"){const r=Int32Array.from(n);return[e,"int32",r]}if(s==="bool"){const r=Wo([0],t),[o,a]=Dt((i,c)=>i!==c?1:0)(e,[],n,r,"bool");return[a,"bool",o]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function Mr(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Ys({inputs:{x:r},backend:t});const l=dd(t,r.shape,r.dtype),d=Mr({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),h=Rn({inputs:{real:d,imag:l},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),h}if(r.dtype==="complex64"){const l=Do({inputs:{input:r},backend:t}),d=Mr({inputs:{x:l},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(l),d}if(!Yy(r.dtype,o)){const l=Ys({inputs:{x:r},backend:t});return{dataId:l.dataId,shape:l.shape,dtype:o}}const a=t.data.get(r.dataId).values,[i,c,u]=sk(a,r.shape,r.dtype,o);return t.makeTensorInfo(i,c,u)}const LM={kernelName:Wa,backendName:"cpu",kernelFunc:Mr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qt(n,e,t,s){return t==null?({inputs:r,backend:o})=>{const{a,b:i}=r,c=o;be([a,i],n);const u=c.data.get(a.dataId).values,l=c.data.get(i.dataId).values,d=a.dtype==="string"?Ro(u):u,h=a.dtype==="string"?Ro(l):l,p=s||a.dtype,[f,m]=e(a.shape,i.shape,d,h,p);return c.makeTensorInfo(m,p,f)}:({inputs:r,backend:o})=>{const{a,b:i}=r,c=o;if(a.dtype==="complex64"||i.dtype==="complex64"){const u=Mr({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),l=c.data.get(u.dataId),d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag,p=c.data.get(d.dataId).values,f=c.data.get(h.dataId).values,m=Mr({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),g=c.data.get(m.dataId),b=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,y=c.data.get(b.dataId).values,w=c.data.get(x.dataId).values,[I,k,$]=t(a.shape,i.shape,p,f,y,w),C=c.makeTensorInfo($,"float32",I),N=c.makeTensorInfo($,"float32",k),T=Rn({inputs:{real:C,imag:N},backend:c});return c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(C),c.disposeIntermediateTensorInfo(N),T}else{const u=c.data.get(a.dataId).values,l=c.data.get(i.dataId).values,d=s||a.dtype,[h,p]=e(a.shape,i.shape,u,l,d);return c.makeTensorInfo(p,d,h)}}}function Sg(n){return(e,t,s,r,o,a)=>{const i=Ee(e,t),c=L(i),u=i.length,l=me(i),d=Qt("float32",c),h=Qt("float32",c),p=Na(e,i),f=Na(t,i),m=fr(s,r),g=fr(o,a),b=e.length,x=me(e),y=t.length,w=me(t);if(p.length+f.length===0)for(let I=0;I<d.length;I++){const k=I%m.length,$=I%g.length,C=n(m[k*2],m[k*2+1],g[$*2],g[$*2+1]);d[I]=C.real,h[I]=C.imag}else for(let I=0;I<d.length;I++){const k=Pa(I,u,l),$=k.slice(-b);p.forEach(O=>$[O]=0);const C=Ws($,b,x),N=k.slice(-y);f.forEach(O=>N[O]=0);const T=Ws(N,y,w),_=n(m[C*2],m[C*2+1],g[T*2],g[T*2+1]);d[I]=_.real,h[I]=_.imag}return[d,h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rk=Dt((n,e)=>n+e),PM=Sg((n,e,t,s)=>({real:n+t,imag:e+s})),Ea=qt(Lo,rk,PM),BM={kernelName:Lo,backendName:"cpu",kernelFunc:Ea};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ng(n,e,t,s,r){const o=L(s),a=an(r,t);for(let i=0;i<n.length;i++){const c=n[i];if(c<0)throw new Error("Input x must be non-negative!");c>=r||(o>0?a[c]+=e[i]:a[c]+=1)}return a}function ok(n,e,t,s=!1){const r=n.shape[0],o=n.shape[1],a=Me([r,t],e.dtype);for(let i=0;i<r;i++)for(let c=0;c<o;c++){const u=n.get(i,c);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(s?a.set(1,i,u):e.size>0?a.set(a.get(i,u)+e.get(i,c),i,u):a.set(a.get(i,u)+1,i,u))}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xr(n){return(e,t,s)=>{const r=Qt(t,e.length);for(let o=0;o<e.length;++o)r[o]=n(e[o],s);return r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;if(be(a,n),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const i=o,c=i.data.get(a.dataId).values,u=L(a.shape),l=t||a.dtype,d=At(l,u);for(let h=0;h<u;++h)d[h]=e(c[h],r);return i.makeTensorInfo(a.shape,l,d)}}function Ui(n,e,t){return({inputs:s,attrs:r,backend:o})=>{const{x:a}=s;if(be(a,n),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const i=o,c=i.data.get(a.dataId).values,u=t||a.dtype,l=e(c,u,r);return i.makeTensorInfo(a.shape,u,l)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ak=Xr(n=>Math.ceil(n)),zM=Ui(Ua,ak),VM={kernelName:Ua,backendName:"cpu",kernelFunc:zM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tg(n,e,t,s){const r=At(t,L(e));if(s&&t!=="string"){let o=0;n.forEach(a=>{const i=L(a.shape);r.set(a.vals,o),o+=i})}else{let o=0;n.forEach(a=>{const i=t==="string"?Ro(a.vals):a.vals;let c=0;for(let u=0;u<a.shape[0];++u){const l=u*e[1]+o;for(let d=0;d<a.shape[1];++d)r[l+d]=i[c++]}o+=a.shape[1]})}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ik=Dt((n,e)=>n===e?1:0),ck=qt(Qc,ik,null,"bool"),WM={kernelName:Qc,backendName:"cpu",kernelFunc:ck};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lk=Xr(n=>Math.exp(n)),uk=Ui(Ja,lk,"float32"),UM={kernelName:Ja,backendName:"cpu",kernelFunc:uk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk=Xr(n=>Math.expm1(n)),GM=Ui(tl,dk),HM={kernelName:tl,backendName:"cpu",kernelFunc:GM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hk=Xr(n=>Math.floor(n)),jM=Ui(Qa,hk),qM={kernelName:Qa,backendName:"cpu",kernelFunc:jM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pk(n,e,t,s,r,o,a,i,c){const u=Me([s,o],t);for(let l=0;l<s;l++){const d=[];let h=0;for(let p=0;p<r;p++){const f=n[l*r+p];h+=f*a[p],d.push(f)}if(h<0||h>=c/o)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let p=0;p<o;p++)u.values[l*o+p]=e.get(...e.indexToLoc(h*o+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fk(n,e,t){const s=Me(t,n.dtype);for(let r=0;r<s.size;++r){const a=s.indexToLoc(r).slice(),i=a[0],c=a[2],u=e.locToIndex([i,c]);a[2]=e.values[u];const l=n.locToIndex(a);0<=l&&l<n.values.length&&(s.values[r]=n.values[l])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mk=Dt((n,e)=>n>e?1:0),XM=qt(rl,mk,null,"bool"),KM={kernelName:rl,backendName:"cpu",kernelFunc:XM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gk=Dt((n,e)=>n>=e?1:0),YM=qt(ni,gk,null,"bool"),ZM={kernelName:ni,backendName:"cpu",kernelFunc:YM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk=Dt((n,e)=>n<e?1:0),JM=qt(il,bk,null,"bool"),QM={kernelName:il,backendName:"cpu",kernelFunc:JM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xk=Dt((n,e)=>n<=e?1:0),e3=qt(cl,xk,null,"bool"),t3={kernelName:cl,backendName:"cpu",kernelFunc:e3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yk(n,e,t){const s=(e-n)/(t-1),r=an(t,"float32");r[0]=n;for(let o=1;o<r.length;o++)r[o]=r[o-1]+s;return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk=Xr(n=>Math.log(n)),n3=Ui(ai,wk),s3={kernelName:ai,backendName:"cpu",kernelFunc:n3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n,e,t,s){const r=Qt(s,L(t));for(let o=0;o<r.length;++o){const a=o*e;let i=n[a];for(let c=0;c<e;++c){const u=n[a+c];(Number.isNaN(u)||u>i)&&(i=u)}r[o]=i}return r}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk=Dt((n,e)=>Math.max(n,e)),r3=qt(ci,kk),o3={kernelName:ci,backendName:"cpu",kernelFunc:r3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $k=Dt((n,e)=>Math.min(n,e)),a3=qt(hi,$k),i3={kernelName:hi,backendName:"cpu",kernelFunc:a3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Eg=Dt((n,e)=>n*e),c3=Sg((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),Nh=qt(fi,Eg,c3),l3={kernelName:fi,backendName:"cpu",kernelFunc:Nh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vk(n,e,t){const s=Wr(-1,t);return Eg([],e,s,n,t)}function u3(n){const{inputs:e,backend:t}=n,{x:s}=e;be(s,"neg");const r=t.data.get(s.dataId).values,[o,a]=vk(r,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,o)}const d3={kernelName:fl,backendName:"cpu",kernelFunc:u3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck=Dt((n,e)=>n!==e?1:0),h3=qt(ml,Ck,null,"bool"),p3={kernelName:ml,backendName:"cpu",kernelFunc:h3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _g(n,e,t,s,r){const o=e.length,a=L(e),i=me(e),c=me(r),u=Qt(t,L(r));for(let l=0;l<a;++l){const d=Pa(l,o,i),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];const p=Ws(h,o,c);u[p]=n[l]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $n(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{perm:o}=t;be(r,"transpose");const a=r.shape.length,i=new Array(a);for(let d=0;d<i.length;d++)i[d]=r.shape[o[d]];const c=s.data.get(r.dataId).values,u=_g(c,r.shape,r.dtype,o,i);return{dataId:s.write(u,i,r.dtype),shape:i,dtype:r.dtype}}const f3={kernelName:vr,backendName:"cpu",kernelFunc:$n};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(n,e,t,s){const[r,o]=bt(n,s),a=On(e,"int32"),i=an(L(r),a),c=L(o);for(let u=0;u<i.length;++u){const l=u*c;let d=1;for(let h=0;h<c;++h)d*=t[l+h];i[u]=d}return{outVals:i,outShape:r,outDtype:a}}function m3(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;be(r,"prod");const i=r.shape.length,c=Re(o,r.shape),u=pt(c,i);let l=c,d=r;const h=[];u!=null&&(d=$n({inputs:{x:r},backend:t,attrs:{perm:u}}),h.push(d),l=ot(l.length,i));const p=t.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=Sk(d.shape,d.dtype,p,l);let b=m;return a&&(b=et(m,c)),h.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(b,g,f)}const g3={kernelName:yi,backendName:"cpu",kernelFunc:m3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b3(n,e,t){n.forEach((s,r)=>{if(s<0||s>=t){const o=Pa(r,e.length,me(e)).join(",");throw new Error(`indices[${o}] = ${s} is not in [0, ${t})`)}})}function x3(n,e){for(let t=0;t<n.length;++t){const s=n[t],r=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>r)throw new Error("Ragged splits must not point past values");for(let o=1;o<s.length;++o)if(s[o-1]>s[o])throw new Error("Ragged splits must be sorted in ascending order")}}function y3(n,e,t,s){const r=[];let o=0;const a=e.length-1+t.length,i=new Array(a).fill(null).map(()=>[0]);x3(t,s);let c=1;for(let u=0;u<e.length-1;++u){c*=e[u];const l=e[u+1];for(let d=1;d<c+1;++d)i[u].push(d*l)}for(let u=0;u<n.length;++u){let l=n[u],d=n[u]+1;for(let h=0;h<t.length;++h){const p=t[h],f=h+e.length-1;if(f>=0){const m=i[f],g=m[m.length-1]-p[l];for(let b=l;b<d;++b)i[f].push(p[b+1]+g)}l=p[l],d=p[d]}d!==l&&(r.push([l,d]),o+=d-l)}return{outSplits:i,valueSlices:r,numValues:o}}function w3(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,r=At("int32",s);e.push(r),n[t].forEach((o,a)=>r[a]=o)}return e}function Ax(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function I3(n,e,t,s,r,o){const a=Ax(e,2)[1],i=Ax(o,2)[1];let c=0;for(const u of t)for(let l=u[0];l<u[1];++l){for(let d=0;d<s;++d)r[c*i+d]=n[l*a+d];++c}}function k3(n,e,t,s,r){const o=e.slice();o[0]=r;const a=At(t,L(o)),i=n.length,c=i===0?0:i/e[0];return I3(n,e,s,c,a,o),[a,o]}function Nk(n,e,t,s,r,o,a,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const c=e[0][0]-1;if(b3(o,a,c),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:l,valueSlices:d,numValues:h}=y3(o,a,n,u),p=w3(l),f=k3(t,s,r,d,h);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dx=2147483647;function Tk(n,e,t,s,r,o,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(r.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,c=r.length===0,u=a.length===0,l=[];i||l.push(e[0]),c||l.push(r[0]),u||l.push(a[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=l.length===0?1:l[0],h=At("int32",d+1);h[0]=0;for(let g=0;g<d;++g){const b=i?n[0]:n[g],x=c?s[0]:s[g],y=u?o[0]:o[g];if(y===0)throw new Error("Requires delta != 0");let w;if(y>0&&x<b||y<0&&x>b)w=0;else if(w=Math.ceil(Math.abs((x-b)/y)),w>Dx)throw new Error(`Requires ((limit - start) / delta) <= ${Dx}`);h[g+1]=h[g]+w}const p=h[d],f=At(t,p);let m=0;for(let g=0;g<d;++g){const b=h[g+1]-h[g];let x=i?n[0]:n[g];const y=u?o[0]:o[g];for(let w=0;w<b;++w)f[m++]=x,x+=y}return[h,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var rs=vs;class hd{constructor(e,t,s,r,o,a,i,c,u,l){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=r,this.valuesDType=o,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=c,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Dw(l),this.raggedRank=Fw(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===rs.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===rs.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case rs.VALUE_ROWIDS:return hd.getMaxWidthValueRowID(t);case rs.ROW_SPLITS:return hd.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${rs[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let r=0;r<t-1;++r){const o=e[r+1]-e[r];o>s&&(s=o)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,r=e[0],o=0;for(let a=1;a<t;++a){const i=e[a];i!==r&&(r=i,o=Math.max(a-s,o),s=a)}return Math.max(t-s,o)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Ox(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;Ow(s,t);const r=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Aw(this.raggedRank,r,t);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,t,s){const r=Math.min(e,s),o=[];let a=0;for(let i=0;i<r;++i,a+=t)o.push(a);for(let i=r;i<e;++i)o.push(-1);return v(o.length===e,()=>"Final length of result must be equal to firstDimension."),o}calculateOutputIndexRowSplit(e,t,s,r){const o=e.length,a=[];for(let i=0;i<o-1;++i){const c=e[i+1]-e[i];let u=Math.min(r,c),l=t[i];l===-1&&(u=0);for(let d=0;d<u;++d)a.push(l),l+=s;for(let d=0;d<c-u;++d)a.push(-1)}if(o>0&&a.length!==e[o-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,s,r){const o=e.length,a=[];if(o===0)return[];let i=0,c=e[0];if(c>=t.length)throw new Error(`Got currentValueRowId=${c}, which is not less than ${t.length}`);let u=t[c];a.push(u);for(let l=1;l<o;++l){const d=e[l];if(d===c)u>=0&&(++i,i<r?u+=s:u=-1);else{if(i=0,c=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);u=t[d]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,s,r){const o=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case rs.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(o,t,s,r);case rs.ROW_SPLITS:if(o.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${o.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(o,t,s,r);default:throw new Error(`Unsupported partition type: ${rs[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case rs.FIRST_DIM_SIZE:return e[0];case rs.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case rs.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${rs[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),r=new Array(this.raggedRank+1);r[r.length-1]=1;for(let c=r.length-2;c>=0;--c)r[c]=r[c+1]*s[c+1];const o=Ox(s,!1),a=At(this.valuesDType,L(o));if(r[0]*s[0]>0){let c=this.calculateFirstParentOutputIndex(t,r[0],s[0]);for(let u=1;u<=this.raggedRank;++u)c=this.calculateOutputIndex(u-1,c,r[u],s[u]);this.setOutput(this.raggedRank,c,a,o)}return[o,a]}setOutput(e,t,s,r){if(s.length===0)return;const o=this.values,a=s;let i=r.slice();i=i.slice(e+1);const c=L(i),u=t.length;let l=this.defaultValue;if(l.length!==c&&l.length!==1){const f=this.defaultValueShape;G(()=>{const m=M(l,f);l=mc(m,i).dataSync()})}let d=0,h=0,p=0;for(let f=0;f<=u;++f){let m=f<u?t[f]:-1;if(m===p){++p;continue}if(h<p){const g=o.subarray(d*c),b=a.subarray(h*c),x=(p-h)*c;Fx(b,g,x)}if(f>=u){const g=s.length;m=Math.floor(g/c)}if(m>p)if(this.defaultValue.length===1)a.subarray(p*c,m*c).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=a.slice(p*c);Fx(g,l,c),++p}m<0?(d=f+1,h=p):(d=f,h=p,p=h+1)}}}function Fx(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function Ox(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function Ek(n,e,t,s,r,o,a,i,c,u){return new hd(n,e,t,s,r,o,a,i,c,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rg(n,e,t,s){const r=n===e,o=n<e&&t<0,a=e<n&&t>1;if(r||o||a)return an(0,s);const i=Math.abs(Math.ceil((e-n)/t)),c=an(i,s);e<n&&t===1&&(t=-1),c[0]=n;for(let u=1;u<c.length;u++)c[u]=c[u-1]+t;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _k=Xr(n=>1/Math.sqrt(n)),$3=Ui(Ni,_k),v3={kernelName:Ni,backendName:"cpu",kernelFunc:$3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(n,e,t,s,r,o,a,i,c,u){const l=[s/r,r],d=n.values,h=e.values;if(s===0)return Me(t,e.dtype);const p=Me(l,e.dtype);typeof c=="string"||typeof c=="number"?p.values.fill(c):typeof c=="boolean"&&p.values.fill(+c);for(let f=0;f<o;f++){const m=[];let g=0;for(let b=0;b<a;b++){const x=d[f*a+b];m.push(x),g+=x*i[b]}if(g<0||g>=s/r)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let b=0;b<r;b++)u?p.values[g*r+b]+=h[f*r+b]:p.values[g*r+b]=e.rank===0?h[0]:h[f*r+b]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C3=Xr(n=>1/(1+Math.exp(-n))),Rk=Ze(Ei,n=>1/(1+Math.exp(-n))),S3={kernelName:Ei,backendName:"cpu",kernelFunc:Rk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pd(n,e,t,s,r){const o=Jd(s,e,t),a=L(t),i=me(s);if(o){const d=Qd(e,i);return r==="string"?n.slice(d,d+a):n.subarray(d,d+a)}const c=r==="string"?Ro(n):n,u=Me(s,r,c),l=Me(t,r);for(let d=0;d<l.size;++d){const h=l.indexToLoc(d),p=h.map((f,m)=>f+e[m]);l.set(u.get(...p),...h)}return r==="string"?sg(l.values):l.values}function Fo(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:a}=s;be(r,"slice");const[i,c]=Ll(r,o,a);Kf(r,i,c);const u=t.data.get(r.dataId).values,l=pd(u,i,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,l)}const N3={kernelName:vl,backendName:"cpu",kernelFunc:Fo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ak(n,e,t,s,r,o,a){const i=e[0],c=o[0],u=new Array(c),l=new Array(i),d=e[1];if(c===0){if(i!==0)throw new Error(jm(i));const g=At(t,0),b=At(r,0);return[g,[0,d],b,u,l]}let h=!0,p=0;const f=new Array(c).fill(0);for(let g=0;g<i;++g){const b=n[g*d];if(b<0)throw new Error(qm(g,b));if(b>=c)throw new Error(Xm(g,b,c));++f[b],h=h&&b>=p,p=b}let m=!0;for(let g=0;g<c;++g){const b=f[g]===0;u[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){const g=n,b=s;for(let x=0;x<i;++x)l[x]=x;return[g,[i,d],b,u,l]}else{const g=f[c-1],b=At(t,g*d),x=At(r,g),y=new Array(c).fill(0);for(let w=0;w<i;++w){const I=n[w*d],k=y[I],$=(I===0?0:f[I-1])+k;y[I]++;for(let C=0;C<d;++C)b[$*d+C]=n[w*d+C];x[$]=s[w],l[w]=$}for(let w=0;w<c;++w)if(y[w]===0){const k=w===0?0:f[w-1];b[k*d+0]=w;for(let $=1;$<d;++$)b[k*d+$]=0;x[k]=a}return[b,[g,d],x,u,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dk(n,e,t,s,r){const o=L(s),a=e[0],i=r.length,c=[];let u=1,l=-1;for(let g=0;g<i;++g){const b=r[g];if(b===-1){if(l!==-1)throw new Error(Km(l,g));l=g,c.push(1)}else{if(b<0)throw new Error(Ym(g,b));u*=b,c.push(b)}}if(l!==-1){if(u<=0)throw new Error(Zm());const g=Math.trunc(o/u);if(u*g!==o)throw new Error(Jm(s,c));c[l]=g}if(L(c)!==o)throw new Error(Qm(s,c));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let g=h-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*c[g+1]}const m=At(t,a*i);for(let g=0;g<a;++g){let b=0;for(let x=0;x<h;++x)b+=n[g*h+x]*p[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(b/f[x]),b%=f[x]}return[m,[a,i],c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ag(n,e,t,s,r,o=!1,a=0){const i=s.length,c=[e[0],n.length/e[0]],u=c[1],d=i>0?r[i-1]+1:0;if(d<0)throw new Error($c());const h=e.slice();h[0]=d;const p=h.reduce((y,w)=>y*w,1),f=At(t,p);if(i===0)return d>0&&f.fill(a),[f,h];if(d<=0)throw new Error($c());let m=0,g=1,b=0,x=r[m];for(;;){let y=0;if(g<i){if(y=r[g],x===y){++g;continue}if(x>=y)throw new Error(eg())}if(x<0||x>=d)throw new Error(tg(x,d));x>b&&f.fill(a,b*u,x*u);for(let w=m;w<g;++w){const I=s[w];if(I<0||I>=c[0])throw new Error(ng(w,s[w],c[0]));for(let k=0;k<u;k++)f[x*u+k]+=n[I*u+k]}if(o)for(let w=0;w<u;w++)f[x*u+w]/=g-m;if(m=g,++g,b=x+1,x=y,g>i)break}return b<d&&f.fill(a,b*u,d*u),[f,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T3=Xr(n=>Math.sqrt(n)),E3=Ze(_i,n=>Math.sqrt(n)),_3={kernelName:_i,backendName:"cpu",kernelFunc:E3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fk=Dt((n,e)=>{const t=n-e;return t*t}),R3=qt(Di,Fk),A3={kernelName:Di,backendName:"cpu",kernelFunc:R3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(n,e,t,s){const r=Me(n,e.dtype);for(let o=0;o<r.size;o++){const a=r.indexToLoc(o),i=new Array(a.length);for(let c=0;c<i.length;c++)i[c]=a[c]*t[c]+s[c];r.set(e.get(...i),...a)}return r}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class D3{constructor(e,t,s,r,o,a){this.separator=Sr(e),this.nGramWidths=t,this.leftPad=Sr(s),this.rightPad=Sr(r),this.padWidth=o,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,r,o,a){for(let i=0;i<o;++i){const c=this.getPadWidth(a),u=Math.max(0,c-i),l=Math.max(0,c-(o-(i+1))),d=a-(u+l),h=t+(u>0?0:i-c);let p=0;p+=u*this.leftPad.length;for(let x=0;x<d;++x)p+=e[h+x].length;p+=l*this.rightPad.length;const f=u+l+d-1;p+=f*this.separator.length,s[r+i]=new Uint8Array(p);const m=s[r+i];let g=0;const b=x=>x.forEach(y=>m[g++]=y);for(let x=0;x<u;++x)b(this.leftPad),b(this.separator);for(let x=0;x<d-1;++x)b(e[h+x]),b(this.separator);if(d>0){b(e[h+d-1]);for(let x=0;x<l;++x)b(this.separator),b(this.rightPad)}else{for(let x=0;x<l-1;++x)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,t){const s=e.length,r=t.length;if(r>0){let c=t[0];if(c!==0)throw new Error(`First split value must be 0, got ${c}`);for(let u=1;u<r;++u){let l=t[u]>=c;if(l=l&&t[u]<=s,!l)throw new Error(`Invalid split value ${t[u]}, must be in [${c}, ${s}]`);c=t[u]}if(c!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${c}`)}const o=r-1,a=At("int32",r);if(s===0||r===0){const c=new Array(s);for(let u=0;u<=o;++u)a[u]=0;return[c,a]}a[0]=0;for(let c=1;c<=o;++c){const u=t[c]-t[c-1];let l=0;this.nGramWidths.forEach(d=>{l+=this.getNumNGrams(u,d)}),this.preserveShort&&u>0&&l===0&&(l=1),a[c]=a[c-1]+l}const i=new Array(a[o]);for(let c=0;c<o;++c){const u=t[c];let l=a[c];if(this.nGramWidths.forEach(d=>{const h=t[c+1]-t[c],p=this.getNumNGrams(h,d);this.createNGrams(e,u,i,l,p,d),l+=p}),this.preserveShort&&l===a[c]){const d=t[c+1]-t[c];if(d===0)continue;const h=d+2*this.padWidth,p=1;this.createNGrams(e,u,i,l,p,h)}}return[i,a]}}function Dg(n,e,t,s,r,o,a,i){return new D3(t,s,r,o,a,i).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F3(n,e,t,s){if(!n.length)return;if(e.length===0){for(let o=0;o<n.length;++o)s.push(n.subarray(o,o+1));return}if(e.length===1){const o=e[0];let a=n.indexOf(o);for(;a!==-1;){const i=n.subarray(0,a);(!t||i.length!==0)&&s.push(i),n=n.subarray(a+1),a=n.indexOf(o)}(!t||n.length!==0)&&s.push(n);return}let r=0;for(let o=0;o<n.length+1;o++)if(o===n.length||e.indexOf(n[o])!==-1){const a=n.subarray(r,o);(!t||a.length!==0)&&s.push(a),r=o+1}}function Fg(n,e,t){const s=n.length,r=[];let o=0,a=0;const i=new Array(s);for(let h=0;h<s;++h){const p=r.length;F3(n[h],e,t,r);const f=r.length-p;i[h]=f,o+=f,a=Math.max(a,f)}const c=At("int32",o*2),u=new Array(o),l=[s,a];let d=0;for(let h=0;h<s;++h)for(let p=0;p<i[h];++p)c[d*2]=h,c[d*2+1]=p,u[d]=r[d],++d;return[c,u,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Og(n,e){const t=At("int32",n.length);for(let s=0;s<n.length;++s)t[s]=a2(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mk=Dt((n,e)=>n-e),O3=Sg((n,e,t,s)=>({real:n-t,imag:e-s})),Mg=qt(Fi,Mk,O3),M3={kernelName:Fi,backendName:"cpu",kernelFunc:Mg};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lk(n,e){const t=new Array(n.rank);for(let r=0;r<t.length;r++)t[r]=n.shape[r]*e[r];const s=Me(t,n.dtype);for(let r=0;r<s.values.length;++r){const o=s.indexToLoc(r),a=new Array(n.rank);for(let c=0;c<a.length;c++)a[c]=o[c]%n.shape[c];const i=n.locToIndex(a);s.values[r]=n.values[i]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hc=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function Pk(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const i=s-t+1,c=e-t+1,u=Math.log(i),l=.5*Math.exp(2*u/3),d=.5*Math.sqrt(u*l*(i-l)/i)*Math.sign(c-i/2),h=Math.max(t,Math.floor(e-c*l/i+d)),p=Math.min(s,Math.floor(e+(i-c)*l/i+d));Pk(n,e,h,p)}const r=n[e];let o=t,a=s;for(ia(n,t,e),hc(n[s],r)>0&&ia(n,t,s);o<a;){for(ia(n,o,a),o++,a--;hc(n[o],r)<0;)o=o+1;for(;hc(n[a],r)>0;)a=a-1}hc(n[t],r)===0?ia(n,t,a):(a=a+1,ia(n,a,s)),a<=e&&(t=a+1),e<=a&&(s=a-1)}}function Bk(n,e,t,s,r){const o=e[e.length-1],[a,i]=[n.length/o,o],c=Qt(t,a*s),u=Qt("int32",a*s);for(let d=0;d<a;d++){const h=d*i,p=n.subarray(h,h+i);let f=new Array(p.length);p.forEach((x,y)=>f[y]={value:x,index:y}),s<f.length&&(Pk(f,s),f=f.slice(0,s)),r&&f.sort(hc);const m=d*s,g=c.subarray(m,m+s),b=u.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,b[x]=f[x].index}const l=e.slice();return l[l.length-1]=s,[Me(l,t,c),Me(l,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zk(n,e,t,s){const r=Re(e,t)[0],o=[1,t[0],1];for(let f=0;f<r;f++)o[0]*=t[f];o[1]=t[r];for(let f=r+1;f<t.length;f++)o[2]*=t[f];const a={},i=new Int32Array(t[r]),c=new rn(o,s,n),u=[],l=o[0]===1&&o[2]===1;for(let f=0;f<t[r];f++){let m;if(l)m=n[f].toString();else{const g=[];for(let b=0;b<o[0];b++)for(let x=0;x<o[2];x++)g.push(c.get(b,f,x));m=g.join(",")}if(a[m]!==void 0)i[f]=a[m];else{const g=Object.keys(a).length;a[m]=g,i[f]=g,u.push(f)}}const d=o.slice();d[1]=Object.keys(a).length;const h=new rn(d,s);u.forEach((f,m)=>{for(let g=0;g<o[0];g++)for(let b=0;b<o[2];b++)h.set(c.get(g,f,b),g,m,b)});const p=t.slice();return p[r]=d[1],{outputValues:h.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const L3=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:nk,addImpl:rk,bincountImpl:Ng,bincountReduceImpl:ok,castImpl:sk,ceilImpl:ak,concatImpl:Tg,equalImpl:ik,expImpl:lk,expm1Impl:dk,floorImpl:hk,gatherNdImpl:pk,gatherV2Impl:fk,greaterImpl:mk,greaterEqualImpl:gk,lessImpl:bk,lessEqualImpl:xk,linSpaceImpl:yk,logImpl:wk,maxImpl:Ik,maximumImpl:kk,minimumImpl:$k,multiplyImpl:Eg,negImpl:vk,notEqualImpl:Ck,prodImpl:Sk,raggedGatherImpl:Nk,raggedRangeImpl:Tk,raggedTensorToTensorImpl:Ek,rangeImpl:Rg,rsqrtImpl:_k,scatterImpl:da,sigmoidImpl:C3,sliceImpl:pd,sparseFillEmptyRowsImpl:Ak,sparseReshapeImpl:Dk,sparseSegmentReductionImpl:Ag,sqrtImpl:T3,squaredDifferenceImpl:Fk,stridedSliceImpl:Ok,stringNGramsImpl:Dg,stringSplitImpl:Fg,stringToHashBucketFastImpl:Og,subImpl:Mk,tileImpl:Lk,topKImpl:Bk,transposeImpl:_g,uniqueImpl:zk},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */qf("cpu",()=>new Sh,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vk=Ze(Za,n=>n>=0?n:Math.exp(n)-1),P3={kernelName:Za,backendName:"cpu",kernelFunc:Vk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s;be([r],"leakyRelu");const a=L(r.shape),i=t.data.get(r.dataId).values,c=Qt("float32",a);for(let u=0;u<i.length;u++)c[u]=i[u]<0?o*i[u]:i[u];return t.makeTensorInfo(r.shape,"float32",c)}const B3={kernelName:oi,backendName:"cpu",kernelFunc:Wk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z3=Dt((n,e)=>n<0?e*n:n);function Uk(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e;be([s,r],"prelu");const o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,[i,c]=z3(s.shape,r.shape,o,a,"float32");return t.makeTensorInfo(c,"float32",i)}const V3={kernelName:xi,backendName:"cpu",kernelFunc:Uk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gk=Ze(Ii,n=>Math.max(0,n)),W3={kernelName:Ii,backendName:"cpu",kernelFunc:Gk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hk=Ze(vi,n=>Math.min(Math.max(0,n),6)),U3={kernelName:vi,backendName:"cpu",kernelFunc:Hk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fd(n,e,t,s,r){if(t==="linear")return Ys({inputs:{x:e},backend:n});if(t==="relu")return Gk({inputs:{x:e},backend:n});if(t==="elu")return Vk({inputs:{x:e},backend:n});if(t==="relu6")return Hk({inputs:{x:e},backend:n});if(t==="prelu")return Uk({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return Wk({inputs:{x:e},backend:n,attrs:{alpha:r}});if(t==="sigmoid")return Rk({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ut(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,a=L(r.shape),i=gf(o,a),c=L(i);v(a===c,()=>`The new shape (${i}) has ${c} elements and the old shape (${r.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(r.dataId);const u=t.data.get(r.dataId);if(u.complexTensorInfos!=null){const l=u.complexTensorInfos.real,d=u.complexTensorInfos.imag;l.shape=i,d.shape=i}return{dataId:r.dataId,shape:i,dtype:r.dtype}}const G3={kernelName:Il,backendName:"cpu",kernelFunc:ut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jk(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:a,transposeB:i}=s;be([r,o],"matMul");const c=r.shape.length,u=o.shape.length,l=a?r.shape[c-2]:r.shape[c-1],d=i?o.shape[u-1]:o.shape[u-2],h=a?r.shape[c-1]:r.shape[c-2],p=i?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=L(f),b=L(m),y=Ee(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([h,p]);v(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const w=a?[g,l,h]:[g,h,l],I=i?[b,p,d]:[b,d,p],k=ut({inputs:{x:r},backend:t,attrs:{shape:w}}),$=ut({inputs:{x:o},backend:t,attrs:{shape:I}}),C=a?k.shape[1]:k.shape[2],N=a?k.shape[2]:k.shape[1],T=i?$.shape[1]:$.shape[2],_=Math.max(g,b),O=t.data.get(k.dataId).values,P=t.data.get($.dataId).values,V=me(k.shape),B=me($.shape),[W,q,z]=a?[V[0],1,V[1]]:[V[0],V[1],1],[X,Y,Z]=i?[1,B[1],B[0]]:[B[1],1,B[0]],ne=N*T,J=Me([_,N,T],k.dtype),ae=J.values,re=t.blockSize;for(let ue=0;ue<_;ue++)for(let ge=0;ge<N;ge+=re)for(let ce=0;ce<T;ce+=re)for(let we=0;we<C;we+=re){const Ne=Math.min(ge+re,N),Fe=Math.min(ce+re,T),ze=Math.min(we+re,C);for(let qe=ge;qe<Ne;qe++)for(let Ve=ce;Ve<Fe;Ve++){let Ye=0;for(let Te=we;Te<ze;Te++){const Je=Math.min(ue,g-1)*W,at=Math.min(ue,b-1)*Z,Sn=O[Je+qe*q+Te*z],xt=P[Te*X+Ve*Y+at];Ye+=Sn*xt}ae[ue*ne+(qe*T+Ve)]+=Ye}}return t.disposeIntermediateTensorInfo(k),t.disposeIntermediateTensorInfo($),t.makeTensorInfo(y,J.dtype,J.values)}const H3={kernelName:Va,backendName:"cpu",kernelFunc:jk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j3(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=s;let h,p,f;const m=[];h=jk({inputs:{a:r,b:o},attrs:{transposeA:c,transposeB:u},backend:t}),a&&(p=Ea({inputs:{a:h,b:a},backend:t}),m.push(h),h=p),l&&(f=fd(t,h,l,i,d),m.push(h),h=f);for(const b of m)t.disposeIntermediateTensorInfo(b);return h}const q3={kernelName:ka,backendName:"cpu",kernelFunc:j3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X3=Ze(Lc,n=>Math.acos(n)),K3={kernelName:Lc,backendName:"cpu",kernelFunc:X3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y3=Ze(Pc,n=>Math.acosh(n)),Z3={kernelName:Pc,backendName:"cpu",kernelFunc:Y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J3(n){const{inputs:e,backend:t}=n,s=e;be(e,"addN");const r=s.map(i=>t.data.get(i.dataId).values),o=Me(s[0].shape,s[0].dtype),a=o.values;for(let i=0;i<s.length;i++){const c=r[i];for(let u=0;u<a.length;u++)a[u]+=c[u]}return t.makeTensorInfo(o.shape,o.dtype,o.values)}const Q3={kernelName:Bc,backendName:"cpu",kernelFunc:J3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;be(r,"all");const i=Re(o,r.shape);let c=i;const u=pt(c,r.shape.length);let l=r;u!=null&&(l=$n({inputs:{x:r},backend:t,attrs:{perm:u}}),c=ot(c.length,r.shape.length)),ht("all",c,l.shape.length);const[d,h]=bt(l.shape,c),p=L(h),f=an(L(d),l.dtype),m=t.data.get(l.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let y=m[x];for(let w=0;w<p;++w){const I=m[x+w];y=y&&I}f[b]=y}u!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(d,l.dtype,f);if(a){const b=et(d,i),x=ut({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}const tL={kernelName:zc,backendName:"cpu",kernelFunc:eL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;be(r,"any");const i=Re(o,r.shape);let c=i;const u=pt(c,r.shape.length);let l=r;u!=null&&(l=$n({inputs:{x:r},backend:t,attrs:{perm:u}}),c=ot(c.length,r.shape.length)),ht("any",c,l.shape.length);const[d,h]=bt(l.shape,c),p=L(h),f=an(L(d),l.dtype),m=t.data.get(l.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let y=m[x];for(let w=0;w<p;++w){const I=m[x+w];y=y||I}f[b]=y}u!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(d,l.dtype,f);if(a){const b=et(d,i),x=ut({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}const sL={kernelName:Vc,backendName:"cpu",kernelFunc:nL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;be(r,"argMax");let a=Re(o,r.shape);const i=pt(a,r.shape.length);let c=r;const u=[];i!=null&&(c=$n({inputs:{x:r},backend:t,attrs:{perm:i}}),u.push(c),a=ot(a.length,c.shape.length)),a=[a[0]],ht("argMax",a,c.shape.length);const[l,d]=bt(c.shape,a),h=L(l),p=an(h,"int32"),f=L(d),m=t.data.get(c.dataId).values;for(let g=0;g<p.length;++g){const b=g*f;let x=m[b],y=0;for(let w=0;w<f;++w){const I=m[b+w];I>x&&(x=I,y=w)}p[g]=y}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",p)}const oL={kernelName:Ba,backendName:"cpu",kernelFunc:rL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;be(r,"argMin");let a=Re(o,r.shape);const i=pt(a,r.shape.length);let c=r;const u=[];i!=null&&(c=$n({inputs:{x:r},backend:t,attrs:{perm:i}}),u.push(c),a=ot(a.length,c.shape.length)),a=[a[0]],ht("argMin",a,c.shape.length);const[l,d]=bt(c.shape,a),h=L(l),p=an(h,"int32"),f=L(d),m=t.data.get(c.dataId).values;for(let g=0;g<p.length;++g){const b=g*f;let x=m[b],y=0;for(let w=0;w<f;++w){const I=m[b+w];I<x&&(x=I,y=w)}p[g]=y}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",p)}const iL={kernelName:Sd,backendName:"cpu",kernelFunc:aL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cL=Ze(Wc,n=>Math.asin(n)),lL={kernelName:Wc,backendName:"cpu",kernelFunc:cL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uL=Ze(Uc,n=>Math.asinh(n)),dL={kernelName:Uc,backendName:"cpu",kernelFunc:uL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL=Ze(Gc,n=>Math.atan(n)),pL={kernelName:Gc,backendName:"cpu",kernelFunc:hL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fL=Dt((n,e)=>Math.atan2(n,e)),mL=qt(jc,fL),gL={kernelName:jc,backendName:"cpu",kernelFunc:mL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bL=Ze(Hc,n=>Math.atanh(n)),xL={kernelName:Hc,backendName:"cpu",kernelFunc:bL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lg(n,e,t,s,r,o){const a=r.strideHeight,i=r.strideWidth,c=r.dilationHeight,u=r.dilationWidth,l=r.effectiveFilterHeight,d=r.effectiveFilterWidth,h=r.padInfo.top,p=r.padInfo.left,f=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Me(r.outShape,t),g=m.values,b=r.outShape[1]*r.outShape[2]*r.outShape[3],x=r.outShape[2]*r.outShape[3],y=r.outShape[3];for(let w=0;w<r.batchSize;++w){const I=w*b,k=w*s[0];for(let $=0;$<r.inChannels;++$)for(let C=0;C<r.outHeight;++C){const N=C*a-h,T=Math.max(0,N),_=Math.min(r.inHeight,l+N),O=I+C*x;for(let P=0;P<r.outWidth;++P){const V=P*i-p,B=Math.max(0,V),W=Math.min(r.inWidth,d+V);let q=f,z=0,X=0;for(let Z=T;Z<_;Z+=c){const ne=k+Z*s[1];for(let J=B;J<W;J+=u){const ae=ne+J*s[2],re=n[ae+$];o==="max"&&re>q?q=re:o==="avg"&&(z+=re,X++)}if(isNaN(q))break}const Y=O+P*y+$;g[Y]=o==="avg"?z/X:q}}}return m}function qk(n,e,t,s,r=!1,o=!1){const a=Me(s.outShape,"int32"),i=s.strideHeight,c=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Me(e,t,n);for(let g=0;g<s.batchSize;++g)for(let b=0;b<s.inChannels;++b)for(let x=0;x<s.outHeight;++x){const y=x*i-p;let w=y;for(;w<0;)w+=u;const I=Math.min(s.inHeight,d+y);for(let k=0;k<s.outWidth;++k){const $=k*c-f;let C=$;for(;C<0;)C+=l;const N=Math.min(s.inWidth,h+$);let T=Number.NEGATIVE_INFINITY,_=-1;for(let O=w;O<I;O+=u){const P=O-y;for(let V=C;V<N;V+=l){const B=V-$,W=m.get(g,O,V,b);W>T&&(T=W,r?_=o?((g*s.inHeight+O)*s.inWidth+V)*s.inChannels+b:(O*s.inWidth+V)*s.inChannels+b:_=P*h+B)}}a.set(_,g,x,k,b)}}return a}function Xk(n,e,t,s,r,o){const a=r.strideDepth,i=r.strideHeight,c=r.strideWidth,u=r.dilationDepth,l=r.dilationHeight,d=r.dilationWidth,h=r.effectiveFilterDepth,p=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,b=r.padInfo.left,x=o==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=Me(r.outShape,t),w=y.values,I=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],$=r.outShape[3]*r.outShape[4],C=r.outShape[4];for(let N=0;N<r.batchSize;++N){const T=N*I,_=N*s[0];for(let O=0;O<r.inChannels;++O)for(let P=0;P<r.outDepth;++P){const V=P*a-m;let B=V;for(;B<0;)B+=u;const W=Math.min(r.inDepth,h+V),q=T+P*k;for(let z=0;z<r.outHeight;++z){const X=z*i-g;let Y=X;for(;Y<0;)Y+=l;const Z=Math.min(r.inHeight,p+X),ne=q+z*$;for(let J=0;J<r.outWidth;++J){const ae=J*c-b;let re=ae;for(;re<0;)re+=d;const ue=Math.min(r.inWidth,f+ae),ge=ne+J*C;let ce=x,we=0,Ne=0;for(let ze=B;ze<W;ze+=u){const qe=_+ze*s[1];for(let Ve=Y;Ve<Z;Ve+=l){const Ye=qe+Ve*s[2];for(let Te=re;Te<ue;Te+=d){const Je=Ye+Te*s[3],at=n[Je+O];if(o==="max"&&at>ce?ce=at:o==="avg"&&(we+=at,Ne++),isNaN(ce))break}if(isNaN(ce))break}if(isNaN(ce))break}const Fe=ge+O;w[Fe]=o==="avg"?we/Ne:ce}}}}return y}function yL(n,e){const t=Me(e.outShape,"int32"),s=e.strideDepth,r=e.strideHeight,o=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let b=0;b<e.outDepth;++b){const x=b*s-h;let y=x;for(;y<0;)y+=a;const w=Math.min(e.inDepth,u+x);for(let I=0;I<e.outHeight;++I){const k=I*r-p;let $=k;for(;$<0;)$+=i;const C=Math.min(e.inHeight,l+k);for(let N=0;N<e.outWidth;++N){const T=N*o-f;let _=T;for(;_<0;)_+=c;const O=Math.min(e.inWidth,d+T);let P=Number.NEGATIVE_INFINITY,V=-1;for(let B=y;B<w;B+=a){const W=B-x;for(let q=$;q<C;q+=i){const z=q-k;for(let X=_;X<O;X+=c){const Y=X-T,Z=n.get(m,B,q,X,g);Z>=P&&(P=Z,V=W*l*d+z*l+Y)}}}t.set(V,m,b,I,N,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;be(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,u=1;v(cn(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const l=zn(r.shape,o,a,u,i,c);let d;if(l.filterWidth===1&&l.filterHeight===1&&Ke(l.inShape,l.outShape))d=Ys({inputs:{x:r},backend:t});else{const h=t.data.get(r.dataId).values,p=me(r.shape),f=Lg(h,r.shape,r.dtype,p,l,"avg");d=t.makeTensorInfo(l.outShape,r.dtype,f.values)}return d}const IL={kernelName:za,backendName:"cpu",kernelFunc:wL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c,dataFormat:u}=s;be(r,"avgPool3d");const l=gr(r.shape,o,a,1,i,c,u),d=t.data.get(r.dataId).values,h=Xk(d,r.shape,r.dtype,me(r.shape),l,"avg");return t.makeTensorInfo(h.shape,"float32",h.values)}const $L={kernelName:Nd,backendName:"cpu",kernelFunc:kL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vL(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:a,strides:i,pad:c,dimRoundingMode:u}=s;be([r,o],"avgPool3DGrad");const l=gr(o.shape,a,i,1,c,u),d=l.strideDepth,h=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,b=l.dilationDepth,x=l.dilationHeight,y=l.dilationWidth,w=l.effectiveFilterDepth,I=l.effectiveFilterHeight,k=l.effectiveFilterWidth,$=w-1-l.padInfo.front,C=k-1-l.padInfo.left,N=I-1-l.padInfo.top,T=Me(o.shape,"float32"),_=1/(f*m*g),O=t.bufferSync(r);for(let P=0;P<l.batchSize;++P)for(let V=0;V<l.inChannels;++V)for(let B=0;B<l.inDepth;++B)for(let W=0;W<l.inHeight;++W)for(let q=0;q<l.inWidth;++q){const z=B-$,X=W-N,Y=q-C;let Z=0;for(let ne=0;ne<w;ne+=b){const J=(z+ne)/d;if(!(J<0||J>=l.outDepth||Math.floor(J)!==J))for(let ae=0;ae<I;ae+=x){const re=(X+ae)/h;if(!(re<0||re>=l.outHeight||Math.floor(re)!==re))for(let ue=0;ue<k;ue+=y){const ge=(Y+ue)/p;if(ge<0||ge>=l.outWidth||Math.floor(ge)!==ge)continue;const ce=O.get(P,J,re,ge,V);Z+=ce}}}T.set(Z*_,P,B,W,q,V)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const CL={kernelName:wf,backendName:"cpu",kernelFunc:vL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o;be([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:u}=s,l=zn(a.shape,i,c,1,u),d=l.strideHeight,h=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,b=l.effectiveFilterHeight,x=l.effectiveFilterWidth,y=x-1-l.padInfo.left,w=b-1-l.padInfo.top,I=Me(a.shape,"float32"),k=1/(p*f),$=t.data.get(r.dataId).values,C=Me(r.shape,"float32",$);for(let N=0;N<l.batchSize;++N)for(let T=0;T<l.inChannels;++T)for(let _=0;_<l.inHeight;++_)for(let O=0;O<l.inWidth;++O){const P=_-w,V=O-y;let B=0;for(let W=0;W<b;W+=m){const q=(P+W)/d;if(!(q<0||q>=l.outHeight||Math.floor(q)!==q))for(let z=0;z<x;z+=g){const X=(V+z)/h;if(X<0||X>=l.outWidth||Math.floor(X)!==X)continue;const Y=C.get(N,q,X,T);B+=Y}}I.set(B*k,N,_,O,T)}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const NL={kernelName:yf,backendName:"cpu",kernelFunc:SL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,scale:o,offset:a,mean:i,variance:c}=e;v(i.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v(o==null||i.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),be([r,i,c,o,a],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const l=t.data.get(r.dataId).values,d=t.data.get(i.dataId).values,h=t.data.get(c.dataId).values,p=o?t.data.get(o.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,b=p.length,x=h.length,y=d.length;let w=0,I=0,k=0,$=0;for(let C=0;C<l.length;++C)m[C]=f[w++]+(l[C]-d[I++])*p[k++]/Math.sqrt(h[$++]+u),w>=g&&(w=0),I>=y&&(I=0),k>=b&&(k=0),$>=x&&($=0);return t.makeTensorInfo(r.shape,r.dtype,m)}const EL={kernelName:ti,backendName:"cpu",kernelFunc:TL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:a}=s;be([r],"batchToSpaceND");const i=o.reduce((b,x)=>b*x),c=Ho(r.shape,o,i),u=jo(c.length,o.length),l=qo(r.shape,o,i),d=uh(a,o.length),h=dh(l,a,o.length),p=ut({inputs:{x:r},backend:t,attrs:{shape:c}}),f=$n({inputs:{x:p},backend:t,attrs:{perm:u}}),m=ut({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Fo({inputs:{x:m},backend:t,attrs:{begin:d,size:h}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const RL={kernelName:qc,backendName:"cpu",kernelFunc:_L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a}=s,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,u=Ng(i,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,u)}const DL={kernelName:If,backendName:"cpu",kernelFunc:AL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.data.get(s.dataId).values,a=t.data.get(r.dataId).values,i=Ee(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const OL={kernelName:n0,backendName:"cpu",kernelFunc:FL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ML=Ze(Po,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),LL={kernelName:Po,backendName:"cpu",kernelFunc:ML};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PL=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(L(e.shape)),r=t.data.get(e.dataId),o=r.complexTensorInfos.real,a=r.complexTensorInfos.imag,i=t.data.get(o.dataId).values,c=t.data.get(a.dataId).values;for(let u=0;u<i.length;u++){const l=i[u],d=c[u];s[u]=Math.hypot(l,d)}return t.makeOutput(s,e.shape,"float32")},BL={kernelName:Td,backendName:"cpu",kernelFunc:PL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.data.get(s.dataId).complexTensorInfos.imag,o=t.data.get(r.dataId).values;return t.makeTensorInfo(r.shape,r.dtype,o)}const zL={kernelName:Af,backendName:"cpu",kernelFunc:_a};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ra(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Re(r,e[0].shape)[0],a=e.map(m=>m.shape);ih(a,o);let i=Kn(e.map(m=>m.shape),o);if(L(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(m=>L(m.shape)>0);if(c.length===1)return Ys({inputs:{x:c[0]},backend:t});if(c[0].dtype==="complex64"){const m=c.map(w=>Do({inputs:{input:w},backend:t})),g=c.map(w=>_a({inputs:{input:w},backend:t})),b=Ra({inputs:m,backend:t,attrs:{axis:o}}),x=Ra({inputs:g,backend:t,attrs:{axis:o}}),y=Rn({inputs:{real:b,imag:x},backend:t});return m.forEach(w=>t.disposeIntermediateTensorInfo(w)),g.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),y}const u=c.map(m=>{const b=[-1,L(m.shape.slice(o))];return ut({inputs:{x:m},backend:t,attrs:{shape:b}})}),l=u.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));i=Kn(u.map(m=>m.shape),1);const d=u[0].shape[0]===1,h=Tg(l,i,e[0].dtype,d),p=Kn(c.map(m=>m.shape),o),f=t.makeTensorInfo(p,e[0].dtype,h);return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const VL={kernelName:Xc,backendName:"cpu",kernelFunc:Ra};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kk(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dataFormat:c,dilations:u,dimRoundingMode:l}=s;be([r,o],"conv2d");const d=Ds(c),h=Nt(r.shape,o.shape,a,u,i,l,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,b=h.padInfo.left,x=h.padInfo.top,y=h.dataFormat==="channelsLast",w=new rn(h.outShape,r.dtype),I=me(r.shape),k=me(o.shape),$=I[0],C=y?I[1]:I[2],N=y?I[2]:1,T=y?1:I[1],_=w.strides[0],O=y?w.strides[1]:w.strides[2],P=y?w.strides[2]:1,V=y?1:w.strides[1],B=t.data.get(r.dataId).values,W=t.data.get(o.dataId).values,q=w.values;for(let z=0;z<h.batchSize;++z){const X=z*$,Y=z*_;for(let Z=0;Z<h.outHeight;++Z){const ne=Y+Z*O,J=Z*h.strideHeight-x;for(let ae=0;ae<p;++ae){const re=J+ae*m;if(re<0||re>=h.inHeight)continue;const ue=ae*k[0],ge=X+re*C;for(let ce=0;ce<h.outWidth;++ce){const we=ne+ce*P,Ne=ce*h.strideWidth-b;for(let Fe=0;Fe<f;++Fe){const ze=Ne+Fe*g;if(ze<0||ze>=h.inWidth)continue;const qe=ue+Fe*k[1],Ve=ge+ze*N;let Ye=qe;for(let Te=0;Te<h.inChannels;++Te){const Je=B[Ve+Te*T];for(let at=0;at<h.outChannels;++at)q[we+at*V]+=Je*W[Ye+at];Ye+=h.outChannels}}}}}}return t.makeTensorInfo(w.shape,w.dtype,q)}const WL={kernelName:Ga,backendName:"cpu",kernelFunc:Kk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,dataFormat:c,dimRoundingMode:u,filterShape:l}=s;be([r,o],"conv2dBackpropFilter");const d=Ds(c),h=Nt(r.shape,l,a,1,i,u,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,b=h.dataFormat==="channelsLast",x=new rn(h.filterShape,"float32"),y=h.padInfo.left,w=h.padInfo.top,I=t.data.get(r.dataId).values,k=t.data.get(o.dataId).values,$=new rn(r.shape,r.dtype,I),C=new rn(o.shape,o.dtype,k);for(let N=0;N<m;++N){const T=Math.max(0,Math.ceil((w-N)/p)),_=Math.min(h.outHeight,(h.inHeight+w-N)/p);for(let O=0;O<g;++O){const P=Math.max(0,Math.ceil((y-O)/f)),V=Math.min(h.outWidth,(h.inWidth+y-O)/f);for(let B=0;B<h.inChannels;++B)for(let W=0;W<h.outChannels;++W){let q=0;for(let z=0;z<h.batchSize;++z)for(let X=T;X<_;++X){const Y=N+X*p-w;for(let Z=P;Z<V;++Z){const ne=O+Z*f-y;b?q+=$.get(z,Y,ne,B)*C.get(z,X,Z,W):q+=$.get(z,B,Y,ne)*C.get(z,W,X,Z)}}x.set(q,N,O,B,W)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const GL={kernelName:$f,backendName:"cpu",kernelFunc:UL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:a,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=s;be([r,o],"conv2dBackpropInput");const d=me(o.shape),h=me(r.shape);let p=Ds(u);const f=Nt(a,o.shape,i,1,c,l,!1,p),m=new rn(f.inShape,"float32"),g=m.values,b=t.data.get(r.dataId).values,x=t.data.get(o.dataId).values,[y,w,I]=d,{batchSize:k,filterHeight:$,filterWidth:C,inChannels:N,inHeight:T,inWidth:_,outChannels:O,outHeight:P,outWidth:V,strideHeight:B,strideWidth:W}=f;p=f.dataFormat;const q=$-1-f.padInfo.top,z=C-1-f.padInfo.left,X=p==="channelsLast",Y=m.strides[0],Z=X?m.strides[1]:m.strides[2],ne=X?m.strides[2]:1,J=X?1:m.strides[1],ae=h[0],re=X?h[1]:h[2],ue=X?h[2]:1,ge=X?1:h[1];for(let ce=0;ce<k;++ce)for(let we=0;we<N;++we)for(let Ne=0;Ne<T;++Ne){const Fe=Ne-q,ze=Math.max(0,Math.ceil(Fe/B)),qe=Math.min(P,($+Fe)/B);for(let Ve=0;Ve<_;++Ve){const Ye=Ve-z,Te=Math.max(0,Math.ceil(Ye/W)),Je=Math.min(V,(C+Ye)/W);let at=0;for(let xt=ze;xt<qe;++xt){const Nn=xt*B-Fe;for(let Xt=Te;Xt<Je;++Xt){const xs=Xt*W-Ye,ln=ae*ce+re*xt+ue*Xt,Wn=y*($-1-Nn)+w*(C-1-xs)+I*we;for(let ns=0;ns<O;++ns){const Kt=b[ln+ge*ns],un=x[Wn+ns];at+=Kt*un}}}const Sn=Y*ce+Z*Ne+ne*Ve+J*we;g[Sn]=at}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const jL={kernelName:Ha,backendName:"cpu",kernelFunc:HL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c}=s;be([r,o],"conv3d");const u=Ur(r.shape,o.shape,a,c,i),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,x=g.left,y=g.top,w=new rn(u.outShape,r.dtype),I=t.data.get(r.dataId).values,k=t.data.get(o.dataId).values,$=w.values,C=me(r.shape),N=me(o.shape);for(let T=0;T<u.batchSize;++T){const _=T*C[0],O=T*w.strides[0];for(let P=0;P<u.outDepth;++P){const V=O+P*w.strides[1],B=P*u.strideDepth-b;for(let W=0;W<l;++W){const q=B+W*p;if(q<0||q>=u.inDepth)continue;const z=W*N[0],X=_+q*C[1];for(let Y=0;Y<u.outHeight;++Y){const Z=V+Y*w.strides[2],ne=Y*u.strideHeight-y;for(let J=0;J<d;++J){const ae=ne+J*f;if(ae<0||ae>=u.inHeight)continue;const re=z+J*N[1],ue=X+ae*C[2];for(let ge=0;ge<u.outWidth;++ge){const ce=Z+ge*u.outChannels,we=ge*u.strideWidth-x;for(let Ne=0;Ne<h;++Ne){const Fe=we+Ne*m;if(Fe<0||Fe>=u.inWidth)continue;const ze=re+Ne*N[2],qe=ue+Fe*u.inChannels;let Ve=ze;for(let Ye=0;Ye<u.inChannels;++Ye){const Te=I[qe+Ye];for(let Je=0;Je<u.outChannels;++Je)$[ce+Je]+=Te*k[Ve+Je];Ve+=u.outChannels}}}}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const XL={kernelName:Ed,backendName:"cpu",kernelFunc:qL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,filterShape:c}=s;be([r,o],"conv3dBackpropFilterV2");const u=me(r.shape),l=me(o.shape),d=Ur(r.shape,c,a,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,x=new rn(d.filterShape,"float32"),y=x.values,[w,I,k,$]=x.strides,C=t.data.get(o.dataId).values,[N,T,_,O]=l,P=t.data.get(r.dataId).values,[V,B,W,q]=u,z=d.padInfo.front,X=d.padInfo.left,Y=d.padInfo.top;for(let Z=0;Z<m;++Z){const ne=Math.max(0,Math.ceil((z-Z)/h)),J=Math.min(d.outDepth,(d.inDepth+z-Z)/h),ae=Z*w;for(let re=0;re<g;++re){const ue=Math.max(0,Math.ceil((Y-re)/p)),ge=Math.min(d.outHeight,(d.inHeight+Y-re)/p),ce=re*I+ae;for(let we=0;we<b;++we){const Ne=Math.max(0,Math.ceil((X-we)/f)),Fe=Math.min(d.outWidth,(d.inWidth+X-we)/f),ze=we*k+ce;for(let qe=0;qe<d.inChannels;++qe){const Ve=qe*$+ze;for(let Ye=0;Ye<d.outChannels;++Ye){let Te=0;for(let Je=0;Je<d.batchSize;++Je){const at=Je*V,Sn=Je*N;for(let xt=ne;xt<J;++xt){const Xt=(Z+xt*h-z)*B+at,xs=xt*T+Sn;for(let ln=ue;ln<ge;++ln){const ns=(re+ln*p-Y)*W+Xt,Kt=ln*_+xs;for(let un=Ne;un<Fe;++un){const Jr=(we+un*f-X)*q+ns,ys=un*O+Kt;Te+=P[Jr+qe]*C[ys+Ye]}}}}y[Ve+Ye]=Te}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const YL={kernelName:vf,backendName:"cpu",kernelFunc:KL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:a,strides:i,inputShape:c}=s;be([r],"conv3dBackpropInputV2");const u=me(r.shape),l=me(o.shape),d=Ur(c,o.shape,i,1,a),h=new rn(d.inShape,"float32"),p=h.values,[f,m,g,b]=h.strides,x=t.data.get(r.dataId).values,[y,w,I,k]=u,$=t.data.get(o.dataId).values,[C,N,T,_]=l,{batchSize:O,filterDepth:P,filterHeight:V,filterWidth:B,inChannels:W,inDepth:q,inHeight:z,inWidth:X,outChannels:Y,outDepth:Z,outHeight:ne,outWidth:J,strideDepth:ae,strideHeight:re,strideWidth:ue}=d,ge=P-1-d.padInfo.front,ce=V-1-d.padInfo.top,we=B-1-d.padInfo.left;for(let Ne=0;Ne<O;++Ne)for(let Fe=0;Fe<W;++Fe)for(let ze=0;ze<q;++ze){const qe=ze-ge,Ve=Math.max(0,Math.ceil(qe/ae)),Ye=Math.min(Z,(P+qe)/ae);for(let Te=0;Te<z;++Te){const Je=Te-ce,at=Math.max(0,Math.ceil(Je/re)),Sn=Math.min(ne,(V+Je)/re);for(let xt=0;xt<X;++xt){const Nn=xt-we,Xt=Math.max(0,Math.ceil(Nn/ue)),xs=Math.min(J,(B+Nn)/ue);let ln=0;for(let Wn=Ve;Wn<Ye;++Wn){const ns=Wn*ae-qe;for(let Kt=at;Kt<Sn;++Kt){const un=Kt*re-Je;for(let tr=Xt;tr<xs;++tr){const Jr=tr*ue-Nn,ys=y*Ne+w*Wn+I*Kt+k*tr,tc=C*(P-1-ns)+N*(V-1-un)+T*(B-1-Jr)+_*Fe;for(let nr=0;nr<Y;++nr){const Qr=x[ys+nr],Yt=$[tc+nr];ln+=Qr*Yt}}}}p[f*Ne+m*ze+g*Te+b*xt+Fe]=ln}}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}const JL={kernelName:Cf,backendName:"cpu",kernelFunc:ZL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QL=Ze(ja,n=>Math.cos(n)),eP={kernelName:ja,backendName:"cpu",kernelFunc:QL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tP=Ze(qa,n=>Math.cosh(n)),nP={kernelName:qa,backendName:"cpu",kernelFunc:tP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sP(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:a}=e,{cropSize:i,method:c,extrapolationValue:u}=s,[l,d,h,p]=r.shape,f=o.shape[0],[m,g]=i,b=Me([f,m,g,p],"float32"),x=t.data.get(o.dataId).values,y=t.data.get(a.dataId).values,w=t.data.get(r.dataId).values,I=me(r.shape),k=me(b.shape);for(let $=0;$<f;$++){const C=$*4,N=x[C],T=x[C+1],_=x[C+2],O=x[C+3],P=y[$];if(P>=l)continue;const V=m>1?(_-N)*(d-1)/(m-1):0,B=g>1?(O-T)*(h-1)/(g-1):0;for(let W=0;W<m;W++){const q=m>1?N*(d-1)+W*V:.5*(N+_)*(d-1);if(q<0||q>d-1){for(let z=0;z<g;z++)for(let X=0;X<p;X++){const Y=X+z*k[2]+W*k[1]+$*k[0];b.values[Y]=u}continue}if(c==="bilinear"){const z=Math.floor(q),X=Math.ceil(q),Y=q-z;for(let Z=0;Z<g;Z++){const ne=g>1?T*(h-1)+Z*B:.5*(T+O)*(h-1);if(ne<0||ne>h-1){for(let ue=0;ue<p;ue++){const ge=ue+Z*k[2]+W*k[1]+$*k[0];b.values[ge]=u}continue}const J=Math.floor(ne),ae=Math.ceil(ne),re=ne-J;for(let ue=0;ue<p;ue++){let ge=ue+J*I[2]+z*I[1]+P*I[0];const ce=w[ge];ge=ue+ae*I[2]+z*I[1]+P*I[0];const we=w[ge];ge=ue+J*I[2]+X*I[1]+P*I[0];const Ne=w[ge];ge=ue+ae*I[2]+X*I[1]+P*I[0];const Fe=w[ge],ze=ce+(we-ce)*re,qe=Ne+(Fe-Ne)*re;ge=ue+Z*k[2]+W*k[1]+$*k[0],b.values[ge]=ze+(qe-ze)*Y}}}else for(let z=0;z<g;++z){const X=g>1?T*(h-1)+z*B:.5*(T+O)*(h-1);if(X<0||X>h-1){for(let ne=0;ne<p;ne++){const J=ne+z*k[2]+W*k[1]+$*k[0];b.values[J]=u}continue}const Y=Math.round(X),Z=Math.round(q);for(let ne=0;ne<p;ne++){const J=ne+Y*I[2]+Z*I[1]+P*I[0],ae=ne+z*k[2]+W*k[1]+$*k[0];b.values[ae]=w[J]}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const rP={kernelName:Yc,backendName:"cpu",kernelFunc:sP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;be(r,"cumprod");const c=pt([o],r.shape.length);let u=r;c!=null&&(u=$n({inputs:{x:r},backend:t,attrs:{perm:c}}));const l=ot(1,r.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);const d=On(u.dtype,"int32"),h=bf(L(u.shape),d),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<p.length;b+=f)for(let x=0;x<f;x++){const y=m(b,x);if(x===0)h[y]=a?1:p[y];else{const w=m(b,x-1);h[y]=a?p[w]*h[w]:p[y]*h[w]}}const g=t.makeTensorInfo(u.shape,d,h);if(c!=null){const b=er(c),x=$n({inputs:{x:g},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),x}return g}const aP={kernelName:Kc,backendName:"cpu",kernelFunc:oP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;be(r,"cumsum");const c=pt([o],r.shape.length);let u=r;c!=null&&(u=$n({inputs:{x:r},backend:t,attrs:{perm:c}}));const l=ot(1,r.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);const d=On(u.dtype,"int32"),h=an(L(u.shape),d),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<p.length;b+=f)for(let x=0;x<f;x++){const y=m(b,x);if(x===0)h[y]=a?0:p[y];else{const w=m(b,x-1);h[y]=a?p[w]+h[w]:p[y]+h[w]}}const g=t.makeTensorInfo(u.shape,d,h);if(c!=null){const b=er(c),x=$n({inputs:{x:g},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),x}return g}const cP={kernelName:Xa,backendName:"cpu",kernelFunc:iP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const c=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,l=Ng(c,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}else if(r.shape.length===2){const c=t.bufferSync(r),u=t.bufferSync(o),l=ok(c,u,a,i);return t.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const uP={kernelName:Sf,backendName:"cpu",kernelFunc:lP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:a}=s;v(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const i=r.shape[0],c=r.shape[1],u=r.shape[2],l=r.shape[3],d=c*o,h=u*o,p=l/(o*o),f=t.data.get(r.dataId).values,m=new Float32Array(i*d*h*p);let g=0;for(let b=0;b<i;++b)for(let x=0;x<d;++x){const y=Math.floor(x/o),w=x%o;for(let I=0;I<h;++I){const k=Math.floor(I/o),$=I%o,C=(w*o+$)*p;for(let N=0;N<p;++N){const _=N+C+l*(k+u*(y+c*b));m[g++]=f[_]}}}return t.makeTensorInfo([i,d,h,p],r.dtype,m)}const hP={kernelName:Zc,backendName:"cpu",kernelFunc:dP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yk(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c,dimRoundingMode:u}=s;be([r,o],"depthwiseConv2DNative");const l=me(r.shape),d=me(o.shape);let h=c;h==null&&(h=[1,1]),v(cn(a,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`);const p=Nt(r.shape,o.shape,a,h,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:x}=p,y=x.left,w=x.top,I=p.outChannels/p.inChannels,k=new rn(p.outShape,r.dtype),$=t.data.get(r.dataId).values,C=t.data.get(o.dataId).values,N=k.values;for(let T=0;T<p.batchSize;++T){const _=T*l[0],O=T*k.strides[0];for(let P=0;P<p.outHeight;++P){const V=O+P*k.strides[1],B=P*p.strideHeight-w;for(let W=0;W<f;++W){const q=B+W*g;if(q<0||q>=p.inHeight)continue;const z=W*d[0],X=_+q*l[1];for(let Y=0;Y<p.outWidth;++Y){const Z=V+Y*k.strides[2],ne=Y*p.strideWidth-y;for(let J=0;J<m;++J){const ae=ne+J*b;if(ae<0||ae>=p.inWidth)continue;const re=z+J*d[1],ue=X+ae*p.inChannels;let ge=Z,ce=re;for(let we=0;we<p.inChannels;++we){const Ne=$[ue+we];for(let Fe=0;Fe<I;++Fe)N[ge+Fe]+=Ne*C[ce+Fe];ge+=I,ce+=I}}}}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const pP={kernelName:Ka,backendName:"cpu",kernelFunc:Yk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:u,filterShape:l}=s;be([r,o],"depthwiseConv2dNativeBackpropFilter");const d=Nt(r.shape,l,a,i,c,u,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new rn(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,y=d.outChannels/d.inChannels,w=t.data.get(r.dataId).values,I=new rn(r.shape,r.dtype,w),k=t.data.get(o.dataId).values,$=new rn(o.shape,o.dtype,k);for(let C=0;C<f;++C){const N=Math.max(0,Math.ceil((x-C)/h)),T=Math.min(d.outHeight,(d.inHeight+x-C)/h);for(let _=0;_<m;++_){const O=Math.max(0,Math.ceil((b-_)/p)),P=Math.min(d.outWidth,(d.inWidth+b-_)/p);for(let V=0;V<d.outChannels;++V){const B=Math.trunc(V/y),W=V%y;let q=0;for(let z=0;z<d.batchSize;++z)for(let X=N;X<T;++X){const Y=C+X*h-x;for(let Z=O;Z<P;++Z){const ne=_+Z*p-b;q+=I.get(z,Y,ne,B)*$.get(z,X,Z,V)}}g.set(q,C,_,B,W)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const mP={kernelName:Nf,backendName:"cpu",kernelFunc:fP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:u,inputShape:l}=s;be([r,o],"depthwiseConv2DNativeBackpropInput");const d=me(r.shape),h=me(o.shape),p=Nt(l,o.shape,a,i,c,u,!0),f=new rn(p.inShape,"float32"),m=f.values,[g,b,x]=f.strides,y=t.data.get(r.dataId).values,[w,I,k]=d,$=t.data.get(o.dataId).values,[C,N,T]=h,{batchSize:_,filterHeight:O,filterWidth:P,inChannels:V,inHeight:B,inWidth:W,outChannels:q,outHeight:z,outWidth:X,strideHeight:Y,strideWidth:Z}=p,ne=O-1-p.padInfo.top,J=P-1-p.padInfo.left,ae=q/V;for(let re=0;re<_;++re)for(let ue=0;ue<V;++ue)for(let ge=0;ge<B;++ge){const ce=ge-ne,we=Math.max(0,Math.ceil(ce/Y)),Ne=Math.min(z,(O+ce)/Y);for(let Fe=0;Fe<W;++Fe){const ze=Fe-J,qe=Math.max(0,Math.ceil(ze/Z)),Ve=Math.min(X,(P+ze)/Z);let Ye=0;for(let Te=we;Te<Ne;++Te){const Je=Te*Y-ce;for(let at=qe;at<Ve;++at){const Sn=at*Z-ze,xt=w*re+I*Te+k*at,Nn=C*(O-1-Je)+N*(P-1-Sn)+T*ue;for(let Xt=0;Xt<ae;++Xt){const xs=ue*ae+Xt,ln=y[xt+xs],Wn=$[Nn+Xt];Ye+=ln*Wn}}}m[g*re+b*ge+x*Fe+ue]=Ye}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const bP={kernelName:Tf,backendName:"cpu",kernelFunc:gP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n){const{inputs:e,backend:t}=n,{x:s}=e,r=L(s.shape),o=t.data.get(s.dataId).values,a=Me([r,r],s.dtype),i=a.values;for(let u=0;u<o.length;u++)i[u*r+u]=o[u];const c=[...s.shape,...s.shape];return t.makeTensorInfo(c,a.dtype,a.values)}const yP={kernelName:s0,backendName:"cpu",kernelFunc:xP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wP={kernelName:_d,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r}=n,{strides:o,pad:a,dilations:i}=t,c=e,u=c.data.get(s.dataId).values,l=s.shape.length,d=c.data.get(r.dataId).values,h=r.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:I,filterHeight:k,filterWidth:$,dilationHeight:C,dilationWidth:N,outShape:T}=Pl(s.shape,r.shape,o,a,"NHWC",i),_=L(T),O=T.length,P=At(s.dtype,_);for(let B=0;B<p;++B)for(let W=0;W<b;++W){const q=W*w-y.top;for(let z=0;z<x;++z){const X=z*I-y.left;for(let Y=0;Y<g;++Y){let Z=Number.MIN_SAFE_INTEGER;for(let J=0;J<k;++J){const ae=q+J*C;if(ae>=0&&ae<f)for(let re=0;re<$;++re){const ue=X+re*N;if(ue>=0&&ue<m){const ge=Ws([B,ae,ue,Y],l,me(s.shape)),ce=Ws([J,re,Y],h,me(r.shape)),we=u[ge]+d[ce];we>Z&&(Z=we)}}}const ne=Ws([B,W,z,Y],O,me(T));P[ne]=Z}}}return{dataId:c.write(Wo(P,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IP={kernelName:bp,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:c}=t,u=e,l=Ss(s.shape,u.data.get(s.dataId).values),d=Ss(r.shape,u.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:y,strideWidth:w,filterHeight:I,filterWidth:k,dilationHeight:$,dilationWidth:C,outShape:N}=Pl(s.shape,r.shape,a,i,"NHWC",c);v(o.rank===N.length,()=>`Error in ${bp}, dy must have the same rank as output ${N.length}, but got ${o.rank}`);const T=Ss(N,u.data.get(o.dataId).values),_=Jy(r.shape,r.dtype);for(let P=0;P<h;++P)for(let V=0;V<g;++V){const B=V*y-x.top;for(let W=0;W<b;++W){const q=W*w-x.left;for(let z=0;z<m;++z){let X=Number.MIN_SAFE_INTEGER,Y=0,Z=0;for(let ne=0;ne<I;++ne){const J=B+ne*$;if(J>=0&&J<p)for(let ae=0;ae<k;++ae){const re=q+ae*C;if(re>=0&&re<f){const ue=l[P][J][re][z]+d[ne][ae][z];ue>X&&(X=ue,Y=ne,Z=ae)}}}_[Y][Z][z]+=T[P][V][W][z]}}}return{dataId:u.write(Wo(_,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kP={kernelName:gp,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:r,dy:o}=n,{strides:a,pad:i,dilations:c}=t,u=e,l=Ss(s.shape,u.data.get(s.dataId).values),d=Ss(r.shape,u.data.get(r.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:y,strideWidth:w,filterHeight:I,filterWidth:k,dilationHeight:$,dilationWidth:C,outShape:N}=Pl(s.shape,r.shape,a,i,"NHWC",c);v(o.rank===N.length,()=>`Error in ${gp}, dy must have the same rank as output ${N.length}, but got ${o.rank}`);const T=Ss(N,u.data.get(o.dataId).values),_=Jy(s.shape,s.dtype);for(let P=0;P<h;++P)for(let V=0;V<g;++V){const B=V*y-x.top;for(let W=0;W<b;++W){const q=W*w-x.left;for(let z=0;z<m;++z){let X=Number.MIN_SAFE_INTEGER,Y=B<0?0:B,Z=q<0?0:q;for(let ne=0;ne<I;++ne){const J=B+ne*$;if(J>=0&&J<p)for(let ae=0;ae<k;++ae){const re=q+ae*C;if(re>=0&&re<f){const ue=l[P][J][re][z]+d[ne][ae][z];ue>X&&(X=ue,Y=J,Z=re)}}}_[P][Y][Z][z]+=T[P][V][W][z]}}}return{dataId:u.write(Wo(_,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jl(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;be(r,"sum");let i;r.dtype==="bool"?i=Mr({inputs:{x:r},backend:t,attrs:{dtype:"int32"}}):i=Ys({inputs:{x:r},backend:t});const c=i.shape.length,u=Re(o,i.shape),l=pt(u,c);let d=u,h=i;l!=null&&(h=$n({inputs:{x:i},backend:t,attrs:{perm:l}}),d=ot(d.length,c)),ht("sum",d,h.shape.length);const[p,f]=bt(h.shape,d),m=On(h.dtype,"int32");let g=dd(t,p,m);const b=L(f),x=t.data.get(g.dataId).values,y=t.data.get(h.dataId).values;for(let w=0;w<x.length;++w){const I=w*b;let k=0;for(let $=0;$<b;++$)k+=y[I+$];x[w]=k}if(a){const w=et(g.shape,u),I=g;g=ut({inputs:{x:g},backend:t,attrs:{shape:w}}),t.disposeIntermediateTensorInfo(I)}return t.disposeIntermediateTensorInfo(i),l!=null&&t.disposeIntermediateTensorInfo(h),g}const $P={kernelName:Ri,backendName:"cpu",kernelFunc:Jl};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vP(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:a,summedDims:i,idDims:c}=Vm(r,o.length);Um(a.length,c,o);const{path:u,steps:l}=Gm(i,c),d=l.length;let h=null,p=a.length;const f=[];for(let m=0;m<d;++m){for(const g of l[m]){const{permutationIndices:b,expandDims:x}=Wm(p,c[g]);let y;Hm(b)?y=o[g]:(y=$n({inputs:{x:o[g]},backend:t,attrs:{perm:b}}),f.push(y));const w=y.shape.slice();for(let I=0;I<x.length;++I)w.splice(x[I],0,1);Ke(y.shape,w)||(y=ut({inputs:{x:y},backend:t,attrs:{shape:w}}),f.push(y)),h===null?h=y:(h=Nh({inputs:{a:y,b:h},backend:t}),f.push(h))}m<d-1&&(u[m]>=0&&(h=Jl({inputs:{x:h},backend:t,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&t.disposeIntermediateTensorInfo(m);return h}const CP={kernelName:r0,backendName:"cpu",kernelFunc:vP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(n){const{inputs:e,backend:t}=n,{dy:s,y:r}=e;be([s,r],"eluGrad");const o=new Float32Array(L(r.shape)),a=t.data.get(r.dataId).values,i=t.data.get(s.dataId).values;for(let c=0;c<a.length;++c){const u=a[c];u>=1?o[c]=i[c]:o[c]=i[c]*(u+1)}return t.makeTensorInfo(r.shape,"float32",o)}const NP={kernelName:Ef,backendName:"cpu",kernelFunc:SP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TP=Fm,EP=Om,_P=Mm,RP=Lm,AP=Pm,DP=Bm,FP=Ze(Jc,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+TP*t);return e*(1-((((DP*s+AP)*s+RP)*s+_P)*s+EP)*s*Math.exp(-t*t))}),OP={kernelName:Jc,backendName:"cpu",kernelFunc:FP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function md(n){const{inputs:e,backend:t,attrs:s}=n,{input:r}=e,{dim:o}=s,a=r.shape.length,i=r.shape.slice();let c=o;return o<0&&(v(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+o+1),i.splice(c,0,1),ut({inputs:{x:r},backend:t,attrs:{shape:i}})}const MP={kernelName:el,backendName:"cpu",kernelFunc:md};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LP=Dt((n,e)=>n/e),Pg=qt(Ya,LP),Hp={kernelName:Ya,backendName:"cpu",kernelFunc:Pg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zk(n,e,t){const s=n.shape,r=s[0],o=s[1],a=t.data.get(n.dataId),i=a.complexTensorInfos.real,c=a.complexTensorInfos.imag,u=[r,o],l=L(u),d=Qt("float32",l),h=Qt("float32",l);for(let g=0;g<r;g++){const b=Fo({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,o]}}),x=Fo({inputs:{x:c},backend:t,attrs:{begin:[g,0],size:[1,o]}}),y=Rn({inputs:{real:b,imag:x},backend:t}),{real:w,imag:I}=PP(y,e,t),k=fr(w,I);for(let $=0;$<o;$++){const C=zm(k,$);d[g*o+$]=C.real,h[g*o+$]=C.imag}t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y)}const p=t.makeTensorInfo(u,"float32",d),f=t.makeTensorInfo(u,"float32",h),m=Rn({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function PP(n,e,t){const s=L(n.shape),r=t.data.get(n.dataId),o=t.data.get(r.complexTensorInfos.real.dataId).values,a=t.data.get(r.complexTensorInfos.imag.dataId).values;if(BP(s)){const i=jp(o,a,s,e,t),c=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(c,"float32",i.real),l=t.makeTensorInfo(c,"float32",i.imag),d=t.makeTensorInfo([],"float32",Wr(s,"float32")),h=Ys({inputs:{x:d},backend:t}),p=Hp.kernelFunc({inputs:{a:u,b:d},backend:t}),f=Hp.kernelFunc({inputs:{a:l,b:h},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{const i=fr(o,a),c=zP(i,s,e);return Mw(c)}}function BP(n){return(n&n-1)===0}function jp(n,e,t,s,r){if(t===1)return{real:n,imag:e};const o=fr(n,e),a=t/2,i=Lw(o),c=i.real,u=i.imag,l=[c.length],d=r.makeTensorInfo(l,"float32",c),h=r.makeTensorInfo(l,"float32",u),p=Rn({inputs:{real:d,imag:h},backend:r}),f=Pw(o),m=f.real,g=f.imag,b=[m.length],x=r.makeTensorInfo(b,"float32",m),y=r.makeTensorInfo(b,"float32",g),w=Rn({inputs:{real:x,imag:y},backend:r}),I=jp(c,u,a,s,r),k=I.real,$=I.imag,C=[k.length],N=r.makeTensorInfo(C,"float32",k),T=r.makeTensorInfo(C,"float32",$),_=Rn({inputs:{real:N,imag:T},backend:r}),O=jp(m,g,a,s,r),P=O.real,V=O.imag,B=[P.length],W=r.makeTensorInfo(B,"float32",P),q=r.makeTensorInfo(B,"float32",V),z=Rn({inputs:{real:W,imag:q},backend:r}),X=zw(t,s),Y=[X.real.length],Z=r.makeTensorInfo(Y,"float32",X.real),ne=r.makeTensorInfo(Y,"float32",X.imag),J=Rn({inputs:{real:Z,imag:ne},backend:r}),ae=Nh({inputs:{a:J,b:z},backend:r}),re=Ea({inputs:{a:_,b:ae},backend:r}),ue=Mg({inputs:{a:_,b:ae},backend:r}),ge=Do({inputs:{input:re},backend:r}),ce=Do({inputs:{input:ue},backend:r}),we=_a({inputs:{input:re},backend:r}),Ne=_a({inputs:{input:ue},backend:r}),Fe=Ra({inputs:[ge,ce],backend:r,attrs:{axis:0}}),ze=Ra({inputs:[we,Ne],backend:r,attrs:{axis:0}}),qe=r.data.get(Fe.dataId).values,Ve=r.data.get(ze.dataId).values;return r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(y),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(N),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(Z),r.disposeIntermediateTensorInfo(ne),r.disposeIntermediateTensorInfo(J),r.disposeIntermediateTensorInfo(ae),r.disposeIntermediateTensorInfo(re),r.disposeIntermediateTensorInfo(ue),r.disposeIntermediateTensorInfo(ge),r.disposeIntermediateTensorInfo(we),r.disposeIntermediateTensorInfo(ce),r.disposeIntermediateTensorInfo(Ne),r.disposeIntermediateTensorInfo(Fe),r.disposeIntermediateTensorInfo(ze),{real:qe,imag:Ve}}function zP(n,e,t){const s=new Float32Array(e*2);for(let r=0;r<e;r++){let o=0,a=0;for(let i=0;i<e;i++){const c=Vw(r*i,e,t),u=zm(n,i);o+=u.real*c.real-u.imag*c.imag,a+=u.real*c.imag+u.imag*c.real}t&&(o/=e,a/=e),Bw(s,o,a,r)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VP(n){const{inputs:e,backend:t}=n,{input:s}=e,r=L(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=ut({inputs:{x:s},backend:t,attrs:{shape:[a,o]}}),c=Zk(i,!1,t),u=ut({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),u}const WP={kernelName:_f,backendName:"cpu",kernelFunc:VP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bg(n){const{backend:e,attrs:t}=n,{shape:s,value:r,dtype:o}=t,a=o||Oc(r),i=At(a,L(s));return GP(i,r,a),e.makeTensorInfo(s,a,i)}const UP={kernelName:Rd,backendName:"cpu",kernelFunc:Bg};function GP(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HP={kernelName:nl,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,r=t,o=Qt(s.dtype,L(s.shape)),[a,i,c,u]=s.shape,l=r.data.get(s.dataId).values;for(let h=0;h<a;h++){const p=h*c*i*u;for(let f=0;f<i;f++){const m=f*(c*u);for(let g=0;g<c;g++){const b=g*u;for(let x=0;x<u;x++){const y=Math.round(c-g-1),w=p+m+b+x;let I=l[w];if(y>=0&&y<c){const k=y*u,$=p+m+k+x;I=l[$]}o[w]=I}}}}return{dataId:r.write(o,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jP=Dt((n,e)=>Math.floor(n/e)),qP=qt(ei,jP,null,"int32"),XP={kernelName:ei,backendName:"cpu",kernelFunc:qP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=Kk({inputs:{x:r,filter:o},backend:t,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}});if(a){const g=m;if(l==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const b=ut({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=Ea({inputs:{a:m,b},backend:t}),t.disposeIntermediateTensorInfo(b)}else m=Ea({inputs:{a:m,b:a},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(l==="NCHW"&&p==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const b=ut({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=fd(t,m,p,b,f),t.disposeIntermediateTensorInfo(b)}else m=fd(t,m,p,i,f);t.disposeIntermediateTensorInfo(g)}return m}const YP={kernelName:$a,backendName:"cpu",kernelFunc:KP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=Yk({inputs:{x:r,filter:o},backend:t,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}});if(a){const g=m;m=Ea({inputs:{a:m,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=fd(t,m,p,i,f),t.disposeIntermediateTensorInfo(g)}return m}const JP={kernelName:Hd,backendName:"cpu",kernelFunc:ZP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=L(s.shape),a=r.shape,i=a[a.length-1],[c,u,l,d]=Yd(s,r);if(u===0)return t.makeTensorInfo(c,s.dtype,[]);const h=t.data.get(r.dataId).values,p=t.bufferSync(s),f=pk(h,p,s.dtype,u,i,l,d,s.shape,o);return t.makeTensorInfo(c,s.dtype,f.values)}const eB={kernelName:Ad,backendName:"cpu",kernelFunc:QP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:a,batchDims:i}=s;be([r,o],"gatherV2");const c=Re(a,r.shape)[0],u=t.data.get(o.dataId).values,l=r.shape[c];for(let w=0;w<u.length;++w){const I=u[w];v(I<=l-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${l-1}]`)}let d=i;i==null&&(d=0);const h=L(o.shape),p=mh(r,o,c,d),f=ut({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=ut({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],b=t.bufferSync(m),x=t.bufferSync(f),y=fk(x,b,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,y.dtype,y.values)}const nB={kernelName:sl,backendName:"cpu",kernelFunc:tB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n){const{inputs:e,backend:t}=n,{input:s}=e,r=L(s.shape),o=s.shape[s.shape.length-1],a=r/o,i=ut({inputs:{x:s},backend:t,attrs:{shape:[a,o]}}),c=Zk(i,!0,t),u=ut({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),u}const rB={kernelName:Rf,backendName:"cpu",kernelFunc:sB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oB=Ze(ol,n=>Number.isFinite(n)?1:0,"bool"),aB={kernelName:ol,backendName:"cpu",kernelFunc:oB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iB=Ze(al,n=>Math.abs(n)===1/0?1:0,"bool"),cB={kernelName:al,backendName:"cpu",kernelFunc:iB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lB=Ze(ri,n=>Number.isNaN(n)?1:0,"bool"),uB={kernelName:ri,backendName:"cpu",kernelFunc:lB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dB(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,a=yk(s,r,o);return e.makeTensorInfo([a.length],"float32",a)}const hB={kernelName:Df,backendName:"cpu",kernelFunc:dB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pB=Ze(ll,n=>Math.log1p(n)),fB={kernelName:ll,backendName:"cpu",kernelFunc:pB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mB=Dt((n,e)=>n&&e),gB=qt(ul,mB,null,"bool"),bB={kernelName:ul,backendName:"cpu",kernelFunc:gB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xB=Ze(dl,n=>n?0:1,"bool"),yB={kernelName:dl,backendName:"cpu",kernelFunc:xB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wB=Dt((n,e)=>n||e),IB=qt(hl,wB,null,"bool"),kB={kernelName:hl,backendName:"cpu",kernelFunc:IB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $B(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:a,alpha:i,beta:c}=s;be(r,"LRN");const u=r.shape[3],l=u-1,d=t.data.get(r.dataId).values,h=L(r.shape),p=new Float32Array(h);function f(m){const g=m%u;let b=m-g+Math.max(0,g-o);const x=m-g+Math.min(g+o,l);let y=0;for(;b<=x;b++){const w=d[b];y+=w*w}return y}for(let m=0;m<h;m++){const g=f(m),b=d[m]*Math.pow(a+i*g,-c);p[m]=b}return t.makeTensorInfo(r.shape,r.dtype,p)}const vB={kernelName:Dd,backendName:"cpu",kernelFunc:$B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:a}=e,{depthRadius:i,bias:c,alpha:u,beta:l}=s;be(a,"LRNGrad");const d=L(a.shape),h=a.shape[3],p=t.data.get(a.dataId).values,f=t.data.get(r.dataId).values,m=t.data.get(o.dataId).values,g=new Float32Array(d),b=d;for(let x=0;x<b;x++){const y=x%h,w=x-y+Math.max(0,y-i),I=x-y+Math.min(h,y+i+1);let k=0;for(let $=w;$<I;$++)k+=Math.pow(f[$],2);k=u*k+c;for(let $=w;$<I;$++){let C=-2*u*l*f[$]*m[x]/k;x===$&&(C+=Math.pow(k,-l)),C*=p[x],g[$]+=C}}return t.makeTensorInfo(a.shape,r.dtype,g)}const SB={kernelName:Ff,backendName:"cpu",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:a}=s,i=t;let c=r.shape;const u=c.length,l=Re(o,c);let d=l;const h=pt(d,u);let p=i.data.get(r.dataId).values;if(h!=null){const w=new Array(u);for(let I=0;I<w.length;I++)w[I]=c[h[I]];p=_g(p,c,r.dtype,h,w),d=ot(d.length,u),c=w}be(r,"max"),ht("max",d,u);const[f,m]=bt(c,d),g=L(m),b=Ik(p,g,f,r.dtype),x=i.write(b,f,r.dtype);let y=f;return a&&(y=et(f,l)),{dataId:x,shape:y,dtype:r.dtype}}const NB={kernelName:ii,backendName:"cpu",kernelFunc:Jk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;be(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,u=1;v(cn(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const l=zn(r.shape,o,a,u,i,c);let d;if(l.filterWidth===1&&l.filterHeight===1&&Ke(l.inShape,l.outShape))d=Ys({inputs:{x:r},backend:t});else{const h=t.data.get(r.dataId).values,p=me(r.shape),f=Lg(h,r.shape,r.dtype,p,l,"max");d=t.makeTensorInfo(l.outShape,r.dtype,f.values)}return d}const EB={kernelName:li,backendName:"cpu",kernelFunc:TB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c,dataFormat:u}=s;be(r,"maxPool3d");const l=gr(r.shape,o,a,1,i,c,u),d=t.data.get(r.dataId).values,h=Xk(d,r.shape,r.dtype,me(r.shape),l,"max");return t.makeTensorInfo(h.shape,"float32",h.values)}const RB={kernelName:Fd,backendName:"cpu",kernelFunc:_B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,{filterSize:a,strides:i,pad:c,dimRoundingMode:u}=s;be([r,o],"maxPool3DGrad");const l=gr(o.shape,a,i,1,c,u),d=t.bufferSync(o),h=yL(d,l),p=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,b=l.dilationHeight,x=l.dilationWidth,y=l.effectiveFilterDepth,w=l.effectiveFilterHeight,I=l.effectiveFilterWidth,k=y-1-l.padInfo.front,$=I-1-l.padInfo.left,C=w-1-l.padInfo.top,N=Me(o.shape,"float32"),T=t.bufferSync(r);for(let _=0;_<l.batchSize;++_)for(let O=0;O<l.inChannels;++O)for(let P=0;P<l.inDepth;++P)for(let V=0;V<l.inHeight;++V)for(let B=0;B<l.inWidth;++B){const W=P-k,q=V-C,z=B-$;let X=0;for(let Y=0;Y<y;Y+=g){const Z=(W+Y)/p;if(!(Z<0||Z>=l.outDepth||Math.floor(Z)!==Z))for(let ne=0;ne<w;ne+=b){const J=(q+ne)/f;if(!(J<0||J>=l.outHeight||Math.floor(J)!==J))for(let ae=0;ae<I;ae+=x){const re=(z+ae)/m;if(re<0||re>=l.outWidth||Math.floor(re)!==re)continue;const ue=y*w*I-1-h.get(_,Z,J,re,O),ge=Y*w*I+ne*I+ae,ce=ue===ge?1:0;if(ce===0)continue;const we=T.get(_,Z,J,re,O);X+=we*ce}}}N.set(X,_,P,V,B,O)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const DB={kernelName:Mf,backendName:"cpu",kernelFunc:AB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:a}=e,i=o;be([o,a],"maxPoolGrad");const{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=s,h=zn(i.shape,c,u,1,l,d),p=t.data.get(i.dataId).values,f=Me(h.outShape,i.dtype,qk(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,b=h.dilationHeight,x=h.dilationWidth,y=h.effectiveFilterHeight,w=h.effectiveFilterWidth,I=w-1-h.padInfo.left,k=y-1-h.padInfo.top,$=Me(i.shape,"float32"),C=t.data.get(r.dataId).values,N=Me(r.shape,"float32",C);for(let T=0;T<h.batchSize;++T)for(let _=0;_<h.inChannels;++_)for(let O=0;O<h.inHeight;++O)for(let P=0;P<h.inWidth;++P){const V=O-k,B=P-I;let W=0;for(let q=0;q<y;q+=b){const z=(V+q)/m;if(!(z<0||z>=h.outHeight||Math.floor(z)!==z))for(let X=0;X<w;X+=x){const Y=(B+X)/g;if(Y<0||Y>=h.outWidth||Math.floor(Y)!==Y)continue;const Z=y*w-1-f.get(T,z,Y,_),ne=q*w+X,J=Z===ne?1:0;if(J===0)continue;const ae=N.get(T,z,Y,_);W+=ae*J}}$.set(W,T,O,P,_)}return t.makeTensorInfo($.shape,$.dtype,$.values)}const OB={kernelName:Of,backendName:"cpu",kernelFunc:FB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n,e,t,s,r){const o=me(e),a=Lg(n,e,t,o,r,"max"),i=qk(n,e,t,r,!0,s);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LB={kernelName:o0,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=e,c=t;be(s,"MaxPoolWithArgmax");const u=c.data.get(s.dataId).values,l=zn(s.shape,r,o,[1,1],a),[d,h]=MB(u,s.shape,s.dtype,i,l),p=c.write(d,l.outShape,s.dtype),f=c.write(h,l.outShape,s.dtype);return[{dataId:p,shape:l.outShape,dtype:s.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=Re(o,r.shape),u=bt(r.shape,i)[1],l=L(u),d=[],h=t.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=Mr({inputs:{x:r},backend:t,attrs:{dtype:"float32"}});d.push(p);const f=Pg({inputs:{a:p,b:h},backend:t});d.push(f);const m=Jl({inputs:{x:f},backend:t,attrs:{axis:o,keepDims:a}});return d.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const BB={kernelName:ui,backendName:"cpu",kernelFunc:PB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;be(r,"min");const i=Re(o,r.shape);let c=i;const u=pt(c,r.shape.length);let l=r;u!=null&&(l=$n({inputs:{x:r},backend:t,attrs:{perm:u}}),c=ot(c.length,r.shape.length)),ht("min",c,l.shape.length);const[d,h]=bt(l.shape,c),p=L(h),f=an(L(d),l.dtype),m=t.data.get(l.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let y=m[x];for(let w=0;w<p;++w){const I=m[x+w];(Number.isNaN(I)||I<y)&&(y=I)}f[b]=y}u!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(d,l.dtype,f);if(a){const b=et(d,i),x=ut({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}const VB={kernelName:di,backendName:"cpu",kernelFunc:zB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,mode:a}=s;be(r,"mirrorPad");const i=o.map((y,w)=>y[0]+r.shape[w]+y[1]),c=o.map(y=>y[0]),u=o.map((y,w)=>y[0]+r.shape[w]),l=a==="reflect"?0:1,d=t.data.get(r.dataId).values,h=r.shape.length,p=me(r.shape),f=L(i),m=i.length,g=me(i),b=Qt(r.dtype,f);for(let y=0;y<f;y++){let w=Pa(y,m,g);for(let k=0;k<m;k++)w[k]<c[k]?w[k]=c[k]*2-w[k]-l:w[k]>=u[k]&&(w[k]=(u[k]-1)*2-w[k]+l);w=w.map((k,$)=>k-c[$]);const I=Ws(w,h,p);b[y]=d[I]}return{dataId:t.write(b,i,r.dtype),shape:i,dtype:r.dtype}}const UB={kernelName:pi,backendName:"cpu",kernelFunc:WB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GB=Dt((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),HB=qt(pl,GB),jB={kernelName:pl,backendName:"cpu",kernelFunc:HB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,a=r.shape.length;let i=o;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const c=Re([i],r.shape),u=Jk({inputs:{x:r},backend:t,attrs:{reductionIndices:c,keepDims:!1}}),l=et(u.shape,c),d=ut({inputs:{x:u},backend:t,attrs:{shape:l}}),h=Mg({inputs:{a:r,b:d},backend:t}),p=uk({inputs:{x:h},backend:t}),f=Jl({inputs:{x:p},backend:t,attrs:{axis:c,keepDims:!1}}),m=ut({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Pg({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const qB={kernelName:Ai,backendName:"cpu",kernelFunc:Qk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XB(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:a,normalized:i}=s;be(r,"multinomial");const c=i?r:Qk({inputs:{logits:r},backend:t,attrs:{dim:-1}}),u=c.shape[0],l=c.shape[1],d=t.data.get(c.dataId).values,h=[u,o],p=an(L(h),"int32");for(let f=0;f<u;++f){const m=f*l,g=new Float32Array(l-1);g[0]=d[m];for(let y=1;y<g.length;++y)g[y]=g[y-1]+d[m+y];const b=pm.alea(a.toString()),x=f*o;for(let y=0;y<o;++y){const w=b();p[x+y]=g.length;for(let I=0;I<g.length;I++)if(w<g[I]){p[x+y]=I;break}}}return i||t.disposeIntermediateTensorInfo(c),t.makeTensorInfo(h,"int32",p)}const KB={kernelName:a0,backendName:"cpu",kernelFunc:XB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YB=$m;function ZB(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c}=s;be(r,"NonMaxSuppression");const u=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,{selectedIndices:d}=YB(u,l,a,i,c);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const JB={kernelName:gl,backendName:"cpu",kernelFunc:ZB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QB=vm;function ez(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=s;be(r,"NonMaxSuppressionPadded");const l=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,{selectedIndices:h,validOutputs:p}=QB(l,d,a,i,c,u);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const tz={kernelName:bl,backendName:"cpu",kernelFunc:ez};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nz=Cm;function sz(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=s;be(r,"NonMaxSuppressionWithScore");const l=t.data.get(r.dataId).values,d=t.data.get(o.dataId).values,h=a,p=i,f=c,m=u,{selectedIndices:g,selectedScores:b}=nz(l,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const rz={kernelName:xl,backendName:"cpu",kernelFunc:sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oz(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:a,onValue:i,offValue:c}=s;be(r,"oneHot");const u=L(r.shape),l=new Float32Array(u*a);l.fill(c);const d=t.data.get(r.dataId).values;for(let h=0;h<u;++h)d[h]>=0&&d[h]<a&&(l[h*a+d[h]]=i);return t.makeTensorInfo([...r.shape,a],o,l)}const az={kernelName:mi,backendName:"cpu",kernelFunc:oz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gd(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Do({inputs:{input:s},backend:t}),o=gd({inputs:{x:r},backend:t}),a=_a({inputs:{input:s},backend:t}),i=gd({inputs:{x:a},backend:t}),c=Rn({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return Bg({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const iz={kernelName:Ol,backendName:"cpu",kernelFunc:gd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e$(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const r=Do({inputs:{input:s},backend:t}),o=e$({inputs:{x:r},backend:t}),a=_a({inputs:{input:s},backend:t}),i=gd({inputs:{x:a},backend:t}),c=Rn({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return Bg({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const cz={kernelName:yl,backendName:"cpu",kernelFunc:e$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t$(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return md({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{Qn(o,l.shape,"All tensors passed to stack must have matching shapes"),v(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],c=e.map(l=>{const d=md({inputs:{input:l},backend:t,attrs:{dim:r}});return i.push(d),d}),u=Ra({inputs:c,backend:t,attrs:{axis:r}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),u}const lz={kernelName:wl,backendName:"cpu",kernelFunc:t$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uz(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:a}=s;be(r,"pad");const i=o.map((x,y)=>x[0]+r.shape[y]+x[1]),c=o.map(x=>x[0]),u=t.data.get(r.dataId).values,l=L(r.shape),d=r.shape.length,h=me(r.shape),p=L(i),f=i.length,m=me(i),g=Qt(r.dtype,p);a!==0&&g.fill(a);for(let x=0;x<l;x++){const w=Pa(x,d,h).map((k,$)=>k+c[$]),I=Ws(w,f,m);g[I]=u[x]}return{dataId:t.write(g,i,r.dtype),shape:i,dtype:r.dtype}}const n$={kernelName:gi,backendName:"cpu",kernelFunc:uz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dz=Dt((n,e)=>Math.pow(n,e)),hz=qt(bi,dz),pz={kernelName:bi,backendName:"cpu",kernelFunc:hz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fz(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=e,i=r.map(g=>t.data.get(g.dataId).values),c=r.map(g=>g.shape),u=t.data.get(o.dataId).values,l=t.data.get(a.dataId).values,[d,h,p]=Nk(i,c,u,o.shape,o.dtype,l,a.shape),f=d.map(g=>t.makeTensorInfo([g.length],"int32",g)),m=t.makeTensorInfo(p,o.dtype,h);return f.concat([m])}const mz={kernelName:i0,backendName:"cpu",kernelFunc:fz};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,a=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,[u,l]=Tk(a,s.shape,s.dtype,i,r.shape,c,o.shape),d=t.makeTensorInfo([u.length],"int32",u),h=t.makeTensorInfo([l.length],s.dtype,l);return[d,h]}const bz={kernelName:c0,backendName:"cpu",kernelFunc:gz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=s,u=t.data.get(r.dataId).values,l=t.data.get(o.dataId).values,d=t.data.get(a.dataId).values,h=i.map(g=>t.data.get(g.dataId).values),p=i.map(g=>g.shape),[f,m]=Ek(u,r.shape,l,o.shape,o.dtype,d,a.shape,h,p,c);return t.makeTensorInfo(f,o.dtype,m)}const yz={kernelName:l0,backendName:"cpu",kernelFunc:xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n){const{backend:e,attrs:t}=n,{start:s,stop:r,dtype:o,step:a}=t,i=Rg(s,r,a,o);return e.makeTensorInfo([i.length],o,i)}const Iz={kernelName:Od,backendName:"cpu",kernelFunc:wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kz=Ze(wi,n=>1/n),$z={kernelName:wi,backendName:"cpu",kernelFunc:kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vz(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s;be(r,"resizeBilinear");const c=me(r.shape),[u,l]=i,[d,h,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(L([d,u,l,f])),b=[o&&u>1?h-1:h,o&&l>1?p-1:p],x=[o&&u>1?u-1:u,o&&l>1?l-1:l];let y=0;const w=b[0]/x[0],I=b[1]/x[1];for(let k=0;k<d;k++)for(let $=0;$<u;$++){let C;a?C=w*($+.5)-.5:C=w*$;const N=Math.max(0,Math.floor(C)),T=C-N,_=Math.min(h-1,Math.ceil(C)),O=k*c[0]+N*c[1],P=k*c[0]+_*c[1];for(let V=0;V<l;V++){let B;a?B=I*(V+.5)-.5:B=I*V;const W=Math.max(0,Math.floor(B)),q=B-W,z=Math.min(p-1,Math.ceil(B)),X=O+W*c[2],Y=P+W*c[2],Z=O+z*c[2],ne=P+z*c[2];for(let J=0;J<f;J++){const ae=m[X+J],re=m[Y+J],ue=m[Z+J],ge=m[ne+J],ce=ae+(ue-ae)*q,we=re+(ge-re)*q,Ne=ce+(we-ce)*T;g[y++]=Ne}}}return t.makeTensorInfo([d,u,l,f],"float32",g)}const Cz={kernelName:$i,backendName:"cpu",kernelFunc:vz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s;be([o,r],"resizeBilinearGrad");const i=me(r.shape),[c,u,l,d]=r.shape,[,h,p]=o.shape,f=new Float32Array(c*u*l*d),m=[a&&h>1?u-1:u,a&&p>1?l-1:l],g=[a&&h>1?h-1:h,a&&p>1?p-1:p],b=m[0]/g[0],x=m[1]/g[1],y=t.data.get(o.dataId).values;let w=0;for(let I=0;I<c;I++){const k=I*i[0];for(let $=0;$<h;$++){const C=$*b,N=Math.floor(C),T=Math.min(Math.ceil(C),u-1),_=k+N*i[1],O=k+T*i[1],P=C-N,V=1-P;for(let B=0;B<p;B++){const W=B*x,q=Math.floor(W),z=Math.min(Math.ceil(W),l-1),X=W-q,Y=1-X,Z=_+q*i[2],ne=_+z*i[2],J=O+q*i[2],ae=O+z*i[2],re=V*Y,ue=V*X,ge=P*Y,ce=P*X;for(let we=0;we<d;we++){const Ne=y[w++];f[Z+we]+=Ne*re,f[ne+we]+=Ne*ue,f[J+we]+=Ne*ge,f[ae+we]+=Ne*ce}}}}return t.makeTensorInfo([c,l,u,d],"float32",f)}const Nz={kernelName:Bf,backendName:"cpu",kernelFunc:Sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s;be(r,"resizeNearestNeighbor");const c=me(r.shape),[u,l]=i,[d,h,p,f]=r.shape,m=t.data.get(r.dataId).values,g=new Float32Array(d*u*l*f),b=[o&&u>1?h-1:h,o&&l>1?p-1:p],x=[o&&u>1?u-1:u,o&&l>1?l-1:l],y=b[0]/x[0],w=b[1]/x[1];let I=0;for(let k=0;k<d;k++){const $=k*c[0];for(let C=0;C<u;C++){const N=a?y*(C+.5):y*C;let T=Math.min(h-1,o?Math.round(N):Math.floor(N));a&&(T=Math.max(0,T));const _=$+T*c[1];for(let O=0;O<l;O++){const P=a?w*(O+.5):w*O;let V=Math.min(p-1,o?Math.round(P):Math.floor(P));a&&(V=Math.max(0,V));const B=_+V*c[2];for(let W=0;W<f;W++){const q=m[B+W];g[I++]=q}}}}return t.makeTensorInfo([d,u,l,f],r.dtype,g)}const Ez={kernelName:ki,backendName:"cpu",kernelFunc:Tz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s;be([o,r],"resizeNearestNeighborGrad");const i=me(r.shape),c=me(o.shape),[u,l,d,h]=r.shape,[,p,f]=o.shape,m=new Float32Array(u*l*d*h),g=t.data.get(o.dataId).values,b=[a&&p>1?l-1:l,a&&f>1?d-1:d],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=b[0]/x[0],w=b[1]/x[1],I=1/y,k=1/w,$=Math.ceil(I)*2+2,C=Math.ceil(k)*2+2;for(let N=0;N<u;N++){const T=N*i[0];for(let _=0;_<l;_++){const O=T+_*i[1],P=Math.floor(_*I),V=Math.floor(P-$/2);for(let B=0;B<d;B++){const W=O+B*i[2],q=Math.floor(B*k),z=Math.floor(q-C/2);for(let X=0;X<h;X++){let Y=0;for(let Z=0;Z<$;Z++){const ne=Z+V;if(ne<0||ne>=p)continue;const J=T+ne*c[1],ae=ne*y,re=Math.min(l-1,a?Math.round(ae):Math.floor(ae));if(_===re)for(let ue=0;ue<C;ue++){const ge=ue+z;if(ge<0||ge>=f)continue;const ce=J+ge*c[2],we=ge*w,Ne=Math.min(d-1,a?Math.round(we):Math.floor(we));B===Ne&&(Y+=g[ce+X])}}m[W+X]=Y}}}}return t.makeTensorInfo(r.shape,r.dtype,m)}const Rz={kernelName:Pf,backendName:"cpu",kernelFunc:_z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s;be(r,"reverse");const a=r.shape.length,i=Re(o,r.shape);if(a===0)return Ys({inputs:{x:r},backend:t});const c=new rn(r.shape,r.dtype),u=t.bufferSync(r);for(let l=0;l<c.size;l++){const d=c.indexToLoc(l),h=d.slice();i.forEach(p=>h[p]=r.shape[p]-1-h[p]),c.set(u.get(...h),...d)}return t.makeTensorInfo(c.shape,c.dtype,c.values)}const Dz={kernelName:Ci,backendName:"cpu",kernelFunc:Az};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fz={kernelName:Ml,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=e,i=t,c=Qt(s.dtype,L(s.shape)),[u,l,d,h]=s.shape,[p,f]=lh(a,l,d),m=255,g=Math.sin(r),b=Math.cos(r),x=i.data.get(s.dataId).values;for(let w=0;w<u;w++){const I=w*d*l*h;for(let k=0;k<l;k++){const $=k*(d*h);for(let C=0;C<d;C++){const N=C*h;for(let T=0;T<h;T++){const _=[u,k,C,T],O=_[2],P=_[1];let V=(O-p)*b-(P-f)*g,B=(O-p)*g+(P-f)*b;V=Math.round(V+p),B=Math.round(B+f);let W=o;if(typeof o!="number"&&(T===3?W=m:W=o[T]),V>=0&&V<d&&B>=0&&B<l){const z=B*(d*h),X=V*h,Y=I+z+X+T;W=x[Y]}const q=I+$+N+T;c[q]=W}}}}return{dataId:i.write(c,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oz=Ze(Si,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),Mz={kernelName:Si,backendName:"cpu",kernelFunc:Oz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lz(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:a}=s,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=Li(o,r,a),h=!0,p=t.bufferSync(r),f=t.bufferSync(o),m=da(p,f,a,d,u,c,i,l,0,h);return t.makeTensorInfo(a,m.dtype,m.values)}const Pz={kernelName:Md,backendName:"cpu",kernelFunc:Lz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<e?t=r+1:s=r;return s}function zz(n,e){let t=0,s=n.length,r=0;for(;t<s;)r=Math.floor((t+s)/2),n[r]<=e?t=r+1:s=r;return s}function Vz(n,e,t,s,r,o){const a=At("int32",t*r);for(let i=0;i<t;++i){const c=n.slice(i*s,(i+1)*s),u=i*r;for(let l=0;l<r;++l)a[u+l]=o==="left"?Bz(c,e[l+u]):zz(c,e[l+u])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wz(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:a}=s,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,u=Vz(i,c,r.shape[0],r.shape[1],o.shape[1],a);return t.makeTensorInfo(o.shape,"int32",u)}const Uz={kernelName:u0,backendName:"cpu",kernelFunc:Wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e;be([s,r,o],"select");const a=s.shape.length,i=t.data.get(s.dataId).values,c=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,l=On(r.dtype,o.dtype),d=an(L(r.shape),l);let h=0;const p=a===0||a>1||r.shape.length===1?1:L(r.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?d[h++]=c[f]:d[h++]=u[f];return t.makeTensorInfo(r.shape,l,d)}const Hz={kernelName:kl,backendName:"cpu",kernelFunc:Gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jz=hh,qz=ph,Xz=Ze($l,n=>n>=0?qz*n:jz*(Math.exp(n)-1)),Kz={kernelName:$l,backendName:"cpu",kernelFunc:Xz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yz=Ze(Sl,n=>n<0?-1:n>0?1:0),Zz={kernelName:Sl,backendName:"cpu",kernelFunc:Yz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jz=Ze(Ti,n=>Math.sin(n)),Qz={kernelName:Ti,backendName:"cpu",kernelFunc:Jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eV=Ze(Cl,n=>Math.sinh(n)),tV={kernelName:Cl,backendName:"cpu",kernelFunc:eV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV=11920928955078125e-23,Mx=Math.log(nV)+2,sV=Ze(Nl,n=>{const e=n>-Mx,t=n<Mx,s=Math.exp(n);let r;return t?r=s:e?r=n:r=Math.log(1+s),r}),rV={kernelName:Nl,backendName:"cpu",kernelFunc:sV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:a}=s;be([r],"spaceToBatchND");const i=L(o),c=[[0,0]];c.push(...a);for(let k=1+o.length;k<r.shape.length;++k)c.push([0,0]);const u=n$.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:c,constantValue:0}}),l=Ho(u.shape,o,i,!1),d=jo(l.length,o.length,!1),h=qo(u.shape,o,i,!1),m=ut({inputs:{x:u},backend:t,attrs:{shape:l}}),x=$n({inputs:{x:m},backend:t,attrs:{perm:d}}),I=ut({inputs:{x},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),I}const aV={kernelName:Tl,backendName:"cpu",kernelFunc:oV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.data.get(s.dataId).values,c=t.data.get(r.dataId).values,u=t.data.get(o.dataId).values,l=t.data.get(a.dataId).values[0],[d,h,p,f,m]=Ak(i,s.shape,s.dtype,c,r.dtype,u,l);return[t.makeTensorInfo(h,s.dtype,d),t.makeTensorInfo([h[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const cV={kernelName:Ld,backendName:"cpu",kernelFunc:iV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.data.get(r.dataId).values),i=t.data.get(s.dataId).values,c=Array.from(t.data.get(o.dataId).values),[u,l,d]=Dk(i,s.shape,s.dtype,a,c);return[t.makeTensorInfo(l,s.dtype,u),t.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const uV={kernelName:_l,backendName:"cpu",kernelFunc:lV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,[u,l]=Ag(a,s.shape,s.dtype,i,c,!0);return t.makeTensorInfo(l,s.dtype,u)}const hV={kernelName:Pd,backendName:"cpu",kernelFunc:dV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${o.shape}`);if(r.shape[0]!==o.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,i=t.data.get(r.dataId).values,c=t.data.get(o.dataId).values,[u,l]=Ag(a,s.shape,s.dtype,i,c);return t.makeTensorInfo(l,s.dtype,u)}const fV={kernelName:Bd,backendName:"cpu",kernelFunc:pV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:i}=s,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=Li(o,r,i),p=!1,f=t.bufferSync(r);let m;switch(o.dtype){case"bool":{const g=t.bufferSync(o),b=Boolean(t.data.get(a.dataId).values[0]);m=da(f,g,i,h,l,u,c,d,b,p);break}case"float32":{const g=t.bufferSync(o),b=t.data.get(a.dataId).values[0];m=da(f,g,i,h,l,u,c,d,b,p);break}case"int32":{const g=t.bufferSync(o),b=t.data.get(a.dataId).values[0];m=da(f,g,i,h,l,u,c,d,b,p);break}case"string":{const g=t.bufferSync(o),b=_r(t.data.get(a.dataId).values[0]);m=da(f,g,i,h,l,u,c,d,b,p);break}default:throw new Error(`Unsupported type ${o.dtype}`)}return t.makeTensorInfo(i,m.dtype,m.values)}const gV={kernelName:d0,backendName:"cpu",kernelFunc:mV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:a}=s,i=Re(a,r.shape)[0],c=fh(r,o,i),u=new Array(r.shape.length).fill(0),l=r.shape.slice();return c.map(d=>{const h=[...l];h[i]=d;const p=Fo({inputs:{x:r},backend:t,attrs:{begin:u,size:h}});return u[i]+=d,p})}const xV={kernelName:El,backendName:"cpu",kernelFunc:bV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yV={kernelName:zd,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;be(t,"square");const r=s.data.get(t.dataId).values,o=new Float32Array(r.length);for(let i=0;i<r.length;++i){const c=r[i];o[i]=c*c}return{dataId:s.write(o,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wV=Ze(zo,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),IV={kernelName:zo,backendName:"cpu",kernelFunc:wV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:a,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s;be(r,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:w}=eh(r.shape,o,a,i,c,u,l,d,h);let I;if(m)I=ut({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||b){v(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=Zd(x,y,w),$=Fo({inputs:{x:r},backend:t,attrs:{begin:x,size:k}});I=ut({inputs:{x:$},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo($)}else{const k=t.bufferSync(r),$=Ok(p,k,w,x);I=t.makeTensorInfo(f,$.dtype,$.values)}return I}const $V={kernelName:Rl,backendName:"cpu",kernelFunc:kV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vV(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:a,rightPad:i,padWidth:c,preserveShortSequences:u}=s,{data:l,dataSplits:d}=e,h=t.data.get(l.dataId).values,p=t.data.get(d.dataId).values,[f,m]=Dg(h,p,r,o,a,i,c,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(d.shape,"int32",m)]}const CV={kernelName:Vd,backendName:"cpu",kernelFunc:vV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.data.get(o.dataId).values,c=t.data.get(a.dataId).values[0],[u,l,d]=Fg(i,c,r),h=l.length;return[t.makeTensorInfo([h,2],"int32",u),t.makeTensorInfo([h],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const NV={kernelName:Wd,backendName:"cpu",kernelFunc:SV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(o.dataId).values,i=Og(a,r);return t.makeTensorInfo(o.shape,"int32",i)}const EV={kernelName:Ud,backendName:"cpu",kernelFunc:TV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _V=Ze(Oi,n=>Math.tan(n)),RV={kernelName:Oi,backendName:"cpu",kernelFunc:_V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV=Ze(Mi,n=>Math.tanh(n)),DV={kernelName:Mi,backendName:"cpu",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;be(r,"tile");const a=Lk(t.bufferSync(r),o);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const OV={kernelName:Bo,backendName:"cpu",kernelFunc:FV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:a}=s;be(r,"topk");const i=t.data.get(r.dataId).values,[c,u]=Bk(i,r.shape,r.dtype,o,a);return[t.makeTensorInfo(c.shape,c.dtype,c.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const LV={kernelName:Al,backendName:"cpu",kernelFunc:MV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n){const{inputs:e,attrs:t,backend:s}=n,{image:r,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:c,outputShape:u}=t,[l,d,h,p]=r.shape,[f,m]=u??[d,h],g=[l,f,m,p],b=me(r.shape),x=b[0],y=b[1],w=b[2],I=me(g),k=I[0],$=I[1],C=I[2],N=Qt(r.dtype,L(g));N.fill(c);const T=s.data.get(r.dataId).values,_=s.data.get(o.dataId).values;for(let P=0;P<l;++P){const V=o.shape[0]===1?_:_.subarray(P*8,P*8+8);for(let B=0;B<f;++B)for(let W=0;W<m;++W)for(let q=0;q<p;++q){let z;const X=V[6]*W+V[7]*B+1;if(X===0)continue;const Y=(V[0]*W+V[1]*B+V[2])/X,Z=(V[3]*W+V[4]*B+V[5])/X,ne=Lx(Y,h,i),J=Lx(Z,d,i);switch(a){case"nearest":z=GV(T,d,h,x,y,w,P,J,ne,q,c);break;case"bilinear":z=HV(T,d,h,x,y,w,P,J,ne,q,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const ae=P*k+B*$+W*C+q;N[ae]=z}return s.makeTensorInfo(g,r.dtype,N)}return{dataId:s.write(N,g,r.dtype),shape:r.shape,dtype:r.dtype}}const BV={kernelName:Dl,backendName:"cpu",kernelFunc:PV};function Lx(n,e,t){switch(t){case"reflect":return zV(n,e);case"wrap":return VV(n,e);case"nearest":return UV(n,e);case"constant":default:return WV(n)}}function zV(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return Io(0,t,e-1)}function VV(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return Io(0,t,e-1)}function WV(n,e){return n}function UV(n,e){return Io(0,n,e-1)}function pc(n,e,t,s,r,o,a,i,c,u,l){const d=a*s+i*r+c*o+u;return 0<=i&&i<e&&0<=c&&c<t?n[d]:l}function GV(n,e,t,s,r,o,a,i,c,u,l){const d=Math.round(i),h=Math.round(c);return pc(n,e,t,s,r,o,a,d,h,u,l)}function HV(n,e,t,s,r,o,a,i,c,u,l){const d=Math.floor(i),h=Math.floor(c),p=d+1,f=h+1,m=(f-c)*pc(n,e,t,s,r,o,a,d,h,u,l)+(c-h)*pc(n,e,t,s,r,o,a,d,f,u,l),g=(f-c)*pc(n,e,t,s,r,o,a,p,h,u,l)+(c-h)*pc(n,e,t,s,r,o,a,p,f,u,l);return(p-i)*m+(i-d)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jV(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;be(o,"unique");const a=s.data.get(o.dataId).values,{outputValues:i,outputShape:c,indices:u}=zk(a,r,o.shape,o.dtype);return[s.makeTensorInfo(c,o.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}const qV={kernelName:zf,backendName:"cpu",kernelFunc:jV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape.length,i=r.shape[o],c=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==o&&(c[u++]=r.shape[p]);const l=new Array(a).fill(0),d=r.shape.slice();d[o]=1;const h=new Array(i);for(let p=0;p<h.length;p++){l[o]=p;const f=Fo({inputs:{x:r},backend:t,attrs:{begin:l,size:d}});h[p]=ut({inputs:{x:f},backend:t,attrs:{shape:c}}),t.disposeIntermediateTensorInfo(f)}return h}const KV={kernelName:Fl,backendName:"cpu",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:a}=s;be(r,"unsortedSegmentSum");const i=r.shape.length,c=o.shape.length,u=[],l=[],d=i-c;let h=o;for(let f=0;f<d;++f){const m=md({inputs:{input:h},backend:t,attrs:{dim:f+1}});h=m,l.push(m)}for(let f=0;f<a;++f){const m=Wr(f,"int32"),g=t.makeTensorInfo([],"int32",m),b=ck({inputs:{a:g,b:h},backend:t}),x=Mr({inputs:{x:b},backend:t,attrs:{dtype:"float32"}}),y=Nh({inputs:{a:x,b:r},backend:t}),w=Jl({inputs:{x:y},backend:t,attrs:{axis:0,keepDims:!1}});u.push(w),l.push(g),l.push(b),l.push(x),l.push(y),l.push(w)}const p=t$({inputs:u,backend:t,attrs:{axis:0}});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const ZV={kernelName:Gd,backendName:"cpu",kernelFunc:YV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JV=[q3,DM,K3,Z3,BM,Q3,tL,sL,oL,iL,lL,dL,pL,gL,xL,IL,$L,CL,NL,H3,EL,RL,DL,OL,LM,VM,LL,FM,BL,VL,WL,GL,jL,XL,YL,JL,eP,nP,rP,aP,cP,uP,hP,pP,mP,bP,yP,wP,IP,kP,CP,P3,NP,WM,OP,UM,MP,HM,WP,UP,HP,qM,XP,YP,JP,eB,nB,KM,ZM,OM,rB,zL,aB,cB,uB,B3,QM,t3,hB,s3,fB,bB,yB,kB,vB,SB,NB,o3,EB,RB,DB,OB,LB,BB,VB,i3,UB,jB,KB,l3,d3,JB,tz,rz,p3,az,cz,lz,n$,pz,V3,g3,mz,bz,yz,Iz,MM,Hp,$z,W3,U3,G3,Cz,Nz,Ez,Rz,Dz,Fz,Mz,v3,Pz,Uz,Hz,Kz,S3,Zz,Qz,tV,N3,qB,rV,aV,cV,uV,hV,fV,gV,xV,_3,yV,A3,IV,$V,CV,NV,EV,M3,$P,RV,DV,OV,LV,BV,f3,qV,KV,ZV,iz];for(const n of JV)Vf(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lo={},Su={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function QV(n,e){lo[n]=e}function _s(n,e){if(!(n in lo)||e!=null){const s=tW(n,e);if(s!==null)lo[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=lo[n];return t==null||t.isContextLost()?(delete lo[n],_s(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),lo[n])}function eW(n){if(typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function tW(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??eW(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete lo[n]},!1),H().getBool("SOFTWARE_WEBGL_ENABLED")&&(Su.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Su)||t.getContext("experimental-webgl",Su):t.getContext("webgl2",Su)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tc;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Tc||(Tc={}));var qn;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(qn||(qn={}));var Jt;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Jt||(Jt={}));function Ql(n,e){return[e,n]}function nW(n,e){return n*e}function Nu(n){const e=L(n),t=Math.ceil(e/4);return hp(t)}function Gi(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function sW(n,e){const[t,s]=Gi(n,e);return t*s*4}function zg(n,e){const t=n;let s,r,o,a,i,c,u,l,d,h;return H().getNumber("WEBGL_VERSION")===2?(s=t.R32F,r=t.R16F,o=t.RGBA16F,a=t.RGBA32F,i=t.RED,u=4,l=1,d=t.HALF_FLOAT,h=t.FLOAT,c=t.RGBA8):(s=n.RGBA,r=n.RGBA,o=n.RGBA,a=t.RGBA,i=n.RGBA,u=4,l=4,d=e!=null?e.HALF_FLOAT_OES:null,h=n.FLOAT,c=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:o,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pe(n,e){const t=e();return H().getBool("DEBUG")&&rW(n),t}function rW(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+cW(n,e))}const oW=596e-10,aW=65504;function iW(n){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||oW<Math.abs(n)&&Math.abs(n)<aW)}function cW(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Tu(n,e){return yr(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function lW(n,e){const t=yr(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pe(n,()=>n.shaderSource(t,e)),pe(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function uW(n,e){const t=yr(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pe(n,()=>n.shaderSource(t,e)),pe(n,()=>n.compileShader(t)),H().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw s$(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const dW=/ERROR: [0-9]+:([0-9]+):/g;function s$(n,e){const t=dW.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],r=n.split(`
`),o=r.length.toString().length+2,a=r.map((d,h)=>ha((h+1).toString(),o)+d);let i=0;for(let d=0;d<a.length;d++)i=Math.max(a[d].length,i);const c=a.slice(0,s-1),u=a.slice(s-1,s),l=a.slice(s);console.log(c.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${ha(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function hW(n){return yr(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function pW(n,e){if(pe(n,()=>n.linkProgram(e)),!H().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Jh(n,e){if(pe(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function fW(n,e){const t=yr(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),pe(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function mW(n,e){const t=yr(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),pe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function gW(n){return yr(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function bW(n,e){const t=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,r=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+r+".")}}function xW(n){return yr(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Px(n,e,t,s,r,o,a){const i=n.getAttribLocation(e,t);return i===-1?!1:(pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),pe(n,()=>n.vertexAttribPointer(i,r,n.FLOAT,!1,o,a)),pe(n,()=>n.enableVertexAttribArray(i)),!0)}function yW(n,e,t){vW(n,t),pe(n,()=>n.activeTexture(n.TEXTURE0+t)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function wW(n,e,t){return yr(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function IW(n,e,t){return n.getUniformLocation(e,t)}function kW(n,e,t,s){pe(n,()=>yW(n,e,s)),pe(n,()=>n.uniform1i(t,s))}function Qh(n,e,t){pe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),pe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Bx(n,e){pe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),pe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function Eu(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+$W(n,e))}function $W(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function yr(n,e,t){const s=pe(n,()=>e());if(s==null)throw new Error(t);return s}function vW(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const r=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${r}.`)}}function Aa(n,e=2){return L(n.slice(0,n.length-e))}function Da(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function _u(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Aa(n),...Da(n)]),e}function CW(n,e=!1){let t=H().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=H().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&H().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((i,c)=>c>=n.length-2?mf(n[c]):n[c]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Vr(n).newShape);let r=L(n),o=null;n.length<=1&&r<=t?o=[1,r]:n.length===2&&n[0]<=t&&n[1]<=t?o=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?o=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?o=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?o=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(o=[n[0],n[1]*n[2]*n[3]]);const a=o!=null&&Math.max(...o)>s&&Math.min(...o)<=(e?2:1)&&Math.min(...o)>0;if(o==null||a)if(e){const i=Aa(n);let c=2,u=2;n.length&&([c,u]=Da(n)),r=i*(c/2)*(u/2),o=hp(r).map(l=>l*2)}else o=hp(r);return o}function Ru(n){return n%2===0}function bd(n,e){if(n=n.slice(-2),e=e.slice(-2),Ke(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n.slice(-1)[0],s=e.slice(-1)[0];if(t===s||Ru(t)&&Ru(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Ru(n[0])&&Ru(e[0])}let ep,tp;function SW(n){if(ep==null){const e=_s(n);ep=e.getParameter(e.MAX_TEXTURE_SIZE)}return ep}function NW(n){if(tp==null){const e=_s(n);tp=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,tp)}function TW(n){if(n===0)return 0;let e;const t=_s(n);return ds(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:ds(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function ds(n,e){return n.getExtension(e)!=null}function zx(n){try{if(_s(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function EW(n){if(n===0)return!1;const e=_s(n);if(n===1){if(!ds(e,"OES_texture_float"))return!1}else if(!ds(e,"EXT_color_buffer_float"))return!1;return qp(e)}function _W(n){if(n===0)return!1;const e=_s(n);if(n===1){if(!ds(e,"OES_texture_float")||!ds(e,"WEBGL_color_buffer_float"))return!1}else{if(ds(e,"EXT_color_buffer_float"))return qp(e);const s="EXT_color_buffer_half_float";if(ds(e,s)){const r=e.getExtension(s);return RW(e,r)}return!1}return qp(e)}function qp(n){const e=zg(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t);const s=1,r=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,s,r,0,e.textureFormatFloat,e.textureTypeFloat,null);const o=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,o),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(o),a}function RW(n,e){const t=zg(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s);const r=1,o=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,r,o,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),i}function AW(n){return n!==2?!1:_s(n).fenceSync!=null}function eu(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&v(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ie=H();Ie.registerFlag("HAS_WEBGL",()=>Ie.getNumber("WEBGL_VERSION")>0);Ie.registerFlag("WEBGL_VERSION",()=>zx(2)?2:zx(1)?1:0);Ie.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ie.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ie.get("WEBGL_VERSION")===2);Ie.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ie.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ie.registerFlag("WEBGL_PACK",()=>Ie.getBool("HAS_WEBGL"));Ie.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_CLIP",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_REDUCE",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_CONV_IM2COL",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>SW(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>NW(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ie.getNumber("WEBGL_VERSION");return n===0?0:TW(n)});Ie.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ie.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!$0());Ie.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>EW(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ie.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ie.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ie.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>_W(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_FENCE_API_ENABLED",()=>AW(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ie.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ie.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ie.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>$0()?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ie.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ie.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ie.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ie.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ie.registerFlag("WEBGL_EXP_CONV",()=>!1);Ie.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ie.getBool("IS_TEST"));Ie.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ie.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ie.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ie.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(){let n,e,t,s,r,o,a,i,c,u;return H().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",r="texture",o="outputColor",a="out vec4 outputColor;",i=H().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",c="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",r="texture2D",o="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:r,output:o,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:c,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(n,e,t="index"){const s=me(e);return s.map((r,o)=>{const a=`int ${n[o]} = ${t} / ${r}`,i=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * ${r}`:`index -= ${n[o]} * ${r}`;return`${a}; ${i};`}).join("")}function Th(n,e,t="index"){const s=me(e);return s.map((r,o)=>{const a=`int ${n[o]} = ${t} / outShapeStrides[${o}]`,i=o===s.length-1?`int ${n[o+1]} = ${t} - ${n[o]} * outShapeStrides[${o}]`:`index -= ${n[o]} * outShapeStrides[${o}]`;return`${a}; ${i};`}).join("")}function DW(n,e){const t=n.length,s=n.map(o=>`${e}[${o}]`),r=new Array(t-1);r[t-2]=s[t-1];for(let o=t-3;o>=0;--o)r[o]=`(${r[o+1]} * ${s[o+1]})`;return r}function FW(n,e,t="index"){const s=n.map((o,a)=>a),r=DW(s,e);return r.map((o,a)=>{const i=`int ${n[a]} = ${t} / ${r[a]}`,c=a===r.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${r[a]}`:`index -= ${n[a]} * ${r[a]}`;return`${i}; ${c};`}).join("")}function Vg(n){const e=me(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function Wg(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const r$=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:o$}=OA;function OW(n,e,t){const s=[];if(n.forEach(p=>{const f=L(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=Ug(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const r=s.join(`
`),o=n.map(p=>MW(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=xn(),c=BW(i);let u,l,d=WW(i);return e.isPacked?(u=LW(e.logicalShape,a,t.enableShapeUniforms),l=VW(i)):(u=PW(e.logicalShape,a,t.enableShapeUniforms),l=zW(i)),t.packedInputs&&(d+=jW),[d,c,l,r,u,o,t.userCode].join(`
`)}function Hi(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return r4(n,e);case 1:return a4(n,e);case 2:return c4(n,e);case 3:return u4(n,e);case 4:return h4(n,e);case 5:return p4(n);case 6:return f4(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function a$(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return s4(n);case 1:return o4(n,e);case 2:return i4(n,e);case 3:return l4(n,e);default:return d4(n,e)}}function MW(n,e,t=!1,s){let r="";t?r+=a$(n,s):r+=Hi(n,s);const o=n.shapeInfo.logicalShape,a=e.logicalShape;return o.length<=a.length&&(t?r+=m4(n,e):r+=g4(n,e)),r}function LW(n,e,t){switch(n.length){case 0:return i$();case 1:return qW(n,e,t);case 2:return t4(n,e,t);case 3:return KW(n,e,t);default:return ZW(n,e,t)}}function PW(n,e,t){switch(n.length){case 0:return i$();case 1:return XW(n,e,t);case 2:return n4(n,e,t);case 3:return YW(n,e,t);case 4:return JW(n,e,t);case 5:return QW(n,e);case 6:return e4(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function BW(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function zW(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function VW(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function WW(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${UW}
    ${GW}
    ${HW}
  `}const UW=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,GW=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,HW=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,jW=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function i$(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function qW(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function XW(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function KW(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[2]/2),o=r*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec3(b, r, c);
    }
  `}function YW(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Th(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Yo(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function ZW(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(n[n.length-1]/2),o=r*Math.ceil(n[n.length-2]/2);let a=o,i="",c="b, r, c";for(let u=2;u<n.length-1;u++)a*=n[n.length-u-1],i=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+i,c=`b${u}, `+c;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${o};
      index -= b * ${o};

      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec${n.length}(${c});
    }
  `}function JW(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Th(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Yo(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function QW(n,e){const t=Yo(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function e4(n,e){const t=Yo(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function t4(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ke(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const r=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${r});
      int c = imod(index, ${r}) * 2;

      return ivec2(r, c);
    }
  `}function n4(n,e,t){return Ke(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Zo(n){return`offset${n}`}function s4(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=xn();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function r4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[r,o]=n.shapeInfo.texShape;if(r===1&&o===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Zo(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[i,c]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${c}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function o4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=n.shapeInfo.texShape,o=xn();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${o.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${o.texture2D}(${t}, uv);
    }
  `}function a4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${ji(n)}
      }
    `;const r=n.shapeInfo.texShape,o=r[0],a=r[1];if(a===1&&o===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Zo(t);return a===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${o}.0);
        return sampleTexture(${t}, uv);
      }
    `:o===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${o}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function i4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=o[0],i=o[1],c=xn();if(o!=null&&Ke(t,o))return e?`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${c.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${c.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${r}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${r}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `}function c4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape;if(o!=null&&Ke(t,o)){if(e)return`
      float ${r}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const h=o[0],p=o[1];return`
    float ${r}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:a,keptDims:i}=Vr(t),c=a;if(c.length<t.length){const h=qi(n,c),p=["row","col"];return`
      ${Hi(h,e)}
      float ${r}(int row, int col) {
        return ${r}(${Xi(p,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${ji(n)}
      }
    `;const u=o[0],l=o[1],d=Zo(s);return l===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${r}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${r}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${r}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${l}, index);
    return sampleTexture(${s}, uv);
  }
`}function l4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=n.shapeInfo.texShape,a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];if(t[0]===1){const h=t.slice(1),p=[1,2],f=qi(n,h),m=["b","row","col"];return`
        ${a$(f,e)}
        vec4 ${r}(int b, int row, int col) {
          return ${r}(${Xi(m,p)});
        }
      `}const i=xn();if(e)return`
    vec4 ${r}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;const c=a[0],u=a[1],l=Math.ceil(t[2]/2),d=l*Math.ceil(t[1]/2);return`
    vec4 ${r}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${u}, ${d}, ${l}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function u4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[1]*t[2],a=t[2],{newShape:i,keptDims:c}=Vr(t),u=i;if(u.length<t.length){const m=qi(n,u),g=["row","col","depth"];return`
        ${Hi(m,e)}
        float ${r}(int row, int col, int depth) {
          return ${r}(${Xi(g,c)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${o}, ${a}, 1)));
        ${ji(n)}
      }
    `;const l=n.shapeInfo.texShape,d=l[0],h=l[1],p=n.shapeInfo.flatOffset;if(h===o&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${r}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===a&&p==null)return e?`
      float ${r}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${r}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Zo(s);return e?`
    float ${r}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${r}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${o} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function d4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=xn();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${t}, uv);
    }
  `;const o=n.shapeInfo.logicalShape,a=o.length,i=n.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=c[0],l=c[1],d=Math.ceil(o[a-1]/2);let h=d*Math.ceil(o[a-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<a-1;m++)p=`int b${m}, `+p,h*=o[a-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${u});
      return ${r.texture2D}(${t}, uv);
    }
  `}function h4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),o=t[3],a=t[2]*o,i=t[1]*a,{newShape:c,keptDims:u}=Vr(t);if(c.length<t.length){const x=qi(n,c),y=["row","col","depth","depth2"];return`
      ${Hi(x,e)}
      float ${r}(int row, int col, int depth, int depth2) {
        return ${r}(${Xi(y,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${r}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${o}, 1)));
        ${ji(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&l==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===o&&l==null)return e?`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${r}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;const b=Zo(s);return e?`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${r}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${o} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}function p4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),r=e[4],o=e[3]*r,a=e[2]*o,i=e[1]*a,{newShape:c,keptDims:u}=Vr(e);if(c.length<e.length){const m=qi(n,c),g=["row","col","depth","depth2","depth3"];return`
      ${Hi(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Xi(g,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${o}, ${r})) +
          depth3;
        ${ji(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${o}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===r&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Zo(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${o} +
          depth2 * ${r} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function f4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:r,keptDims:o}=Vr(e);if(r.length<e.length){const g=qi(n,r),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${Hi(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Xi(b,o)});
      }
    `}const a=e[5],i=e[4]*a,c=e[3]*i,u=e[2]*c,l=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${u}, ${c}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${ji(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],f=h[1];if(f===l&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${c}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Zo(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${u} + depth * ${c} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function ji(n){const e=n.name,t=L(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function m4(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=o$(n.shapeInfo.logicalShape,e.logicalShape),c=dt(a),u=a-o;let l;const d=["x","y","z","w","u","v"];o===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(x=>`coords.${d[x+u]} = 0;`).join(`
`);let h="";a<2&&o>0?h="coords":h=n.shapeInfo.logicalShape.map((x,y)=>`coords.${d[y+u]}`).join(", ");let p="return outputValue;";const m=L(n.shapeInfo.logicalShape)===1,b=L(e.logicalShape)===1;if(o===1&&!m&&!b)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const x=o-2,y=o-1;i.indexOf(x)>-1&&i.indexOf(y)>-1?p="return vec4(outputValue.x);":i.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(y)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${r}() {
      ${c} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function g4(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),r="get"+s+"AtOutCoords",o=e.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!n.shapeInfo.isUniform&&i===c&&n.shapeInfo.flatOffset==null&&Ke(a,o))return`
      float ${r}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=dt(c),l=o$(n.shapeInfo.logicalShape,e.logicalShape),d=c-i;let h;const p=["x","y","z","w","u","v"];i===0?h="":c<2&&l.length>=1?h="coords = 0;":h=l.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return c<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+d]}`).join(", "),`
    float ${r}() {
      ${u} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function dt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function Ug(n,e,t){const{newShape:s,keptDims:r}=Vr(e),o=e.length,a=n&&o===3&&e[0]===1,i=a?e.slice(1):s,c=!n&&o>1&&!Ke(e,t)&&s.length<o||a;return{useSqueezeShape:c,uniformShape:c?i:e,keptDims:r}}function qi(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Xi(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b4(n,e,t,s){const r=t.map((l,d)=>{const h={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(h.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),o=r.map(l=>l.shapeInfo),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=OW(r,a,e),c=uW(n.gl,i),u=n.createProgram(c);return H().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:c,source:i,webGLProgram:u,inShapeInfos:o,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:c,source:i,webGLProgram:u,inShapeInfos:o,outShapeInfo:a},c$(n,e,u))}function c$(n,e,t){const s={},r={},o={},a=[];let i,c,u,l=null,d=null;d=n.getUniformLocation(t,"NAN",!1),H().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const h=!1;for(let p=0;p<e.variableNames.length;p++){const f=e.variableNames[p];s[f]=n.getUniformLocation(t,f,h),s[`offset${f}`]=n.getUniformLocation(t,`offset${f}`,h),e.enableShapeUniforms&&(r[`${f}Shape`]=n.getUniformLocation(t,`${f}Shape`,h),o[`${f}TexShape`]=n.getUniformLocation(t,`${f}TexShape`,h))}return e.enableShapeUniforms&&(i=n.getUniformLocation(t,"outShape",h),u=n.getUniformLocation(t,"outShapeStrides",h),c=n.getUniformLocation(t,"outTexShape",h)),e.customUniforms&&e.customUniforms.forEach((p,f)=>{a[f]=n.getUniformLocation(t,p.name,h)}),{uniformLocations:s,customUniformLocations:a,infLoc:l,nanLoc:d,inShapesLocations:r,inTexShapesLocations:o,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:c}}function Vx(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const r=t.logicalShape,o=e[s],a=o.shape;if(!Ke(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(t.isUniform&&o.isUniform)return;const i=t.texShape,c=o.isUniform?null:o.texData.texShape;if(!Ke(i,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${c} must match`)})}function x4(n,e,t,s,r){e.program.enableShapeUniforms||(Vx(e.inShapeInfos,t),Vx([e.outShapeInfo],[s]));const o=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(o.texture,a[0],a[1]):n.setOutputMatrixTexture(o.texture,a[0],a[1]),n.setProgram(e.webGLProgram),H().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN),t.forEach((c,u)=>{const l=e.program.variableNames[u],d=e.uniformLocations[l],h=e.uniformLocations[`offset${l}`],p=e.inShapesLocations[`${l}Shape`],f=e.inTexShapesLocations[`${l}TexShape`];if(p){const{uniformShape:m}=Ug(e.program.packedInputs,c.shape,c.texData.texShape);switch(m.length){case 1:n.gl.uniform1iv(p,new Int32Array(m));break;case 2:n.gl.uniform2iv(p,new Int32Array(m));break;case 3:n.gl.uniform3iv(p,new Int32Array(m));break;case 4:n.gl.uniform4iv(p,new Int32Array(m));break}}if(f&&n.gl.uniform2i(f,c.texData.texShape[0],c.texData.texShape[1]),d!=null){if(c.isUniform){if(L(c.shape)<2)n.gl.uniform1f(d,c.uniformValues[0]);else{let m=c.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),n.gl.uniform1fv(d,m)}return}c.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,d,u)}});const i=e.outShapeLocation;if(i)switch(s.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const c=me(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(c));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(c));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(c));break}}e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&r&&e.program.customUniforms.forEach((c,u)=>{const l=e.customUniformLocations[u],d=r[u];if(c.type==="float")n.gl.uniform1fv(l,d);else if(c.type==="vec2")n.gl.uniform2fv(l,d);else if(c.type==="vec3")n.gl.uniform3fv(l,d);else if(c.type==="vec4")n.gl.uniform4fv(l,d);else if(c.type==="int")n.gl.uniform1iv(l,d);else if(c.type==="ivec2")n.gl.uniform2iv(l,d);else if(c.type==="ivec3")n.gl.uniform3iv(l,d);else if(c.type==="ivec4")n.gl.uniform4iv(l,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}),n.executeProgram()}function y4(n,e,t){let s="";e.concat(t).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const c=a.texData.texShape,{useSqueezeShape:u,uniformShape:l,keptDims:d}=Ug(n.packedInputs,a.shape,c);let h="",p="",f="";if(l.length===1&&n.packedInputs){const I=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];h=`${I[0]>1}_${I[1]>1}`}else if(l.length===2&&!n.packedInputs)p=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const I=me(l);f=`${I[0]===c[1]}_${I[I.length-1]===c[1]}`}const m=a.shape.length,g=l.length===2&&Ke(a.shape,c),b=L(a.shape)===1,x=Na(a.shape,t.shape),y=!n.packedInputs&&m===t.shape.length&&Ke(c,t.texData.texShape),w=n.packedInputs||l.length>2?"":`${c[0]>1}_${c[1]>1}`;s+=`${m}_${y}_${u?d:""}_${l.length}_${b}_${x}_${g}_${h}_${p}_${f}_${w}_${i}`}else{const c=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${c}_${i}`}});const r=n.userCode;let o=n.constructor.name;return o+="_"+s+"_"+r+`${H().getNumber("WEBGL_VERSION")}`,o}function yn(n){return H().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w4{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Tc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=xn();this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Th(["r","c","d"],e):Yo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I4{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Tc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=xn();this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Th(["r","c","d"],e):Yo(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k4{constructor(e){this.variableNames=["A"],this.outTexUsage=qn.DOWNLOAD;const t=xn();this.outputShape=e,this.userCode=`
      ${r$}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $4{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=qn.DOWNLOAD;const t=xn();this.outputShape=e,this.userCode=`
      ${r$}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v4={R:0,G:1,B:2,A:3};class Wx{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const r=xn();this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length);let o="result";t&&(o="floor(result * 255. + 0.5)");let a="";for(let i=0;i<s.length;i++){const c=s[i];a+=`
          if(offset == ${i}) {
            result = values[${v4[c]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?Wg():Vg(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${r.texture2D}(A, uv);
          ${a}
        }
        ${r.output} = vec4(${o}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C4{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=xn();this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length);let r="",o="result";t&&(o="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const c=a*2+i;r+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${c}] = values[0];
            } else if (offset == 1) {
              result[${c}] = values[1];
            } else if (offset == 2) {
              result[${c}] = values[2];
            } else {
              result[${c}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?Wg():Vg(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${r}

          ${s.output} = ${o};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function S4(n){const e=xn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return lW(n,t)}function N4(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return fW(n,e)}function T4(n){const e=new Uint16Array([0,1,2,2,1,3]);return mW(n,e)}function tu(n,e,t,s,r,o){bW(e,t);const a=gW(n),i=n.TEXTURE_2D;return pe(n,()=>n.bindTexture(i,a)),pe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),pe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),pe(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),pe(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),H().getNumber("WEBGL_VERSION")===1?pe(n,()=>n.texImage2D(i,0,s,e,t,0,r,o,null)):pe(n,()=>n.texStorage2D(i,1,s,e,t)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function l$(n){return n.internalFormatFloat}function E4(n,e,t,s){const[r,o]=Ql(e,t);return tu(n,r,o,l$(s),s.textureFormatFloat,n.FLOAT)}function u$(n){return n.internalFormatHalfFloat}function _4(n,e,t,s){const[r,o]=Ql(e,t);return tu(n,r,o,u$(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function d$(n){return n.downloadTextureFormat}function R4(n,e,t,s){const[r,o]=Ql(e,t);return tu(n,r,o,d$(s),n.RGBA,n.UNSIGNED_BYTE)}function h$(n){return n.internalFormatPackedFloat}function A4(n,e,t,s){const[r,o]=Gi(e,t);return tu(n,r,o,h$(s),n.RGBA,n.FLOAT)}function p$(n){return n.internalFormatPackedHalfFloat}function D4(n,e,t,s){const[r,o]=Gi(e,t);return tu(n,r,o,p$(s),n.RGBA,s.textureTypeHalfFloat)}function F4(n,e,t){return pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Px(n,e,"clipSpacePos",t,3,20,0)&&Px(n,e,"uv",t,2,20,12)}function O4(n,e,t,s,r,o){pe(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,i,c;r instanceof Uint8Array?(a=new Uint8Array(t*s*4),i=n.UNSIGNED_BYTE,c=n.RGBA):(a=new Float32Array(t*s*4),i=n.FLOAT,c=o.internalFormatPackedFloat),a.set(r),H().getNumber("WEBGL_VERSION")===2?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,i,a)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,c,t,s,0,n.RGBA,i,a)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function M4(n,e,t){pe(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?H().getNumber("WEBGL_VERSION")===2?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):H().getNumber("WEBGL_VERSION")===2?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function L4(n,e,t,s){const r=n.createBuffer();pe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,r));const i=4*4*e*t;return pe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),pe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),pe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),r}function P4(n,e,t){const s=n,r=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}function B4(n,e,t,s){const[r,o]=Ql(e,t),a=4,i=new Uint8Array(nW(e*t,a));return pe(n,()=>n.readPixels(0,0,r,o,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function z4(n,e,t,s,r,o,a,i){const c=n,u=new Float32Array(sW(o,a));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}function V4(n,e,t){const s=new Float32Array(e*t*4);return pe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class np{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=H().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,QV(t,e)):this.gl=_s(t),e=this.gl,H().getNumber("WEBGL_VERSION")===2){const o=e;this.createVertexArray=()=>pe(o,()=>o.createVertexArray()),this.bindVertexArray=a=>pe(o,()=>o.bindVertexArray(a)),this.deleteVertexArray=a=>pe(o,()=>o.deleteVertexArray(a)),this.getVertexArray=()=>pe(o,()=>o.getParameter(o.VERTEX_ARRAY_BINDING))}else if(e!=null){const o=e.getExtension("OES_vertex_array_object");if(o==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>pe(e,()=>o.createVertexArrayOES()),this.bindVertexArray=a=>pe(e,()=>o.bindVertexArrayOES(a)),this.deleteVertexArray=a=>pe(e,()=>o.deleteVertexArrayOES(a)),this.getVertexArray=()=>pe(e,()=>e.getParameter(o.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),H().getNumber("WEBGL_VERSION")===1){const o="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Tu(this.gl,o),ds(this.gl,a))this.textureHalfFloatExtension=Tu(this.gl,a);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),ds(this.gl,r))this.colorBufferHalfFloatExtension=Tu(this.gl,r);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",ds(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(ds(this.gl,r))this.colorBufferHalfFloatExtension=this.gl.getExtension(r);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=N4(this.gl),this.indexBuffer=T4(this.gl),this.framebuffer=xW(this.gl),this.textureConfig=zg(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;pe(e,()=>e.finish()),pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),pe(e,()=>e.deleteFramebuffer(this.framebuffer)),pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),pe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),E4(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),_4(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),R4(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),M4(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,r){this.throwIfDisposed(),O4(this.gl,e,t,s,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),D4(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),A4(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Bx(this.gl,this.framebuffer),this.outputTexture=null),pe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>B4(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,r,o,a){return z4(this.gl,e,t,s,r,o,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return P4(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const r=L4(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(H().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,o=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const a=r.clientWaitSync(o,0,0);return a===r.ALREADY_SIGNALED||a===r.CONDITION_SATISFIED},t=o}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>V4(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=S4(t));const s=hW(t);pe(t,()=>t.attachShader(s,this.vertexShader)),pe(t,()=>t.attachShader(s,e)),pW(t,s);let r;return r=Object.assign(s,{vao:this.createVertexArray()}),this.bindVertexArray(r.vao),pe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(F4(t,r,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Jh(t,r),this.setProgram(r),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(pe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&Jh(this.gl,this.program)),pe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?wW(this.gl,e,t):IW(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),pe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),kW(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[r,o]=Gi(t,s);this.setOutputMatrixTextureDriver(e,r,o)}setOutputMatrixWriteRegion(e,t,s,r){this.setOutputMatrixWriteRegionDriver(s,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,s,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Jh(this.gl,this.program),Eu(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}pe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Tu(this.gl,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.createQuery();return s.beginQuery(r.TIME_ELAPSED_EXT,o),o}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await Nb(()=>this.disposed||this.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,r=this.getQueryTimerExtensionWebGL2(),o=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(r.GPU_DISJOINT_EXT)),o&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),r=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),r&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=W4(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in H().platform&&(s=H().platform.setTimeoutCustom.bind(H().platform)),Nb(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),Qh(this.gl,e,this.framebuffer),this.debug&&Eu(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(Qh(this.gl,this.outputTexture,this.framebuffer),this.debug&&Eu(this.gl)):Bx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const r=this.gl;Qh(r,e,this.framebuffer),this.debug&&Eu(r),this.outputTexture=e,pe(r,()=>r.viewport(0,0,t,s)),pe(r,()=>r.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,r){this.throwIfDisposed(),pe(this.gl,()=>this.gl.scissor(e,t,s,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function W4(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:U4,bincountImpl:f$,bincountReduceImpl:G4,castImpl:H4,ceilImpl:j4,concatImpl:q4,equalImpl:X4,expImpl:K4,expm1Impl:Y4,floorImpl:Z4,gatherNdImpl:J4,gatherV2Impl:Q4,greaterImpl:eU,greaterEqualImpl:tU,lessImpl:nU,lessEqualImpl:sU,linSpaceImpl:rU,logImpl:oU,maxImpl:aU,maximumImpl:iU,minimumImpl:cU,multiplyImpl:lU,negImpl:uU,notEqualImpl:dU,prodImpl:hU,raggedGatherImpl:pU,raggedRangeImpl:fU,raggedTensorToTensorImpl:mU,rangeImpl:gU,rsqrtImpl:bU,scatterImpl:xU,sigmoidImpl:yU,simpleAbsImpl:m$,sliceImpl:wU,sparseFillEmptyRowsImpl:IU,sparseReshapeImpl:kU,sparseSegmentReductionImpl:g$,sqrtImpl:$U,stridedSliceImpl:vU,stringNGramsImpl:CU,stringSplitImpl:SU,stringToHashBucketFastImpl:NU,subImpl:TU,tileImpl:EU,topKImpl:_U,transposeImpl:Gg,uniqueImpl:RU}=L3;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b$(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function pn(n,e){return e===1?[n]:b$(n,e)}function AU(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DU{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=yn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=pn("rc",this.rank),s=dt(this.rank),r=this.getOutOfBoundsCondition(t),o=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${r}) {
            setOutput(vec4(0));
          } else {
            ${o}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let r=0;r<=1;r++){let o=`${s===0?"r":"rp1"}, ${r===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)o=`${e[e.length-1-a]},`+o;t.push(o)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${r};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x${constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length);let s="";for(let r=0;r<4;r++){let o="thisRC = rc;";r%2===1&&(o+="thisRC.z += 1;"),r>1&&(o+="thisRC.y += 1;"),s+=`
        ${o}
        ${r>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${r}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${r>0?"}":""}
      `}this.userCode=`
      ${FU(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?Wg():Vg(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function FU(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?FW(["r","c","d"],"inputShape"):Yo(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OU{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,s){const r=Gx(t,s),o=Hx(e,r,s);o in this.freeTextures||(this.freeTextures[o]=[]),o in this.usedTextures||(this.usedTextures[o]=[]);const a=Ux(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[o].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const c=this.freeTextures[o].shift();return this.usedTextures[o].push(c),c}let i;return r===Jt.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===Jt.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===Jt.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===Jt.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===Jt.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[o].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,s,r){if(this.freeTextures==null)return;const o=Gx(s,r),a=Hx(t,o,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=Ux(t,o,this.gpgpu.gl,this.gpgpu.textureConfig,r),c=H().get("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function MU(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function Ux(n,e,t,s,r){const o=LU(e,s);let a;if(r){const[c,u]=Gi(n[0],n[1]);a=c*u}else{const[c,u]=Ql(n[0],n[1]);a=c*u}const i=MU(t,o);return a*i}function LU(n,e){switch(n){case Jt.PACKED_2X2_FLOAT32:return h$(e);case Jt.PACKED_2X2_FLOAT16:return p$(e);case Jt.UNPACKED_FLOAT32:return l$(e);case Jt.UNPACKED_FLOAT16:return u$(e);case Jt.PACKED_4X1_UNSIGNED_BYTE:return d$(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function PU(n){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Jt.PACKED_2X2_FLOAT32:Jt.UNPACKED_FLOAT32:n?Jt.PACKED_2X2_FLOAT16:Jt.UNPACKED_FLOAT16}function Gx(n,e){if(n===qn.UPLOAD)return Jt.PACKED_2X2_FLOAT32;if(n===qn.RENDER||n==null)return PU(e);if(n===qn.DOWNLOAD||n===qn.PIXELS)return Jt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Hx(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vs{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const bs="if (isnan(x)) return x;",BU="return x;",jx="return abs(x);",zU="return (x >= 0.0) ? x : (exp(x) - 1.0);",VU=bs+`
  return (x < 0.0) ? 0.0 : x;
`,WU=bs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,wr="return x;",UU="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GU="return x;",HU=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,jU=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,qU=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,XU="return 1.0 / (1.0 + exp(-1.0 * x));";class $r{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length);const t=e.length,s=pn("rc",t),r=dt(t),o=AU(t,s),a=s.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${r} rc = getOutputCoords();
        vec4 packedInput = getA(${o});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YU=Nw,ZU=1e-7,JU=1e-4,Au={};function QU(n){return n in Au||(Au[n]={}),Au[n]}const eG=H().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),tG=600;function nG(){return H().global.screen==null?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*tG/1024/1024}class Eh extends Cd{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof np)t=e;else{const s=_s(H().getNumber("WEBGL_VERSION"),e);t=new np(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=_s(H().getNumber("WEBGL_VERSION"));t=new np(s),this.binaryCache=QU(H().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new OU(this.gpgpu),this.numMBBeforeWarning=nG(),this.texData=new ff(this,ks())}nextDataId(){return Eh.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,r,o,a){const i=this.makeTensorInfo(t,s),c=this.texData.get(i.dataId);c.isPacked=!1,c.texture={texture:e,texShape:[r,o]},c.texShape=[r,o];const u=_u(t),l=new Wx(u,!1,a),d=this.runWebGLProgram(l,[i],s,[[r,o]]);return d.shape=t,c.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(e,t,s){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:s,values:e,usage:qn.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,r,o){if(H().getBool("DEBUG")&&this.checkNumericalProblems(t),r==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:r,values:t,usage:qn.UPLOAD,refCount:o})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:r,complexTensorInfos:o,slice:a,shape:i,isPacked:c}=t;if(a!=null){let h;c?h=new $r(i,wr):h=new Vs(i,wr);const p=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:r}],r),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(r==="string")return s;const u=this.activeTimers!=null;let l;u&&(l=nn());let d;if(r==="complex64"){const h=this.readSync(o.real.dataId),p=this.readSync(o.imag.dataId);d=fr(h,p)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=nn()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:r,slice:o,dtype:a,complexTensorInfos:i,isPacked:c}=t;if(o!=null){let f;c?f=new $r(r,wr):f=new Vs(r,wr);const m=this.runWebGLProgram(f,[{dataId:e,shape:r,dtype:a}],a),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(H().getBool("DEBUG")&&!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&H().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,l;if(a!=="complex64"&&H().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const f=this.texData.get(l.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Nu(r))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],g=f[1];d=fr(m,g)}else if(u==null)d=this.getValuesFromTexture(e);else{const f=L(r);d=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),u!=null){const f=this.gpgpu.gl;pe(f,()=>f.deleteBuffer(u))}const h=this.convertAndCacheOnCPU(e,d),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&ks().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const s=this.texData.get(e),{values:r,shape:o,slice:a,dtype:i,isPacked:c,texture:u}=s;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;c?p=new $r(o,wr):p=new Vs(o,wr);const f=this.runWebGLProgram(p,[{dataId:e,shape:o,dtype:i}],i),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(u==null)throw r!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),d=ks().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(r=>_r(r));return Me(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!iW(s))throw H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:r}=this.texData.get(e),o=L(t);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(e),p=this.texData.get(h.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Nu(t)).subarray(0,o);return this.disposeIntermediateTensorInfo(h),f}const a=H().getBool("WEBGL_PACK")&&r===!0,i=a?_u(t):t,c=a?new $4(i):new k4(i),u=this.runWebGLProgram(c,[{shape:i,dtype:s,dataId:e}],"float32"),l=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let r=!1;this.programTimersStack==null?(this.programTimersStack=s,r=!0):this.activeTimers.push(s),this.activeTimers=s,e();const o=wa(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),a=wa(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(o);i.kernelMs=MS(c),i.getExtraProfileInfo=()=>c.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:nn(),endMs:null}}endTimer(e){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=nn(),e)}async getQueryTime(e){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:r,usage:o,isPacked:a,slice:i}=this.texData.get(e),c=i&&i.origDataId||e,u=this.dataRefCount.get(c);u>1?this.dataRefCount.set(c,u-1):(this.dataRefCount.delete(c),t!=null&&(this.numBytesInGPU-=this.computeBytes(r,s),this.textureManager.releaseTexture(t,r,o,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=eG){return H().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&L(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){jn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return YU(e.shape,t)}packedUnaryOp(e,t,s){const r=new $r(e.shape,t),o=this.compileAndRun(r,[e],s);return ks().makeTensorFromTensorInfo(o)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const r=m$(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,r)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,jx,e.dtype);const t=new Vs(e.shape,jx),s=this.compileAndRun(t,[e]);return ks().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let r;if(t==="string"&&s!=null&&s.length>0&&Fc(s[0])){const o=s.map(a=>Sr(a));r=this.write(o,e,t)}else r=this.write(s,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,s){return ks().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new KU(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new DU(e.shape),s=!0;return this.runWebGLProgram(t,[e],e.dtype,null,s)}packedReshape(e,t){const s=[Aa(e.shape),...Da(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},o=[Aa(t),...Da(t)],a=new x$(o,s),i=!0,c=[s],u=this.runWebGLProgram(a,[r],e.dtype,c,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:r,shape:o,dtype:a}=s;if(t!=null){const h=L(o),p=t[0]*t[1]*4;v(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=_u(o);let c;r?c=new I4(i):c=new w4(i);const u=!0,l=[t??Nu(i)],d=this.runWebGLProgram(c,[{shape:i,dtype:a,dataId:e}],a,l,u,t);return{dtype:a,shape:o,dataId:d.dataId}}runWebGLProgram(e,t,s,r,o=!1,a){const i=this.makeTensorInfo(e.outputShape,s),c=this.texData.get(i.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===Tc.DENSE){const b=a??Nu(e.outputShape);c.texShape=b.map(x=>x*2)}if(e.outTexUsage!=null&&(c.usage=e.outTexUsage),L(i.shape)===0)return c.values=Qt(i.dtype,0),i;const u=[],l=t.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(b.dataId);if(x.texture==null){if(!e.packedInputs&&L(b.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!x.isPacked!=!!e.packedInputs)b=x.isPacked?this.unpackTensor(b):this.packTensor(b),u.push(b),x=this.texData.get(b.dataId);else if(x.isPacked&&!bd(x.shape,b.shape)){const y=b,w=b.shape;b.shape=x.shape,b=this.packedReshape(b,w),u.push(b),x=this.texData.get(b.dataId),y.shape=w}return{shape:b.shape,texData:x,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:c,isUniform:!1},h=y4(e,l,d),p=this.getAndSaveBinary(h,()=>b4(this.gpgpu,e,l,d)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),H().get("ENGINE_COMPILE_ONLY")||x4(this.gpgpu,p,l,d,r),u.forEach(b=>this.disposeIntermediateTensorInfo(b)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=H().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const b=nn();b-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!H().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&o===!1){const b=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),b}return i}compileAndRun(e,t,s,r,o=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,r,o)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=G(()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=H().getBool("DEBUG");H().set("DEBUG",!1);const t=this.abs(Se(1e-8)).dataSync()[0];if(H().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?ZU:JU}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:r,values:o,texture:a,usage:i,isPacked:c}=t;if(a!=null)return;const u=this.activeTimers!=null;let l;u&&(l=nn());let d=t.texShape;if(d==null&&(d=CW(s,c),t.texShape=d),o!=null){const h=_u(s);let p,f=d[1],m=d[0];const g=o instanceof Uint8Array||o instanceof Uint8ClampedArray;(c||!g)&&([f,m]=Gi(d[0],d[1])),c?p=new C4(h,g):p=new Wx(h,g);const b=g?[m,f]:d,x=this.makeTensorInfo(b,r),y=this.texData.get(x.dataId);g?y.usage=qn.PIXELS:y.usage=qn.UPLOAD,y.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,m,o);const w=[[m,f]],I=!0,k=this.runWebGLProgram(p,[x],r,w,I),$=this.texData.get(k.dataId);t.texShape=$.texShape,t.isPacked=$.isPacked,t.usage=$.usage,H().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(t.texture=$.texture,t.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(x),u&&(this.uploadWaitMs+=nn()-l)}else{const h=this.acquireTexture(d,i,r,c);t.texture=h}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:r}=s;return t!=null&&(s.values=sG(t,r)),s.values}acquireTexture(e,t,s,r){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const o=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${o} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*xc(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(r=>{try{this.checkCompletion_(t),r(!0)}catch(o){throw o}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Rw(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(s$(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:s,infLoc:r,nanLoc:o,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:c,outShapeStridesLocation:u,outTexShapeLocation:l}=c$(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=s,e.infLoc=r,e.nanLoc=o,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=c,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}createTensorFromTexture(e,t,s){const{texture:r,height:o,width:a,channels:i}=e,c=ks().backend;if(!c.gpgpu.gl.isTexture(r))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=c.writeTexture(r,t,s,o,a,i);return ks().makeTensorFromDataId(u,t,s,c)}}Eh.nextDataId=0;function sG(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */v0()&&qf("webgl",()=>new Eh,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hg=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Fa{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Ee(t,s),this.enableShapeUniforms=yn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nu=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class su{constructor(e,t,s,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ee(t,s);const o=this.outputShape.length;this.enableShapeUniforms=yn(o);let a="";if(r)if(o===0||L(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${dt(o)} coords = getOutputCoords();
        `,o===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=pn("coords",o);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${c[o-2]} + 1) >= outShape[${o} - 2];
            bool nextColOutOfBounds =
              (${c[o-1]} + 1) >= outShape[${o} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${c[o-2]} + 1) >= ${this.outputShape[o-2]};
            bool nextColOutOfBounds =
              (${c[o-1]} + 1) >= ${this.outputShape[o-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pn(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const rG={kernelName:si,backendName:"webgl",kernelFunc:Pn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kr(n){const{inputs:e,backend:t}=n,{real:s,imag:r}=e,o=t.makeTensorInfo(s.shape,"complex64"),a=t.texData.get(o.dataId),i=Pn({inputs:{x:s},backend:t}),c=Pn({inputs:{x:r},backend:t});return a.complexTensorInfos={real:i,imag:c},o}const oG={kernelName:kf,backendName:"webgl",kernelFunc:Kr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y$="return (a < 0.) ? b * a : a;",w$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function aG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{alpha:o}=s,a=t.makeTensorInfo([],"float32",Wr(o,"float32")),i=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new su(w$,r.shape,a.shape):new Fa(y$,r.shape,a.shape),c=t.runWebGLProgram(i,[r,a],"float32");return t.disposeIntermediateTensorInfo(a),c}const iG={kernelName:oi,backendName:"webgl",kernelFunc:aG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I$="return (a < 0.) ? b * a : a;",k$=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function cG(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new su(k$,s.shape,r.shape):new Fa(I$,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],"float32")}const lG={kernelName:xi,backendName:"webgl",kernelFunc:cG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ki="if (isnan(x)) return x;";function He({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:r,backend:o})=>{const{x:a}=r,i=o,c=s||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){const d=i.texData.get(a.dataId),h=t(d.values,c);return i.makeTensorInfo(a.shape,c,h)}const u=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let l;return u?l=new $r(a.shape,e):l=new Vs(a.shape,n),i.runWebGLProgram(l,[a],c)}}function en({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:o}){return({inputs:a,backend:i})=>{const{a:c,b:u}=a,l=i;if(s&&c.dtype==="complex64"){const f=l.texData.get(c.dataId),m=l.texData.get(u.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(y=>{const[w,I]=y,k={dataId:w.dataId,dtype:w.dtype,shape:c.shape},$={dataId:I.dataId,dtype:I.dtype,shape:u.shape},C=new Fa(n,c.shape,u.shape);return l.runWebGLProgram(C,[k,$],On(w.dtype,I.dtype))}),x=Kr({inputs:{real:g,imag:b},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(b),x}const d=o||On(c.dtype,u.dtype);if((c.dtype==="string"||u.dtype==="string"||l.shouldExecuteOnCPU([c,u]))&&r!=null){const f=l.texData.get(c.dataId).values,m=l.texData.get(u.dataId).values,g=c.dtype==="string"?Ro(f):f,b=c.dtype==="string"?Ro(m):m,[x,y]=r(c.shape,u.shape,g,b,d),w=l.makeTensorInfo(y,d),I=l.texData.get(w.dataId);return I.values=x,w}const h=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return h?p=new su(e,c.shape,u.shape,t):p=new Fa(n,c.shape,u.shape),l.runWebGLProgram(p,[c,u],d)}}function Ec(n,e=!1){if(n==="linear")return e?GU:BU;if(n==="relu")return e?jU:VU;if(n==="elu")return e?HU:zU;if(n==="relu6")return e?qU:WU;if(n==="prelu")return e?k$:I$;if(n==="leakyrelu")return e?w$:y$;if(n==="sigmoid")return e?XU:UU;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $${constructor(e,t,s,r=!1,o=!1,a=!1,i=null,c=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=yn(this.outputShape.length);const l=r?e[1]:e[2],d=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=o?"rc.z, i * 2":"i * 2, rc.z",f=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=o?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",b="";i&&(c?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");const x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",w="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(w=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${d}; i++) {
          int batchA = ${y};
          int batchB = ${w};
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qx={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Xx{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ee(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kx="return a * b;";function jg(n){const{inputs:e,backend:t}=n,{a:s,b:r}=e,o=On(s.dtype,r.dtype);if(s.dtype==="complex64"){const i=t.texData.get(s.dataId),c=t.texData.get(r.dataId),u=new Xx(qx.REAL,s.shape,r.shape),l=new Xx(qx.IMAG,s.shape,r.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:r.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:r.shape}],h=t.runWebGLProgram(u,d,"float32"),p=t.runWebGLProgram(l,d,"float32"),f=Kr({inputs:{real:h,imag:p},backend:t});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,r])){const i=t.texData.get(s.dataId),c=t.texData.get(r.dataId),[u,l]=lU(s.shape,r.shape,i.values,c.values,o),d=t.makeTensorInfo(l,o),h=t.texData.get(d.dataId);return h.values=u,d}let a;return H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new su(Kx,s.shape,r.shape):a=new Fa(Kx,s.shape,r.shape),t.runWebGLProgram(a,[s,r],o)}const uG={kernelName:fi,backendName:"webgl",kernelFunc:jg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dG(n,e,t){const s=[Aa(n.shape),...Da(n.shape)],r={dtype:n.dtype,shape:s,dataId:n.dataId},o=[Aa(e),...Da(e)],a=new x$(o,s),i=!0,c=[s],u=t.runWebGLProgram(a,[r],n.dtype,c,i);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function le(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{shape:o}=s,a=t,i=L(r.shape),c=gf(o,i),u=L(c);v(i===u,()=>`The new shape (${c}) has ${u} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=a.texData.get(r.dataId);return l.isPacked&&!bd(r.shape,c)&&!(l.texture!==null&&bd(l.shape,c))?dG(r,c,a):(a.incRef(r.dataId),{dataId:r.dataId,shape:c,dtype:r.dtype})}const hG={kernelName:Il,backendName:"webgl",kernelFunc:le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Yx{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=e;this.outputShape=[r,a];const i=Math.floor(s/4)*4,c=s%4;let u="sumValue += dot(values, ones);";if(t!=null){const d=1/t;u=`sumValue += dot(values * ${Ia(d)?d.toPrecision(2):d}, ones);`}let l="";o%s>0&&(l=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class pG{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:r,inSize:o,outSize:a}=e;this.outputShape=[r,a];let i="0.0",c="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",c="min"):t==="max"&&(i="-1.0 / 1e-20",c="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const l=Math.floor(s/4)*4,d=s%4;let h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${c}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fG(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=ch(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Jo(n,e,t,s){const r=fG(n.shape);let o=n;for(let a=0;a<r.length;a++){const{inSize:i,windowSize:c,outSize:u}=r[a];let l,d;t==="mean"?l=a===0?new Yx({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:u},i):new Yx({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:u}):l=new pG({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:u},t),d=o,o=s.runWebGLProgram(l,[o],e),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return o}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mG{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[t[a]];this.outputShape=s,this.rank=s.length;const r=dt(this.rank),o=gG(t);this.userCode=`
    void main() {
      ${r} resRC = getOutputCoords();
      setOutput(getA(${o}));
    }
    `}}function gG(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let r=0;r<n.length;r++)s[n[r]]=t[r];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bG{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let l=0;l<s.length;l++)s[l]=e[t[l]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=dt(this.rank),o=b$("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=o[l];const i=`vec2(${a.slice(-2).join()})`,c=`++${o[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${r} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${c}) {
        result[1] = ${u};
      }
      --${o[this.rank-1]};
      if(++${o[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${c}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _h(n,e,t){const s=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new bG(n.shape,e):new mG(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xG(n,e,t,s){const r=e,o=n.shape.length,a=Re(r,n.shape);let i=a;const c=pt(i,o),u=c!=null;let l=n;u&&(l=_h(n,c,s),i=ot(i.length,o)),ht("sum",i,o);const[d,h]=bt(l.shape,i);let p=d;t&&(p=et(d,a));const f=L(h),g=L(n.shape)/f,b=le({inputs:{x:l},attrs:{shape:[g,f]},backend:s}),x=Uf(n.dtype),y=Jo(b,x,"sum",s),w=le({inputs:{x:y},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(y),u&&s.disposeIntermediateTensorInfo(l),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rh(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s;return xG(r,o,a,t)}const yG={kernelName:Ri,backendName:"webgl",kernelFunc:Rh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{perm:o}=s,a=t,i=r.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=r.shape[o[l]];let u;if(a.shouldExecuteOnCPU([r])){const d=a.texData.get(r.dataId).values,h=Gg(d,r.shape,r.dtype,o,c);u=a.makeTensorInfo(c,r.dtype);const p=a.texData.get(u.dataId);p.values=h}else u=_h(r,o,a);return u}const wG={kernelName:vr,backendName:"webgl",kernelFunc:bn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v$=1e3;function xd({a:n,b:e,transposeA:t,transposeB:s,backend:r,bias:o=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:c=null}){const u=n.shape.length,l=e.shape.length,d=t?n.shape[u-2]:n.shape[u-1],h=s?e.shape[l-1]:e.shape[l-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[l-2]:e.shape[l-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),b=L(m),x=L(g),w=Ee(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);v(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const I=t?[b,d,p]:[b,p,d],k=s?[x,f,h]:[x,h,f],$=le({inputs:{x:n},backend:r,attrs:{shape:I}}),C=le({inputs:{x:e},backend:r,attrs:{shape:k}}),N=[$,C],T=Math.max(b,x),_=t?$.shape[1]:$.shape[2],O=o!=null,P=a!=null,V=c==="leakyrelu",B=c!=null?Ec(c,!0):null,W=O||P||V||B!=null;let q;if((p===1||f===1)&&_>v$&&W===!1){let X=$,Y=C;t&&(X=bn({inputs:{x:$},backend:r,attrs:{perm:[0,2,1]}}),N.push(X)),s&&(Y=bn({inputs:{x:C},backend:r,attrs:{perm:[0,2,1]}}),N.push(Y));const Z=f!==1,ne=f===1;let J=X;Z&&(J=le({inputs:{x:X},backend:r,attrs:{shape:[T,_,1]}}),N.push(J));const ae=f===1?2:1;let re=Y;ne&&(re=le({inputs:{x:Y},backend:r,attrs:{shape:[T,1,_]}}),N.push(re));const ue=jg({inputs:{a:J,b:re},backend:r});q=Rh({inputs:{x:ue},backend:r,attrs:{axis:ae,keepDims:!0}}),N.push(ue)}else{const X=On(n.dtype,e.dtype),Y=new $$(I,k,[T,p,f],t,s,O,B,P,V),Z=[$,C];if(o!=null&&Z.push(o),P&&Z.push(a),V){const ne=r.makeTensorInfo([],"float32",Wr(i,"float32"));Z.push(ne),N.push(ne)}q=r.runWebGLProgram(Y,Z,X)}const z=le({inputs:{x:q},backend:r,attrs:{shape:w}});N.push(q);for(const X of N)r.disposeIntermediateTensorInfo(X);return z}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IG(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=e,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=s;return xd({a:r,b:o,transposeA:c,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}const kG={kernelName:ka,backendName:"webgl",kernelFunc:IG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zx="return abs(x);";function $G(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const o=t.texData.get(s.dataId),a=m$(o.values);return t.makeTensorInfo(s.shape,s.dtype,a)}let r;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new $r(s.shape,Zx):r=new Vs(s.shape,Zx),t.runWebGLProgram(r,[s],s.dtype)}const vG={kernelName:Mc,backendName:"webgl",kernelFunc:$G};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CG=bs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,SG=He({opSnippet:CG}),NG={kernelName:Lc,backendName:"webgl",kernelFunc:SG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TG=bs+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,EG=He({opSnippet:TG}),_G={kernelName:Pc,backendName:"webgl",kernelFunc:EG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jx="return a + b;",RG=en({opSnippet:Jx,packedOpSnippet:Jx,supportsComplex:!0,cpuKernelImpl:U4}),AG={kernelName:Lo,backendName:"webgl",kernelFunc:RG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DG{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`float v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FG{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((o,a)=>`T${a}`);const s=[];this.variableNames.forEach(o=>{s.push(`vec4 v${o} = get${o}AtOutCoords();`)});const r=this.variableNames.map(o=>`v${o}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${r};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zu(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Pn({inputs:{x:s[0]},backend:t});if(s.length>H().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(s.length/2),u=zu({inputs:s.slice(0,c),backend:t}),l=zu({inputs:s.slice(c),backend:t});return zu({inputs:[u,l],backend:t})}const r=s.map(c=>c.dtype).reduce((c,u)=>On(c,u)),o=s.map(c=>c.shape),i=H().getBool("WEBGL_PACK")?new FG(s[0].shape,o):new DG(s[0].shape,o);return t.runWebGLProgram(i,s,r)}const OG={kernelName:Bc,backendName:"webgl",kernelFunc:zu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=Re(o,r.shape);let u=c;const l=pt(u,i);let d=r;l!=null&&(d=bn({inputs:{x:r},backend:t,attrs:{perm:l}}),u=ot(u.length,i)),ht("all",u,i);const[h,p]=bt(d.shape,u),f=L(p),m=le({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Jo(m,m.dtype,"all",t);let b;if(a){const x=et(h,c);b=le({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=le({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(d),b}const LG={kernelName:zc,backendName:"webgl",kernelFunc:MG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=Re(o,r.shape);let u=c;const l=pt(u,i);let d=r;l!=null&&(d=bn({inputs:{x:r},backend:t,attrs:{perm:l}}),u=ot(u.length,i)),ht("any",u,i);const[h,p]=bt(d.shape,u),f=L(p),m=le({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Jo(m,m.dtype,"any",t);let b;if(a){const x=et(h,c);b=le({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=le({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(d),b}const BG={kernelName:Vc,backendName:"webgl",kernelFunc:PG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zG{constructor(e,t,s){this.variableNames=["A"];const{windowSize:r,batchSize:o,outSize:a}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[o,a];const i=t==="max"?">":"<",c=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${r};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${r}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VG{constructor(e,t,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,v(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const o=e[e.length-1],a=Math.ceil(o/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,u=dt(c),l=pn("coords",c);let d,h;if(a===1){h=c+1;const C=dt(h);d=`
        ${C} sourceLocR = ${C}(${l.join()}, 0);
        ++${l[c-1]};
        ${C} sourceLocG = ${C}(${l.join()}, 0);
        ++${l[c-2]};
        ${C} sourceLocA = ${C}(${l.join()}, 0);
        --${l[c-1]};
        ${C} sourceLocB = ${C}(${l.join()}, 0);
        --${l[c-2]};`}else h=c,d=`
        ${u} sourceLocR = coords;
        ++${l[c-1]};
        ${u} sourceLocG = coords;
        ++${l[c-2]};
        ${u} sourceLocA = coords;
        --${l[c-1]};
        ${u} sourceLocB = coords;
        --${l[c-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(C=>"int "+C),g=pn("sourceLocR",h-1).concat("inIdx.r"),b=pn("sourceLocG",h-1).concat("inIdx.g"),x=pn("sourceLocB",h-1).concat("inIdx.b"),y=pn("sourceLocA",h-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",I=r?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,$=r?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${$}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${l[c-1]} < ${i[c-1]-1};
        bool hasNextRow = ${l[c-2]} < ${i[c-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C$(n,e,t,s=null){let r=e.shape[0],o=e.shape[1];s!=null&&(r=s.shape[0],o=s.shape[1]);const a=ch(o),i={windowSize:a,inSize:o,batchSize:r,outSize:Math.ceil(o/a)},c=new zG(i,t,s==null),u=[e];s!=null&&u.push(s);const l=n.runWebGLProgram(c,u,"int32");if(l.shape[1]===1)return l;const d=C$(n,e,t,l);return n.disposeIntermediateTensorInfo(l),d}function S$(n,e,t,s=null){const r=s!=null?s.shape:e.shape,o=r[r.length-1],a=ch(o),i=new VG(r,a,t,s==null),c=s==null?[e]:[e,s],u=n.runWebGLProgram(i,c,"int32");if(u.shape.length===e.shape.length){const l=S$(n,e,t,u);return n.disposeIntermediateTensorInfo(u),l}return u}function N$(n,e,t,s){const r=[t];if(ht("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,e.shape.length),!H().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const o=[],a=n.texData.get(e.dataId),i=a!==null&&a.isPacked;let c=e;i&&(c=n.unpackTensor(e),o.push(c));const[u,l]=bt(c.shape,r),d=L(l),h=le({inputs:{x:c},backend:n,attrs:{shape:[-1,d]}});o.push(h);const p=C$(n,h,s);o.push(p);const f=le({inputs:{x:p},backend:n,attrs:{shape:u}});return o.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return S$(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let a=Re(o,r.shape);const i=pt(a,r.shape.length);let c=r;const u=[];i!=null&&(c=bn({inputs:{x:r},backend:t,attrs:{perm:i}}),u.push(c),a=ot(a.length,c.shape.length)),ht("argMax",[a[0]],c.shape.length);const l=N$(t,c,a[0],"max");return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const UG={kernelName:Ba,backendName:"webgl",kernelFunc:WG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o}=s;let a=Re(o,r.shape);const i=pt(a,r.shape.length);let c=r;const u=[];i!=null&&(c=bn({inputs:{x:r},backend:t,attrs:{perm:i}}),u.push(c),a=ot(a.length,c.shape.length)),ht("argMin",[a[0]],c.shape.length);const l=N$(t,c,a[0],"min");return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const HG={kernelName:Sd,backendName:"webgl",kernelFunc:GG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jG=bs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,qG=He({opSnippet:jG}),XG={kernelName:Wc,backendName:"webgl",kernelFunc:qG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KG=bs+"return log(x + sqrt(x * x + 1.0));",YG=He({opSnippet:KG}),ZG={kernelName:Uc,backendName:"webgl",kernelFunc:YG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JG=bs+`
  return atan(x);
`,QG=He({opSnippet:JG}),eH={kernelName:Gc,backendName:"webgl",kernelFunc:QG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tH=Hg+`
  return atan(a, b);
`,nH=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+nu+`
  return result;
`,sH=en({opSnippet:tH,packedOpSnippet:nH}),rH={kernelName:jc,backendName:"webgl",kernelFunc:sH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oH=bs+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,aH=He({opSnippet:oH}),iH={kernelName:Hc,backendName:"webgl",kernelFunc:aH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _c{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(m||(x="-1.0 / 1e-20"),s){const C=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${c});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${r?o?g:b:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const y="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");const I=Math.floor(a/4)*4,k=a%4,$=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${c});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${$}
          }

          int xC = xCCorner + ${I};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${$}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${$}
          }
        }
        setOutput(${w});
      }
    `}}class qg{constructor(e,t,s,r=!1,o=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,c=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,b=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const y=t==="avg";let w="0.0";if(y||(w="-1.0 / 1e-20"),s){const T=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${c}, ${u});
        const ivec3 pads = ivec3(${g}, ${b}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${T} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${r?o?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");const $=Math.floor(a/4)*4,C=a%4,N=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${c}, ${u});
      const ivec3 pads = ivec3(${g}, ${b}, ${x});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${$}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${N}
            }

            int xC = xCCorner + ${$};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${N}
            }
          }
          setOutput(${k});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;eu(r,"avgPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,u=1;v(cn(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const l=zn(r.shape,o,a,u,i,c);if(l.filterWidth===1&&l.filterHeight===1&&Ke(l.inShape,l.outShape))return Pn({inputs:{x:r},backend:t});const d=new _c(l,"avg",!1);return t.runWebGLProgram(d,[r],"float32")}const lH={kernelName:za,backendName:"webgl",kernelFunc:cH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dimRoundingMode:c,dataFormat:u}=s,l=[1,1,1],d=gr(r.shape,o,a,l,i,c,u),h=new qg(d,"avg",!1);return t.runWebGLProgram(h,[r],"float32")}const dH={kernelName:Nd,backendName:"webgl",kernelFunc:uH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class hH{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=c-1-e.padInfo.top,d=u-1-e.padInfo.left,h=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class pH{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=d-1-e.padInfo.front,m=h-1-e.padInfo.top,g=p-1-e.padInfo.left,b=1/(t*s*r);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${o}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fH(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=s,d=[1,1,1],h=gr(a.shape,i,c,d,u,l),p=new pH(h);return t.runWebGLProgram(p,[r],a.dtype)}const mH={kernelName:wf,backendName:"webgl",kernelFunc:fH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o;eu([r,o],"avgPoolGrad");const{filterSize:i,strides:c,pad:u}=s,l=zn(a.shape,i,c,1,u),d=new hH(l);return t.runWebGLProgram(d,[r],a.dtype)}const bH={kernelName:yf,backendName:"webgl",kernelFunc:gH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:a,transposeB:i}=s;return xd({a:r,b:o,transposeA:a,transposeB:i,backend:t})}const yH={kernelName:Va,backendName:"webgl",kernelFunc:xH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wH{constructor(e,t,s,r,o,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ee(e,t),Ee(e,s);let i="0.0";r!=null&&(Ee(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";o!=null&&(Ee(e,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class IH{constructor(e,t,s,r,o,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ee(e,t),Ee(e,s);let i="vec4(0.0)";r!=null&&(Ee(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";o!=null&&(Ee(e,o),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kH=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:r,variance:o,offset:a,scale:i}=n;v(r.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),v(a==null||r.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),v(i==null||r.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=t;c==null&&(c=.001);const u=[s,r,o];let l=null;a!=null&&(l=a.shape,u.push(a));let d=null;i!=null&&(d=i.shape,u.push(i));const h=H().getBool("WEBGL_PACK_NORMALIZATION")?new IH(s.shape,r.shape,o.shape,l,d,c):new wH(s.shape,r.shape,o.shape,l,d,c);return e.runWebGLProgram(h,u,u[0].dtype)},$H={kernelName:ti,backendName:"webgl",kernelFunc:kH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vH{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=dt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=CH(this.rank);let r;const o=e.map((a,i)=>`sourceLoc.${Xp[i]} = start[${i}] + coords.${Xp[i]};`);r=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${o.join(`
`)}
      `,this.userCode=`
      void main() {
        ${r}
        setOutput(getSource(${s}));
      }
    `}}const Xp=["x","y","z","w","u","v"];function CH(n){if(n===1)return"sourceLoc";if(n<=6)return Xp.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SH{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=dt(this.rank),s=pn("coords",this.rank),r=pn("sourceLoc",this.rank),o=this.rank===1?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${o})`,i=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${r[this.rank-1]};
        result.y = ${a};
        --${r[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${r[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${r[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,d)=>`start[${d}]`).join()});`:e.map((l,d)=>`${r[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NH(n,e,t,s){const r=s.texData.get(n.dataId),o=s.makeTensorInfo(t,n.dtype),a=s.texData.get(o.dataId);Object.assign(a,r),a.refCount=1,a.shape=t,a.dtype=n.dtype;let i=Qd(e,me(n.shape));r.slice&&(i+=r.slice.flatOffset),a.slice={flatOffset:i,origDataId:r.slice&&r.slice.origDataId||n.dataId};const c=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,c+1),o}function Yi(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,size:a}=s,[i,c]=Ll(r,o,a);if(Kf(r,i,c),L(c)===0)return t.makeTensorInfo(c,r.dtype,[]);if(t.shouldExecuteOnCPU([r])||r.dtype==="string"){const d=t.texData.get(r.dataId),h=wU(d.values,i,c,r.shape,r.dtype);return t.makeTensorInfo(c,r.dtype,h)}const{isPacked:u}=t.texData.get(r.dataId),l=Jd(r.shape,i,c);if(u||!l){const d=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new SH(c):new vH(c),h=[i];return t.runWebGLProgram(d,[r],r.dtype,h)}return t.uploadToGPU(r.dataId),NH(r,i,c,t)}const TH={kernelName:vl,backendName:"webgl",kernelFunc:Yi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EH=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:a}=s;v(r.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((x,y)=>x*y),c=Ho(r.shape,o,i),u=jo(c.length,o.length),l=qo(r.shape,o,i),d=uh(a,o.length),h=dh(l,a,o.length),p=[],f=le({inputs:{x:r},backend:t,attrs:{shape:c}}),m=bn({inputs:{x:f},backend:t,attrs:{perm:u}}),g=le({inputs:{x:m},backend:t,attrs:{shape:l}}),b=Yi({inputs:{x:g},backend:t,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>t.disposeIntermediateTensorInfo(x)),b},_H={kernelName:qc,backendName:"webgl",kernelFunc:EH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a}=s,i=t.readSync(r.dataId),c=t.readSync(o.dataId),u=f$(i,c,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,u)}const AH={kernelName:If,backendName:"webgl",kernelFunc:RH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DH(n){const{inputs:e,backend:t}=n,{s0:s,s1:r}=e,o=t.readSync(s.dataId),a=t.readSync(r.dataId),i=Ee(Array.from(o),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const FH={kernelName:n0,backendName:"webgl",kernelFunc:DH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OH="return float(a != b);",T$=en({opSnippet:OH,cpuKernelImpl:dU,dtype:"bool"}),MH={kernelName:ml,backendName:"webgl",kernelFunc:T$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ru(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Pn({inputs:{x:r.complexTensorInfos.real},backend:t})}const LH={kernelName:Lf,backendName:"webgl",kernelFunc:ru};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PH="return float(int(x));";function BH(n,e){const t=new Vs(n.shape,PH),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kp(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dtype:o}=s;if(o==="complex64"){if(r.dtype==="complex64")return Pn({inputs:{x:r},backend:t});const a=Ht(r.shape),i=Kp({inputs:{x:r},backend:t,attrs:{dtype:"float32"}}),c=Kr({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),c}if(r.dtype==="complex64"){const a=ru({inputs:{input:r},backend:t}),i=Kp({inputs:{x:a},backend:t,attrs:{dtype:o}});return t.disposeIntermediateTensorInfo(a),i}if(!Yy(r.dtype,o)){const a=Pn({inputs:{x:r},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:o}}if(t.shouldExecuteOnCPU([r])){const a=t.texData.get(r.dataId).values,[i,c,u]=H4(a,r.shape,r.dtype,o);return t.makeTensorInfo(i,c,u)}if(o==="int32")return BH(r,t);if(o==="bool"){const a=t.makeTensorInfo([],"bool",Qt("bool",1)),c=T$({inputs:{a:r,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),c}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${o}`)}const zH={kernelName:Wa,backendName:"webgl",kernelFunc:Kp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Qx="return ceil(x);",VH=He({opSnippet:Qx,packedOpSnippet:Qx,cpuKernelImpl:j4}),WH={kernelName:Ua,backendName:"webgl",kernelFunc:VH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UH{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HH(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:a}=s;let i;H().getBool("WEBGL_PACK_CLIP")?i=new GH(r.shape):i=new UH(r.shape);const c=[[o],[a]];return t.runWebGLProgram(i,[r],r.dtype,c)}const jH={kernelName:Po,backendName:"webgl",kernelFunc:HH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qH{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ey(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function XH(n){const{inputs:e,backend:t}=n,{x:s}=e,r=t.texData.get(s.dataId),o=new qH(s.shape),a=[ey(s,r.complexTensorInfos.real),ey(s,r.complexTensorInfos.imag)];return t.runWebGLProgram(o,a,a[0].dtype)}const KH={kernelName:Td,backendName:"webgl",kernelFunc:XH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class YH{constructor(e){this.outputShape=[],this.outputShape=Kn(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const i=t[a-1];s.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const r=t.length,o=t[t.length-1];s.push(`else setOutput(getT${r}(yR, yC-${o}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZH{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Kn(e,t);const s=this.outputShape,r=s.length,o=dt(r),a=pn("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((m,g)=>`T${g}`);const c=new Array(e.length-1);c[0]=e[0][t];for(let m=1;m<c.length;m++)c[m]=c[m-1]+e[m][t];const u=i[t],l=i.slice(-2),d=i.join();let h=`if (${u} < ${c[0]}) {
        return getChannel(
            getT0(${d}), vec2(${l.join()}));
        }`;for(let m=1;m<c.length;m++){const g=c[m-1];h+=`
        if (${u} < ${c[m]}  && ${u} >= ${c[m-1]}) {
          return getChannel(
            getT${m}(${Du(i,u,g)}),
            vec2(${Du(l,u,g)}));
        }`}const p=c.length,f=c[c.length-1];h+=`
        return getChannel(
          getT${p}(${Du(i,u,f)}),
          vec2(${Du(l,u,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${o} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[r-1]} = ${a[r-1]} + 1;
        if (${a[r-1]} < ${s[r-1]}) {
          result.g = getValue(${a});
        }

        ${a[r-2]} = ${a[r-2]} + 1;
        if (${a[r-2]} < ${s[r-2]}) {
          result.a = getValue(${a});
        }

        ${a[r-1]} = ${a[r-1]} - 1;
        if (${a[r-2]} < ${s[r-2]} &&
            ${a[r-1]} < ${s[r-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function Du(n,e,t){const s=n.indexOf(e);return n.map((o,a)=>a===s?`${o} - ${t}`:o).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ah(n){const{inputs:e,backend:t}=n,{input:s}=e,r=t.texData.get(s.dataId);return Pn({inputs:{x:r.complexTensorInfos.imag},backend:t})}const JH={kernelName:Af,backendName:"webgl",kernelFunc:Ah};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fc(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(x=>ru({inputs:{input:x},backend:t})),f=n.map(x=>Ah({inputs:{input:x},backend:t})),m=fc(p,e,t),g=fc(f,e,t),b=Kr({inputs:{real:m,imag:g},backend:t});return p.forEach(x=>t.disposeIntermediateTensorInfo(x)),f.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),b}let r=t.shouldExecuteOnCPU(n);if(s==="string"&&(r=!0),r){const p=n.map(w=>{const k=[-1,L(w.shape.slice(e))];return le({inputs:{x:w},backend:t,attrs:{shape:k}})}),f=p.map(w=>({vals:t.readSync(w.dataId),shape:w.shape})),m=Kn(p.map(w=>w.shape),1),g=p[0].shape[0]===1,b=q4(f,m,s,g),x=Kn(n.map(w=>w.shape),e),y=t.makeTensorInfo(x,s,b);return p.forEach(w=>t.disposeIntermediateTensorInfo(w)),y}const o=n.filter(p=>L(p.shape)>0),a=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&o[0].shape.length>1;if(o.length===1){const p=a?new Vs(n[0].shape,wr):new $r(n[0].shape,wr);return t.runWebGLProgram(p,n,s)}const i=H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(o.length>i){const p=[];for(let m=0;m<o.length;m+=i){const g=o.slice(m,m+i);p.push(fc(g,e,t))}const f=fc(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(a){const p=new ZH(o.map(f=>f.shape),e);return t.runWebGLProgram(p,o,s)}const{tensors2D:c,outShape:u}=QH(o,e,t),l=new YH(c.map(p=>p.shape)),d=t.runWebGLProgram(l,c,s);c.forEach(p=>t.disposeIntermediateTensorInfo(p));const h=le({inputs:{x:d},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(d),h}function QH(n,e,t){const s=Kn(n.map(o=>o.shape),e);return{tensors2D:n.map(o=>le({inputs:{x:o},attrs:{shape:[-1,L(o.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E$(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s,o=Re(r,e[0].shape)[0],a=e.map(u=>u.shape);ih(a,o);const i=Kn(e.map(u=>u.shape),o);if(L(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(u=>L(u.shape)>0);return c.length===1?Pn({inputs:{x:c[0]},backend:t}):fc(c,o,t)}const e6={kernelName:Xc,backendName:"webgl",kernelFunc:E$};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,c=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",b=g?1:2,x=g?2:3,y=g?3:1;let w="",I="";s&&(r?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${c}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${I}
        setOutput(result);
      }
    `}}class t6{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,r=e.padInfo.left,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${o}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${s}, ${r});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class R${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yn(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,d=l;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)h+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;h+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<l;g++)h+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(d+1)/2;g++){const b=g*2;if(h+=`
           xC = xCCorner + ${b*c};
           `,i===1){if(b<l&&(a%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,c===1&&b>0?h+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<l)){const x=a%2===0?mf(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,c>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:h+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):x===1?h+=`
                     xC${b+1} = xTexelC${b};
                     `:h+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<l&&(a%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<l&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<l&&(h+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<l&&(h+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<l&&(h+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",f="";s&&(r?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:o?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n6{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length);const{dataFormat:s}=t,r=xn(),o=s==="channelsLast",a=o?1:2,i=o?2:3,c=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let l=0;l<=1;l++)for(let d=0;d<=1;d++)u+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${l};

          ${c}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${o}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${r.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yd(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function A$({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const c=n.shape,u=s.texData.get(n.dataId),l=t.inChannels,d=c[0]*c[1]*c[2],h=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const b=[];if(o!=null){const w=yd(o.shape,p);w!=null&&(o=le({inputs:{x:o},backend:s,attrs:{shape:w}}),b.push(o))}if(r!=null){const w=yd(r.shape,p);w!=null&&(r=le({inputs:{x:r},backend:s,attrs:{shape:w}}),b.push(r))}if(!((d===1||h===1)&&l>v$)&&u.isPacked&&p&&u.texture!=null&&c[2]%2!==0&&Ke(u.shape.slice(-3),c.slice(-3))){const w=c[0]*c[1]*(c[2]+1),I={dataId:n.dataId,shape:[1,w,t.inChannels],dtype:n.dtype},k=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,v(bd(u.shape,I.shape),()=>`packed reshape ${u.shape} to ${I.shape} isn't free`);const $=le({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});b.push($);const C=xd({a:I,b:$,backend:s,transposeA:f,transposeB:m,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a}),N=s.texData.get(C.dataId);v(N.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=k,N.shape=t.outShape,g=Pn({inputs:{x:C},backend:s}),g.shape=t.outShape,b.push(C)}else{const w=t.outHeight*t.outWidth,I=le({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,w,t.inChannels]:[t.batchSize,t.inChannels,w]}}),k=le({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),$=xd({a:p?I:k,b:p?k:I,transposeA:!p,transposeB:m,backend:s,bias:r,activation:i,preluActivationWeights:o,leakyreluAlpha:a});g=le({inputs:{x:$},backend:s,attrs:{shape:t.outShape}}),b.push(I),b.push(k),b.push($)}for(const w of b)s.disposeIntermediateTensorInfo(w);return g}function D$({x:n,filter:e,convInfo:t,backend:s,bias:r=null,preluActivationWeights:o=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:c,filterHeight:u,inChannels:l,outWidth:d,outHeight:h,dataFormat:p}=t,f=p==="channelsLast",m=c*u*l,g=h*d,b=[t.batchSize,m,g],x=!0,y=!1,w=[];if(o!=null){const z=yd(o.shape,f);z!=null&&(o=le({inputs:{x:o},backend:s,attrs:{shape:z}}),w.push(o))}if(r!=null){const z=yd(r.shape,f);z!=null&&(r=le({inputs:{x:r},backend:s,attrs:{shape:z}}),w.push(r))}const I=le({inputs:{x:e},backend:s,attrs:{shape:[1,m,L(e.shape)/m]}});w.push(I);const k=new n6(b,t),$=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],C=s.runWebGLProgram(k,[n],"float32",$),N=le({inputs:{x:C},backend:s,attrs:{shape:b}});w.push(C),w.push(N);const T=r!=null,_=o!=null,O=i==="leakyrelu",P=i?Ec(i,!0):null,V=new $$(f?N.shape:I.shape,f?I.shape:N.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],x,y,T,P,_,O),B=f?[N,I]:[I,N];if(r&&B.push(r),_&&B.push(o),O){const z=s.makeTensorInfo([],"float32",Wr(a,"float32"));B.push(z),w.push(z)}const W=s.runWebGLProgram(V,B,"float32"),q=le({inputs:{x:W},backend:s,attrs:{shape:t.outShape}});w.push(W);for(const z of w)s.disposeIntermediateTensorInfo(z);return q}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dataFormat:c,dilations:u,dimRoundingMode:l}=s,d=Ds(c),h=Nt(r.shape,o.shape,a,u,i,l,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=A$({x:r,filter:o,convInfo:h,backend:t});else if(h.strideWidth<=2&&d==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){const m=new R$(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=t.runWebGLProgram(m,[r,o],"float32",g)}else if(H().getBool("WEBGL_CONV_IM2COL"))p=D$({x:r,filter:o,convInfo:h,backend:t});else{const m=new _$(h);p=t.runWebGLProgram(m,[r,o],"float32")}const f=le({inputs:{x:p},backend:t,attrs:{shape:h.outShape}});return t.disposeIntermediateTensorInfo(p),f}const r6={kernelName:Ga,backendName:"webgl",kernelFunc:s6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class a6{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,c=s-1-e.padInfo.left,u=a?1:2,l=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class i6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${o};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${r} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class c6{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,r=e.filterWidth,o=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=t-1-e.padInfo.front,u=s-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${o}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${r}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${r} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,dataFormat:c,dimRoundingMode:u,filterShape:l}=s,d=Ds(c),h=Nt(r.shape,l,a,1,i,u,!1,d),p=new o6(h);return t.runWebGLProgram(p,[r,o],"float32")}const u6={kernelName:$f,backendName:"webgl",kernelFunc:l6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{inputShape:a,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=s,d=Ds(u),h=Nt(a,o.shape,i,1,c,l,!1,d),p=new a6(h);return t.runWebGLProgram(p,[r,o],"float32")}const h6={kernelName:Ha,backendName:"webgl",kernelFunc:d6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c}=s,u=Ur(r.shape,o.shape,a,c,i),l=new t6(u);return t.runWebGLProgram(l,[r,o],"float32")}const f6={kernelName:Ed,backendName:"webgl",kernelFunc:p6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,pad:i,filterShape:c}=s,u=Ur(r.shape,c,a,1,i),l=new i6(u);return t.runWebGLProgram(l,[r,o],"float32")}const g6={kernelName:vf,backendName:"webgl",kernelFunc:m6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{pad:a,strides:i,inputShape:c}=s,u=Ur(c,o.shape,i,1,a),l=new c6(u);return t.runWebGLProgram(l,[r,o],"float32")}const x6={kernelName:Cf,backendName:"webgl",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const y6=Ki+`
  return cos(x);
`,w6=He({opSnippet:y6}),I6={kernelName:ja,backendName:"webgl",kernelFunc:w6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k6=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,$6=He({opSnippet:k6}),v6={kernelName:qa,backendName:"webgl",kernelFunc:$6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C6{constructor(e,t,s,r,o){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,c,u]=e,[l]=t,[d,h]=s;this.outputShape=[l,d,h,u];const p=r==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${c-1}.0`],[g,b,x]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[y,w,I]=h>1?[`${(c-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${w};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${o}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${o}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S6=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:r,boxes:o,boxInd:a}=e,{cropSize:i,method:c,extrapolationValue:u}=s,l=new C6(r.shape,o.shape,i,c,u);return t.runWebGLProgram(l,[r,o,a],"float32")},N6={kernelName:Yc,backendName:"webgl",kernelFunc:S6};var Rc;(function(n){n.Prod="*",n.Sum="+"})(Rc||(Rc={}));class ty{constructor(e,t,s,r){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const o=this.outputShape.length,a=this.op===Rc.Prod?"1.0":"0.0",i=s?a:`getX(${ny(o,"coords",this.op)})`,c=this.outputShape[this.outputShape.length-1];let u="",l="";s?(u=r?`end != ${c-1}`:"end != 0",l=r?"end + 1":"end - 1"):(u=r?`end + pow2 < ${c}`:"end >= pow2",l=r?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${dt(o)} coords = getOutputCoords();
        int end = ${sy(o,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${sy(o,"coords",this.op)} = idx;
          val ${this.op}= getX(${ny(o,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function ny(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function sy(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F$(n,e,t,s,r,o){const a=e.shape.length,i=pt([s],a);let c=e;i!=null&&(c=bn({inputs:{x:e},backend:t,attrs:{perm:i}}));const u=ot(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const l=c.shape[u];let d=Pn({inputs:{x:c},backend:t});for(let h=0;h<=Math.ceil(Math.log2(l))-1;h++){const p=new ty(n,c.shape,!1,o),f=[[h]],m=d;d=t.runWebGLProgram(p,[d],d.dtype,f),t.disposeIntermediateTensorInfo(m)}if(r){const h=new ty(n,c.shape,r,o),p=d;d=t.runWebGLProgram(h,[d],d.dtype),t.disposeIntermediateTensorInfo(p)}if(i!=null){const h=er(i),p=bn({inputs:{x:d},backend:t,attrs:{perm:h}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(c),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;return F$(Rc.Prod,r,t,o,a,i)}const E6={kernelName:Kc,backendName:"webgl",kernelFunc:T6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s;return F$(Rc.Sum,r,t,o,a,i)}const R6={kernelName:Xa,backendName:"webgl",kernelFunc:_6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,weights:o}=e,{size:a,binaryOutput:i}=s;if(r.shape.length===1){const c=t.readSync(r.dataId),u=t.readSync(o.dataId),l=f$(c,u,o.dtype,o.shape,a);return t.makeTensorInfo([a],o.dtype,l)}else if(r.shape.length===2){const c=t.bufferSync(r),u=t.bufferSync(o),l=G4(c,u,a,i);return t.makeTensorInfo(l.shape,o.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}const D6={kernelName:Sf,backendName:"webgl",kernelFunc:A6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class F6{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function O6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockSize:o,dataFormat:a}=s,i=r.shape[0],c=a==="NHWC"?r.shape[1]:r.shape[2],u=a==="NHWC"?r.shape[2]:r.shape[3],l=a==="NHWC"?r.shape[3]:r.shape[1],d=c*o,h=u*o,p=l/(o*o),f=a==="NHWC"?[i,d,h,p]:[i,p,d,h],m=new F6(f,o,a);return t.runWebGLProgram(m,[r],r.dtype)}const M6={kernelName:Zc,backendName:"webgl",kernelFunc:O6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yn(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,c=e.outChannels/e.inChannels;let u="",l="";s&&(r?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,l="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M${constructor(e,t=!1,s=null,r=!1,o=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yn(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,c=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,h=d;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<d;b++)p+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;p+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let b=0;b<d;b++)p+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(h+1)/2;b++){const x=b*2;if(p+=`
          xC = xCCorner + ${x*u};
          `,c===1){if(x<d&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?p+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<d)){const y=i%2===0?mf(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:p+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):y===1?p+=`
                    xC${x+1} = xTexelC${x};
                    `:p+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<d&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<d&&(p+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<d&&(p+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<d&&(p+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(r?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:o?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),o&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c,dimRoundingMode:u}=s;let l=c;l==null&&(l=[1,1]),v(cn(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const d=Nt(r.shape,o.shape,a,l,i,u,!0);let h;H().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new M$(d):h=new O$(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return t.runWebGLProgram(h,[r,o],"float32",p)}const P6={kernelName:Ka,backendName:"webgl",kernelFunc:L6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class B6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,r=e.padInfo.top,o=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${r};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${o};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class z6{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,r=e.strideHeight,o=e.strideWidth,a=t-1-e.padInfo.top,i=s-1-e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${r}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${o}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,dy:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:u,filterShape:l}=s,d=Nt(r.shape,l,a,i,c,u,!0),h=new B6(d);return t.runWebGLProgram(h,[r,o],"float32")}const W6={kernelName:Nf,backendName:"webgl",kernelFunc:V6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,filter:o}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:u,inputShape:l}=s,d=Nt(l,o.shape,a,i,c,u,!0),h=new z6(d);return t.runWebGLProgram(h,[r,o],"float32")}const G6={kernelName:Tf,backendName:"webgl",kernelFunc:U6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class H6{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function j6(n){const{inputs:e,backend:t}=n,{x:s}=e,r=[...s.shape,...s.shape],o=L(s.shape),a=le({inputs:{x:s},backend:t,attrs:{shape:[o]}}),i=new H6(o),c=t.runWebGLProgram(i,[a],a.dtype),u=le({inputs:{x:c},backend:t,attrs:{shape:r}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),u}const q6={kernelName:s0,backendName:"webgl",kernelFunc:j6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class X6{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:r,strideHeight:o,strideWidth:a,filterHeight:i,filterWidth:c,dilationHeight:u,dilationWidth:l}=e,{top:d,left:h}=r;this.userCode=`
      const ivec2 strides = ivec2(${o}, ${a});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K6(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o}=e,{strides:a,pad:i,dilations:c}=s,u=Pl(r.shape,o.shape,a,i,"NHWC",c);let l;const d=new X6(u);l=t.runWebGLProgram(d,[r,o],"float32");const h=le({inputs:{x:l},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(l),h}const Y6={kernelName:_d,backendName:"webgl",kernelFunc:K6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z6(n){const{inputs:e,backend:t,attrs:s}=n,{equation:r}=s,o=e,{allDims:a,summedDims:i,idDims:c}=Vm(r,o.length);Um(a.length,c,o);const{path:u,steps:l}=Gm(i,c),d=l.length;let h=null,p=a.length;const f=[];for(let m=0;m<d;++m){for(const g of l[m]){const{permutationIndices:b,expandDims:x}=Wm(p,c[g]);let y;Hm(b)?y=o[g]:(y=bn({inputs:{x:o[g]},backend:t,attrs:{perm:b}}),f.push(y));const w=y.shape.slice();for(let I=0;I<x.length;++I)w.splice(x[I],0,1);Ke(y.shape,w)||(y=le({inputs:{x:y},backend:t,attrs:{shape:w}}),f.push(y)),h===null?h=y:(h=jg({inputs:{a:y,b:h},backend:t}),f.push(h))}m<d-1&&(u[m]>=0&&(h=Rh({inputs:{x:h},backend:t,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&t.disposeIntermediateTensorInfo(m);return h}const J6={kernelName:r0,backendName:"webgl",kernelFunc:Z6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q6="return (x >= 0.0) ? x : (exp(x) - 1.0);",ej=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,tj=He({opSnippet:Q6,packedOpSnippet:ej}),nj={kernelName:Za,backendName:"webgl",kernelFunc:tj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sj="return (b >= 1.0) ? a : a * (b + 1.0);",rj=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,oj=n=>{const{inputs:e,backend:t}=n,{dy:s,y:r}=e,o=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new su(rj,s.shape,r.shape):new Fa(sj,s.shape,r.shape);return t.runWebGLProgram(o,[s,r],s.dtype)},aj={kernelName:Ef,backendName:"webgl",kernelFunc:oj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ij=`
  return vec4(equal(a, b));
`,cj="return float(a == b);",lj=en({opSnippet:cj,packedOpSnippet:ij,dtype:"bool",cpuKernelImpl:X4}),uj={kernelName:Qc,backendName:"webgl",kernelFunc:lj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dj=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Fm};
  float a1 = ${Om};
  float a2 = ${Mm};
  float a3 = ${Lm};
  float a4 = ${Pm};
  float a5 = ${Bm};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,hj=He({opSnippet:dj}),pj={kernelName:Jc,backendName:"webgl",kernelFunc:hj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fj=Ki+`
  return exp(x);
`,mj=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,L$=He({opSnippet:fj,packedOpSnippet:mj,cpuKernelImpl:K4,dtype:"float32"}),gj={kernelName:Ja,backendName:"webgl",kernelFunc:L$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yp(n){const{inputs:e,attrs:t,backend:s}=n,{dim:r}=t,{input:o}=e,a=o.shape.length,i=o.shape.slice();let c=r;return r<0&&(v(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+r+1),i.splice(c,0,1),le({inputs:{x:o},backend:s,attrs:{shape:i}})}const bj={kernelName:el,backendName:"webgl",kernelFunc:Yp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ry="return exp(x) - 1.0;",xj=He({opSnippet:ry,packedOpSnippet:ry,cpuKernelImpl:Y4}),yj={kernelName:tl,backendName:"webgl",kernelFunc:xj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class oy{constructor(e,t,s){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const o=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${r}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${o};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${r});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${r}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P$(n,e,t){const s=t.texData.get(n.dataId),r=L(n.shape),o=n.shape[n.shape.length-1],a=r/o,i=le({inputs:{x:n},backend:t,attrs:{shape:[a,o]}}),c=i.shape,u=new oy("real",c,e),l=new oy("imag",c,e),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],h=t.runWebGLProgram(u,d,"float32"),p=t.runWebGLProgram(l,d,"float32"),f=Kr({inputs:{real:h,imag:p},backend:t});t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p);const m=le({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wj(n){const{inputs:e,backend:t}=n,{input:s}=e;return P$(s,!1,t)}const Ij={kernelName:_f,backendName:"webgl",kernelFunc:wj};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kj{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ou(n){const{backend:e,attrs:t}=n,{shape:s,value:r}=t;let{dtype:o}=t;if(o=o||Oc(r),o==="string"){const a=At(o,L(s));return a.fill(r),e.makeTensorInfo(s,o,a)}else{const a=new kj(s,r),i=[[r]];return e.runWebGLProgram(a,[],o,i)}}const $j={kernelName:Rd,backendName:"webgl",kernelFunc:ou};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vj{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cj={kernelName:nl,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,r=new vj(t.shape);return s.runWebGLProgram(r,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ay="return floor(x);",Sj=He({opSnippet:ay,packedOpSnippet:ay,cpuKernelImpl:Z4}),Nj={kernelName:Qa,backendName:"webgl",kernelFunc:Sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tj=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Ej=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,_j=en({opSnippet:Tj,packedOpSnippet:Ej,dtype:"int32"}),Rj={kernelName:ei,backendName:"webgl",kernelFunc:_j};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Aj{constructor(e){this.variableNames=["A"];const t=xn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dj{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=xn(),[s,r]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${r}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fj={kernelName:YS,backendName:"webgl",kernelFunc:Oj};let aa,sp=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Oj(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:r}=e;const{numChannels:o}=s,a=typeof HTMLVideoElement<"u"&&r instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement,[c,u]=a?[r.videoWidth,r.videoHeight]:[r.width,r.height],l=[u,c],d=[u,c,o];if(i||a){const m=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(aa==null||m!==sp)&&(sp=m,aa=document.createElement("canvas").getContext("2d",{willReadFrequently:sp})),aa.canvas.width=c,aa.canvas.height=u,aa.drawImage(r,0,0,c,u),r=aa.canvas}const h=t.makeTensorInfo(l,"int32");t.texData.get(h.dataId).usage=qn.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(h.dataId),r);const p=H().getBool("WEBGL_PACK")?new Dj(d):new Aj(d),f=t.runWebGLProgram(p,[h],"int32");return t.disposeData(h.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=Ds(l),g=Nt(r.shape,o.shape,c,d,u,h,!1,m);let b;const x=[],y=a!=null,w=i!=null,I=p==="leakyrelu",k=()=>{const C=[r,o],N=(T,_)=>{if(_==="NCHW"&&T.shape.length===1&&T.shape[0]!==1){const O=le({inputs:{x:T},backend:t,attrs:{shape:[T.shape[0],1,1]}});return x.push(O),O}return T};if(y&&C.push(N(a,l)),w&&C.push(N(i,l)),I){const T=t.makeTensorInfo([],"float32",Wr(f,"float32"));C.push(T),x.push(T)}return C};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=A$({x:r,filter:o,convInfo:g,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){const C=p?Ec(p,!0):null,N=new R$(g,y,C,w,I),T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],_=k();b=t.runWebGLProgram(N,_,"float32",T)}else if(H().getBool("WEBGL_CONV_IM2COL"))b=D$({x:r,filter:o,convInfo:g,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const C=p?Ec(p,!1):null,N=new _$(g,y,C,w,I),T=k();b=t.runWebGLProgram(N,T,"float32")}const $=le({inputs:{x:b},backend:t,attrs:{shape:g.outShape}});return x.push(b),x.forEach(C=>t.disposeIntermediateTensorInfo(C)),$}const Lj={kernelName:$a,backendName:"webgl",kernelFunc:Mj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[];let m=l;m==null&&(m=[1,1]),v(cn(c,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${m}'`);const g=Nt(r.shape,o.shape,c,m,u,d,!0),b=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=h?Ec(h,b):null,y=[r,o],w=a!=null,I=i!=null,k=h==="leakyrelu";if(w&&y.push(a),I&&y.push(i),k){const T=t.makeTensorInfo([],"float32",Wr(p,"float32"));y.push(T),f.push(T)}let $;b?$=new M$(g,w,x,I,k):$=new O$(g,w,x,I,k);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=t.runWebGLProgram($,y,"float32",C);return f.forEach(T=>t.disposeIntermediateTensorInfo(T)),N}const Bj={kernelName:Hd,backendName:"webgl",kernelFunc:Pj};class zj{constructor(e,t,s,r){this.sliceDim=e,this.strides=t,this.paramsShape=r,this.variableNames=["x","indices"],this.outputShape=s;const o=dt(s.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${o} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vj(n){const{inputs:e,backend:t}=n,{params:s,indices:r}=e,o=r.shape,a=o[o.length-1],i=L(s.shape),[c,u,l,d]=Yd(s,r),h=le({inputs:{x:r},backend:t,attrs:{shape:[u,a]}}),p=le({inputs:{x:s},backend:t,attrs:{shape:[L(s.shape)/l,l]}});if(t.shouldExecuteOnCPU([s,r])||s.dtype==="string"){const b=t.readSync(r.dataId),x=t.bufferSync(s),y=J4(b,x,s.dtype,u,a,l,d,s.shape,i);return t.makeTensorInfo(c,s.dtype,y.values)}const f=new zj(a,d,[u,l],s.shape),m=t.runWebGLProgram(f,[p,h],p.dtype),g=le({inputs:{x:m},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const Wj={kernelName:Ad,backendName:"webgl",kernelFunc:Vj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uj{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=dt(this.rank),r=Gj(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${r}));
      }
    `}}function Gj(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let r=0;r<n.length;r++)r===2?s.push("index"):s.push(`${t[r]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,indices:o}=e,{axis:a,batchDims:i}=s,c=Re(a,r.shape)[0];if(H().get("DEBUG")){const x=t.readSync(o.dataId),y=r.shape[c];for(let w=0;w<x.length;++w){const I=x[w];v(I<=y-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${y-1}]`)}}const u=mh(r,o,c,i),l=L(o.shape),d=[],h=le({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=le({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,l/u.batchSize]}});d.push(h),d.push(p);const f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([r,o])||r.dtype==="string"){const x=t.bufferSync(p),y=t.bufferSync(h),w=Q4(y,x,f);return d.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.makeTensorInfo(u.outputShape,w.dtype,w.values)}const m=new Uj(h.shape,f),g=t.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const b=le({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return d.forEach(x=>t.disposeIntermediateTensorInfo(x)),b}const Hj={kernelName:sl,backendName:"webgl",kernelFunc:B$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jj="return float(a > b);",qj=`
  return vec4(greaterThan(a, b));
`,Xj=en({opSnippet:jj,packedOpSnippet:qj,cpuKernelImpl:eU,dtype:"bool"}),Kj={kernelName:rl,backendName:"webgl",kernelFunc:Xj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yj="return float(a >= b);",Zj=`
  return vec4(greaterThanEqual(a, b));
`,Jj=en({opSnippet:Yj,packedOpSnippet:Zj,dtype:"bool",cpuKernelImpl:tU}),Qj={kernelName:ni,backendName:"webgl",kernelFunc:Jj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eq(n){const{inputs:e,backend:t}=n,{input:s}=e;return P$(s,!0,t)}const tq={kernelName:Rf,backendName:"webgl",kernelFunc:eq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nq="return float(!isnan(x) && !isinf(x));",sq=He({opSnippet:nq,dtype:"bool"}),rq={kernelName:ol,backendName:"webgl",kernelFunc:sq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oq="return float(isinf(x));",aq=He({opSnippet:oq,dtype:"bool"}),iq={kernelName:al,backendName:"webgl",kernelFunc:aq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cq="return float(isnan(x));",lq=He({opSnippet:cq,dtype:"bool"}),uq={kernelName:ri,backendName:"webgl",kernelFunc:lq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dq="return float(a < b);",hq=`
  return vec4(lessThan(a, b));
`,pq=en({opSnippet:dq,packedOpSnippet:hq,cpuKernelImpl:nU,dtype:"bool"}),fq={kernelName:il,backendName:"webgl",kernelFunc:pq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mq="return float(a <= b);",gq=`
  return vec4(lessThanEqual(a, b));
`,bq=en({opSnippet:mq,packedOpSnippet:gq,cpuKernelImpl:sU,dtype:"bool"}),xq={kernelName:cl,backendName:"webgl",kernelFunc:bq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yq(n){const{backend:e,attrs:t}=n,{start:s,stop:r,num:o}=t,a=rU(s,r,o);return e.makeTensorInfo([a.length],"float32",a)}const wq={kernelName:Df,backendName:"webgl",kernelFunc:yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iq=Ki+`
  return x < 0.0 ? 0./0. : log(x);
`,kq=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,$q=He({opSnippet:Iq,packedOpSnippet:kq,cpuKernelImpl:oU}),vq={kernelName:ai,backendName:"webgl",kernelFunc:$q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Cq=Ki+`
  return log(1.0 + x);
`,Sq=He({opSnippet:Cq}),Nq={kernelName:ll,backendName:"webgl",kernelFunc:Sq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tq="return float(a >= 1.0 && b >= 1.0);",Eq=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,_q=en({opSnippet:Tq,packedOpSnippet:Eq,dtype:"bool"}),Rq={kernelName:ul,backendName:"webgl",kernelFunc:_q};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Aq="return float(!(x >= 1.0));",Dq=He({opSnippet:Aq}),Fq={kernelName:dl,backendName:"webgl",kernelFunc:Dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Oq="return float(a >= 1.0 || b >= 1.0);",Mq=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Lq=en({opSnippet:Oq,packedOpSnippet:Mq,dtype:"bool"}),Pq={kernelName:hl,backendName:"webgl",kernelFunc:Lq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Bq{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;this.outputShape=e;let c;const u=`float(${s}) + float(${r}) * sum`;o===.5?c=`inversesqrt(${u})`:o===1?c=`1.0/(${u})`:c=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zq{constructor(e,t,s,r,o){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;this.outputShape=e;let c;const u=`float(${s}) + float(${r}) * sum`;o===.5?c=`inversesqrt(${u})`:o===1?c=`1.0/(${u})`:c=`exp(log(${u}) * float(-${o}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vq=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{depthRadius:o,bias:a,alpha:i,beta:c}=s,u=H().getBool("WEBGL_PACK_NORMALIZATION")?new zq(r.shape,o,a,i,c):new Bq(r.shape,o,a,i,c);return t.runWebGLProgram(u,[r],r.dtype)},Wq={kernelName:Dd,backendName:"webgl",kernelFunc:Vq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Uq{constructor(e,t,s,r,o){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=r,this.beta=o,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${r}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${r})
                * float(${o})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${o});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Gq=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r,y:o,dy:a}=e,{depthRadius:i,bias:c,alpha:u,beta:l}=s,d=new Uq(r.shape,i,c,u,l);return t.runWebGLProgram(d,[r,o,a],r.dtype)},Hq={kernelName:Ff,backendName:"webgl",kernelFunc:Gq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jq(n,e,t,s){const r=L(e),a=L(n.shape)/r,i=le({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),c=Jo(i,n.dtype,"max",s),u=le({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(c),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reductionIndices:o,keepDims:a}=s,i=r.shape.length,c=Re(o,r.shape);let u=c;const l=pt(u,i),d=l!=null,h=t.shouldExecuteOnCPU([r]);let p=r;if(d){if(h){const y=t.texData.get(p.dataId).values,w=new Array(i);for(let $=0;$<w.length;$++)w[$]=r.shape[l[$]];const I=Gg(y,r.shape,r.dtype,l,w);p=t.makeTensorInfo(w,r.dtype);const k=t.texData.get(p.dataId);k.values=I}else p=_h(r,l,t);u=ot(u.length,i)}ht("max",u,i);const[f,m]=bt(p.shape,u);let g=f;a&&(g=et(f,c));let b;if(h){const y=t.texData.get(p.dataId).values,w=aU(y,L(m),g,r.dtype);b=t.makeTensorInfo(g,r.dtype);const I=t.texData.get(b.dataId);I.values=w}else b=jq(p,m,g,t);return d&&t.disposeIntermediateTensorInfo(p),b}const qq={kernelName:ii,backendName:"webgl",kernelFunc:z$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xq=Hg+`
  return max(a, b);
`,Kq=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+nu+`
  return result;
`,Yq=en({opSnippet:Xq,packedOpSnippet:Kq,cpuKernelImpl:iU}),Zq={kernelName:ci,backendName:"webgl",kernelFunc:Yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jq(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e;eu(r,"maxPool");const{filterSize:o,strides:a,pad:i,dimRoundingMode:c}=s,u=1;v(cn(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const l=zn(r.shape,o,a,u,i,c);if(l.filterWidth===1&&l.filterHeight===1&&Ke(l.inShape,l.outShape))return Pn({inputs:{x:r},backend:t});const d=new _c(l,"max",!1);return t.runWebGLProgram(d,[r],r.dtype)}const Qq={kernelName:li,backendName:"webgl",kernelFunc:Jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{filterSize:o,strides:a,pad:i,dataFormat:c,dimRoundingMode:u}=s,l=[1,1,1],d=gr(r.shape,o,a,l,i,u,c),h=new qg(d,"max",!1);return t.runWebGLProgram(h,[r],r.dtype)}const t5={kernelName:Fd,backendName:"webgl",kernelFunc:e5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class n5{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,r=e.dilationHeight,o=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=o-1-e.padInfo.top,c=a-1-e.padInfo.left,u=o*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${o};
          wR += ${r}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class s5{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,r=e.strideWidth,o=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,c=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,d=c-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,f=c*u*l-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${o}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${r}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r5(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o}=e,a=o,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=s,d=[1,1,1],h=gr(a.shape,i,c,d,u,l),p=new qg(h,"max",!0),f=t.runWebGLProgram(p,[a],a.dtype),m=new s5(h),g=t.runWebGLProgram(m,[r,f],a.dtype);return t.disposeIntermediateTensorInfo(f),g}const o5={kernelName:Mf,backendName:"webgl",kernelFunc:r5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(n){const{inputs:e,backend:t,attrs:s}=n,{dy:r,input:o,output:a}=e,i=o;eu([o,a],"maxPoolGrad");const{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=s,h=zn(i.shape,c,u,1,l,d),p=!0,f=new _c(h,"max",p),m=t.runWebGLProgram(f,[i],i.dtype),g=new n5(h),b=t.runWebGLProgram(g,[r,m],i.dtype);return t.disposeIntermediateTensorInfo(m),b}const i5={kernelName:Of,backendName:"webgl",kernelFunc:a5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(n,e,t,s){let r=new _c(t,"max",!1);const o=s.runWebGLProgram(r,[n],"float32");r=new _c(t,"max",!0,!0,e);const a=s.runWebGLProgram(r,[n],"float32");return[o,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l5={kernelName:o0,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:r,strides:o,pad:a,includeBatchInIndex:i}=e,c=t;v(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];v(cn(o,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${o} and dilations '${u}'`);const l=zn(s.shape,r,o,u,a),[d,h]=c5(s,i,l,c);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(n,e,t,s){const r=L(e),a=L(n.shape)/r,i=le({inputs:{x:n},attrs:{shape:[a,r]},backend:s}),c=Jo(i,"float32","mean",s),u=le({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(c),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d5={kernelName:ui,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:r,axis:o}=e,a=t,i=s.shape.length,c=Re(o,s.shape);let u=c;const l=pt(u,i),d=l!=null,h=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(d){if(h){const w=a.texData.get(f.dataId).values,I=new Array(i);for(let C=0;C<I.length;C++)I[C]=s.shape[l[C]];const k=Gg(w,s.shape,s.dtype,l,I);f=a.makeTensorInfo(I,s.dtype);const $=a.texData.get(f.dataId);$.values=k}else f=_h(s,l,a);p.push(f),u=ot(u.length,i)}ht("sum",u,i);const[m,g]=bt(f.shape,u);let b=m;r&&(b=et(m,c));const x=u5(f,g,b,a);for(const y of p)a.disposeIntermediateTensorInfo(y);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=Re(o,r.shape);let u=c;const l=pt(u,i);let d=r;l!=null&&(d=bn({inputs:{x:r},backend:t,attrs:{perm:l}}),u=ot(u.length,r.shape.length)),ht("min",u,i);const[h,p]=bt(d.shape,u),f=L(p),m=le({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Jo(m,m.dtype,"min",t);let b;if(a){const x=et(h,c);b=le({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=le({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(d),b}const p5={kernelName:di,backendName:"webgl",kernelFunc:h5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f5=Hg+`
  return min(a, b);
`,m5=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+nu+`
  return result;
`,g5=en({opSnippet:f5,packedOpSnippet:m5,cpuKernelImpl:cU}),b5={kernelName:hi,backendName:"webgl",kernelFunc:g5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class x5{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((l,d)=>l[0]+e[d]+l[1]);const r=e.length,o=dt(r),a=t.map(l=>l[0]).join(","),i=t.map((l,d)=>l[0]+e[d]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u=s==="reflect"?0:1;if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        for (int i = 0; i < ${r}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${o} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y5{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const r=e.length,o=dt(r),a=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),c=pn("rc",r),u=pn("source",r),l=`${c[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${u.slice(-2).join()})`,h=s==="reflect"?0:1;let p="";if(r===1){const f=`
        ${o} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${c[r-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
      `}else{const f=`
        ${o} source = rc;
        ${o} lt = ${o}(lessThan(source, start));
        ${o} gte = ${o}(greaterThanEqual(source, end));
        ${o} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${o} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${c[r-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
        rc = outputLoc;
        ${c[r-2]} += 1;
        if(${c[r-2]} < ${this.outputShape[r-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${d});
          ${c[r-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w5=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:r,mode:o}=t,a=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new y5(s.shape,r,o):new x5(s.shape,r,o);return e.runWebGLProgram(a,[s],s.dtype)},I5={kernelName:pi,backendName:"webgl",kernelFunc:w5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5=`if (b == 0.0) return NAN;
  return mod(a, b);`,$5=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+nu+`
  return result;
`,v5=en({opSnippet:k5,packedOpSnippet:$5}),C5={kernelName:pl,backendName:"webgl",kernelFunc:v5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S5{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N5=`
if (a == b) {
  return 1.0;
};
return a / b;`,T5=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,V$=en({opSnippet:N5,packedOpSnippet:T5,checkOutOfBounds:!0}),E5={kernelName:Ya,backendName:"webgl",kernelFunc:V$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iy="return a - b;",W$=en({opSnippet:iy,packedOpSnippet:iy,supportsComplex:!0,cpuKernelImpl:TU}),_5={kernelName:Fi,backendName:"webgl",kernelFunc:W$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U$(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{dim:o}=s,a=Re([o],r.shape),i=z$({inputs:{x:r},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),c=et(i.shape,a),u=le({inputs:{x:i},backend:t,attrs:{shape:c}}),l=W$({inputs:{a:r,b:u},backend:t}),d=L$({inputs:{x:l},backend:t}),h=Rh({inputs:{x:d},backend:t,attrs:{axis:a,keepDims:!1}}),p=le({inputs:{x:h},backend:t,attrs:{shape:c}}),f=V$({inputs:{a:d,b:p},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}const R5={kernelName:Ai,backendName:"webgl",kernelFunc:U$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A5(n){const{inputs:e,backend:t,attrs:s}=n,{logits:r}=e,{numSamples:o,seed:a,normalized:i}=s,c=i?r:U$({inputs:{logits:r},backend:t,attrs:{dim:r.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new S5(u,l,o),h=[[a]],p=t.runWebGLProgram(d,[c],"int32",h);return i||t.disposeIntermediateTensorInfo(c),p}const D5={kernelName:a0,backendName:"webgl",kernelFunc:A5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F5=bs+`
  return -x;
`,O5=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function M5(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const o=t.texData.get(s.dataId),[a,i]=uU(o.values,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,a)}let r;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?r=new $r(s.shape,O5):r=new Vs(s.shape,F5),t.runWebGLProgram(r,[s],s.dtype)}const L5={kernelName:fl,backendName:"webgl",kernelFunc:M5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const P5=$m;function B5(n){jn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c}=s,u=t.readSync(r.dataId),l=t.readSync(o.dataId),{selectedIndices:d}=P5(u,l,a,i,c);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const z5={kernelName:gl,backendName:"webgl",kernelFunc:B5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V5=vm;function W5(n){jn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=s,l=t.readSync(r.dataId),d=t.readSync(o.dataId),{selectedIndices:h,validOutputs:p}=V5(l,d,a,i,c,u);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const U5={kernelName:bl,backendName:"webgl",kernelFunc:W5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const G5=Cm;function H5(n){jn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:r,scores:o}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=s,l=t.readSync(r.dataId),d=t.readSync(o.dataId),h=a,p=i,f=c,m=u,{selectedIndices:g,selectedScores:b}=G5(l,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const j5={kernelName:xl,backendName:"webgl",kernelFunc:H5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q5{constructor(e,t,s,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${r}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X5=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:a,onValue:i,offValue:c}=s,u=L(r.shape),l=new q5(u,a,i,c),d=le({inputs:{x:r},backend:t,attrs:{shape:[u]}}),h=t.runWebGLProgram(l,[d],o);t.disposeIntermediateTensorInfo(d);const p=[...r.shape,a],f=le({inputs:{x:h},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(h),f},K5={kernelName:mi,backendName:"webgl",kernelFunc:X5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wd(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const r=ru({inputs:{input:s},backend:t}),o=wd({inputs:{x:r},backend:t}),a=Ah({inputs:{input:s},backend:t}),i=wd({inputs:{x:a},backend:t}),c=Kr({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return ou({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const Y5={kernelName:Ol,backendName:"webgl",kernelFunc:wd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G$(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const r=ru({inputs:{input:s},backend:t}),o=G$({inputs:{x:r},backend:t}),a=Ah({inputs:{input:s},backend:t}),i=wd({inputs:{x:a},backend:t}),c=Kr({inputs:{real:o,imag:i},backend:t});return t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return ou({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const Z5={kernelName:yl,backendName:"webgl",kernelFunc:G$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J5(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Yp({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{Qn(o,l.shape,"All tensors passed to stack must have matching shapes"),v(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],c=e.map(l=>{const d=Yp({inputs:{input:l},backend:t,attrs:{dim:r}});return i.push(d),d}),u=E$({inputs:c,backend:t,attrs:{axis:r}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),u}const Q5={kernelName:wl,backendName:"webgl",kernelFunc:J5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class eX{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,l)=>u[0]+e[l]+u[1]);const r=e.length,o=dt(r),a=t.map(u=>u[0]).join(","),i=t.map((u,l)=>u[0]+e[l]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);if(r===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${o} start = ${o}(${a});
      ${o} end = ${o}(${i});

      void main() {
        ${o} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${o} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tX{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const r=e.length,o=dt(r),a=t.map(m=>m[0]).join(","),i=t.map((m,g)=>m[0]+e[g]).join(","),c=pn("rc",r),u=pn("source",r),l=`${c[r-1]} < ${this.outputShape[r-1]}`,d=r===1?"source":`vec2(${u.slice(-2).join()})`,h=[`${o} rc = outputLoc;`,`${c[r-1]} += 1;
       if(${l}) {
      `,r===1?"":`}
       rc = outputLoc;
       ${c[r-2]} += 1;
       if(${c[r-2]} < ${this.outputShape[r-2]}) {`,r===1?"":`  ${c[r-1]} += 1;
         if(${l}) {`],p=r===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=r===1?2:4;m<g;m++)f+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${o} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${d});
        }
      `;f+=r===1?"} ":"}}",this.userCode=`
      const ${o} start = ${o}(${a});
      const ${o} end = ${o}(${i});

      void main() {
        ${o} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H$=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{paddings:o,constantValue:a}=s;if(L(r.shape)===0){const u=o.map((l,d)=>l[0]+r.shape[d]+l[1]);return ou({backend:t,attrs:{shape:u,value:a,dtype:r.dtype}})}const i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new tX(r.shape,o,a):new eX(r.shape,o,a),c=[[a]];return t.runWebGLProgram(i,[r],r.dtype,c)},nX={kernelName:gi,backendName:"webgl",kernelFunc:H$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sX=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,rX=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+nu+`
  return result;
`,oX=en({opSnippet:sX,packedOpSnippet:rX}),aX={kernelName:bi,backendName:"webgl",kernelFunc:oX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,keepDims:a}=s,i=r.shape.length,c=[],u=Re(o,r.shape);let l=u;const d=pt(l,i);let h=r;d!=null&&(h=bn({inputs:{x:r},backend:t,attrs:{perm:d}}),l=ot(l.length,i),c.push(h)),ht("prod",l,i);let p;if(t.shouldExecuteOnCPU([h])){const f=t.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:b}=hU(h.shape,h.dtype,f,l);p=t.makeTensorInfo(g,b,m)}else{const[f,m]=bt(h.shape,l),g=L(m),b=le({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}}),x=Uf(r.dtype),y=Jo(b,x,"prod",t);p=le({inputs:{x:y},backend:t,attrs:{shape:f}}),c.push(b),c.push(y)}if(a){c.push(p);const f=et(p.shape,u);p=le({inputs:{x:p},backend:t,attrs:{shape:f}})}return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const cX={kernelName:yi,backendName:"webgl",kernelFunc:iX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lX(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:r,paramsDenseValues:o,indices:a}=e,{outputRaggedRank:i}=s,c=r.map(b=>t.readSync(b.dataId)),u=r.map(b=>b.shape),l=t.readSync(o.dataId),d=t.readSync(a.dataId),[h,p,f]=pU(c,u,l,o.shape,o.dtype,d,a.shape,i),m=h.map(b=>t.makeTensorInfo([b.length],"int32",b)),g=t.makeTensorInfo(f,o.dtype,p);return m.concat([g])}const uX={kernelName:i0,backendName:"webgl",kernelFunc:lX};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dX(n){const{inputs:e,backend:t}=n,{starts:s,limits:r,deltas:o}=e,a=t.readSync(s.dataId),i=t.readSync(r.dataId),c=t.readSync(o.dataId),[u,l]=fU(a,s.shape,s.dtype,i,r.shape,c,o.shape),d=t.makeTensorInfo([u.length],"int32",u),h=t.makeTensorInfo([l.length],s.dtype,l);return[d,h]}const hX={kernelName:c0,backendName:"webgl",kernelFunc:dX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pX(n){const{inputs:e,backend:t,attrs:s}=n,{shape:r,values:o,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=s,u=t.readSync(r.dataId),l=t.readSync(o.dataId),d=t.readSync(a.dataId),h=i.map(g=>t.readSync(g.dataId)),p=i.map(g=>g.shape),[f,m]=mU(u,r.shape,l,o.shape,o.dtype,d,a.shape,h,p,c);return t.makeTensorInfo(f,o.dtype,m)}const fX={kernelName:l0,backendName:"webgl",kernelFunc:pX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j$=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:a}=t,i=gU(s,r,o,a);return e.makeTensorInfo([i.length],a,i)},mX={kernelName:Od,backendName:"webgl",kernelFunc:j$};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gX="return 1.0 / x;",bX=He({opSnippet:gX}),xX={kernelName:wi,backendName:"webgl",kernelFunc:bX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yX=bs+`
  return (x < 0.0) ? 0.0 : x;
`,wX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,IX=He({opSnippet:yX,packedOpSnippet:wX}),kX={kernelName:Ii,backendName:"webgl",kernelFunc:IX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $X=bs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,vX=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,CX=He({opSnippet:$X,packedOpSnippet:vX}),SX={kernelName:vi,backendName:"webgl",kernelFunc:CX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class NX{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,c,u]=e;this.outputShape=[a,t,s,u];const l=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let h;o?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TX{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,c,u]=e;this.outputShape=[a,t,s,u];const l=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s];let h;o?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EX(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[c,u]=i,l=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new TX(r.shape,c,u,o,a):new NX(r.shape,c,u,o,a);return t.runWebGLProgram(l,[r],"float32")}const _X={kernelName:$i,backendName:"webgl",kernelFunc:EX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class RX{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,a,i]=e,c=[s&&a>1?r-1:r,s&&i>1?o-1:o],u=[s&&a>1?a-1:a,s&&i>1?i-1:i],l=c[0]/u[0],d=c[1]/u[1],h=1/l,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${o-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AX(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s,i=new RX(o.shape,r.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const DX={kernelName:Bf,backendName:"webgl",kernelFunc:AX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class FX{constructor(e,t,s,r,o){this.variableNames=["A"],this.outputShape=[];const[a,i,c,u]=e;this.outputShape=[a,t,s,u];const l=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;o?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OX{constructor(e,t,s,r,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,c,u]=e;this.outputShape=[a,t,s,u];const l=[r&&t>1?i-1:i,r&&s>1?c-1:c],d=[r&&t>1?t-1:t,r&&s>1?s-1:s],h=r?"0.5":"0.0";let p;o?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MX(n){const{inputs:e,backend:t,attrs:s}=n,{images:r}=e,{alignCorners:o,halfPixelCenters:a,size:i}=s,[c,u]=i,l=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new OX(r.shape,c,u,o,a):new FX(r.shape,c,u,o,a);return t.runWebGLProgram(l,[r],r.dtype)}const LX={kernelName:ki,backendName:"webgl",kernelFunc:MX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class PX{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,o]=t,[,a,i]=e,c=[s&&a>1?r-1:r,s&&i>1?o-1:o],u=[s&&a>1?a-1:a,s&&i>1?i-1:i],l=c[0]/u[0],d=c[1]/u[1],h=1/l,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BX(n){const{inputs:e,backend:t,attrs:s}=n,{images:r,dy:o}=e,{alignCorners:a}=s,i=new PX(o.shape,r.shape,a);return t.runWebGLProgram(i,[o],o.dtype)}const zX={kernelName:Pf,backendName:"webgl",kernelFunc:BX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class VX{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const r=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,o=e.map((i,c)=>r(c)).join(","),a=dt(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${o}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WX{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const r=pn("rc",s),o=`${r[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${r[s-2]} + 1 < ${this.outputShape[s-2]}`,i=dt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${o}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(r.slice())};
          if(${o}){
            result.g = ${u(r.slice())};
          }
          if(${a}) {
            result.b = ${l(r.slice())};
            if(${o}) {
              result.a = ${d(r.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(f){return h(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",h(f)}function l(f){return f[s-2]="("+f[s-2]+" + 1)",h(f)}function d(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",h(f)}function h(f){const m=e.map((x,y)=>p(y,f)),g=m.join(","),b=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${b}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UX(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,a=r.shape.length,i=Re(o,r.shape);if(a===0)return Pn({inputs:{x:r},backend:t});const c=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new WX(r.shape,i):new VX(r.shape,i);return t.runWebGLProgram(c,[r],r.dtype)}const GX={kernelName:Ci,backendName:"webgl",kernelFunc:UX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HX{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],r=e[2];this.outputShape=e;let o="";typeof t=="number"?o=`float outputValue = ${t.toFixed(2)};`:o=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${o}
          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jX={kernelName:Ml,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:r,fillValue:o,center:a}=e,i=t,c=new HX(s.shape,o),[u,l]=lh(a,s.shape[1],s.shape[2]),d=[[u,l,Math.sin(r),Math.cos(r)]];return i.runWebGLProgram(c,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qX=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,XX=He({opSnippet:qX}),KX={kernelName:Si,backendName:"webgl",kernelFunc:XX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YX="return inversesqrt(x);",ZX=He({opSnippet:YX,cpuKernelImpl:bU}),JX={kernelName:Ni,backendName:"webgl",kernelFunc:ZX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q${constructor(e,t,s,r,o,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=dt(o.length),u=dt(a.length);let l="";s===1?l="i":s===2&&(l="i, j");const d=`getIndices(${l})`;let h="";r===1?h="i":r===2&&(h="i, coords[1]");const p=`getUpdates(${h})`,f=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${o});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QX(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r,updates:o}=e,{shape:a}=s,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=Li(o,r,a),h=[d/u,u];if(d===0)return t.makeTensorInfo(a,r.dtype);const p=le({inputs:{x:r},backend:t,attrs:{shape:[c,i]}}),f=le({inputs:{x:o},backend:t,attrs:{shape:[c,u]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new q$(c,i,p.shape.length,f.shape.length,l,h),b=t.runWebGLProgram(g,[f,p,m],f.dtype),x=le({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(m),x}const eK={kernelName:Md,backendName:"webgl",kernelFunc:QX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class tK{constructor(e,t,s,r){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const o="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=H().getNumber("WEBGL_VERSION")===2?o:a,c=r==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${c} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nK(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:r,values:o}=e,{side:a}=s,i=new tK(r.shape[0],r.shape[1],o.shape[1],a),c=[[r.shape[1]]];return t.runWebGLProgram(i,[r,o],"int32",c)}const sK={kernelName:u0,backendName:"webgl",kernelFunc:nK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class rK{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let r,o;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)o="resRC",r="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],u=[];for(let l=0;l<t.length;l++)u.push(`${i[l]}`),l<e&&c.push(`${i[l]}`);r=c.join(),o=u.join()}const a=dt(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${r});
        if (cVal >= 1.0) {
          setOutput(getA(${o}));
        } else {
          setOutput(getB(${o}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,a=new rK(s.shape.length,r.shape,r.shape.length);return t.runWebGLProgram(a,[s,r,o],On(r.dtype,o.dtype))}const aK={kernelName:kl,backendName:"webgl",kernelFunc:oK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iK=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${hh};
  float scale = ${ph};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,cK=He({opSnippet:iK}),lK={kernelName:$l,backendName:"webgl",kernelFunc:cK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uK=Ki+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,dK=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,hK=He({opSnippet:uK,packedOpSnippet:dK,cpuKernelImpl:yU}),pK={kernelName:Ei,backendName:"webgl",kernelFunc:hK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fK=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,mK=He({opSnippet:fK}),gK={kernelName:Sl,backendName:"webgl",kernelFunc:mK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bK=Ki+`
  return sin(x);
`,xK=He({opSnippet:bK}),yK={kernelName:Ti,backendName:"webgl",kernelFunc:xK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wK=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,IK=He({opSnippet:wK}),kK={kernelName:Cl,backendName:"webgl",kernelFunc:IK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $K=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,vK=He({opSnippet:$K}),CK={kernelName:Nl,backendName:"webgl",kernelFunc:vK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SK=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:a}=s;v(r.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=o.reduce((b,x)=>b*x),c=[[0,0]];c.push(...a);for(let b=1+o.length;b<r.shape.length;++b)c.push([0,0]);const u=[],l=H$({inputs:{x:r},backend:t,attrs:{paddings:c,constantValue:0}}),d=Ho(l.shape,o,i,!1),h=jo(d.length,o.length,!1),p=qo(l.shape,o,i,!1),f=le({inputs:{x:l},backend:t,attrs:{shape:d}}),m=bn({inputs:{x:f},backend:t,attrs:{perm:h}}),g=le({inputs:{x:m},backend:t,attrs:{shape:p}});return u.push(l),u.push(f),u.push(m),u.forEach(b=>t.disposeIntermediateTensorInfo(b)),g},NK={kernelName:Tl,backendName:"webgl",kernelFunc:SK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TK(n){const{inputs:e,backend:t}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=e;if(o.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${o.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(r.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${r.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.readSync(s.dataId),c=t.readSync(r.dataId),u=t.readSync(o.dataId),l=t.readSync(a.dataId)[0],[d,h,p,f,m]=IU(i,s.shape,s.dtype,c,r.dtype,u,l);return[t.makeTensorInfo(h,s.dtype,d),t.makeTensorInfo([h[0]],r.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const EK={kernelName:Ld,backendName:"webgl",kernelFunc:TK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:r,newShape:o}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=Array.from(t.readSync(r.dataId)),i=t.readSync(s.dataId),c=Array.from(t.readSync(o.dataId)),[u,l,d]=kU(i,s.shape,s.dtype,a,c);return[t.makeTensorInfo(l,s.dtype,u),t.makeTensorInfo([d.length],o.dtype,new Int32Array(d))]}const RK={kernelName:_l,backendName:"webgl",kernelFunc:_K};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AK(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${o.shape}`);const a=t.readSync(s.dataId),i=t.readSync(r.dataId),c=t.readSync(o.dataId),[u,l]=g$(a,s.shape,s.dtype,i,c,!0);return t.makeTensorInfo(l,s.dtype,u)}const DK={kernelName:Pd,backendName:"webgl",kernelFunc:AK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FK(n){const{inputs:e,backend:t}=n,{data:s,indices:r,segmentIds:o}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(r.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${r.shape}`);if(o.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${o.shape}`);const a=t.readSync(s.dataId),i=t.readSync(r.dataId),c=t.readSync(o.dataId),[u,l]=g$(a,s.shape,s.dtype,i,c);return t.makeTensorInfo(l,s.dtype,u)}const OK={kernelName:Bd,backendName:"webgl",kernelFunc:FK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:r,sparseValues:o,defaultValue:a}=e,{outputShape:i}=s,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=Li(o,r,i),p=!1;if(o.dtype==="string"){const b=t.bufferSync(r),x=t.bufferSync(o),y=_r(t.readSync(a.dataId)[0]),w=xU(b,x,i,h,l,u,c,d,y,p);return t.makeTensorInfo(i,w.dtype,w.values)}const f=new q$(u,c,r.shape.length,o.shape.length,d,[h,1],p),m=t.runWebGLProgram(f,[o,r,a],o.dtype),g=le({inputs:{x:m},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(m),g}const LK={kernelName:d0,backendName:"webgl",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:a}=s,i=Re(a,r.shape)[0],c=fh(r,o,i),u=r.shape.length,l=new Array(u).fill(0),d=r.shape.slice();return c.map(h=>{const p=[...d];p[i]=h;const f=Yi({inputs:{x:r},backend:t,attrs:{begin:l,size:p}});return l[i]+=h,f})}const BK={kernelName:El,backendName:"webgl",kernelFunc:PK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cy="return sqrt(x);",zK=He({opSnippet:cy,packedOpSnippet:cy,cpuKernelImpl:$U}),VK={kernelName:_i,backendName:"webgl",kernelFunc:zK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WK="return x * x;",UK=He({opSnippet:WK}),GK={kernelName:zd,backendName:"webgl",kernelFunc:UK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ly="return (a - b) * (a - b);",HK=en({opSnippet:ly,packedOpSnippet:ly}),jK={kernelName:Di,backendName:"webgl",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qK({inputs:n,attrs:e,backend:t}){const{x:s}=n,r=bs+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,o=new Vs(s.shape,r);return t.runWebGLProgram(o,[s],s.dtype)}const XK={kernelName:zo,backendName:"webgl",kernelFunc:qK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KK{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const r=s.length,o=dt(s.length),a=dt(s.length);let i="";if(r===1)i="coords * strides + begin";else{let c=0;i=s.map((u,l)=>(c++,s.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${c-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${o} begin = ${o}(${e});
      ${o} strides = ${o}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YK(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{begin:o,end:a,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:w}=eh(r.shape,o,a,i,c,u,l,d,h);let I;if(m)I=le({inputs:{x:r},backend:t,attrs:{shape:f}});else if(g||b){v(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const $=Zd(x,y,w),C=Yi({inputs:{x:r},backend:t,attrs:{begin:x,size:$}});I=le({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(C)}else if(t.shouldExecuteOnCPU([r])){const C=t.readSync(r.dataId),N=Me(r.shape,r.dtype,C),T=vU(p,N,w,x);I=t.makeTensorInfo(f,r.dtype,T.values)}else{const C=new KK(x,w,p);I=t.runWebGLProgram(C,[r],r.dtype)}const k=le({inputs:{x:I},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(I),k}const ZK={kernelName:Rl,backendName:"webgl",kernelFunc:YK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(n){const{inputs:e,backend:t,attrs:s}=n,{separator:r,nGramWidths:o,leftPad:a,rightPad:i,padWidth:c,preserveShortSequences:u}=s,{data:l,dataSplits:d}=e,h=t.readSync(l.dataId),p=t.readSync(d.dataId),[f,m]=CU(h,p,r,o,a,i,c,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(d.shape,"int32",m)]}const QK={kernelName:Vd,backendName:"webgl",kernelFunc:JK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:r}=s,{input:o,delimiter:a}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(o.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${o.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.readSync(o.dataId),c=t.readSync(a.dataId)[0],[u,l,d]=SU(i,c,r),h=l.length;return[t.makeTensorInfo([h,2],"int32",u),t.makeTensorInfo([h],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const t8={kernelName:Wd,backendName:"webgl",kernelFunc:e8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:r}=s,{input:o}=e;if(o.dtype!=="string")throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(o.dataId),i=NU(a,r);return t.makeTensorInfo(o.shape,"int32",i)}const s8={kernelName:Ud,backendName:"webgl",kernelFunc:n8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r8="return tan(x);",o8=He({opSnippet:r8}),a8={kernelName:Oi,backendName:"webgl",kernelFunc:o8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const i8=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,c8=He({opSnippet:i8}),l8={kernelName:Mi,backendName:"webgl",kernelFunc:c8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u8{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*t[a];this.outputShape=s,this.rank=s.length;const r=dt(this.rank),o=d8(e);this.userCode=`
      void main() {
        ${r} resRC = getOutputCoords();
        setOutput(getA(${o}));
      }
    `}}function d8(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let r=0;r<n.length;r++)s.push(`imod(${t[r]}, ${n[r]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X$(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{reps:o}=s;if(r.dtype==="string"||r.shape.length>5){const c=t.readSync(r.dataId),u=r.dtype==="string"?c.map(h=>_r(h)):c,l=Me(r.shape,r.dtype,u),d=EU(l,o);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new u8(r.shape,o);return t.runWebGLProgram(a,[r],r.dtype)}const h8={kernelName:Bo,backendName:"webgl",kernelFunc:X$};class p8{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class f8{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ro(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function uy(n){let e=1;for(;e<n;)e*=2;return e}function m8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{k:o,sorted:a}=s,i=H().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=H().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,l=u[u.length-1];if(t.shouldExecuteOnCPU([r])||l<i||o>c){const T=t.readSync(r.dataId),[_,O]=_U(T,u,r.dtype,o,a);return[t.makeTensorInfo(_.shape,_.dtype,_.values),t.makeTensorInfo(O.shape,O.dtype,O.values)]}if(o===0)return u[u.length-1]=0,[t.makeTensorInfo(u,r.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(l===1)return[r,ou({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const d=t.texData.get(r.dataId),h=d!==null&&d.isPacked,p=h?t.unpackTensor(r):r,m=L(u)/l,g=le({inputs:{x:p},attrs:{shape:[m,l]},backend:t});h&&ro(t,p);const b=uy(o),x=uy(l);let y=null;const w=()=>y===null?[g,g]:[g,y],I=(T,_,O)=>{const P=w(),V=new p8(O),W=[[l],[y===null?1:0],[Number.NEGATIVE_INFINITY],[T],[_]],q=y;y=t.runWebGLProgram(V,P,"int32",W),ro(t,q)};for(let T=1;T<b;T*=2){const _=T*2;for(let O=T;O>=1;O/=2)I(_,O,[m,x])}for(let T=x;T>b;T/=2){const _=w(),O=new f8([m,T/2]),V=[[l],[y===null?1:0],[b]],B=y;y=t.runWebGLProgram(O,_,"int32",V),ro(t,B);const W=b/2,q=W*2;for(let z=W;z>=1;z/=2)I(q,z,y.shape)}let k=y;y=Yi({inputs:{x:y},backend:t,attrs:{begin:0,size:[m,o]}}),ro(t,k);let $=B$({inputs:{x:g,indices:y},backend:t,attrs:{axis:1,batchDims:1}});ro(t,g);const C=u.slice(0,-1);C.push(o),k=y,y=le({inputs:{x:y},attrs:{shape:C},backend:t}),ro(t,k);const N=$;return $=le({inputs:{x:$},attrs:{shape:C},backend:t}),ro(t,N),[$,y]}const g8={kernelName:Al,backendName:"webgl",kernelFunc:m8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class b8{constructor(e,t,s,r,o,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=s==="nearest"?1:2;let c;switch(r){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${o});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${o});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function x8(n){const{inputs:e,backend:t,attrs:s}=n,{image:r,transforms:o}=e,{interpolation:a,fillMode:i,fillValue:c,outputShape:u}=s,[l,d,h,p]=r.shape,[f,m]=u??[d,h],g=[l,f,m,p],b=new b8(d,h,a,i,c,g);return t.runWebGLProgram(b,[r,o],"float32")}const y8={kernelName:Dl,backendName:"webgl",kernelFunc:x8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w8(n){const{inputs:e,attrs:t,backend:s}=n,{axis:r}=t,{x:o}=e;eu(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(o.dataId),{outputValues:i,outputShape:c,indices:u}=RU(a,r,o.shape,o.dtype);return[s.makeTensorInfo(c,o.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}const I8={kernelName:zf,backendName:"webgl",kernelFunc:w8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k8(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r,i=a.shape.length,c=r.shape[o],u=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==o&&(u[l++]=a.shape[m]);const d=[],h=new Array(i).fill(0),p=a.shape.slice();p[o]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[o]=m;const g=Yi({inputs:{x:a},backend:t,attrs:{begin:h,size:p}}),b=le({inputs:{x:g},backend:t,attrs:{shape:u}});f[m]=b,d.push(g)}return d.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const $8={kernelName:Fl,backendName:"webgl",kernelFunc:k8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v8{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,r=e.batchSize,o=e.inSize,a=e.numSegments,i=a*Math.ceil(o/s);this.outputShape=[r,i];const c="0.0",u="sumValue",l=Math.floor(s/4)*4,d=s%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";o%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return initializationValue;
        }
      `);let f="";o%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${o}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C8(n){const{inputs:e,backend:t,attrs:s}=n,{x:r,segmentIds:o}=e,{numSegments:a}=s,i=r.shape.length,c=[];let u=0;const l=pt([u],i);let d=r;l!=null&&(d=bn({inputs:{x:r},backend:t,attrs:{perm:l}}),c.push(d),u=ot(1,i)[0]);const h=Uw(d.shape,u,a),p=L([d.shape[u]]),f=le({inputs:{x:d},backend:t,attrs:{shape:[-1,p]}});c.push(f);const m=Uf(r.dtype),g=(w,I,k,$,C)=>{const N=w.shape[0],T=w.shape[1],_=Ww(T,C),O={windowSize:_,inSize:T,batchSize:N,numSegments:C},P=new v8(O,I),V=t.compileAndRun(P,[w,k],$);if(c.push(V),V.shape[1]===C)return V;const B=j$({backend:t,attrs:{start:0,stop:C,step:1,dtype:"float32"}}),W=X$({inputs:{x:B},backend:t,attrs:{reps:[T/_]}});return c.push(B),c.push(W),g(V,I,W,$,C)},b=g(f,"unsortedSegmentSum",o,m,a),x=le({inputs:{x:b},backend:t,attrs:{shape:h}});let y=x;if(l!=null){c.push(x);const w=er(l);y=bn({inputs:{x:y},backend:t,attrs:{perm:w}})}return c.forEach(w=>t.disposeIntermediateTensorInfo(w)),y}const S8={kernelName:Gd,backendName:"webgl",kernelFunc:C8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N8=[kG,vG,NG,_G,AG,OG,LG,BG,UG,HG,XG,ZG,eH,rH,iH,lH,dH,mH,bH,yH,$H,_H,AH,FH,zH,WH,jH,oG,KH,e6,r6,u6,h6,f6,g6,x6,I6,v6,N6,E6,R6,D6,M6,P6,W6,G6,q6,Y6,J6,nj,aj,uj,pj,gj,bj,yj,Ij,$j,Cj,Nj,Rj,Fj,Lj,Bj,Wj,Hj,Kj,Qj,rG,tq,JH,rq,iq,uq,iG,fq,xq,wq,vq,Nq,Rq,Fq,Pq,Wq,Hq,qq,Zq,Qq,t5,o5,i5,l5,d5,p5,b5,I5,C5,D5,uG,L5,z5,U5,j5,MH,K5,Z5,Q5,nX,aX,lG,cX,uX,hX,fX,mX,LH,E5,xX,kX,SX,hG,_X,DX,LX,zX,GX,jX,KX,JX,eK,sK,aK,lK,pK,gK,yK,kK,TH,R5,CK,NK,EK,RK,DK,OK,LK,BK,VK,GK,jK,XK,ZK,QK,t8,s8,_5,yG,a8,l8,h8,g8,y8,wG,I8,$8,S8,Y5];for(const n of N8)Vf(n);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ct;(function(n){n[n.float32=0]="float32",n[n.int32=1]="int32",n[n.bool=2]="bool",n[n.string=3]="string",n[n.complex64=4]="complex64"})(Ct||(Ct={}));var Ac;(function(n){n[n.linear=0]="linear",n[n.relu=1]="relu",n[n.relu6=2]="relu6",n[n.prelu=3]="prelu",n[n.leakyrelu=4]="leakyrelu",n[n.sigmoid=5]="sigmoid",n[n.elu=6]="elu"})(Ac||(Ac={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let K$;function T8(n){K$=n.wasm.cwrap(ka,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function E8(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o,bias:a,preluActivationWeights:i}=e;if(r.dtype!=="float32"||o.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=s,h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(o.dataId).id;let f=0;if(a!=null){const C=t.dataIdMap.get(a.dataId);if(C.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${C.shape.length}.`);f=C.id}const m=i==null?0:t.dataIdMap.get(i.dataId).id,g=Ac[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);const b=c?r.shape[2]:r.shape[1],x=u?o.shape[1]:o.shape[2],y=Ee(r.shape.slice(0,-2),o.shape.slice(0,-2)),w=t.makeOutput([...y,b,x],r.dtype),I=t.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(r.shape).buffer),$=new Uint8Array(new Int32Array(o.shape).buffer);return K$(h,k,r.shape.length,p,$,o.shape.length,c,u,g,f,m,d||0,I),w}const _8={kernelName:ka,backendName:"wasm",setupFunc:T8,kernelFunc:E8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(n,e){let t;function s(o){t=o.wasm.cwrap(n,null,["number","number","number"])}function r(o){const{backend:a,inputs:{x:i}}=o,c=a.dataIdMap.get(i.dataId).id,u=a.makeOutput(i.shape,e||i.dtype),l=a.dataIdMap.get(u.dataId).id;return L(u.shape)===0||t(c,Ct[i.dtype],l),u}return{kernelName:n,backendName:"wasm",setupFunc:s,kernelFunc:r}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const R8=Ft(Mc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(n,e,t){let s;function r(a){s=a.wasm.cwrap(n,null,["number","array","number","number","array","number","number","number"])}function o(a){const{backend:i,inputs:c}=a,{a:u,b:l}=c,d=i.dataIdMap.get(u.dataId).id,h=i.dataIdMap.get(l.dataId).id,p=t??u.dtype,f=Ee(u.shape,l.shape),m=i.makeOutput(f,p);if(L(f)===0)return m;const g=new Uint8Array(new Int32Array(u.shape).buffer),b=new Uint8Array(new Int32Array(l.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return(()=>s(d,g,u.shape.length,h,b,l.shape.length,Ct[u.dtype],x))(),m}return{kernelName:n,backendName:"wasm",setupFunc:r,kernelFunc:o}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const A8=tn(Lo);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Y$;function D8(n){Y$=n.wasm.cwrap(Bc,null,["array","number","number","number"])}function F8(n){const{inputs:e,backend:t}=n,s=t.makeOutput(e[0].shape,e[0].dtype);if(L(s.shape)===0)return s;const r=e.map(i=>t.dataIdMap.get(i.dataId).id),o=new Uint8Array(new Int32Array(r).buffer),a=t.dataIdMap.get(s.dataId).id;return Y$(o,r.length,Ct[s.dtype],a),s}const O8={kernelName:Bc,backendName:"wasm",setupFunc:D8,kernelFunc:F8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dh(n){const{inputs:{x:e},backend:t}=n;if(e.dtype==="string")return Gf(t.readSync(e.dataId),e.shape,e.dtype);const s=t.makeOutput(e.shape,e.dtype),r=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(s).set(r),s}const M8={kernelName:si,backendName:"wasm",kernelFunc:Dh};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Z$;function L8(n){Z$=n.wasm.cwrap(vr,null,["number","array","number","number","number","array","number"])}function Lr(n){const{inputs:e,backend:t,attrs:s}=n,[r,o]=B8(e.x.shape,s.perm);let a=!0;for(let f=0;f<o.length;f++)o[f]!==f&&(a=!1);const i=P8(e.x.shape,s.perm),c={dataId:e.x.dataId,shape:r,dtype:e.x.dtype};if(a){const f=Dh({inputs:e,backend:t});return f.shape=i,f}const u=t.makeOutput(i,c.dtype),l=t.dataIdMap.get(c.dataId).id,d=t.dataIdMap.get(u.dataId).id,h=new Uint8Array(new Int32Array(o).buffer),p=new Uint8Array(new Int32Array(c.shape).buffer);return Z$(l,p,c.shape.length,Ct[c.dtype],d,h,o.length),u}function P8(n,e){const t=new Array(n.length);for(let s=0;s<t.length;s++)t[s]=n[e[s]];return t}function B8(n,e){const t=[],s=[];for(let r=0;r<n.length;++r)n[r]!==1&&t.push(n[r]),n[e[r]]!==1&&s.push(e[r]);for(let r=0;r<s.length;++r){let o=-1;for(let a=0;a<s.length;++a)s[a]>=r&&(o===-1||s[o]>s[a])&&(o=a);s[o]=r}return[t,s]}const z8={kernelName:vr,backendName:"wasm",kernelFunc:Lr,setupFunc:L8};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(n,e,t){const s=n.shape,r=n.shape.length,o=Re(e,s);let a=o;const i=pt(a,r);let c=null,u=!1;if(i!=null){const l=new Array(r);for(let p=0;p<l.length;p++)l[p]=s[i[p]];a=ot(a.length,r),c=Lr({inputs:{x:n},attrs:{perm:i},backend:t});const d=t.dataIdMap.get(n.dataId).id;t.dataIdMap.get(c.dataId).id!==d&&(u=!0)}return{transposed:c,originalAxes:o,axes:a,inputWasTransposed:u}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let J$;function V8(n){J$=n.wasm.cwrap(zc,null,["number, number, number"])}function W8(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=t;let c=e.dataIdMap.get(a.dataId).id,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Yr(a,r,e);if(p){const y=e.dataIdMap.get(l.dataId).id;u=l,c=y}const f=u.shape.length;ht("all",d,f);const[m,g]=bt(u.shape,d),b=L(g),x=e.makeOutput(m,a.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;J$(c,b,y)}if(p&&e.disposeData(l.dataId),o){const y=et(x.shape,h);x.shape=y}return x}const U8={kernelName:zc,backendName:"wasm",setupFunc:V8,kernelFunc:W8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Q$;function G8(n){Q$=n.wasm.cwrap(Vc,null,["number, number, number"])}function H8(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=t;let c=e.dataIdMap.get(a.dataId).id,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Yr(a,r,e);if(p){const y=e.dataIdMap.get(l.dataId).id;u=l,c=y}const f=u.shape.length;ht("any",d,f);const[m,g]=bt(u.shape,d),b=L(g),x=e.makeOutput(m,a.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;Q$(c,b,y)}if(p&&e.disposeData(l.dataId),o){const y=et(x.shape,h);x.shape=y}return x}const j8={kernelName:Vc,backendName:"wasm",setupFunc:G8,kernelFunc:H8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ev;function q8(n){ev=n.wasm.cwrap(Ba,null,["number","number","number","number","number"])}function X8(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r}=s,{x:o}=t,a=e.dataIdMap.get(o.dataId).id;let i=a,c=o;const{transposed:u,axes:l,inputWasTransposed:d}=Yr(o,r,e);if(d){const b=e.dataIdMap.get(u.dataId).id;b!==a&&(c=u,i=b)}const h=c.shape.slice(0,-1),p=e.makeOutput(h,"int32"),f=e.dataIdMap.get(p.dataId).id,m=L(p.shape),g=c.shape[l[0]];return ev(i,Ct[c.dtype],m,g,f),d&&e.disposeData(u.dataId),p}const K8={kernelName:Ba,backendName:"wasm",kernelFunc:X8,setupFunc:q8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let tv;function Y8(n){tv=n.wasm.cwrap(za,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Z8(n){const{inputs:e,attrs:t,backend:s}=n,r=e.x,o=s.dataIdMap.get(r.dataId).id,{filterSize:a,strides:i,pad:c,dimRoundingMode:u}=t,l=zn(r.shape,a,i,1,c,u),d=l.filterHeight,h=l.filterWidth,p=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,b=l.strideHeight,x=l.strideWidth,y=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);const w=s.makeOutput(l.outShape,"float32"),I=s.dataIdMap.get(w.dataId).id;return tv(o,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,b,x,y,I),w}const J8={kernelName:za,backendName:"wasm",setupFunc:Y8,kernelFunc:Z8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kn(n){const{inputs:e,attrs:t}=n,{x:s}=e,{shape:r}=t,o=L(s.shape),a=gf(r,o);return v(o===L(a),()=>`new shape: ${a}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:a,dtype:s.dtype}}const Q8={kernelName:Il,backendName:"wasm",kernelFunc:kn};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let nv;function eY(n){nv=n.wasm.cwrap(Va,null,["number","array","number","number","array","number","number","number","number"])}function tY(n){const{inputs:e,backend:t,attrs:s}=n,{a:r,b:o}=e,{transposeA:a,transposeB:i}=s;if(r.dtype!=="float32"||o.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const c=r.shape.length,u=o.shape.length,l=a?r.shape[c-2]:r.shape[c-1],d=i?o.shape[u-1]:o.shape[u-2],h=a?r.shape[c-1]:r.shape[c-2],p=i?o.shape[u-2]:o.shape[u-1],f=r.shape.slice(0,-2),m=o.shape.slice(0,-2),g=L(f),b=L(m),y=Ee(r.shape.slice(0,-2),o.shape.slice(0,-2)).concat([h,p]);v(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${r.shape} and ${o.shape} and transposeA=${a} and transposeB=${i} must match.`);const w=a?[g,l,h]:[g,h,l],I=i?[b,p,d]:[b,d,p],k=kn({inputs:{x:r},backend:t,attrs:{shape:w}}),$=kn({inputs:{x:o},backend:t,attrs:{shape:I}}),C=t.dataIdMap.get(k.dataId).id,N=t.dataIdMap.get($.dataId).id,T=a?k.shape[2]:k.shape[1],_=i?$.shape[1]:$.shape[2],O=Math.max(g,b),P=t.makeOutput([O,T,_],k.dtype),V=t.dataIdMap.get(P.dataId).id,B=new Uint8Array(new Int32Array(k.shape).buffer),W=new Uint8Array(new Int32Array($.shape).buffer);return nv(C,B,k.shape.length,N,W,$.shape.length,a,i,V),t.disposeData(k.dataId),t.disposeData($.dataId),P.shape=y,P}const nY={kernelName:Va,backendName:"wasm",setupFunc:eY,kernelFunc:tY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Oo(n){const{inputs:{x:e},attrs:{begin:t,size:s},backend:r}=n,[o,a]=Ll(e,t,s),i=Jd(e.shape,o,a),c=r.readSync(e.dataId),u=r.makeOutput(a,e.dtype),l=me(e.shape),d=r.dataIdMap.get(u.dataId);if(i){const f=Qd(o,l);return e.dtype==="string"?d.stringBytes=c.slice(f,f+L(a)):r.typedArrayFromHeap(u).set(c.subarray(f,f+L(a))),u}if(e.dtype==="string"){const f=pd(c,o,a,e.shape,e.dtype);return d.stringBytes=f,u}const h=r.typedArrayFromHeap(u),p=e.shape.length;if(p===2)sY(c,l[0],h,o,a);else if(p===3)rY(c,l[0],l[1],h,o,a);else if(p===4)oY(c,l[0],l[1],l[2],h,o,a);else{const f=pd(c,o,a,e.shape,e.dtype);h.set(f)}return u}function sY(n,e,t,s,r){let o=0;const a=s[0],i=s[1],c=a+r[0];for(let u=a;u<c;u++){const l=u*e+i;t.set(n.subarray(l,l+r[1]),o),o+=r[1]}}function rY(n,e,t,s,r,o){let a=0;const i=r[0],c=r[1],u=r[2],l=i+o[0],d=c+o[1];for(let h=i;h<l;h++)for(let p=c;p<d;p++){const f=h*e+p*t+u;s.set(n.subarray(f,f+o[2]),a),a+=o[2]}}function oY(n,e,t,s,r,o,a){let i=0;const c=o[0],u=o[1],l=o[2],d=c+a[0],h=u+a[1],p=l+a[2],f=o[3];for(let m=c;m<d;m++)for(let g=u;g<h;g++)for(let b=l;b<p;b++){const x=m*e+g*t+b*s+f;r.set(n.subarray(x,x+a[3]),i),i+=a[3]}}const aY={kernelName:vl,backendName:"wasm",kernelFunc:Oo};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,crops:a}=s,i=o.reduce((b,x)=>b*x),c=Ho(r.shape,o,i),u=jo(c.length,o.length),l=qo(r.shape,o,i),d=uh(a,o.length),h=dh(l,a,o.length),p=kn({inputs:{x:r},backend:t,attrs:{shape:c}}),f=Lr({inputs:{x:p},backend:t,attrs:{perm:u}}),m=kn({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Oo({inputs:{x:m},backend:t,attrs:{begin:d,size:h}});return t.disposeData(p.dataId),t.disposeData(f.dataId),t.disposeData(p.dataId),g}const cY={kernelName:qc,backendName:"wasm",kernelFunc:iY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zi(n){const{inputs:{x:e},attrs:{dtype:t},backend:s}=n,r=s.makeOutput(e.shape,t),o=s.typedArrayFromHeap(e);return s.typedArrayFromHeap(r).set(o),r}const lY={kernelName:Wa,backendName:"wasm",kernelFunc:Zi};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uY=Ft(Ua);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let sv;function dY(n){sv=n.wasm.cwrap(Po,null,["number","number","number","number"])}function hY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{clipValueMin:o,clipValueMax:a}=s,i=t.dataIdMap.get(r.dataId).id,c=t.makeOutput(r.shape,r.dtype),u=t.dataIdMap.get(c.dataId).id;return sv(i,o,a,u),c}const pY={kernelName:Po,backendName:"wasm",setupFunc:dY,kernelFunc:hY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rv(n){const{inputs:e,backend:t}=n,s=Re(n.attrs.axis,e[0].shape)[0],r=e.map(p=>p.shape);ih(r,s);let o=Kn(e.map(p=>p.shape),s);const a=e.filter(p=>L(p.shape)>0);if(a.length===1)return Dh({inputs:{x:a[0]},backend:t});const i=t.makeOutput(o,e[0].dtype);if(L(o)===0)return i;if(a[0].dtype==="string"){const p=a.map(y=>{const I=[-1,L(y.shape.slice(s))];return kn({inputs:{x:y},backend:t,attrs:{shape:I}})}),f=p.map(y=>({vals:t.readSync(y.dataId),shape:y.shape}));o=Kn(p.map(y=>y.shape),1);const m=p[0].shape[0]===1,g=Tg(f,o,e[0].dtype,m),b=Kn(a.map(y=>y.shape),s);i.shape=b;const x=t.dataIdMap.get(i.dataId);return x.stringBytes=sg(g),p.forEach(y=>t.disposeData(y.dataId)),i}const c=L(a[0].shape.slice(0,s));let u=0;const l=a.map(p=>{const f=L(p.shape.slice(s));return u+=f,f}),d=a.map(p=>t.typedArrayFromHeap(p)),h=t.typedArrayFromHeap(i);for(let p=0;p<c;p++){let f=p*u;for(let m=0;m<d.length;m++){const g=l[m],b=p*g,x=d[m].subarray(b,b+g);h.set(x,f),f+=g}}return i}const fY={kernelName:Xc,backendName:"wasm",kernelFunc:rv};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let ov;function mY(n){ov=n.wasm.cwrap(Ga,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function gY(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:o}=e,a=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(o.dataId).id,{strides:c,dilations:u,pad:l,dimRoundingMode:d,dataFormat:h}=t,p=Ds(h),f=Nt(r.shape,o.shape,c,u,l,d,!1,p),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,x=f.padInfo.right,y=f.padInfo.bottom,w=f.padInfo.left,I=f.dilationHeight,k=f.dilationWidth,$=f.strideHeight,C=f.strideWidth,N=f.inChannels,T=f.outChannels,_=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const O=s.makeOutput(f.outShape,"float32"),P=s.dataIdMap.get(O.dataId).id;return ov(a,r.shape[0],r.shape[1],r.shape[2],i,m,g,b,x,y,w,_,I,k,$,C,N,T,P),O}const bY={kernelName:Ga,backendName:"wasm",setupFunc:mY,kernelFunc:gY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let av;function xY(n){av=n.wasm.cwrap(Ha,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function yY(n){const{backend:e,inputs:t,attrs:s}=n,{dy:r,filter:o}=t,{strides:a,pad:i,dataFormat:c,dimRoundingMode:u,inputShape:l}=s,d=1,h=Ds(c),p=Nt(l,o.shape,a,d,i,u,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:x,inWidth:y,outChannels:w,outHeight:I,outWidth:k,strideHeight:$,strideWidth:C}=p,N=m-1-p.padInfo.top,T=g-1-p.padInfo.left,_=p.dataFormat==="channelsLast",O=me(p.inShape),P=me(r.shape),[V,B,W]=me(o.shape),q=O[0],z=_?O[1]:O[2],X=_?O[2]:1,Y=_?1:O[1],Z=P[0],ne=_?P[1]:P[2],J=_?P[2]:1,ae=_?1:P[1],re=e.makeOutput(p.inShape,"float32"),ue=e.dataIdMap.get(re.dataId).id,ge=e.dataIdMap.get(r.dataId).id,ce=e.dataIdMap.get(o.dataId).id;return av(ge,ce,f,m,g,x,y,b,I,k,w,$,C,N,T,V,B,W,q,z,X,Y,Z,ne,J,ae,ue),re}const wY={kernelName:Ha,backendName:"wasm",setupFunc:xY,kernelFunc:yY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IY=Ft(ja);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kY=Ft(qa);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Zp;(function(n){n[n.bilinear=0]="bilinear",n[n.nearest=1]="nearest"})(Zp||(Zp={}));let iv;function $Y(n){iv=n.wasm.cwrap(Yc,null,["number","number","number","number","array","number","number","number","number","number"])}function vY(n){const{backend:e,inputs:t,attrs:s}=n,{method:r,extrapolationValue:o,cropSize:a}=s,{image:i,boxes:c,boxInd:u}=t,l=c.shape[0],[d,h]=a,p=[l,d,h,i.shape[3]];let f=e.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Zi({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),f=e.dataIdMap.get(m.dataId));const g=f.id,b=e.dataIdMap.get(c.dataId).id,x=e.dataIdMap.get(u.dataId).id,y=e.makeOutput(p,"float32"),w=e.dataIdMap.get(y.dataId).id,I=new Uint8Array(new Int32Array(i.shape).buffer);return iv(g,b,x,l,I,d,h,Zp[r],o,w),m!=null&&e.disposeData(m.dataId),y}const CY={kernelName:Yc,backendName:"wasm",setupFunc:$Y,kernelFunc:vY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let cv;function SY(n){cv=n.wasm.cwrap(Kc,null,["number","number","number","number","number","number"])}function NY(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s,c=r.shape.length;v(r.dtype==="float32"||r.dtype==="int32",()=>`cumprod does not support ${r.dtype} tensors in the WASM backend`);const u=pt([o],c);let l=r;u!==null&&(l=Lr({inputs:{x:r},attrs:{perm:u},backend:t}));const d=ot(1,c)[0];ht("cumprod",[d],c);const h=t.makeOutput(l.shape,l.dtype),p=l.shape[d],f=t.dataIdMap.get(l.dataId).id,m=t.dataIdMap.get(h.dataId).id;cv(f,a?1:0,i?1:0,p,m,Ct[r.dtype]);let g=h;if(u!==null){const b=er(u);g=Lr({inputs:{x:h},attrs:{perm:b},backend:t}),t.disposeData(l.dataId),t.disposeData(h.dataId)}return g}const TY={kernelName:Kc,backendName:"wasm",setupFunc:SY,kernelFunc:NY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let lv;function EY(n){lv=n.wasm.cwrap(Xa,null,["number","number","number","number","number","number"])}function _Y(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{axis:o,exclusive:a,reverse:i}=s,c=r.shape.length;v(r.dtype==="float32"||r.dtype==="int32",()=>`cumsum does not support ${r.dtype} tensors in the WASM backend`);const u=pt([o],c);let l=r;u!==null&&(l=Lr({inputs:{x:r},attrs:{perm:u},backend:t}));const d=ot(1,c)[0];ht("cumsum",[d],c);const h=t.makeOutput(l.shape,l.dtype),p=l.shape[d],f=t.dataIdMap.get(l.dataId).id,m=t.dataIdMap.get(h.dataId).id;lv(f,a?1:0,i?1:0,p,m,Ct[r.dtype]);let g=h;if(u!==null){const b=er(u);g=Lr({inputs:{x:h},attrs:{perm:b},backend:t}),t.disposeData(l.dataId),t.disposeData(h.dataId)}return g}const RY={kernelName:Xa,backendName:"wasm",setupFunc:EY,kernelFunc:_Y};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let uv;function AY(n){uv=n.wasm.cwrap(Zc,null,["number","number","number","array","number","array","array","number","number"])}function DY(n){const{backend:e,inputs:t,attrs:s}=n,{x:r}=t,{blockSize:o,dataFormat:a}=s,i=r.shape[0],c=a==="NHWC"?r.shape[1]:r.shape[2],u=a==="NHWC"?r.shape[2]:r.shape[3],l=a==="NHWC"?r.shape[3]:r.shape[1],d=c*o,h=u*o,p=l/(o*o),f=a==="NHWC"?[i,d,h,p]:[i,p,d,h],m=e.makeOutput(f,"float32"),b=e.dataIdMap.get(r.dataId).id,x=new Uint8Array(new Int32Array(me(r.shape)).buffer),y=new Uint8Array(new Int32Array(f).buffer),w=new Uint8Array(new Int32Array(me(f)).buffer),I=e.dataIdMap.get(m.dataId).id;return uv(b,o,a==="NHWC"?1:0,x,r.shape.length-1,y,w,f.length,I),m}const FY={kernelName:Zc,backendName:"wasm",setupFunc:AY,kernelFunc:DY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let dv;function OY(n){dv=n.wasm.cwrap(Ka,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function MY(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:o}=e,a=s.dataIdMap.get(r.dataId).id,i=s.dataIdMap.get(o.dataId).id,{strides:c,dilations:u,pad:l,dimRoundingMode:d}=t,h=u??[1,1],p=Nt(r.shape,o.shape,c,h,l,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,b=p.padInfo.right,x=p.padInfo.bottom,y=p.padInfo.left,w=p.dilationHeight,I=p.dilationWidth,k=p.strideHeight,$=p.strideWidth,C=p.inChannels,N=p.outChannels,T=p.padInfo.type==="SAME"?1:0;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const _=s.makeOutput(p.outShape,"float32"),O=s.dataIdMap.get(_.dataId).id;return dv(a,r.shape[0],r.shape[1],r.shape[2],i,f,m,g,b,x,y,T,w,I,k,$,C,N,O),_}const LY={kernelName:Ka,backendName:"wasm",setupFunc:OY,kernelFunc:MY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PY=Ft(Za);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BY=!1,zY=tn(Qc,BY,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VY=Ft(Ja,"float32");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jp(n){const{inputs:e,attrs:t,backend:s}=n,{input:r}=e,{dim:o}=t,a=r.shape.length,i=r.shape.slice();let c=o;return o<0&&(v(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+o+1),i.splice(c,0,1),kn({inputs:{x:r},backend:s,attrs:{shape:i}})}const WY={kernelName:el,backendName:"wasm",kernelFunc:Jp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hv(n){const{attrs:{shape:e,value:t,dtype:s},backend:r}=n,o=r.makeOutput(e,s);return r.typedArrayFromHeap(o).fill(t),o}const UY={kernelName:Rd,backendName:"wasm",kernelFunc:hv};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let pv;function GY(n){pv=n.wasm.cwrap(nl,null,["number","number","number","number","number","number"])}function HY(n){const{inputs:e,backend:t}=n,{image:s}=e,r=t.makeOutput(s.shape,s.dtype),o=t.dataIdMap.get(s.dataId).id,a=t.dataIdMap.get(r.dataId).id,[i,c,u,l]=s.shape;return pv(o,i,c,u,l,a),r}const jY={kernelName:nl,backendName:"wasm",kernelFunc:HY,setupFunc:GY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qY=Ft(Qa);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XY=tn(ei);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let fv;function KY(n){fv=n.wasm.cwrap(ti,null,["number","number","number","number","number","number","number"])}function YY(n){const{backend:e,inputs:t,attrs:s}=n,{varianceEpsilon:r}=s,{x:o,mean:a,variance:i,offset:c,scale:u}=t,l=e.dataIdMap.get(o.dataId).id,d=e.dataIdMap.get(a.dataId).id,h=e.dataIdMap.get(i.dataId).id,p=c!=null?e.dataIdMap.get(c.dataId).id:0,f=u!=null?e.dataIdMap.get(u.dataId).id:0,m=e.makeOutput(o.shape,o.dtype);if(L(o.shape)===0)return m;const g=e.dataIdMap.get(m.dataId).id;return fv(l,d,h,p,f,r,g),m}const ZY={kernelName:ti,backendName:"wasm",setupFunc:KY,kernelFunc:YY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let mv;function JY(n){mv=n.wasm.cwrap($a,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function QY(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dilations:l,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=t,m=Nt(r.shape,o.shape,c,l,u,h),g=Ac[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const b=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(o.dataId).id,y=m.outChannels;let w=0;if(a!=null){const J=s.dataIdMap.get(a.dataId);if(J.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==y)throw new Error(`FusedConv2D bias shape (${J.shape}) does not match the number of output channels (${y})`);w=J.id}const I=m.filterHeight,k=m.filterWidth,$=m.padInfo.top,C=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,O=m.dilationWidth,P=m.strideHeight,V=m.strideWidth,B=m.inChannels,W=m.padInfo.type==="SAME"?1:0,q=m.batchSize,z=m.inHeight,X=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const Y=s.makeOutput(m.outShape,"float32"),Z=s.dataIdMap.get(Y.dataId).id,ne=i==null?0:s.dataIdMap.get(i.dataId).id;return mv(b,q,z,X,x,I,k,w,$,C,N,T,W,_,O,P,V,B,y,g,ne,f||0,Z),Y}const e7={kernelName:$a,backendName:"wasm",setupFunc:JY,kernelFunc:QY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let gv;function t7(n){gv=n.wasm.cwrap(Hd,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function n7(n){const{inputs:e,attrs:t,backend:s}=n,{x:r,filter:o,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dilations:l,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=t,m=Nt(r.shape,o.shape,c,l,u,h,!0),g=Ac[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const b=s.dataIdMap.get(r.dataId).id,x=s.dataIdMap.get(o.dataId).id,y=m.outChannels;let w=0;if(a!=null){const J=s.dataIdMap.get(a.dataId);if(J.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==y)throw new Error(`FusedDepthwiseConv2D bias shape (${J.shape}) does not match the number of output channels (${y})`);w=J.id}const I=m.filterHeight,k=m.filterWidth,$=m.padInfo.top,C=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,O=m.dilationWidth,P=m.strideHeight,V=m.strideWidth,B=m.inChannels,W=m.padInfo.type==="SAME"?1:0,q=m.batchSize,z=m.inHeight,X=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const Y=s.makeOutput(m.outShape,"float32"),Z=s.dataIdMap.get(Y.dataId).id,ne=i==null?0:s.dataIdMap.get(i.dataId).id;return gv(b,q,z,X,x,I,k,w,$,C,N,T,W,_,O,P,V,B,y,g,ne,f||0,Z),Y}const s7={kernelName:Hd,backendName:"wasm",setupFunc:t7,kernelFunc:n7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let bv;function r7(n){bv=n.wasm.cwrap(Ad,null,["number","number","number","number","number","number","array","number"])}function o7(n){const{backend:e,inputs:t}=n,{params:s,indices:r}=t,[o,a,i,c]=Yd(s,r),u=e.makeOutput(o,s.dtype);if(a===0)return u;const l=r.shape,d=l[l.length-1],p=e.dataIdMap.get(s.dataId).id,m=e.dataIdMap.get(r.dataId).id,g=new Uint8Array(new Int32Array(c).buffer),b=e.dataIdMap.get(u.dataId).id;return bv(p,Ct[s.dtype],m,a,d,i,g,b),u}const a7={kernelName:Ad,backendName:"wasm",setupFunc:r7,kernelFunc:o7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let xv;function i7(n){xv=n.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function c7(n){const{backend:e,inputs:t,attrs:s}=n,{x:r,indices:o}=t,{axis:a,batchDims:i}=s,c=Re(a,r.shape)[0],u=e.readSync(o.dataId),l=r.shape[c];for(let N=0;N<u.length;++N){const T=u[N];v(T<=l-1&&T>=0,()=>`GatherV2: the index value ${T} is not in [0, ${l-1}]`)}const d=mh(r,o,c,i),h=kn({inputs:{x:r},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:e}),p=L(o.shape),f=kn({inputs:{x:o},attrs:{shape:[d.batchSize,p/d.batchSize]},backend:e}),m=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],g=e.makeOutput(m,r.dtype);if(L(r.shape)===0)return g;const b=h.shape.length-1,y=e.dataIdMap.get(h.dataId).id,I=e.dataIdMap.get(f.dataId).id,k=e.dataIdMap.get(g.dataId).id,$=new Uint8Array(new Int32Array(me(h.shape)).buffer),C=new Uint8Array(new Int32Array(me(m)).buffer);return xv(y,Ct[r.dtype],$,b,I,d.batchSize,C,k),e.disposeData(h.dataId),e.disposeData(f.dataId),g.shape=d.outputShape,g}const l7={kernelName:sl,backendName:"wasm",setupFunc:i7,kernelFunc:c7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const u7=!1,d7=tn(rl,u7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h7=!1,p7=tn(ni,h7,"bool");/**
 * @license
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f7=Ft(ri,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let yv;function m7(n){yv=n.wasm.cwrap(oi,null,["number","number","number","number"])}function g7(n){const{inputs:{x:e},attrs:{alpha:t},backend:s}=n,r=s.dataIdMap.get(e.dataId).id,o=s.makeOutput(e.shape,"float32");if(L(e.shape)!==0){const a=s.dataIdMap.get(o.dataId).id;yv(r,Ct[e.dtype],t,a)}return o}const b7={kernelName:oi,backendName:"wasm",setupFunc:m7,kernelFunc:g7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const x7=!1,y7=tn(il,x7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w7=!1,I7=tn(cl,w7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7=Ft(ai);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $7=!1,v7=tn(ul,$7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C7=Ft(dl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S7=!1,N7=tn(hl,S7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T7=!1,E7=tn(XS,T7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let wv;function _7(n){wv=n.wasm.cwrap(ii,null,["number","number","number","number"])}function R7(n){const{backend:e,inputs:t,attrs:s}=n,{reductionIndices:r,keepDims:o}=s,{x:a}=t;let c=e.dataIdMap.get(a.dataId).id,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Yr(a,r,e);if(p){const y=e.dataIdMap.get(l.dataId).id;u=l,c=y}const f=u.shape.length;ht("max",d,f);const[m,g]=bt(u.shape,d),b=L(g),x=e.makeOutput(m,a.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;wv(c,Ct[a.dtype],b,y)}if(p&&e.disposeData(l.dataId),o){const y=et(x.shape,h);x.shape=y}return x}const A7={kernelName:ii,backendName:"wasm",setupFunc:_7,kernelFunc:R7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D7=tn(ci);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Iv;function F7(n){Iv=n.wasm.cwrap(li,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function O7(n){const{inputs:e,attrs:t,backend:s}=n,r=e.x,o=s.dataIdMap.get(r.dataId).id;v(r.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${r.dtype}.`);const{filterSize:a,strides:i,pad:c,dimRoundingMode:u}=t,l=zn(r.shape,a,i,1,c,u),d=l.filterHeight,h=l.filterWidth,p=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,b=l.dilationHeight,x=l.dilationWidth,y=l.strideHeight,w=l.strideWidth,I=l.inChannels,k=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);const $=s.makeOutput(l.outShape,"float32"),C=s.dataIdMap.get($.dataId).id;return Iv(o,r.shape[0],r.shape[1],r.shape[2],d,h,p,f,m,g,b,x,y,w,I,k,C),$}const M7={kernelName:li,backendName:"wasm",setupFunc:F7,kernelFunc:O7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let kv;function L7(n){kv=n.wasm.cwrap(ui,null,["number, number, number"])}function P7(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=t,i=e.dataIdMap.get(a.dataId).id;let c=i,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Yr(a,r,e);let f=d;if(p){const w=e.dataIdMap.get(l.dataId).id;w!==i&&(u=l,c=w,f=ot(f.length,u.shape.length))}ht("mean",f,u.shape.length);const[m,g]=bt(u.shape,f),b=L(g);let x=u;u.dtype!=="float32"&&(x=Zi({backend:e,inputs:{x:u},attrs:{dtype:"float32"}}),c=e.dataIdMap.get(x.dataId).id);const y=e.makeOutput(m,"float32");if(L(u.shape)!==0){const w=e.dataIdMap.get(y.dataId).id;kv(c,b,w)}if(p&&e.disposeData(l.dataId),o){const w=et(y.shape,h);y.shape=w}return u.dtype!=="float32"&&e.disposeData(x.dataId),y}const B7={kernelName:ui,backendName:"wasm",setupFunc:L7,kernelFunc:P7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $v;function z7(n){$v=n.wasm.cwrap(di,null,["number","number","number","number"])}function V7(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=t,i=e.dataIdMap.get(a.dataId).id;let c=i,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Yr(a,r,e);if(p){const y=e.dataIdMap.get(l.dataId).id;y!==i&&(u=l,c=y)}const f=u.shape.length;ht("min",d,f);const[m,g]=bt(u.shape,d),b=L(g),x=e.makeOutput(m,u.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;$v(c,Ct[a.dtype],b,y)}if(p&&e.disposeData(l.dataId),o){const y=et(x.shape,h);x.shape=y}return x}const W7={kernelName:di,backendName:"wasm",setupFunc:z7,kernelFunc:V7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U7=tn(hi);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qp;(function(n){n[n.reflect=0]="reflect",n[n.symmetric=1]="symmetric"})(Qp||(Qp={}));let vv;function G7(n){vv=n.wasm.cwrap(pi,null,["number","array","number","number","array","array","number","number"])}function H7(n){const{inputs:{x:e},backend:t,attrs:{paddings:s,mode:r}}=n,o=s.map((f,m)=>f[0]+e.shape[m]+f[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(o,e.dtype),c=t.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(e.shape).buffer),l=s.map(f=>f[0]),d=s.map(f=>f[1]),h=new Uint8Array(new Int32Array(l).buffer),p=new Uint8Array(new Int32Array(d).buffer);return vv(a,u,e.shape.length,Ct[e.dtype],h,p,Qp[r],c),i}const j7={kernelName:pi,backendName:"wasm",kernelFunc:H7,setupFunc:G7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const q7=tn(fi);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const X7=Ft(fl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xg(n,e){const t=new Int32Array(n.wasm.HEAPU8.buffer,e,4),s=t[0],r=t[1],o=t[2],a=t[3];return n.wasm._free(e),{pSelectedIndices:s,selectedSize:r,pSelectedScores:o,pValidOutputs:a}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Cv;function K7(n){Cv=n.wasm.cwrap(gl,"number",["number","number","number","number","number"])}function Y7(n){const{backend:e,inputs:t,attrs:s}=n,{iouThreshold:r,maxOutputSize:o,scoreThreshold:a}=s,{boxes:i,scores:c}=t,u=e.dataIdMap.get(i.dataId).id,l=e.dataIdMap.get(c.dataId).id,d=Cv(u,l,o,r,a),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=Xg(e,d);return e.wasm._free(f),e.wasm._free(m),e.makeOutput([p],"int32",h)}const Z7={kernelName:gl,backendName:"wasm",setupFunc:K7,kernelFunc:Y7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Sv;function J7(n){Sv=n.wasm.cwrap(bl,"number",["number","number","number","number","number","bool"])}function Q7(n){const{backend:e,inputs:t,attrs:s}=n,{iouThreshold:r,maxOutputSize:o,scoreThreshold:a,padToMaxOutputSize:i}=s,{boxes:c,scores:u}=t,l=e.dataIdMap.get(c.dataId).id,d=e.dataIdMap.get(u.dataId).id,h=Sv(l,d,o,r,a,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Xg(e,h);e.wasm._free(m);const b=e.makeOutput([f],"int32",p),x=e.makeOutput([],"int32",g);return[b,x]}const e9={kernelName:bl,backendName:"wasm",setupFunc:J7,kernelFunc:Q7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Nv;function t9(n){Nv=n.wasm.cwrap(xl,"number",["number","number","number","number","number","number"])}function n9(n){const{backend:e,inputs:t,attrs:s}=n,{iouThreshold:r,maxOutputSize:o,scoreThreshold:a,softNmsSigma:i}=s,{boxes:c,scores:u}=t,l=e.dataIdMap.get(c.dataId).id,d=e.dataIdMap.get(u.dataId).id,h=Nv(l,d,o,r,a,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Xg(e,h);e.wasm._free(g);const b=e.makeOutput([f],"int32",p),x=e.makeOutput([f],"float32",m);return[b,x]}const s9={kernelName:xl,backendName:"wasm",setupFunc:t9,kernelFunc:n9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const r9=!1,o9=tn(ml,r9,"bool");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Tv;function a9(n){Tv=n.wasm.cwrap(mi,null,["number","number","number","number","number"])}function i9(n){const{inputs:e,backend:t,attrs:s}=n,{indices:r}=e,{dtype:o,depth:a,onValue:i,offValue:c}=s,u=t.makeOutput([...r.shape,a],o),l=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(r.dataId).id;return Tv(h,a,i,c,l),u}const c9={kernelName:mi,backendName:"wasm",setupFunc:a9,kernelFunc:i9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function l9(n){const{inputs:{x:e},backend:t}=n,s=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(s).fill(1),s}const u9={kernelName:yl,backendName:"wasm",kernelFunc:l9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d9(n){const{inputs:e,backend:t,attrs:s}=n,{axis:r}=s;if(e.length===1)return Jp({inputs:{input:e[0]},backend:t,attrs:{dim:r}});const o=e[0].shape,a=e[0].dtype;e.forEach(l=>{Qn(o,l.shape,"All tensors passed to stack must have matching shapes"),v(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],c=e.map(l=>{const d=Jp({inputs:{input:l},backend:t,attrs:{dim:r}});return i.push(d),d}),u=rv({inputs:c,backend:t,attrs:{axis:r}});return i.forEach(l=>t.disposeData(l.dataId)),u}const h9={kernelName:wl,backendName:"wasm",kernelFunc:d9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ev;function p9(n){Ev=n.wasm.cwrap(gi,null,["number","array","number","number","array","array","number","number"])}function f9(n){const{inputs:{x:e},backend:t,attrs:{paddings:s,constantValue:r}}=n,o=s.map((m,g)=>m[0]+e.shape[g]+m[1]);if(L(e.shape)===0)return hv({backend:t,attrs:{shape:o,value:r,dtype:e.dtype}});const a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(o,e.dtype),u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),d=s.map(m=>m[0]),h=s.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(h).buffer);return Ev(a,l,e.shape.length,Ct[e.dtype],p,f,r,u),i}const _v={kernelName:gi,backendName:"wasm",kernelFunc:f9,setupFunc:p9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const m9=tn(bi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Rv;function g9(n){Rv=n.wasm.cwrap(xi,null,["number","number","number"])}function b9(n){const{inputs:e,backend:t}=n,{x:s,alpha:r}=e,o=t.dataIdMap.get(s.dataId).id,a=t.dataIdMap.get(r.dataId).id;let i=o;const c=s;let u=c;c.dtype!=="float32"&&(u=Zi({backend:t,inputs:{x:s},attrs:{dtype:"float32"}}),i=t.dataIdMap.get(u.dataId).id);const l=t.makeOutput(s.shape,"float32"),d=t.dataIdMap.get(l.dataId).id;return Rv(i,a,d),c.dtype!=="float32"&&t.disposeData(u.dataId),l}const x9={kernelName:xi,backendName:"wasm",setupFunc:g9,kernelFunc:b9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Av;function y9(n){Av=n.wasm.cwrap(yi,null,["number","number","number","number"])}function w9(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=t,i=e.dataIdMap.get(a.dataId).id;let c=i,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Yr(a,r,e);let f=d;if(p){const y=e.dataIdMap.get(l.dataId).id;y!==i&&(u=l,c=y,f=ot(f.length,u.shape.length))}ht("prod",f,u.shape.length);const[m,g]=bt(u.shape,f),b=L(g),x=e.makeOutput(m,u.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;Av(c,b,Ct[x.dtype],y)}if(p&&e.disposeData(l.dataId),o){const y=et(x.shape,h);x.shape=y}return x}const I9={kernelName:yi,backendName:"wasm",setupFunc:y9,kernelFunc:w9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k9=n=>{const{backend:e,attrs:t}=n,{start:s,stop:r,step:o,dtype:a}=t,i=Rg(s,r,o,a),c=e.makeOutput([i.length],a);return e.typedArrayFromHeap(c).set(i),c},$9={kernelName:Od,backendName:"wasm",kernelFunc:k9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const v9=tn(Ya);/**
 * @license
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C9=Ft(wi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S9=Ft(Ii);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N9=Ft(vi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Dv;function T9(n){Dv=n.wasm.cwrap($i,null,["number","number","number","number","number","number","number","number","number","number"])}function E9(n){const{backend:e,inputs:t,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s,[c,u]=i,[l,d,h,p]=r.shape,f=[l,c,u,p];let m=e.dataIdMap.get(r.dataId),g;m.dtype!=="float32"&&(g=Zi({backend:e,inputs:{x:r},attrs:{dtype:"float32"}}),m=e.dataIdMap.get(g.dataId));const b=m.id,x=e.makeOutput(f,"float32");if(L(r.shape)===0)return x;const y=e.dataIdMap.get(x.dataId).id;return Dv(b,l,d,h,p,c,u,o?1:0,a?1:0,y),g!=null&&e.disposeData(g.dataId),x}const _9={kernelName:$i,backendName:"wasm",setupFunc:T9,kernelFunc:E9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Fv;function R9(n){Fv=n.wasm.cwrap(ki,null,["number","number","number","number","number","number","number","number","number","number"])}function A9(n){const{backend:e,inputs:t,attrs:s}=n,{images:r}=t,{alignCorners:o,halfPixelCenters:a,size:i}=s,[c,u]=i,[l,d,h,p]=r.shape,f=[l,c,u,p],m=e.makeOutput(f,"float32");if(L(r.shape)===0)return m;let g=e.dataIdMap.get(r.dataId),b;g.dtype!=="float32"&&(b=Zi({backend:e,inputs:{x:r},attrs:{dtype:"float32"}}),g=e.dataIdMap.get(b.dataId));const x=g.id,y=e.dataIdMap.get(m.dataId).id;return Fv(x,l,d,h,p,c,u,o?1:0,a?1:0,y),b!=null&&e.disposeData(b.dataId),m}const D9={kernelName:ki,backendName:"wasm",setupFunc:R9,kernelFunc:A9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Ov;function F9(n){Ov=n.wasm.cwrap(Ci,null,["number","array","number","array","number","number"])}function O9(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{dims:o}=s,a=Re(o,r.shape);if(r.shape.length===0)return Dh({inputs:{x:r},backend:t});const i=t.makeOutput(r.shape,r.dtype),c=t.dataIdMap.get(r.dataId).id,u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(a).buffer),d=new Uint8Array(new Int32Array(r.shape).buffer);Ov(c,l,a.length,d,r.shape.length,u);const h=kn({inputs:{x:i},attrs:{shape:r.shape},backend:t});return t.disposeData(i.dataId),h}const M9={kernelName:Ci,backendName:"wasm",kernelFunc:O9,setupFunc:F9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Mv;function L9(n){Mv=n.wasm.cwrap(Ml,null,["number","number","number","number","number","number","number","number","array","number","number"])}function P9(n){const{inputs:e,backend:t,attrs:s}=n,{image:r}=e,{radians:o,fillValue:a,center:i}=s,c=t.makeOutput(r.shape,r.dtype),u=t.dataIdMap.get(r.dataId).id,l=t.dataIdMap.get(c.dataId).id,[d,h,p,f]=r.shape,[m,g]=lh(i,h,p),b=a===0,x=255,y=typeof a=="number"?[a,a,a,b?0:x]:[...a,x],w=new Uint8Array(new Int32Array(y).buffer);return Mv(u,d,h,p,f,o,m,g,w,y.length,l),c}const B9={kernelName:Ml,backendName:"wasm",kernelFunc:P9,setupFunc:L9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z9=Ft(Si);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const V9=Ft(Ni);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Lv;function W9(n){Lv=n.wasm.cwrap(Md,null,["number","number","number","number","number","number","array","number","number"])}function U9(n){const{backend:e,inputs:t,attrs:s}=n,{indices:r,updates:o}=t,{shape:a}=s,i=e.makeOutput(a,o.dtype);if(L(a)===0)return i;const{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=Li(o,r,a),f=e.dataIdMap.get(r.dataId).id,g=e.dataIdMap.get(o.dataId).id,b=new Uint8Array(new Int32Array(d).buffer),x=e.dataIdMap.get(i.dataId).id;return Lv(f,g,Ct[o.dtype],c,u,l,b,h,x),i}const G9={kernelName:Md,backendName:"wasm",setupFunc:W9,kernelFunc:U9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Pv;function H9(n){Pv=n.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function j9(n){const{inputs:e,backend:t}=n,{condition:s,t:r,e:o}=e,a=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(r.dataId).id,c=t.dataIdMap.get(o.dataId).id,u=t.makeOutput(r.shape,r.dtype),l=t.dataIdMap.get(u.dataId).id,d=s.shape.length,h=r.shape.length,p=d===0||d>1||h===1?1:L(r.shape.slice(1));return Pv(a,i,c,p,l),u}const q9={kernelName:kl,backendName:"wasm",kernelFunc:j9,setupFunc:H9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Bv;function X9(n){Bv=n.wasm.cwrap(Ei,null,["number","number"])}function K9(n){const{backend:e,inputs:{x:t}}=n,s=e.dataIdMap.get(t.dataId).id,r=e.makeOutput(t.shape,t.dtype),o=e.dataIdMap.get(r.dataId).id;return L(r.shape)===0||Bv(s,o),r}const Y9={kernelName:"Sigmoid",backendName:"wasm",setupFunc:X9,kernelFunc:K9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z9=Ft(Ti);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let zv;function J9(n){zv=n.wasm.cwrap(Ai,null,["number","number","number","number"])}function Q9(n){const{backend:e,inputs:{logits:t},attrs:{dim:s}}=n,r=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(o.dataId).id,i=t.shape[s],c=L(t.shape)/i;return L(o.shape)===0||zv(r,a,i,c),o}const eZ={kernelName:Ai,backendName:"wasm",setupFunc:J9,kernelFunc:Q9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,{blockShape:o,paddings:a}=s,i=L(o),c=[[0,0]];c.push(...a);for(let k=1+o.length;k<r.shape.length;++k)c.push([0,0]);const u=_v.kernelFunc({inputs:{x:r},backend:t,attrs:{paddings:c,constantValue:0}}),l=Ho(u.shape,o,i,!1),d=jo(l.length,o.length,!1),h=qo(u.shape,o,i,!1),m=kn({inputs:{x:u},backend:t,attrs:{shape:l}}),x=Lr({inputs:{x:m},backend:t,attrs:{perm:d}}),I=kn({inputs:{x},backend:t,attrs:{shape:h}});return t.disposeData(u.dataId),t.disposeData(m.dataId),t.disposeData(x.dataId),I}const nZ={kernelName:Tl,backendName:"wasm",kernelFunc:tZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Vv;function sZ(n){Vv=n.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function rZ(n){const{backend:e,inputs:t}=n,{indices:s,values:r,denseShape:o,defaultValue:a}=t,i=s.shape[0],c=s.shape[1],u=e.readSync(o.dataId)[0],l=[i+u,c],d=e.dataIdMap.get(s.dataId).id,h=e.dataIdMap.get(r.dataId).id,p=e.dataIdMap.get(a.dataId).id,f=e.makeOutput(l,s.dtype),m=e.dataIdMap.get(f.dataId).id,g=e.makeOutput(l.slice(0,1),r.dtype),b=e.dataIdMap.get(g.dataId).id,x=e.makeOutput([u],"bool"),y=e.dataIdMap.get(x.dataId).id,w=e.makeOutput([i],s.dtype),I=e.dataIdMap.get(w.dataId).id,k=e.makeOutput([4],"int32"),$=e.dataIdMap.get(k.dataId).id,C=Vv(d,h,Ct[r.dtype],i,u,c,p,m,b,y,I,$),N=e.readSync(k.dataId);let T;switch(N[0]){case 1:{T=jm(N[1]);break}case 2:{T=qm(N[1],N[2]);break}case 3:T=Xm(N[1],N[2],N[3]);break;default:T=""}if(e.disposeData(k.dataId),T)throw e.disposeData(f.dataId),e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(w.dataId),new Error(T);let _=f,O=g;return C!==l[0]&&(_=Oo({inputs:{x:f},attrs:{begin:0,size:[C,c]},backend:e}),O=Oo({inputs:{x:g},attrs:{begin:0,size:C},backend:e}),e.disposeData(f.dataId),e.disposeData(g.dataId)),[_,O,x,w]}const oZ={kernelName:Ld,backendName:"wasm",setupFunc:sZ,kernelFunc:rZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Wv;function aZ(n){Wv=n.wasm.cwrap(_l,null,["number","number","number","number","number","number","number"])}function iZ(n){const{backend:e,inputs:t}=n,{inputIndices:s,inputShape:r,newShape:o}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(r.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${r.shape}`);if(o.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${o.shape}`);const a=e.dataIdMap.get(s.dataId).id,i=e.dataIdMap.get(r.dataId).id,c=e.dataIdMap.get(o.dataId).id,u=s.shape[0],l=L(o.shape),d=e.makeOutput([u,l],s.dtype),h=e.dataIdMap.get(d.dataId).id,p=e.makeOutput([l],o.dtype),f=e.dataIdMap.get(p.dataId).id,m=e.makeOutput([3],"int32"),g=e.dataIdMap.get(m.dataId).id;Wv(a,i,c,u,h,f,g);const b=e.readSync(m.dataId);let x;switch(b[0]){case 0:{x=Km(b[1],b[2]);break}case 1:{x=Ym(b[1],b[2]);break}case 2:x=Zm();break;case 3:{const y=Array.from(e.readSync(r.dataId)),w=Array.from(e.readSync(p.dataId));x=Jm(y,w);break}case 4:{const y=Array.from(e.readSync(r.dataId)),w=Array.from(e.readSync(p.dataId));x=Qm(y,w);break}default:x=""}if(e.disposeData(m.dataId),x)throw e.disposeData(d.dataId),e.disposeData(p.dataId),new Error(x);return[d,p]}const cZ={kernelName:_l,backendName:"wasm",setupFunc:aZ,kernelFunc:iZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Uv;function Gv(n){Uv=n.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function Hv(n,e){const{backend:t,inputs:s}=n,{data:r,indices:o,segmentIds:a}=s,i=o.shape[0],c=t.readSync(a.dataId,i-1,i)[0],l=i>0?c+1:0;if(l<0)throw new Error($c());const d=r.shape.slice();d[0]=l;const h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(o.dataId).id,f=t.dataIdMap.get(a.dataId).id,m=t.makeOutput(d,r.dtype),g=t.dataIdMap.get(m.dataId).id,b=t.makeOutput([4],"int32"),x=t.dataIdMap.get(b.dataId).id;Uv(h,Ct[r.dtype],r.shape[0],p,f,g,x,e,0);const y=t.readSync(b.dataId);let w;switch(y[0]){case 0:{w=$c();break}case 1:{w=eg();break}case 2:w=tg(y[1],y[2]);break;case 3:w=ng(y[1],y[2],y[3]);break;default:w=""}if(t.disposeData(b.dataId),w)throw t.disposeData(m.dataId),new Error(w);return m}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lZ(n){return Hv(n,!0)}const uZ={kernelName:Pd,backendName:"wasm",setupFunc:Gv,kernelFunc:lZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(n){return Hv(n,!1)}const hZ={kernelName:Bd,backendName:"wasm",setupFunc:Gv,kernelFunc:dZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pZ(n){const{inputs:e,attrs:t,backend:s}=n,{x:r}=e,{numOrSizeSplits:o,axis:a}=t,i=Re(a,r.shape)[0],c=fh(r,o,i),u=new Array(r.shape.length).fill(0),l=r.shape.slice();return c.map(d=>{const h=[...l];h[i]=d;const p=Oo({inputs:{x:r},attrs:{begin:u,size:h},backend:s});return u[i]+=d,p})}const fZ={kernelName:El,backendName:"wasm",kernelFunc:pZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mZ=Ft(_i);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gZ=Ft(zd);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bZ=tn(Di);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let jv;function xZ(n){jv=n.wasm.cwrap(zo,null,["number","number","number","number"])}function yZ(n){const{backend:e,inputs:t,attrs:s}=n,{alpha:r}=s,{x:o}=t,a=e.dataIdMap.get(o.dataId).id,i=e.makeOutput(o.shape,o.dtype),c=e.dataIdMap.get(i.dataId).id;return jv(a,r,Ct[o.dtype],c),i}const wZ={kernelName:zo,backendName:"wasm",setupFunc:xZ,kernelFunc:yZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let qv;function IZ(n){qv=n.wasm.cwrap(Rl,null,["number","array","number","array","array","array","array","array","number","number"])}function kZ(n){const{backend:e,inputs:t,attrs:s}=n,{x:r}=t,{begin:o,end:a,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:w}=eh(r.shape,o,a,i,c,u,l,d,h);let I;if(m)I=kn({inputs:{x:r},backend:e,attrs:{shape:f}});else if(g||b){v(r.shape.length>=1,()=>`Input must have rank at least 1, got: ${r.shape.length}`);const k=Zd(x,y,w),$=Oo({inputs:{x:r},backend:e,attrs:{begin:x,size:k}});I=kn({inputs:{x:$},backend:e,attrs:{shape:f}}),e.disposeData($.dataId)}else{const k=e.makeOutput(p,"float32"),$=e.dataIdMap.get(r.dataId).id,C=new Uint8Array(new Int32Array(me(r.shape)).buffer),N=new Uint8Array(new Int32Array(x).buffer),T=new Uint8Array(new Int32Array(y).buffer),_=new Uint8Array(new Int32Array(w).buffer),O=new Uint8Array(new Int32Array(p).buffer),P=new Uint8Array(new Int32Array(me(p)).buffer),V=e.dataIdMap.get(k.dataId).id;qv($,C,r.shape.length,N,T,_,O,P,p.length,V),I=kn({inputs:{x:k},backend:e,attrs:{shape:f}}),e.disposeData(k.dataId)}return I}const $Z={kernelName:Rl,backendName:"wasm",setupFunc:IZ,kernelFunc:kZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vZ(n){const{backend:e,inputs:t,attrs:s}=n,{data:r,dataSplits:o}=t,{separator:a,nGramWidths:i,leftPad:c,rightPad:u,padWidth:l,preserveShortSequences:d}=s,h=e.readSync(r.dataId),p=e.readSync(o.dataId),[f,m]=Dg(h,p,a,i,c,u,l,d),g=e.makeOutput([f.length],"string"),b=e.dataIdMap.get(g.dataId);b.stringBytes=f;const x=e.makeOutput(o.shape,"int32");return e.typedArrayFromHeap(x).set(m),[g,x]}const CZ={kernelName:Vd,backendName:"wasm",kernelFunc:vZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SZ(n){const{backend:e,inputs:t,attrs:s}=n,{input:r,delimiter:o}=t,{skipEmpty:a}=s,i=e.readSync(r.dataId),c=e.readSync(o.dataId),[u,l,d]=Fg(i,c[0],a),h=l.length,p=e.makeOutput([h,2],"int32");e.typedArrayFromHeap(p).set(u);const m=e.makeOutput([h],"string"),g=e.dataIdMap.get(m.dataId);g.stringBytes=l;const b=e.makeOutput([2],"int32");return e.typedArrayFromHeap(b).set(d),[p,m,b]}const NZ={kernelName:Wd,backendName:"wasm",kernelFunc:SZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TZ(n){const{backend:e,inputs:t,attrs:s}=n,{input:r}=t,{numBuckets:o}=s,a=e.readSync(r.dataId),i=Og(a,o),c=e.makeOutput(r.shape,"int32");return e.typedArrayFromHeap(c).set(i),c}const EZ={kernelName:Ud,backendName:"wasm",kernelFunc:TZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _Z=tn(Fi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Xv;function RZ(n){Xv=n.wasm.cwrap(Ri,null,["number","number","number","number"])}function AZ(n){const{backend:e,inputs:t,attrs:s}=n,{axis:r,keepDims:o}=s,{x:a}=t,i=e.dataIdMap.get(a.dataId).id;let c=i,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Yr(a,r,e);let f=d;if(p){const y=e.dataIdMap.get(l.dataId).id;y!==i&&(u=l,c=y,f=ot(f.length,u.shape.length))}ht("sum",f,u.shape.length);const[m,g]=bt(u.shape,f),b=L(g),x=e.makeOutput(m,u.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;Xv(c,b,Ct[x.dtype],y)}if(p&&e.disposeData(l.dataId),o){const y=et(x.shape,h);x.shape=y}return x}const DZ={kernelName:Ri,backendName:"wasm",setupFunc:RZ,kernelFunc:AZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FZ=Ft(Oi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OZ=Ft(Mi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Kv;function MZ(n){Kv=n.wasm.cwrap(Bo,null,["number","array","number","array","number","number"])}function LZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:r}=e,o=t.dataIdMap.get(r.dataId).id,{reps:a}=s,i=new Array(r.shape.length);for(let h=0;h<i.length;h++)i[h]=r.shape[h]*a[h];const c=new Uint8Array(new Int32Array(r.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),l=t.makeOutput(i,r.dtype),d=t.dataIdMap.get(l.dataId).id;return Kv(o,c,r.shape.length,u,i.length,Ct[l.dtype],d),l}const PZ={kernelName:Bo,backendName:"wasm",setupFunc:MZ,kernelFunc:LZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Yv;function BZ(n){Yv=n.wasm.cwrap(Al,null,["number","array","number","number","number","bool","number","number"])}const zZ=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{k:r,sorted:o}=t,a=e.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),c=s.shape.slice();c[c.length-1]=r;const u=e.makeOutput(c,s.dtype),l=e.dataIdMap.get(u.dataId).id,d=e.makeOutput(c,"int32"),h=e.dataIdMap.get(d.dataId).id;return Yv(a,i,s.shape.length,Ct[s.dtype],r,o,l,h),[u,d]},VZ={kernelName:Al,backendName:"wasm",setupFunc:BZ,kernelFunc:zZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zv;function WZ(n){Zv=n.wasm.cwrap(Dl,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function UZ(n){const{backend:e,inputs:t,attrs:s}=n,{image:r,transforms:o}=t,{interpolation:a,fillMode:i,fillValue:c,outputShape:u}=s,[l,d,h,p]=r.shape,[f,m]=u??[d,h],g=[l,f,m,p],b=new Uint8Array(new Int32Array(me(r.shape)).buffer),x=new Uint8Array(new Int32Array(me(g)).buffer),y=e.makeOutput(g,r.dtype),w=e.dataIdMap.get(y.dataId).id,k=e.dataIdMap.get(r.dataId).id,C=e.dataIdMap.get(o.dataId).id,N=a==="nearest"?1:2;let T;switch(i){case"constant":T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4;break;default:T=1;break}return Zv(k,C,o.shape[0]>1,l,f,m,p,h,d,b,r.shape.length-1,x,g.length-1,N,T,c,w),y}const GZ={kernelName:Dl,backendName:"wasm",setupFunc:WZ,kernelFunc:UZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HZ(n){const{inputs:e,backend:t,attrs:s}=n,{value:r}=e;let{axis:o}=s;o<0&&(o+=r.shape.length);const a=r.shape[o],i=r.shape.length,c=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==o&&(c[u++]=r.shape[p]);const l=new Array(a),d=new Array(i).fill(0),h=r.shape.slice();h[o]=1;for(let p=0;p<l.length;p++)d[o]=p,l[p]=Oo({inputs:{x:r},attrs:{begin:d,size:h},backend:t});return l.map(({dataId:p,dtype:f})=>({dataId:p,dtype:f,shape:c}))}const jZ={kernelName:Fl,backendName:"wasm",kernelFunc:HZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qZ(n){const{inputs:{x:e},backend:t}=n,s=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(s).fill(0),s}const XZ={kernelName:Ol,backendName:"wasm",kernelFunc:qZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KZ=[_8,R8,A8,O8,U8,j8,K8,J8,nY,cY,lY,uY,pY,fY,bY,wY,IY,kY,CY,TY,RY,FY,LY,PY,zY,VY,WY,UY,jY,qY,XY,ZY,e7,s7,a7,l7,d7,p7,M8,f7,b7,y7,I7,k7,v7,C7,N7,E7,A7,D7,M7,B7,W7,U7,j7,q7,X7,Z7,e9,s9,o9,c9,u9,h9,_v,m9,x9,I9,$9,v9,C9,S9,N9,Q8,_9,D9,M9,B9,z9,V9,G9,q9,Y9,Z9,aY,eZ,nZ,oZ,cZ,uZ,hZ,fZ,mZ,gZ,bZ,wZ,$Z,CZ,NZ,EZ,_Z,DZ,FZ,OZ,PZ,VZ,GZ,z8,jZ,XZ];for(const n of KZ)Vf(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ef=H();ef.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});ef.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(ef.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});function Jv(n){throw new Error('Could not dynamically require "'+n+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Kg={exports:{}};(function(n,e){var t=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};function o(){return z.buffer!=ce&&Ve(z.buffer),we}function a(){return z.buffer!=ce&&Ve(z.buffer),Ne}function i(){return z.buffer!=ce&&Ve(z.buffer),Fe}function c(){return z.buffer!=ce&&Ve(z.buffer),ze}function u(){return z.buffer!=ce&&Ve(z.buffer),qe}var l=typeof r<"u"?r:{},d,h;l.ready=new Promise(function(E,U){d=E,h=U});var p;typeof process<"u"&&process.listeners&&(p={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},l),m=(E,U)=>{throw U},g=typeof window=="object",b=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y=l.ENVIRONMENT_IS_PTHREAD||!1,w="";function I(E){return l.locateFile?l.locateFile(E,w):w+E}var k,$,C;function N(E){if(E instanceof sr)return;B("exiting due to exception: "+E)}if(x){b?w=Ms.dirname(w)+"/":w=__dirname+"/";var T,_;typeof Jv=="function"&&(T=Ms,_=Ms),k=(U,te)=>(U=_.normalize(U),T.readFileSync(U,te?void 0:"utf8")),C=U=>{var te=k(U,!0);return te.buffer||(te=new Uint8Array(te)),te},$=(U,te,fe)=>{U=_.normalize(U),T.readFile(U,function($e,Ue){$e?fe($e):te(Ue.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(U){if(!(U instanceof sr))throw U}),process.on("unhandledRejection",function(U){throw U}),m=(U,te)=>{if(xt())throw process.exitCode=U,te;N(te),process.exit(U)},l.inspect=function(){return"[Emscripten Module object]"};let E;try{E=Ms}catch(U){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),U}hr.Worker=E.Worker}else(g||b)&&(b?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),typeof s<"u"&&s&&(w=s),w.indexOf("blob:")!==0?w=w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):w="",x||(k=E=>{var U=new XMLHttpRequest;return U.open("GET",E,!1),U.send(null),U.responseText},b&&(C=E=>{var U=new XMLHttpRequest;return U.open("GET",E,!1),U.responseType="arraybuffer",U.send(null),new Uint8Array(U.response)}),$=(E,U,te)=>{var fe=new XMLHttpRequest;fe.open("GET",E,!0),fe.responseType="arraybuffer",fe.onload=()=>{if(fe.status==200||fe.status==0&&fe.response){U(fe.response);return}te()},fe.onerror=te,fe.send(null)}));x&&typeof performance>"u"&&(hr.performance=Ms.performance);var O=console.log.bind(console),P=console.warn.bind(console);x&&(O=E=>T.writeSync(1,E+`
`),P=E=>T.writeSync(2,E+`
`));var V=l.print||O,B=l.printErr||P;Object.assign(l,f),f=null,l.arguments&&l.arguments,l.thisProgram&&l.thisProgram,l.quit&&(m=l.quit);var W;l.wasmBinary&&(W=l.wasmBinary);var q=l.noExitRuntime||!0;typeof WebAssembly!="object"&&ys("no native wasm support detected");var z,X,Y=!1,Z;function ne(E,U){E||ys(U)}var J=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function ae(E,U,te){for(var fe=U+te,$e=U;E[$e]&&!($e>=fe);)++$e;if($e-U>16&&E.buffer&&J)return J.decode(E.buffer instanceof SharedArrayBuffer?E.slice(U,$e):E.subarray(U,$e));for(var Ue="";U<$e;){var _e=E[U++];if(!(_e&128)){Ue+=String.fromCharCode(_e);continue}var Ae=E[U++]&63;if((_e&224)==192){Ue+=String.fromCharCode((_e&31)<<6|Ae);continue}var _t=E[U++]&63;if((_e&240)==224?_e=(_e&15)<<12|Ae<<6|_t:_e=(_e&7)<<18|Ae<<12|_t<<6|E[U++]&63,_e<65536)Ue+=String.fromCharCode(_e);else{var Gn=_e-65536;Ue+=String.fromCharCode(55296|Gn>>10,56320|Gn&1023)}}return Ue}function re(E,U){return E?ae(a(),E,U):""}function ue(E,U,te,fe){if(!(fe>0))return 0;for(var $e=te,Ue=te+fe-1,_e=0;_e<E.length;++_e){var Ae=E.charCodeAt(_e);if(Ae>=55296&&Ae<=57343){var _t=E.charCodeAt(++_e);Ae=65536+((Ae&1023)<<10)|_t&1023}if(Ae<=127){if(te>=Ue)break;U[te++]=Ae}else if(Ae<=2047){if(te+1>=Ue)break;U[te++]=192|Ae>>6,U[te++]=128|Ae&63}else if(Ae<=65535){if(te+2>=Ue)break;U[te++]=224|Ae>>12,U[te++]=128|Ae>>6&63,U[te++]=128|Ae&63}else{if(te+3>=Ue)break;U[te++]=240|Ae>>18,U[te++]=128|Ae>>12&63,U[te++]=128|Ae>>6&63,U[te++]=128|Ae&63}}return U[te]=0,te-$e}function ge(E,U,te){return ue(E,a(),U,te)}var ce,we,Ne,Fe,ze,qe;y&&(ce=l.buffer);function Ve(E){ce=E,l.HEAP8=we=new Int8Array(E),l.HEAP16=new Int16Array(E),l.HEAP32=Fe=new Int32Array(E),l.HEAPU8=Ne=new Uint8Array(E),l.HEAPU16=new Uint16Array(E),l.HEAPU32=ze=new Uint32Array(E),l.HEAPF32=new Float32Array(E),l.HEAPF64=qe=new Float64Array(E)}var Ye=l.INITIAL_MEMORY||16777216;if(y)z=l.wasmMemory,ce=l.buffer;else if(l.wasmMemory)z=l.wasmMemory;else if(z=new WebAssembly.Memory({initial:Ye/65536,maximum:32768,shared:!0}),!(z.buffer instanceof SharedArrayBuffer))throw B("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");z&&(ce=z.buffer),Ye=ce.byteLength,Ve(ce);var Te,Je=[],at=[],Sn=[];function xt(){return q}function Nn(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)ln(l.preRun.shift());it(Je)}function Xt(){y||it(at)}function xs(){if(!y){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)ns(l.postRun.shift());it(Sn)}}function ln(E){Je.unshift(E)}function Wn(E){at.unshift(E)}function ns(E){Sn.unshift(E)}var Kt=0,un=null;function tr(E){Kt++,l.monitorRunDependencies&&l.monitorRunDependencies(Kt)}function Jr(E){if(Kt--,l.monitorRunDependencies&&l.monitorRunDependencies(Kt),Kt==0&&un){var U=un;un=null,U()}}function ys(E){y?postMessage({cmd:"onAbort",arg:E}):l.onAbort&&l.onAbort(E),E="Aborted("+E+")",B(E),Y=!0,Z=1,E+=". Build with -sASSERTIONS for more info.";var U=new WebAssembly.RuntimeError(E);throw h(U),U}var tc="data:application/octet-stream;base64,";function nr(E){return E.startsWith(tc)}function Qr(E){return E.startsWith("file://")}var Yt;Yt="tfjs-backend-wasm-threaded-simd.wasm",nr(Yt)||(Yt=I(Yt));function au(E){try{if(E==Yt&&W)return new Uint8Array(W);if(C)return C(E);throw"both async and sync fetching of the wasm failed"}catch(U){ys(U)}}function iu(){if(!W&&(g||b)){if(typeof fetch=="function"&&!Qr(Yt))return fetch(Yt,{credentials:"same-origin"}).then(function(E){if(!E.ok)throw"failed to load wasm binary file at '"+Yt+"'";return E.arrayBuffer()}).catch(function(){return au(Yt)});if($)return new Promise(function(E,U){$(Yt,function(te){E(new Uint8Array(te))},U)})}return Promise.resolve().then(function(){return au(Yt)})}function cu(){var E={env:cb,wasi_snapshot_preview1:cb};function U(_e,Ae){var _t=_e.exports;if(l.asm=_t,hu(l.asm._emscripten_tls_init),Te=l.asm.__indirect_function_table,Wn(l.asm.__wasm_call_ctors),X=Ae,!y){var Gn=de.unusedWorkers.length;de.unusedWorkers.forEach(function(ar){de.loadWasmModuleToWorker(ar,function(){--Gn||Jr()})})}}y||tr();function te(_e){U(_e.instance,_e.module)}function fe(_e){return iu().then(function(Ae){return WebAssembly.instantiate(Ae,E)}).then(function(Ae){return Ae}).then(_e,function(Ae){B("failed to asynchronously prepare wasm: "+Ae),ys(Ae)})}function $e(){return!W&&typeof WebAssembly.instantiateStreaming=="function"&&!nr(Yt)&&!Qr(Yt)&&!x&&typeof fetch=="function"?fetch(Yt,{credentials:"same-origin"}).then(function(_e){var Ae=WebAssembly.instantiateStreaming(_e,E);return Ae.then(te,function(_t){return B("wasm streaming compile failed: "+_t),B("falling back to ArrayBuffer instantiation"),fe(te)})}):fe(te)}if(l.instantiateWasm)try{var Ue=l.instantiateWasm(E,U);return Ue}catch(_e){B("Module.instantiateWasm callback failed with error: "+_e),h(_e)}return $e().catch(h),{}}var lu={};function sr(E){this.name="ExitStatus",this.message="Program terminated with exit("+E+")",this.status=E}function ea(E){var U=de.pthreads[E];delete de.pthreads[E],U.terminate(),Lh(E),de.runningWorkers.splice(de.runningWorkers.indexOf(U),1),U.pthread_ptr=0}function uu(E){var U=de.pthreads[E];U.postMessage({cmd:"cancel"})}function eo(E){var U=de.pthreads[E];ne(U),de.returnWorkerToPool(U)}function to(E){var U=de.getNewWorker();if(!U)return 6;de.runningWorkers.push(U),de.pthreads[E.pthread_ptr]=U,U.pthread_ptr=E.pthread_ptr;var te={cmd:"run",start_routine:E.startRoutine,arg:E.arg,pthread_ptr:E.pthread_ptr};return U.runPthread=()=>{te.time=performance.now(),U.postMessage(te,E.transferList)},U.loaded&&(U.runPthread(),delete U.runPthread),0}function du(E){if(y)return ta(1,1,E);Z=E,xt()||(de.terminateAllThreads(),l.onExit&&l.onExit(E),Y=!0),m(E,new sr(E))}function K(E,U){if(Z=E,!U&&y)throw Oe(E),"unwind";du(E)}var oe=K;function ve(E){if(E instanceof sr||E=="unwind")return Z;m(1,E)}var de={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){y?de.initWorker():de.initMainThread()},initMainThread:function(){for(var E=8;E--;)de.allocateUnusedWorker()},initWorker:function(){q=!1},setExitStatus:function(E){Z=E},terminateAllThreads:function(){for(var E of Object.values(de.pthreads))de.returnWorkerToPool(E);for(var E of de.unusedWorkers)E.terminate();de.unusedWorkers=[]},returnWorkerToPool:function(E){var U=E.pthread_ptr;delete de.pthreads[U],de.unusedWorkers.push(E),de.runningWorkers.splice(de.runningWorkers.indexOf(E),1),E.pthread_ptr=0,Lh(U)},receiveObjectTransfer:function(E){},threadInitTLS:function(){de.tlsInitFunctions.forEach(E=>E())},loadWasmModuleToWorker:function(E,U){E.onmessage=te=>{var fe=te.data,$e=fe.cmd;if(E.pthread_ptr&&(de.currentProxiedOperationCallerThread=E.pthread_ptr),fe.targetThread&&fe.targetThread!=fu()){var Ue=de.pthreads[fe.targetThread];Ue?Ue.postMessage(fe,fe.transferList):B('Internal error! Worker sent a message "'+$e+'" to target pthread '+fe.targetThread+", but that thread no longer exists!"),de.currentProxiedOperationCallerThread=void 0;return}$e==="processProxyingQueue"?Oh(fe.queue):$e==="spawnThread"?to(fe):$e==="cleanupThread"?eo(fe.thread):$e==="killThread"?ea(fe.thread):$e==="cancelThread"?uu(fe.thread):$e==="loaded"?(E.loaded=!0,U&&U(E),E.runPthread&&(E.runPthread(),delete E.runPthread)):$e==="print"?V("Thread "+fe.threadId+": "+fe.text):$e==="printErr"?B("Thread "+fe.threadId+": "+fe.text):$e==="alert"?alert("Thread "+fe.threadId+": "+fe.text):fe.target==="setimmediate"?E.postMessage(fe):$e==="onAbort"?l.onAbort&&l.onAbort(fe.arg):$e&&B("worker sent an unknown command "+$e),de.currentProxiedOperationCallerThread=void 0},E.onerror=te=>{var fe="worker sent an error!";throw B(fe+" "+te.filename+":"+te.lineno+": "+te.message),te},x&&(E.on("message",function(te){E.onmessage({data:te})}),E.on("error",function(te){E.onerror(te)}),E.on("detachedExit",function(){})),E.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob||s,wasmMemory:z,wasmModule:X})},allocateUnusedWorker:function(){var E=I("tfjs-backend-wasm-threaded-simd.worker.js");de.unusedWorkers.push(new Worker(E))},getNewWorker:function(){return de.unusedWorkers.length==0&&(de.allocateUnusedWorker(),de.loadWasmModuleToWorker(de.unusedWorkers[0])),de.unusedWorkers.pop()}};l.PThread=de;function it(E){for(;E.length>0;)E.shift()(l)}function yt(E){var U=Ph(),te=E();return mu(U),te}function Le(){var E=fu(),U=i()[E+44>>2],te=i()[E+48>>2],fe=U-te;pb(U,fe),mu(U)}l.establishStackSpace=Le;function Oe(E){if(y)return ta(2,0,E);try{oe(E)}catch(U){ve(U)}}var kt=[];function Un(E){var U=kt[E];return U||(E>=kt.length&&(kt.length=E+1),kt[E]=U=Te.get(E)),U}function rr(E,U){var te=Un(E)(U);xt()?de.setExitStatus(te):hb(te)}l.invokeEntryPoint=rr;function hu(E){de.tlsInitFunctions.push(E)}function nc(E,U){o().set(E,U)}function Fh(E){lb(E,!b,1,!g),de.threadInitTLS()}function dn(E){y?postMessage({cmd:"cleanupThread",thread:E}):eo(E)}function or(E,U,te,fe){return y?ta(3,1,E,U,te,fe):sc(E,U,te,fe)}function sc(E,U,te,fe){if(typeof SharedArrayBuffer>"u")return B("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var $e=[],Ue=0;if(y&&($e.length===0||Ue))return or(E,U,te,fe);var _e={startRoutine:te,pthread_ptr:E,arg:fe,transferList:$e};return y?(_e.cmd="spawnThread",postMessage(_e,$e),0):to(_e)}function hC(){return 2097152}var pC=!0;function fC(){return pC}function Oh(E){Atomics.store(i(),E>>2,1),fu()&&db(E),Atomics.compareExchange(i(),E>>2,1,0)}l.executeNotifiedProxyingQueue=Oh;function mC(E,U,te,fe){if(E==U)setTimeout(()=>Oh(fe));else if(y)postMessage({targetThread:E,cmd:"processProxyingQueue",queue:fe});else{var $e=de.pthreads[E];if(!$e)return;$e.postMessage({cmd:"processProxyingQueue",queue:fe})}return 1}function gC(E,U,te){return-1}function bC(){ys("")}function rc(E){rc.shown||(rc.shown={}),rc.shown[E]||(rc.shown[E]=1,x&&(E="warning: "+E),B(E))}function xC(){x||b||rc("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function yC(){return Date.now()}function sb(){return 2147483648}function wC(){return sb()}var pu;x?pu=()=>{var E=process.hrtime();return E[0]*1e3+E[1]/1e6}:y?pu=()=>performance.now()-l.__performance_now_clock_drift:pu=()=>performance.now();function IC(E,U,te){a().copyWithin(E,U,U+te)}function kC(){return x?Ms.cpus().length:navigator.hardwareConcurrency}function ta(E,U){var te=arguments.length-2,fe=arguments;return yt(()=>{for(var $e=te,Ue=gu($e*8),_e=Ue>>3,Ae=0;Ae<te;Ae++){var _t=fe[2+Ae];u()[_e+Ae]=_t}return ub(E,$e,Ue,U)})}var Mh=[];function $C(E,U,te){Mh.length=U;for(var fe=te>>3,$e=0;$e<U;$e++)Mh[$e]=u()[fe+$e];var Ue=E<0,_e=Ue?lu[-E-1]:RC[E];return _e.apply(null,Mh)}function vC(E){try{return z.grow(E-ce.byteLength+65535>>>16),Ve(z.buffer),1}catch{}}function CC(E){var U=a().length;if(E=E>>>0,E<=U)return!1;var te=sb();if(E>te)return!1;let fe=(_t,Gn)=>_t+(Gn-_t%Gn)%Gn;for(var $e=1;$e<=4;$e*=2){var Ue=U*(1+.2/$e);Ue=Math.min(Ue,E+100663296);var _e=Math.min(te,fe(Math.max(E,Ue),65536)),Ae=vC(_e);if(Ae)return!0}return!1}function SC(){throw"unwind"}function rb(E){return y?ta(4,1,E):52}function ob(E,U,te,fe,$e){return y?ta(5,1,E,U,te,fe,$e):70}var NC=[null,[],[]];function TC(E,U){var te=NC[E];U===0||U===10?((E===1?V:B)(ae(te,0)),te.length=0):te.push(U)}function ab(E,U,te,fe){if(y)return ta(6,1,E,U,te,fe);for(var $e=0,Ue=0;Ue<te;Ue++){var _e=c()[U>>2],Ae=c()[U+4>>2];U+=8;for(var _t=0;_t<Ae;_t++)TC(E,a()[_e+_t]);$e+=Ae}return c()[fe>>2]=$e,0}function ib(E){var U=l["_"+E];return U}function EC(E,U,te,fe,$e){var Ue={string:Tn=>{var na=0;if(Tn!=null&&Tn!==0){var gb=(Tn.length<<2)+1;na=gu(gb),ge(Tn,na,gb)}return na},array:Tn=>{var na=gu(Tn.length);return nc(Tn,na),na}};function _e(Tn){return U==="string"?re(Tn):U==="boolean"?Boolean(Tn):Tn}var Ae=ib(E),_t=[],Gn=0;if(fe)for(var ar=0;ar<fe.length;ar++){var mb=Ue[te[ar]];mb?(Gn===0&&(Gn=Ph()),_t[ar]=mb(fe[ar])):_t[ar]=fe[ar]}var Bh=Ae.apply(null,_t);function DC(Tn){return Gn!==0&&mu(Gn),_e(Tn)}return Bh=DC(Bh),Bh}function _C(E,U,te,fe){te=te||[];var $e=te.every(_e=>_e==="number"||_e==="boolean"),Ue=U!=="string";return Ue&&$e&&!fe?ib(E):function(){return EC(E,U,te,arguments)}}de.init();var RC=[null,du,Oe,or,rb,ob,ab],cb={__emscripten_init_main_thread_js:Fh,__emscripten_thread_cleanup:dn,__pthread_create_js:sc,_emscripten_default_pthread_stack_size:hC,_emscripten_get_now_is_monotonic:fC,_emscripten_notify_task_queue:mC,_emscripten_set_offscreencanvas_size:gC,abort:bC,emscripten_check_blocking_allowed:xC,emscripten_date_now:yC,emscripten_get_heap_max:wC,emscripten_get_now:pu,emscripten_memcpy_big:IC,emscripten_num_logical_cores:kC,emscripten_receive_on_main_thread_js:$C,emscripten_resize_heap:CC,emscripten_unwind_to_js_event_loop:SC,exit:oe,fd_close:rb,fd_seek:ob,fd_write:ab,memory:z||l.wasmMemory};cu(),l.___wasm_call_ctors=function(){return(l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},l._init=function(){return(l._init=l.asm.init).apply(null,arguments)},l._init_with_threads_count=function(){return(l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},l._get_threads_count=function(){return(l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},l._register_tensor=function(){return(l._register_tensor=l.asm.register_tensor).apply(null,arguments)},l._dispose_data=function(){return(l._dispose_data=l.asm.dispose_data).apply(null,arguments)},l._dispose=function(){return(l._dispose=l.asm.dispose).apply(null,arguments)},l._Abs=function(){return(l._Abs=l.asm.Abs).apply(null,arguments)},l._Add=function(){return(l._Add=l.asm.Add).apply(null,arguments)},l._AddN=function(){return(l._AddN=l.asm.AddN).apply(null,arguments)},l._All=function(){return(l._All=l.asm.All).apply(null,arguments)},l._Any=function(){return(l._Any=l.asm.Any).apply(null,arguments)},l._ArgMax=function(){return(l._ArgMax=l.asm.ArgMax).apply(null,arguments)},l._AvgPool=function(){return(l._AvgPool=l.asm.AvgPool).apply(null,arguments)},l._BatchMatMul=function(){return(l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},l._Ceil=function(){return(l._Ceil=l.asm.Ceil).apply(null,arguments)},l._ClipByValue=function(){return(l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},l._Conv2D=function(){return(l._Conv2D=l.asm.Conv2D).apply(null,arguments)},l._Conv2DBackpropInput=function(){return(l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},l._Cos=function(){return(l._Cos=l.asm.Cos).apply(null,arguments)},l._Cosh=function(){return(l._Cosh=l.asm.Cosh).apply(null,arguments)},l._CropAndResize=function(){return(l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},l._Cumprod=function(){return(l._Cumprod=l.asm.Cumprod).apply(null,arguments)},l._Cumsum=function(){return(l._Cumsum=l.asm.Cumsum).apply(null,arguments)},l._DepthToSpace=function(){return(l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},l._DepthwiseConv2dNative=function(){return(l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},l._Elu=function(){return(l._Elu=l.asm.Elu).apply(null,arguments)},l._Equal=function(){return(l._Equal=l.asm.Equal).apply(null,arguments)},l._Exp=function(){return(l._Exp=l.asm.Exp).apply(null,arguments)},l._FlipLeftRight=function(){return(l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},l._Floor=function(){return(l._Floor=l.asm.Floor).apply(null,arguments)},l._FloorDiv=function(){return(l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},l._FusedBatchNorm=function(){return(l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},l._FusedConv2D=function(){return(l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},l._FusedDepthwiseConv2D=function(){return(l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},l._Gather=function(){return(l._Gather=l.asm.Gather).apply(null,arguments)},l._GatherNd=function(){return(l._GatherNd=l.asm.GatherNd).apply(null,arguments)},l._Greater=function(){return(l._Greater=l.asm.Greater).apply(null,arguments)},l._GreaterEqual=function(){return(l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},l._IsNan=function(){return(l._IsNan=l.asm.IsNan).apply(null,arguments)},l._LeakyRelu=function(){return(l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},l._Less=function(){return(l._Less=l.asm.Less).apply(null,arguments)},l._LessEqual=function(){return(l._LessEqual=l.asm.LessEqual).apply(null,arguments)},l._Log=function(){return(l._Log=l.asm.Log).apply(null,arguments)},l._LogicalAnd=function(){return(l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},l._LogicalNot=function(){return(l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},l._LogicalOr=function(){return(l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},l._LogicalXor=function(){return(l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},l._Max=function(){return(l._Max=l.asm.Max).apply(null,arguments)},l._MaxPool=function(){return(l._MaxPool=l.asm.MaxPool).apply(null,arguments)},l._Maximum=function(){return(l._Maximum=l.asm.Maximum).apply(null,arguments)},l._Mean=function(){return(l._Mean=l.asm.Mean).apply(null,arguments)},l._Min=function(){return(l._Min=l.asm.Min).apply(null,arguments)},l._Minimum=function(){return(l._Minimum=l.asm.Minimum).apply(null,arguments)},l._MirrorPad=function(){return(l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},l._Multiply=function(){return(l._Multiply=l.asm.Multiply).apply(null,arguments)},l._Neg=function(){return(l._Neg=l.asm.Neg).apply(null,arguments)},l._NonMaxSuppressionV3=function(){return(l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},l._NonMaxSuppressionV4=function(){return(l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},l._NonMaxSuppressionV5=function(){return(l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},l._NotEqual=function(){return(l._NotEqual=l.asm.NotEqual).apply(null,arguments)},l._OneHot=function(){return(l._OneHot=l.asm.OneHot).apply(null,arguments)},l._PadV2=function(){return(l._PadV2=l.asm.PadV2).apply(null,arguments)},l._Pow=function(){return(l._Pow=l.asm.Pow).apply(null,arguments)},l._Prelu=function(){return(l._Prelu=l.asm.Prelu).apply(null,arguments)},l._Prod=function(){return(l._Prod=l.asm.Prod).apply(null,arguments)},l._RealDiv=function(){return(l._RealDiv=l.asm.RealDiv).apply(null,arguments)},l._Reciprocal=function(){return(l._Reciprocal=l.asm.Reciprocal).apply(null,arguments)},l._Relu=function(){return(l._Relu=l.asm.Relu).apply(null,arguments)},l._Relu6=function(){return(l._Relu6=l.asm.Relu6).apply(null,arguments)},l._ResizeBilinear=function(){return(l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},l._ResizeNearestNeighbor=function(){return(l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},l._Reverse=function(){return(l._Reverse=l.asm.Reverse).apply(null,arguments)},l._RotateWithOffset=function(){return(l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},l._Round=function(){return(l._Round=l.asm.Round).apply(null,arguments)},l._Rsqrt=function(){return(l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},l._ScatterNd=function(){return(l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},l._SelectV2=function(){return(l._SelectV2=l.asm.SelectV2).apply(null,arguments)},l._Sigmoid=function(){return(l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},l._Sin=function(){return(l._Sin=l.asm.Sin).apply(null,arguments)},l._Softmax=function(){return(l._Softmax=l.asm.Softmax).apply(null,arguments)},l._SparseFillEmptyRows=function(){return(l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},l._SparseReshape=function(){return(l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},l._SparseSegmentReduction=function(){return(l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},l._Sqrt=function(){return(l._Sqrt=l.asm.Sqrt).apply(null,arguments)},l._Square=function(){return(l._Square=l.asm.Square).apply(null,arguments)},l._SquaredDifference=function(){return(l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},l._Step=function(){return(l._Step=l.asm.Step).apply(null,arguments)},l._StridedSlice=function(){return(l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},l._Sub=function(){return(l._Sub=l.asm.Sub).apply(null,arguments)},l._Sum=function(){return(l._Sum=l.asm.Sum).apply(null,arguments)},l._Tan=function(){return(l._Tan=l.asm.Tan).apply(null,arguments)},l._Tanh=function(){return(l._Tanh=l.asm.Tanh).apply(null,arguments)},l._Tile=function(){return(l._Tile=l.asm.Tile).apply(null,arguments)},l._TopK=function(){return(l._TopK=l.asm.TopK).apply(null,arguments)},l._Transform=function(){return(l._Transform=l.asm.Transform).apply(null,arguments)},l._Transpose=function(){return(l._Transpose=l.asm.Transpose).apply(null,arguments)},l.__FusedMatMul=function(){return(l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},l._malloc=function(){return(l._malloc=l.asm.malloc).apply(null,arguments)},l._free=function(){return(l._free=l.asm.free).apply(null,arguments)},l.__emscripten_tls_init=function(){return(l.__emscripten_tls_init=l.asm._emscripten_tls_init).apply(null,arguments)};var fu=l._pthread_self=function(){return(fu=l._pthread_self=l.asm.pthread_self).apply(null,arguments)};l.___errno_location=function(){return(l.___errno_location=l.asm.__errno_location).apply(null,arguments)};var lb=l.__emscripten_thread_init=function(){return(lb=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)};l.__emscripten_thread_crashed=function(){return(l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},l._emscripten_main_thread_process_queued_calls=function(){return(l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},l._emscripten_main_browser_thread_id=function(){return(l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)};var ub=l._emscripten_run_in_main_runtime_thread_js=function(){return(ub=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)};l._emscripten_dispatch_to_thread_=function(){return(l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)};var db=l.__emscripten_proxy_execute_task_queue=function(){return(db=l.__emscripten_proxy_execute_task_queue=l.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Lh=l.__emscripten_thread_free_data=function(){return(Lh=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},hb=l.__emscripten_thread_exit=function(){return(hb=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},pb=l._emscripten_stack_set_limits=function(){return(pb=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},Ph=l.stackSave=function(){return(Ph=l.stackSave=l.asm.stackSave).apply(null,arguments)},mu=l.stackRestore=function(){return(mu=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},gu=l.stackAlloc=function(){return(gu=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)};l.dynCall_iijjiiii=function(){return(l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},l.dynCall_jiji=function(){return(l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)},l.keepRuntimeAlive=xt,l.wasmMemory=z,l.cwrap=_C,l.ExitStatus=sr,l.PThread=de;var bu;un=function E(){bu||fb(),bu||(un=E)};function fb(E){if(Kt>0)return;if(y){d(l),Xt(),postMessage({cmd:"loaded"});return}if(Nn(),Kt>0)return;function U(){bu||(bu=!0,l.calledRun=!0,!Y&&(Xt(),d(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),xs()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),U()},1)):U()}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();fb();var xu;p&&(xu={uncaughtException:process.listeners("uncaughtException").filter(function(E){return!p.uncaughtException.indexOf(E)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(E){return!p.unhandledRejection.indexOf(E)>-1})});var yu;if(typeof WasmBackendModule<"u")yu=WasmBackendModule;else if(typeof r<"u")yu=r;else throw new Error("Could not find wasm module in post.js");if(xu){var AC=yu._dispose;yu._dispose=function(){AC(),xu.uncaughtException.forEach(function(E){process.removeListener("uncaughtException",E)}),xu.unhandledRejection.forEach(function(E){process.removeListener("unhandledRejection",E)})}}return r.ready}})();n.exports=t})(Kg);const Qv=Kg.exports,YZ=nf({__proto__:null,default:Qv},[Kg.exports]);var ZZ=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`,Yg={exports:{}};(function(n,e){var t=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(r){r=r||{};var o=typeof r<"u"?r:{},a,i;o.ready=new Promise(function(K,oe){a=K,i=oe});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},o),l=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="";function f(K){return o.locateFile?o.locateFile(K,p):p+K}var m,g,b;if(h){d?p=Ms.dirname(p)+"/":p=__dirname+"/";var x,y;typeof Jv=="function"&&(x=Ms,y=Ms),m=(K,oe)=>(K=y.normalize(K),x.readFileSync(K,oe?void 0:"utf8")),b=K=>{var oe=m(K,!0);return oe.buffer||(oe=new Uint8Array(oe)),oe},g=(K,oe,ve)=>{K=y.normalize(K),x.readFile(K,function(de,it){de?ve(de):oe(it.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof xt))throw K}),process.on("unhandledRejection",function(K){throw K}),o.inspect=function(){return"[Emscripten Module object]"}}else(l||d)&&(d?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),s&&(p=s),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",m=K=>{var oe=new XMLHttpRequest;return oe.open("GET",K,!1),oe.send(null),oe.responseText},d&&(b=K=>{var oe=new XMLHttpRequest;return oe.open("GET",K,!1),oe.responseType="arraybuffer",oe.send(null),new Uint8Array(oe.response)}),g=(K,oe,ve)=>{var de=new XMLHttpRequest;de.open("GET",K,!0),de.responseType="arraybuffer",de.onload=()=>{if(de.status==200||de.status==0&&de.response){oe(de.response);return}ve()},de.onerror=ve,de.send(null)});var w=o.print||console.log.bind(console),I=o.printErr||console.warn.bind(console);Object.assign(o,u),u=null,o.arguments&&o.arguments,o.thisProgram&&o.thisProgram,o.quit&&o.quit;var k;o.wasmBinary&&(k=o.wasmBinary),o.noExitRuntime,typeof WebAssembly!="object"&&ze("no native wasm support detected");var $,C=!1,N=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function T(K,oe,ve){for(var de=oe+ve,it=oe;K[it]&&!(it>=de);)++it;if(it-oe>16&&K.buffer&&N)return N.decode(K.subarray(oe,it));for(var yt="";oe<it;){var Le=K[oe++];if(!(Le&128)){yt+=String.fromCharCode(Le);continue}var Oe=K[oe++]&63;if((Le&224)==192){yt+=String.fromCharCode((Le&31)<<6|Oe);continue}var kt=K[oe++]&63;if((Le&240)==224?Le=(Le&15)<<12|Oe<<6|kt:Le=(Le&7)<<18|Oe<<12|kt<<6|K[oe++]&63,Le<65536)yt+=String.fromCharCode(Le);else{var Un=Le-65536;yt+=String.fromCharCode(55296|Un>>10,56320|Un&1023)}}return yt}function _(K,oe){return K?T(W,K,oe):""}function O(K,oe,ve,de){if(!(de>0))return 0;for(var it=ve,yt=ve+de-1,Le=0;Le<K.length;++Le){var Oe=K.charCodeAt(Le);if(Oe>=55296&&Oe<=57343){var kt=K.charCodeAt(++Le);Oe=65536+((Oe&1023)<<10)|kt&1023}if(Oe<=127){if(ve>=yt)break;oe[ve++]=Oe}else if(Oe<=2047){if(ve+1>=yt)break;oe[ve++]=192|Oe>>6,oe[ve++]=128|Oe&63}else if(Oe<=65535){if(ve+2>=yt)break;oe[ve++]=224|Oe>>12,oe[ve++]=128|Oe>>6&63,oe[ve++]=128|Oe&63}else{if(ve+3>=yt)break;oe[ve++]=240|Oe>>18,oe[ve++]=128|Oe>>12&63,oe[ve++]=128|Oe>>6&63,oe[ve++]=128|Oe&63}}return oe[ve]=0,ve-it}function P(K,oe,ve){return O(K,W,oe,ve)}var V,B,W,q;function z(K){V=K,o.HEAP8=B=new Int8Array(K),o.HEAP16=new Int16Array(K),o.HEAP32=new Int32Array(K),o.HEAPU8=W=new Uint8Array(K),o.HEAPU16=new Uint16Array(K),o.HEAPU32=q=new Uint32Array(K),o.HEAPF32=new Float32Array(K),o.HEAPF64=new Float64Array(K)}o.INITIAL_MEMORY;var X=[],Y=[],Z=[];function ne(){if(o.preRun)for(typeof o.preRun=="function"&&(o.preRun=[o.preRun]);o.preRun.length;)re(o.preRun.shift());Nn(X)}function J(){Nn(Y)}function ae(){if(o.postRun)for(typeof o.postRun=="function"&&(o.postRun=[o.postRun]);o.postRun.length;)ge(o.postRun.shift());Nn(Z)}function re(K){X.unshift(K)}function ue(K){Y.unshift(K)}function ge(K){Z.unshift(K)}var ce=0,we=null;function Ne(K){ce++,o.monitorRunDependencies&&o.monitorRunDependencies(ce)}function Fe(K){if(ce--,o.monitorRunDependencies&&o.monitorRunDependencies(ce),ce==0&&we){var oe=we;we=null,oe()}}function ze(K){o.onAbort&&o.onAbort(K),K="Aborted("+K+")",I(K),C=!0,K+=". Build with -sASSERTIONS for more info.";var oe=new WebAssembly.RuntimeError(K);throw i(oe),oe}var qe="data:application/octet-stream;base64,";function Ve(K){return K.startsWith(qe)}function Ye(K){return K.startsWith("file://")}var Te;Te="tfjs-backend-wasm.wasm",Ve(Te)||(Te=f(Te));function Je(K){try{if(K==Te&&k)return new Uint8Array(k);if(b)return b(K);throw"both async and sync fetching of the wasm failed"}catch(oe){ze(oe)}}function at(){if(!k&&(l||d)){if(typeof fetch=="function"&&!Ye(Te))return fetch(Te,{credentials:"same-origin"}).then(function(K){if(!K.ok)throw"failed to load wasm binary file at '"+Te+"'";return K.arrayBuffer()}).catch(function(){return Je(Te)});if(g)return new Promise(function(K,oe){g(Te,function(ve){K(new Uint8Array(ve))},oe)})}return Promise.resolve().then(function(){return Je(Te)})}function Sn(){var K={env:iu,wasi_snapshot_preview1:iu};function oe(Le,Oe){var kt=Le.exports;o.asm=kt,$=o.asm.memory,z($.buffer),o.asm.__indirect_function_table,ue(o.asm.__wasm_call_ctors),Fe()}Ne();function ve(Le){oe(Le.instance)}function de(Le){return at().then(function(Oe){return WebAssembly.instantiate(Oe,K)}).then(function(Oe){return Oe}).then(Le,function(Oe){I("failed to asynchronously prepare wasm: "+Oe),ze(Oe)})}function it(){return!k&&typeof WebAssembly.instantiateStreaming=="function"&&!Ve(Te)&&!Ye(Te)&&!h&&typeof fetch=="function"?fetch(Te,{credentials:"same-origin"}).then(function(Le){var Oe=WebAssembly.instantiateStreaming(Le,K);return Oe.then(ve,function(kt){return I("wasm streaming compile failed: "+kt),I("falling back to ArrayBuffer instantiation"),de(ve)})}):de(ve)}if(o.instantiateWasm)try{var yt=o.instantiateWasm(K,oe);return yt}catch(Le){I("Module.instantiateWasm callback failed with error: "+Le),i(Le)}return it().catch(i),{}}function xt(K){this.name="ExitStatus",this.message="Program terminated with exit("+K+")",this.status=K}function Nn(K){for(;K.length>0;)K.shift()(o)}function Xt(K,oe){B.set(K,oe)}function xs(){ze("")}function ln(){return 2147483648}function Wn(){return ln()}function ns(K,oe,ve){W.copyWithin(K,oe,oe+ve)}function Kt(K){try{return $.grow(K-V.byteLength+65535>>>16),z($.buffer),1}catch{}}function un(K){var oe=W.length;K=K>>>0;var ve=ln();if(K>ve)return!1;let de=(kt,Un)=>kt+(Un-kt%Un)%Un;for(var it=1;it<=4;it*=2){var yt=oe*(1+.2/it);yt=Math.min(yt,K+100663296);var Le=Math.min(ve,de(Math.max(K,yt),65536)),Oe=Kt(Le);if(Oe)return!0}return!1}function tr(K){return 52}function Jr(K,oe,ve,de,it){return 70}var ys=[null,[],[]];function tc(K,oe){var ve=ys[K];oe===0||oe===10?((K===1?w:I)(T(ve,0)),ve.length=0):ve.push(oe)}function nr(K,oe,ve,de){for(var it=0,yt=0;yt<ve;yt++){var Le=q[oe>>2],Oe=q[oe+4>>2];oe+=8;for(var kt=0;kt<Oe;kt++)tc(K,W[Le+kt]);it+=Oe}return q[de>>2]=it,0}function Qr(K){var oe=o["_"+K];return oe}function Yt(K,oe,ve,de,it){var yt={string:dn=>{var or=0;if(dn!=null&&dn!==0){var sc=(dn.length<<2)+1;or=sr(sc),P(dn,or,sc)}return or},array:dn=>{var or=sr(dn.length);return Xt(dn,or),or}};function Le(dn){return oe==="string"?_(dn):oe==="boolean"?Boolean(dn):dn}var Oe=Qr(K),kt=[],Un=0;if(de)for(var rr=0;rr<de.length;rr++){var hu=yt[ve[rr]];hu?(Un===0&&(Un=cu()),kt[rr]=hu(de[rr])):kt[rr]=de[rr]}var nc=Oe.apply(null,kt);function Fh(dn){return Un!==0&&lu(Un),Le(dn)}return nc=Fh(nc),nc}function au(K,oe,ve,de){ve=ve||[];var it=ve.every(Le=>Le==="number"||Le==="boolean"),yt=oe!=="string";return yt&&it&&!de?Qr(K):function(){return Yt(K,oe,ve,arguments)}}var iu={abort:xs,emscripten_get_heap_max:Wn,emscripten_memcpy_big:ns,emscripten_resize_heap:un,fd_close:tr,fd_seek:Jr,fd_write:nr};Sn(),o.___wasm_call_ctors=function(){return(o.___wasm_call_ctors=o.asm.__wasm_call_ctors).apply(null,arguments)},o._init=function(){return(o._init=o.asm.init).apply(null,arguments)},o._init_with_threads_count=function(){return(o._init_with_threads_count=o.asm.init_with_threads_count).apply(null,arguments)},o._get_threads_count=function(){return(o._get_threads_count=o.asm.get_threads_count).apply(null,arguments)},o._register_tensor=function(){return(o._register_tensor=o.asm.register_tensor).apply(null,arguments)},o._dispose_data=function(){return(o._dispose_data=o.asm.dispose_data).apply(null,arguments)},o._dispose=function(){return(o._dispose=o.asm.dispose).apply(null,arguments)},o._Abs=function(){return(o._Abs=o.asm.Abs).apply(null,arguments)},o._Add=function(){return(o._Add=o.asm.Add).apply(null,arguments)},o._AddN=function(){return(o._AddN=o.asm.AddN).apply(null,arguments)},o._All=function(){return(o._All=o.asm.All).apply(null,arguments)},o._Any=function(){return(o._Any=o.asm.Any).apply(null,arguments)},o._ArgMax=function(){return(o._ArgMax=o.asm.ArgMax).apply(null,arguments)},o._AvgPool=function(){return(o._AvgPool=o.asm.AvgPool).apply(null,arguments)},o._BatchMatMul=function(){return(o._BatchMatMul=o.asm.BatchMatMul).apply(null,arguments)},o._Ceil=function(){return(o._Ceil=o.asm.Ceil).apply(null,arguments)},o._ClipByValue=function(){return(o._ClipByValue=o.asm.ClipByValue).apply(null,arguments)},o._Conv2D=function(){return(o._Conv2D=o.asm.Conv2D).apply(null,arguments)},o._Conv2DBackpropInput=function(){return(o._Conv2DBackpropInput=o.asm.Conv2DBackpropInput).apply(null,arguments)},o._Cos=function(){return(o._Cos=o.asm.Cos).apply(null,arguments)},o._Cosh=function(){return(o._Cosh=o.asm.Cosh).apply(null,arguments)},o._CropAndResize=function(){return(o._CropAndResize=o.asm.CropAndResize).apply(null,arguments)},o._Cumprod=function(){return(o._Cumprod=o.asm.Cumprod).apply(null,arguments)},o._Cumsum=function(){return(o._Cumsum=o.asm.Cumsum).apply(null,arguments)},o._DepthToSpace=function(){return(o._DepthToSpace=o.asm.DepthToSpace).apply(null,arguments)},o._DepthwiseConv2dNative=function(){return(o._DepthwiseConv2dNative=o.asm.DepthwiseConv2dNative).apply(null,arguments)},o._Elu=function(){return(o._Elu=o.asm.Elu).apply(null,arguments)},o._Equal=function(){return(o._Equal=o.asm.Equal).apply(null,arguments)},o._Exp=function(){return(o._Exp=o.asm.Exp).apply(null,arguments)},o._FlipLeftRight=function(){return(o._FlipLeftRight=o.asm.FlipLeftRight).apply(null,arguments)},o._Floor=function(){return(o._Floor=o.asm.Floor).apply(null,arguments)},o._FloorDiv=function(){return(o._FloorDiv=o.asm.FloorDiv).apply(null,arguments)},o._FusedBatchNorm=function(){return(o._FusedBatchNorm=o.asm.FusedBatchNorm).apply(null,arguments)},o._FusedConv2D=function(){return(o._FusedConv2D=o.asm.FusedConv2D).apply(null,arguments)},o._FusedDepthwiseConv2D=function(){return(o._FusedDepthwiseConv2D=o.asm.FusedDepthwiseConv2D).apply(null,arguments)},o._Gather=function(){return(o._Gather=o.asm.Gather).apply(null,arguments)},o._GatherNd=function(){return(o._GatherNd=o.asm.GatherNd).apply(null,arguments)},o._Greater=function(){return(o._Greater=o.asm.Greater).apply(null,arguments)},o._GreaterEqual=function(){return(o._GreaterEqual=o.asm.GreaterEqual).apply(null,arguments)},o._IsNan=function(){return(o._IsNan=o.asm.IsNan).apply(null,arguments)},o._LeakyRelu=function(){return(o._LeakyRelu=o.asm.LeakyRelu).apply(null,arguments)},o._Less=function(){return(o._Less=o.asm.Less).apply(null,arguments)},o._LessEqual=function(){return(o._LessEqual=o.asm.LessEqual).apply(null,arguments)},o._Log=function(){return(o._Log=o.asm.Log).apply(null,arguments)},o._LogicalAnd=function(){return(o._LogicalAnd=o.asm.LogicalAnd).apply(null,arguments)},o._LogicalNot=function(){return(o._LogicalNot=o.asm.LogicalNot).apply(null,arguments)},o._LogicalOr=function(){return(o._LogicalOr=o.asm.LogicalOr).apply(null,arguments)},o._LogicalXor=function(){return(o._LogicalXor=o.asm.LogicalXor).apply(null,arguments)},o._Max=function(){return(o._Max=o.asm.Max).apply(null,arguments)},o._MaxPool=function(){return(o._MaxPool=o.asm.MaxPool).apply(null,arguments)},o._Maximum=function(){return(o._Maximum=o.asm.Maximum).apply(null,arguments)},o._Mean=function(){return(o._Mean=o.asm.Mean).apply(null,arguments)},o._Min=function(){return(o._Min=o.asm.Min).apply(null,arguments)},o._Minimum=function(){return(o._Minimum=o.asm.Minimum).apply(null,arguments)},o._MirrorPad=function(){return(o._MirrorPad=o.asm.MirrorPad).apply(null,arguments)},o._Multiply=function(){return(o._Multiply=o.asm.Multiply).apply(null,arguments)},o._Neg=function(){return(o._Neg=o.asm.Neg).apply(null,arguments)},o._NonMaxSuppressionV3=function(){return(o._NonMaxSuppressionV3=o.asm.NonMaxSuppressionV3).apply(null,arguments)},o._NonMaxSuppressionV4=function(){return(o._NonMaxSuppressionV4=o.asm.NonMaxSuppressionV4).apply(null,arguments)},o._NonMaxSuppressionV5=function(){return(o._NonMaxSuppressionV5=o.asm.NonMaxSuppressionV5).apply(null,arguments)},o._NotEqual=function(){return(o._NotEqual=o.asm.NotEqual).apply(null,arguments)},o._OneHot=function(){return(o._OneHot=o.asm.OneHot).apply(null,arguments)},o._PadV2=function(){return(o._PadV2=o.asm.PadV2).apply(null,arguments)},o._Pow=function(){return(o._Pow=o.asm.Pow).apply(null,arguments)},o._Prelu=function(){return(o._Prelu=o.asm.Prelu).apply(null,arguments)},o._Prod=function(){return(o._Prod=o.asm.Prod).apply(null,arguments)},o._RealDiv=function(){return(o._RealDiv=o.asm.RealDiv).apply(null,arguments)},o._Reciprocal=function(){return(o._Reciprocal=o.asm.Reciprocal).apply(null,arguments)},o._Relu=function(){return(o._Relu=o.asm.Relu).apply(null,arguments)},o._Relu6=function(){return(o._Relu6=o.asm.Relu6).apply(null,arguments)},o._ResizeBilinear=function(){return(o._ResizeBilinear=o.asm.ResizeBilinear).apply(null,arguments)},o._ResizeNearestNeighbor=function(){return(o._ResizeNearestNeighbor=o.asm.ResizeNearestNeighbor).apply(null,arguments)},o._Reverse=function(){return(o._Reverse=o.asm.Reverse).apply(null,arguments)},o._RotateWithOffset=function(){return(o._RotateWithOffset=o.asm.RotateWithOffset).apply(null,arguments)},o._Round=function(){return(o._Round=o.asm.Round).apply(null,arguments)},o._Rsqrt=function(){return(o._Rsqrt=o.asm.Rsqrt).apply(null,arguments)},o._ScatterNd=function(){return(o._ScatterNd=o.asm.ScatterNd).apply(null,arguments)},o._SelectV2=function(){return(o._SelectV2=o.asm.SelectV2).apply(null,arguments)},o._Sigmoid=function(){return(o._Sigmoid=o.asm.Sigmoid).apply(null,arguments)},o._Sin=function(){return(o._Sin=o.asm.Sin).apply(null,arguments)},o._Softmax=function(){return(o._Softmax=o.asm.Softmax).apply(null,arguments)},o._SparseFillEmptyRows=function(){return(o._SparseFillEmptyRows=o.asm.SparseFillEmptyRows).apply(null,arguments)},o._SparseReshape=function(){return(o._SparseReshape=o.asm.SparseReshape).apply(null,arguments)},o._SparseSegmentReduction=function(){return(o._SparseSegmentReduction=o.asm.SparseSegmentReduction).apply(null,arguments)},o._Sqrt=function(){return(o._Sqrt=o.asm.Sqrt).apply(null,arguments)},o._Square=function(){return(o._Square=o.asm.Square).apply(null,arguments)},o._SquaredDifference=function(){return(o._SquaredDifference=o.asm.SquaredDifference).apply(null,arguments)},o._Step=function(){return(o._Step=o.asm.Step).apply(null,arguments)},o._StridedSlice=function(){return(o._StridedSlice=o.asm.StridedSlice).apply(null,arguments)},o._Sub=function(){return(o._Sub=o.asm.Sub).apply(null,arguments)},o._Sum=function(){return(o._Sum=o.asm.Sum).apply(null,arguments)},o._Tan=function(){return(o._Tan=o.asm.Tan).apply(null,arguments)},o._Tanh=function(){return(o._Tanh=o.asm.Tanh).apply(null,arguments)},o._Tile=function(){return(o._Tile=o.asm.Tile).apply(null,arguments)},o._TopK=function(){return(o._TopK=o.asm.TopK).apply(null,arguments)},o._Transform=function(){return(o._Transform=o.asm.Transform).apply(null,arguments)},o._Transpose=function(){return(o._Transpose=o.asm.Transpose).apply(null,arguments)},o.__FusedMatMul=function(){return(o.__FusedMatMul=o.asm._FusedMatMul).apply(null,arguments)},o._malloc=function(){return(o._malloc=o.asm.malloc).apply(null,arguments)},o._free=function(){return(o._free=o.asm.free).apply(null,arguments)},o.___errno_location=function(){return(o.___errno_location=o.asm.__errno_location).apply(null,arguments)};var cu=o.stackSave=function(){return(cu=o.stackSave=o.asm.stackSave).apply(null,arguments)},lu=o.stackRestore=function(){return(lu=o.stackRestore=o.asm.stackRestore).apply(null,arguments)},sr=o.stackAlloc=function(){return(sr=o.stackAlloc=o.asm.stackAlloc).apply(null,arguments)};o.dynCall_iijjiiii=function(){return(o.dynCall_iijjiiii=o.asm.dynCall_iijjiiii).apply(null,arguments)},o.dynCall_jiji=function(){return(o.dynCall_jiji=o.asm.dynCall_jiji).apply(null,arguments)},o.cwrap=au;var ea;we=function K(){ea||uu(),ea||(we=K)};function uu(K){if(ce>0||(ne(),ce>0))return;function oe(){ea||(ea=!0,o.calledRun=!0,!C&&(J(),a(o),o.onRuntimeInitialized&&o.onRuntimeInitialized(),ae()))}o.setStatus?(o.setStatus("Running..."),setTimeout(function(){setTimeout(function(){o.setStatus("")},1),oe()},1)):oe()}if(o.preInit)for(typeof o.preInit=="function"&&(o.preInit=[o.preInit]);o.preInit.length>0;)o.preInit.pop()();uu();var eo;c&&(eo={uncaughtException:process.listeners("uncaughtException").filter(function(K){return!c.uncaughtException.indexOf(K)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(K){return!c.unhandledRejection.indexOf(K)>-1})});var to;if(typeof r<"u")to=r;else if(typeof WasmBackendModuleThreadedSimd<"u")to=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(eo){var du=to._dispose;to._dispose=function(){du(),eo.uncaughtException.forEach(function(K){process.removeListener("uncaughtException",K)}),eo.unhandledRejection.forEach(function(K){process.removeListener("unhandledRejection",K)})}}return r.ready}})();n.exports=t})(Yg);const eC=Yg.exports,JZ=nf({__proto__:null,default:eC},[Yg.exports]);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dy=Qv||YZ,QZ=eC||JZ;class eJ extends Cd{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(oJ),aJ=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new ff(this,ks())}write(e,t,s){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,s,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=nn();return e(),{kernelMs:nn()-t}}move(e,t,s,r,o){const a=this.dataIdNextNumber++;if(r==="string"){const l=t;this.dataIdMap.set(e,{id:a,stringBytes:l,shape:s,dtype:r,memoryOffset:null,refCount:o});return}const i=L(s),c=i*xc(r),u=this.wasm._malloc(c);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:s,dtype:r,refCount:o}),this.wasm.tfjs.registerTensor(a,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,c),u)}async read(e){return this.readSync(e)}readSync(e,t,s){const{memoryOffset:r,dtype:o,shape:a,stringBytes:i}=this.dataIdMap.get(e);if(o==="string")return(t==null||t===0)&&(s==null||s>=i.length)?i:i.slice(t,s);t=t||0,s=s||L(a);const c=xc(o),u=this.wasm.HEAPU8.slice(r+t*c,r+s*c);return sJ(u.buffer,o)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const s=this.dataIdMap.get(e);if(s.refCount--,!t&&s.refCount>0)return!1;this.wasm._free(s.memoryOffset),this.wasm.tfjs.disposeData(s.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,s){let r;if(s==null)r=this.write(null,e,t);else{const o=this.dataIdNextNumber++;r={id:o},this.dataIdMap.set(r,{id:o,memoryOffset:s,shape:e,dtype:t,refCount:1});const a=L(e);this.wasm.tfjs.registerTensor(o,a,s)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:s}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:o}=this.dataIdMap.get(s),a=L(e);switch(t){case"float32":return new Float32Array(r,o,a);case"int32":return new Int32Array(r,o,a);case"bool":return new Uint8Array(r,o,a);default:throw new Error(`Unknown dtype ${t}`)}}}function tJ(n,e,t){let s="tfjs-backend-wasm.wasm";return n&&e?s="tfjs-backend-wasm-threaded-simd.wasm":n&&(s="tfjs-backend-wasm-simd.wasm"),rp!=null&&rp[s]!=null?rp[s]:t+s}async function nJ(){const[n,e]=await Promise.all([H().getAsync("WASM_HAS_SIMD_SUPPORT"),H().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,s)=>{const r={};r.locateFile=(i,c)=>{if(i.endsWith(".worker.js")){const u=ZZ.replace(/\n/g,"\\n"),l=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?tJ(n,e,c):c+i};let o=!1;r.onAbort=()=>{if(o||op)return;op=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;e&&n&&rJ==null?(r.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+dy.toString()],{type:"text/javascript"}),a=dy(r)):a=QZ(r),a.then(i=>{o=!0,op=!1;const c=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",c,["number"]),dispose:i.cwrap("dispose",c,[])},t({wasm:i})}).catch(s)})}function sJ(n,e){switch(e){case"float32":return new Float32Array(n);case"int32":return new Int32Array(n);case"bool":return new Uint8Array(n);default:throw new Error(`Unknown dtype ${e}`)}}let rJ=null,rp={},op=!1,oJ=-1,aJ=-1;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iJ=2;qf("wasm",async()=>{const{wasm:n}=await nJ();return new eJ(n)},iJ);const cJ=rt("div")({background:"#24283b",padding:"20px","border-radius":"5px"}),lJ={type:"fn",fn:()=>({type:"fn",fn:n=>se(cJ,{role:"note",get["aria-label"](){return`body ${n.node}`},style:{color:"#db4b4b","white-space":"pre-wrap","max-width":"200px"},get children(){return n.value.message}})})},uJ=()=>{const[n,e]=Bt(document.body);return{set:t=>e(t),offset:()=>{const{x:t,y:s}=n().getBoundingClientRect();return[t,s]},fullOffset:()=>{const t=n().getBoundingClientRect(),s=window.frameElement;if(!s)return[t.x,t.y];const r=s.getBoundingClientRect();return[t.x+r.x,t.y+r.y]}}},tC=Js(),dJ=n=>{const e=uJ();return se(tC.Provider,{value:e,get children(){return n.children}})},Zg=()=>Qs(tC),nC=Js(),hJ=n=>se(nC.Provider,{get value(){return n.graph},get children(){return n.children}}),Vn=()=>Qs(nC),pJ=(n,e,t)=>{const s={},[r,o]=Hy({}),a=()=>{const[c,u]=t.offset(),l=By(e.transform());return d=>{const h=s[d];if(!h)return;const p=h.getBoundingClientRect(),[f,m]=up(l,[p.x-c,p.y-u,1]),[g,b]=up(l,[p.x-c+p.width,p.y-u+p.height,1]),x=g-f,y=b-m;o(d,[f+x/2,m+y/2])}},i=c=>{requestAnimationFrame(()=>{const u=a(),l=n.database.nodes[c];ky(()=>{for(const d of l.inputs)u(d);u(l.id)})})};return n.subscribe(i),{track:(c,u)=>{s[c]=u,a()(c)},position:c=>r[c]??$S,retrack:i}},sC=Js(),fJ=n=>{const e=Mo(),t=Vn(),s=Zg(),r=pJ(t,e,s);return se(sC.Provider,{value:r,get children(){return n.children}})},Ji=()=>Qs(sC),rC=Js(),mJ=n=>{const t=document.createElement("canvas").getContext("2d"),s=(r,o)=>(t.font=r,t.measureText(o).width);return se(rC.Provider,{value:{width:s},get children(){return n.children}})},Jg=()=>Qs(rC),gJ=Jn('<input type="number" step="any">',1),bJ=rt("div")({background:"#24283b",padding:"20px 30px","border-radius":"5px"}),xJ={type:"fn",fn:()=>({type:"fn",fn:n=>{const e=Vn(),t=Ji(),s=Jg(),[r,o]=Bt(!1);let a;const i=()=>n.value.data.toString(),c="normal 20px monospace",u=()=>Math.floor(s.width(c,i()))+70;return se(Dc,{get children(){return[se(qs,{get when(){return!r()},get children(){return se(bJ,{role:"button",get["aria-label"](){return`body ${n.node}`},onClick:()=>{o(!0),t.retrack(n.node),a.value=i(),a.focus(),a.click()},get children(){return n.value.data}})}}),se(qs,{get when(){return r()},get children(){const l=gJ.cloneNode(!0);l.addEventListener("blur",()=>{o(!1),t.retrack(n.node)}),l.$$input=()=>{const h={type:"num",data:a.valueAsNumber};e.setValue(n.node,h)},l.$$pointerdown=h=>h.stopPropagation();const d=a;return typeof d=="function"?lf(d,l):a=l,l.style.setProperty("padding","20px"),l.style.setProperty("background","#24283b"),l.style.setProperty("border-radius","5px"),l.style.setProperty("border","none"),l.style.setProperty("color","#ffffff"),l.style.setProperty("font-family","monospace"),l.style.setProperty("font-size","20px"),sn(h=>{const p=`body ${n.node}`,f=`${u()}px`;return p!==h._v$&&Fn(l,"aria-label",h._v$=p),f!==h._v$2&&l.style.setProperty("width",h._v$2=f),h},{_v$:void 0,_v$2:void 0}),l}})]}})}})};vd(["pointerdown","input"]);const yJ=Jn('<div role="gridcell"></div>',2),hy=rt("div")({background:"#24283b",padding:"20px","border-radius":"5px"}),wJ={type:"fn",fn:()=>({type:"fn",fn:n=>se(Dc,{get fallback(){return"NOT IMPLEMENTED!"},get children(){return[se(qs,{get when(){return n.value.rank==0},get children(){return se(hy,{role:"grid",get["aria-label"](){return`body ${n.node}`},get children(){return n.value.data.toFixed(2)}})}}),se(qs,{get when(){return n.value.rank==1},get children(){return se(hy,{role:"grid",get["aria-label"](){return`body ${n.node}`},style:{display:"grid","text-align":"end",overflow:"scroll","max-height":"300px"},onWheel:e=>{e.currentTarget.scrollTop+=e.deltaY,e.stopPropagation(),e.preventDefault()},get children(){return se(zr,{get each(){return n.value.data},children:e=>(()=>{const t=yJ.cloneNode(!0);return go(t,()=>e.toFixed(2)),t})()})}})}})]}})})},Id=(n,e,t)=>{const[s,r]=e,[o,a]=t;return n.map(i=>(i-s)/(r-s)*(a-o)+o)},IJ=Jn('<svg><path stroke="#bb9af7" stroke-width="2" fill="none"></path></svg>',4,!0),oC=n=>{const e=mn(()=>Id(n.value.x,n.domain,n.to)),t=mn(()=>Id(n.value.y,n.range,n.to)),s=()=>e().map((r,o)=>`${o==0?"M":"L"}${r},${t()[o]}`).join("");return(()=>{const r=IJ.cloneNode(!0);return sn(()=>Fn(r,"d",s())),r})()},kJ=Jn('<svg><circle r="3" fill="#bb9af7"></circle></svg>',4,!0),aC=n=>{const e=mn(()=>Id(n.value.x,n.domain,n.to)),t=mn(()=>Id(n.value.y,n.range,n.to));return se(zr,{get each(){return e()},children:(s,r)=>(()=>{const o=kJ.cloneNode(!0);return Fn(o,"cx",s),sn(()=>Fn(o,"cy",t()[r()])),o})()})},$J=rt("svg")({background:"#24283b","border-radius":"5px",transform:"scale(1, -1)"}),vJ=n=>{const e=()=>`${n.size[0]}px`,t=()=>`${n.size[1]}px`;return se($J,{role:"figure",get["aria-label"](){return`body ${n.node}`},get style(){return{width:e(),height:t()}},get children(){return n.children}})},CJ=n=>se(zr,{get each(){return n.value.plots},children:e=>se(Dc,{get children(){return[se(qs,{get when(){return e.type=="scatter"},get children(){return se(aC,{value:e,get domain(){return n.domain},get range(){return n.range},get to(){return n.to}})}}),se(qs,{get when(){return e.type=="line"},get children(){return se(oC,{value:e,get domain(){return n.domain},get range(){return n.range},get to(){return n.to}})}})]}})}),ap=n=>({type:"fn",fn:()=>({type:"fn",fn:e=>{const t=[300,300],s=[10,290];return se(vJ,{get node(){return e.node},size:t,get children(){return se(n,{get value(){return e.value},get domain(){return e.value.domain},get range(){return e.value.range},to:s})}})}})}),SJ={scatter:ap(aC),line:ap(oC),overlay:ap(CJ)},NJ=Jn("<input>",1),TJ=rt("div")({background:"#24283b",padding:"20px 30px","border-radius":"5px"}),EJ={type:"fn",fn:()=>({type:"fn",fn:n=>{const e=Vn(),t=Ji(),s=Jg(),[r,o]=Bt(!1);let a;const i="normal 20px monospace",c=()=>Math.floor(s.width(i,n.value.name))+70;return se(Dc,{get children(){return[se(qs,{get when(){return!r()},get children(){return se(TJ,{role:"button",get["aria-label"](){return`body ${n.node}`},onClick:()=>{o(!0),t.retrack(n.node),a.value=n.value.name,a.focus(),a.click()},get children(){return n.value.name}})}}),se(qs,{get when(){return r()},get children(){const u=NJ.cloneNode(!0);u.addEventListener("blur",()=>{o(!1),t.retrack(n.node)}),u.$$input=()=>{const d={type:"label",name:a.value};e.setValue(n.node,d)},u.$$pointerdown=d=>d.stopPropagation();const l=a;return typeof l=="function"?lf(l,u):a=u,u.style.setProperty("padding","20px"),u.style.setProperty("background","#24283b"),u.style.setProperty("border-radius","5px"),u.style.setProperty("border","none"),u.style.setProperty("color","#ffffff"),u.style.setProperty("font-family","monospace"),u.style.setProperty("font-size","20px"),sn(d=>{const h=`body ${n.node}`,p=`${c()}px`;return h!==d._v$&&Fn(u,"aria-label",d._v$=h),p!==d._v$2&&u.style.setProperty("width",d._v$2=p),d},{_v$:void 0,_v$2:void 0}),u}})]}})}})};vd(["pointerdown","input"]);const _J=Jn("<input>",1),RJ=rt("div")({background:"#24283b",padding:"20px 30px","border-radius":"5px"}),AJ={type:"fn",fn:()=>({type:"fn",fn:n=>{const e=Vn(),t=Ji(),s=Jg(),[r,o]=Bt(!1);let a;const i="normal 20px monospace",c=()=>Math.floor(s.width(i,n.value.name))+70;return se(Dc,{get children(){return[se(qs,{get when(){return!r()},get children(){return se(RJ,{role:"button",get["aria-label"](){return`body ${n.node}`},onClick:()=>{o(!0),t.retrack(n.node),a.value=n.value.name,a.focus(),a.click()},get children(){return n.value.name}})}}),se(qs,{get when(){return r()},get children(){const u=_J.cloneNode(!0);u.addEventListener("blur",()=>{o(!1),t.retrack(n.node)}),u.$$input=()=>{const d={type:"read",name:a.value};e.untrackLabel(n.node,n.value.name),e.setValue(n.node,d)},u.$$pointerdown=d=>d.stopPropagation();const l=a;return typeof l=="function"?lf(l,u):a=u,u.style.setProperty("padding","20px"),u.style.setProperty("background","#24283b"),u.style.setProperty("border-radius","5px"),u.style.setProperty("border","none"),u.style.setProperty("color","#ffffff"),u.style.setProperty("font-family","monospace"),u.style.setProperty("font-size","20px"),sn(d=>{const h=`body ${n.node}`,p=`${c()}px`;return h!==d._v$&&Fn(u,"aria-label",d._v$=h),p!==d._v$2&&u.style.setProperty("width",d._v$2=p),d},{_v$:void 0,_v$2:void 0}),u}})]}})}})};vd(["pointerdown","input"]);const DJ=Jn('<div role="none"></div>',2),FJ={type:"fn",fn:()=>({type:"fn",fn:n=>(()=>{const e=DJ.cloneNode(!0);return sn(()=>Fn(e,"aria-label",`body ${n.node}`)),e})()})},OJ={type:"fns",fns:{num:xJ,tensor:wJ,label:EJ,read:AJ,none:FJ,error:lJ,...SJ},inputs:[""]};iN("cpu");const Hn=(n,e)=>({type:"fn",fn:t=>{const s=[];for(const a of t){if(a.type==="none")return{type:"none"};s.push(a.data)}const r=n.apply(null,s);return{type:"tensor",data:r.arraySync(),size:r.size,shape:r.shape,rank:r.rank,dtype:r.dtype}},inputs:e}),kd=n=>{const e=wc(n).arraySync(),t=hs(n).arraySync(),s=e-Math.abs(e*.05)-Number.MIN_VALUE,r=t+Math.abs(t*.05)+Number.MIN_VALUE;return[s,r]},MJ={type:"fn",fn:n=>{let e=[];for(const a of n){if(a.type!=="tensor"||a.size<2)return{type:"none"};e.push(a.data)}const[t,s]=e,r=kd(t),o=kd(s);return{type:"scatter",x:t,y:s,domain:r,range:o}},inputs:["x","y"]},LJ={type:"fn",fn:n=>{let e=[];for(const a of n){if(a.type!=="tensor"||a.size<2)return{type:"none"};e.push(a.data)}const[t,s]=e,r=kd(t),o=kd(s);return{type:"line",x:t,y:s,domain:r,range:o}},inputs:["x","y"]},PJ={type:"fn",fn:n=>{const{domain:e,range:t}=n.reduce((s,r)=>{const o=[Math.min(s.domain[0],r.domain[0]),Math.max(s.domain[1],r.domain[1])],a=[Math.min(s.range[0],r.range[0]),Math.max(s.range[1],r.range[1])];return{domain:o,range:a}},{domain:[Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER],range:[Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER]});return{type:"overlay",plots:n,domain:e,range:t}},inputs:["",""]},BJ={type:"fn",fn:n=>n[0],inputs:[""]},Zs={type:"module",add:Hn(ee,["",""]),sub:Hn(xe,["",""]),mul:Hn(R,["",""]),div:Hn(ke,["",""]),abs:Hn(Mt,[""]),mean:Hn(St,[""]),maximum:Hn(br,[""]),minimum:Hn(Vl,[""]),mod:Hn(aw,["",""]),pow:Hn(No,["",""]),linspace:Hn(NE,["start","stop","num"]),"squared difference":Hn(bm,["",""]),square:Hn(nt,[""]),id:BJ,scatter:MJ,overlay:PJ,line:LJ,show:OJ,label:{type:"label",name:""},read:{type:"read",name:""}},zJ=(n,e,t,s)=>{const{setDatabase:r,notifySubscribers:o}=n;r("nodes",e,"position",a=>uf(a,Py(t,1/s))),o(e)},VJ=(n,e,t)=>{const{database:s,setDatabase:r,generateId:o,notifySubscribers:a}=n,i=o();if(r(La(c=>{const u=[],l=(()=>{switch(e.type){case"call":return Zs[e.name].inputs;case"label":return[""];default:return[]}})();for(const p of l){const f=o();c.inputs[f]={id:f,name:p,node:i},u.push(f)}const d=e.type==="label"?void 0:{edges:[],value:e.type==="call"?{type:"none"}:e},h={id:i,self:e,position:t,inputs:u,output:d};c.nodes[i]=h})),a(i),e.type==="read"){const c=n.readers[e.name];c?c.add(i):n.readers[e.name]=new Set([i])}return s.nodes[i]},Qg=n=>n.output?n.output.edges:[],py=(n,e)=>{const{database:t}=n;for(const s of Qg(e)){const r=t.edges[s];Zr(n,t.inputs[r.input].node)}},Zr=(n,e)=>{const{database:t,setDatabase:s,notifySubscribers:r}=n,o=t.nodes[e];if(o.inputs.length===0)return py(n,o);const a=[];for(const i of o.inputs){const c=t.inputs[i].edge;if(c){const u=t.edges[c],l=t.nodes[u.node],d=l.self;switch(d.type){case"call":a.push(l.output.value);break;case"read":const h=n.labels[d.name];h&&a.push(h);break;default:a.push(d)}}}if(o.self.type==="call"){const i=a.length===o.inputs.length?Xy(Zs,o.self.name,a):{type:"none"};s("nodes",e,"output","value",i),py(n,o),r(o.id)}else if(o.self.type==="label"){n.labels[o.self.name]=a.length===1?a[0]:{type:"none"};const i=n.readers[o.self.name];for(const c of i??[])Zr(n,c)}},WJ=(n,e,t)=>{const{database:s}=n,r=new Set([e,t]),o=a=>{const i=s.nodes[a],c=new Set;for(const u of Qg(i)){const l=s.edges[u];c.add(s.inputs[l.input].node)}for(const u of c)if(r.has(u)||(r.add(u),o(u)))return!0;return!1};return o(t)},UJ=(n,{input:e,node:t})=>{const{database:s,setDatabase:r,generateId:o}=n,a=s.inputs[e],i=a.node;if(i===t)return;const c=a.edge?s.edges[a.edge]:void 0;if(c&&c.node===t||WJ(n,t,i))return;const u={id:o(),node:t,input:e};return r(La(l=>{if(c){const d=l.nodes[c.node].output;d.edges=d.edges.filter(h=>h!==c.id),delete l.edges[c.id]}l.edges[u.id]=u,l.nodes[t].output.edges.push(u.id),l.inputs[e].edge=u.id})),Zr(n,i),u},GJ=(n,e,t)=>{const{setDatabase:s,notifySubscribers:r}=n;if(s("nodes",e,"self",t),t.type==="read"){const o=n.readers[t.name];o?o.add(e):n.readers[t.name]=new Set([e])}r(e),Zr(n,e)},HJ=(n,e)=>{const{database:t,setDatabase:s}=n,r=t.nodes[e],o=[];s(La(a=>{delete a.nodes[e];const i=[];for(const l of r.inputs){const d=a.inputs[l].edge;d&&i.push(d),delete a.inputs[l]}const c=[],u=[];for(const l of Qg(r)){const d=a.edges[l].input;o.push(a.inputs[d].node),c.push(d),delete a.edges[l]}for(const l of i)u.push(a.edges[l].node),delete a.edges[l];for(const l of c)a.inputs[l].edge=void 0;u.forEach((l,d)=>{const h=i[d],p=a.nodes[l].output;p.edges=p.edges.filter(f=>f!==h)})}));for(const a of o)Zr(n,a)},jJ=(n,e)=>{const{database:t,setDatabase:s}=n,r=t.inputs[e],o=r.edge;!o||(s(La(a=>{const i=a.nodes[a.edges[o].node].output;i.edges=i.edges.filter(c=>c!==o),delete a.edges[o],a.inputs[e].edge=void 0})),Zr(n,r.node))},qJ=(n,e)=>{const{setDatabase:t}=n,s=[];t(La(r=>{const o=r.nodes[e].output;for(const a of o.edges){s.push(r.inputs[r.edges[a].input].node);const i=r.edges[a];r.inputs[i.input].edge=void 0,delete r.edges[a]}o.edges=[]}));for(const r of s)Zr(n,r)},XJ=(n,e,t)=>{const{setDatabase:s}=n;t.type==="call"&&(s(La(r=>{const o=r.nodes[e];o.self.type==="call"&&Zs[t.name].inputs.length===Zs[o.self.name].inputs.length&&(o.self=t)})),Zr(n,e))},KJ=(n,e,t)=>{const s=n.readers[t];!s||s.delete(e)},YJ=()=>{const[n,e]=Hy({nodes:{},edges:{},inputs:{}});let t=0;const s=()=>t++;let r=new Set;const o=u=>{r.add(u)},i={database:n,setDatabase:e,notifySubscribers:u=>{for(const l of r)l(u)},generateId:s,labels:{},readers:{}};return{database:n,subscribe:o,dragNode:zJ.bind(null,i),addNode:VJ.bind(null,i),addEdge:UJ.bind(null,i),setValue:GJ.bind(null,i),deleteNode:HJ.bind(null,i),deleteInputEdge:jJ.bind(null,i),deleteOutputEdges:qJ.bind(null,i),replaceNode:XJ.bind(null,i),untrackLabel:KJ.bind(null,i)}},ZJ=({haystack:n,needle:e})=>{let t=0,s=0;for(;s<e.length;){const r=e[s].toLowerCase();for(;t<n.length&&r!==n[t].toLowerCase();)++t;if(t===n.length)return!1;++s}return!0};var Pr=(n=>(n[n.INSERT=0]="INSERT",n[n.REPLACE=1]="REPLACE",n[n.HIDDEN=2]="HIDDEN",n))(Pr||{});const fy={kind:2},JJ=()=>{const n=Object.keys(Zs),[e,t]=Bt(fy),[s,r]=Bt("");return{mode:e,visible:()=>e().kind!==2,show:a=>{t(a),r("")},hide:()=>t(fy),search:s,setSearch:r,filtered:()=>n.filter(a=>ZJ({haystack:a,needle:s()}))}},iC=Js(),QJ=n=>{const e=JJ();return se(iC.Provider,{value:e,get children(){return n.children}})},Qi=()=>Qs(iC),eQ=Jn('<svg fill="currentColor" stroke-width="0" xmlns="http://www.w3.org/2000/svg"></svg>',2),tQ=Jn("<title></title>",2);function ec(n,e){const t=Mu(n.a,e);return(()=>{const s=eQ.cloneNode(!0);return cf(s,t,!0,!0),go(s,()=>dS,null),go(s,(()=>{const r=mn(()=>!!e.title,!0);return()=>r()&&(()=>{const o=tQ.cloneNode(!0);return go(o,()=>e.title),o})()})(),null),sn(r=>{const o=n.a.stroke,a={...e.style,overflow:"visible",color:e.color||"currentColor"},i=e.size||"1em",c=e.size||"1em",u=n.c;return o!==r._v$&&Fn(s,"stroke",r._v$=o),r._v$2=My(s,a,r._v$2),i!==r._v$3&&Fn(s,"height",r._v$3=i),c!==r._v$4&&Fn(s,"width",r._v$4=c),u!==r._v$5&&(s.innerHTML=r._v$5=u),r},{_v$:void 0,_v$2:void 0,_v$3:void 0,_v$4:void 0,_v$5:void 0}),s})()}function nQ(n){return ec({a:{fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",viewBox:"0 0 24 24"},c:'<path d="M5 12h14"/>'},n)}function eb(n){return ec({a:{fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",viewBox:"0 0 24 24"},c:'<circle cx="11" cy="11" r="8"/><path d="M21 21l-4.35-4.35"/>'},n)}const sQ=rt("div")({padding:"10px 20px","backdrop-filter":"blur(12px)","-webkit-backdrop-filter":"blur(12px)",background:"#00000033",display:"flex","align-items":"center",gap:"10px"}),rQ=rt("input")({"font-size":"26px",width:"100%",outline:"none",background:"none",color:"#ffffff",border:"none"}),oQ=()=>{const n=Qi(),e=Vn(),t=Mo();let s;Iy(()=>n.visible()&&s.focus());const r=a=>{switch(a.key){case"Escape":return n.hide();case"Enter":const i=n.filtered()[0];if(i){const c=n.mode();switch(c.kind){case Pr.INSERT:{const u=Zs[i];u.type=="fn"?e.addNode({type:"call",name:i},t.worldSpace(c.position)):e.addNode(u,t.worldSpace(c.position));break}case Pr.REPLACE:{Zs[i].type=="fn"&&e.replaceNode(c.node,{type:"call",name:i});break}}}return n.hide();default:return}},o=()=>n.setSearch(s.value);return se(sQ,{get children(){return[se(eb,{}),se(rQ,{placeholder:"search",ref(a){const i=s;typeof i=="function"?i(a):s=a},onkeydown:r,get value(){return n.search()},onInput:o})]}})},aQ=rt("div")({overflowY:"scroll",height:"350px"}),iQ=rt("div")({padding:"10px 20px",cursor:"pointer","&:hover":{"backdrop-filter":"blur(12px)","-webkit-backdrop-filter":"blur(12px)",background:"#00000022"}}),cQ=()=>{const n=Qi(),e=Vn(),t=Mo();return se(aQ,{onWheel:s=>s.currentTarget.scrollTop+=s.deltaY,get children(){return se(zr,{get each(){return n.filtered()},children:s=>se(iQ,{onClick:()=>{const o=n.mode();switch(o.kind){case Pr.INSERT:{const a=Zs[s];a.type=="fn"?e.addNode({type:"call",name:s},t.worldSpace(o.position)):e.addNode(a,t.worldSpace(o.position));break}case Pr.REPLACE:{Zs[s].type=="fn"&&e.replaceNode(o.node,{type:"call",name:s});break}}n.hide()},children:s})})}})},lQ=rt("div")({width:"100%",height:"100%",position:"absolute",top:"0px",left:"0px",padding:"50px"}),uQ=rt("div")({margin:"0 auto",width:"100%","max-width":"700px","backdrop-filter":"blur(12px)","-webkit-backdrop-filter":"blur(12px)",background:"#00000066","box-shadow":"0 8px 32px 0 #00000044","border-radius":"10px",border:"1px solid #00000022","font-size":"26px",color:"#ffffff"}),dQ=()=>{const n=Qi();return se(Hu,{get when(){return n.visible()},get children(){return se(lQ,{get onClick(){return n.hide},onWheel:e=>e.preventDefault(),onContextMenu:e=>e.preventDefault(),get children(){return se(uQ,{onClick:e=>e.stopPropagation(),get children(){return[se(oQ,{}),se(cQ,{})]}})}})}})},hQ=()=>{const[n,e]=Bt(!1),[t,s]=Bt([0,0]),[r,o]=Bt([]);return{visible:n,position:t,show:({position:a,options:i})=>{e(!0),s(a),o(i)},hide:()=>e(!1),options:r}},cC=Js(),pQ=n=>{const e=hQ();return se(cC.Provider,{value:e,get children(){return n.children}})},Qo=()=>Qs(cC),tf=54,my=60,fQ=Math.PI/3,mQ=rt("div")({position:"absolute",color:"#ffffff","-webkit-backdrop-filter":"blur(10px)","backdrop-filter":"blur(10px)","border-radius":"50%",width:`${tf}px`,height:`${tf}px`,display:"flex","flex-direction":"column","justify-content":"center","align-items":"center","font-size":"20px",cursor:"pointer"}),gQ=rt("div")({"font-size":"10px","padding-top":"2px"}),bQ=n=>{const e=Qo(),t=fQ*n.i(),s=Math.cos(t)*my,r=Math.sin(t)*my,o=`translate(${s}px, ${-r}px)`,[a,i]=Bt(!1);return se(mQ,{get style(){return{transform:o,background:a()?"#000000AA":"#00000066"}},onPointerEnter:()=>i(!0),onPointerLeave:()=>i(!1),onPointerUp:()=>{n.option.onClick(),e.hide()},get children(){return[se(n.option.icon,{}),se(gQ,{get children(){return n.option.label}})]}})},xQ=Jn("<div></div>",2),gy=tf/2,yQ=rt("div")({position:"absolute",top:0,left:0,width:"100%",height:"100%"}),wQ=()=>{const n=Qo(),e=()=>{const[t,s]=n.position();return`translate(${t-gy}px, ${s-gy}px)`};return se(Hu,{get when(){return n.visible()},get children(){return se(yQ,{get onPointerUp(){return n.hide},get children(){const t=xQ.cloneNode(!0);return go(t,se(zr,{get each(){return n.options()},children:(s,r)=>se(bQ,{i:r,option:s})})),sn(()=>t.style.setProperty("transform",e())),t}})}})},IQ=n=>{const e=n.addNode({type:"num",data:-10},[50,50]),t=n.addNode({type:"num",data:10},[50,200]),s=n.addNode({type:"num",data:10},[50,350]),r=n.addNode({type:"call",name:"linspace"},[300,50]),o=n.addNode({type:"label",name:"x"},[730,50]);n.addEdge({node:e.id,input:r.inputs[0]}),n.addEdge({node:t.id,input:r.inputs[1]}),n.addEdge({node:s.id,input:r.inputs[2]}),n.addEdge({node:r.id,input:o.inputs[0]});const a=n.addNode({type:"num",data:3},[50,550]),i=n.addNode({type:"read",name:"x"},[50,700]),c=n.addNode({type:"num",data:5},[300,550]),u=n.addNode({type:"call",name:"mul"},[300,700]),l=n.addNode({type:"call",name:"add"},[530,550]),d=n.addNode({type:"label",name:"y"},[800,550]);n.addEdge({node:a.id,input:u.inputs[0]}),n.addEdge({node:i.id,input:u.inputs[1]}),n.addEdge({node:c.id,input:l.inputs[0]}),n.addEdge({node:u.id,input:l.inputs[1]}),n.addEdge({node:l.id,input:d.inputs[0]});const h=n.addNode({type:"num",data:1},[50,1100]),p=n.addNode({type:"read",name:"x"},[50,1250]),f=n.addNode({type:"call",name:"mul"},[300,1250]),m=n.addNode({type:"num",data:2},[300,1100]),g=n.addNode({type:"call",name:"add"},[530,1100]),b=n.addNode({type:"label",name:"y hat"},[800,1100]);n.addEdge({node:h.id,input:f.inputs[0]}),n.addEdge({node:p.id,input:f.inputs[1]}),n.addEdge({node:m.id,input:g.inputs[0]}),n.addEdge({node:f.id,input:g.inputs[1]}),n.addEdge({node:g.id,input:b.inputs[0]});const x=n.addNode({type:"read",name:"x"},[1200,50]),y=n.addNode({type:"read",name:"y"},[1200,200]),w=n.addNode({type:"call",name:"scatter"},[1400,50]);n.addEdge({node:x.id,input:w.inputs[0]}),n.addEdge({node:y.id,input:w.inputs[1]});const I=n.addNode({type:"read",name:"x"},[1200,450]),k=n.addNode({type:"read",name:"y hat"},[1200,600]),$=n.addNode({type:"call",name:"line"},[1450,450]),C=n.addNode({type:"call",name:"overlay"},[1900,50]);n.addEdge({node:I.id,input:$.inputs[0]}),n.addEdge({node:k.id,input:$.inputs[1]}),n.addEdge({node:w.id,input:C.inputs[0]}),n.addEdge({node:$.id,input:C.inputs[1]});const N=n.addNode({type:"read",name:"y"},[1200,850]),T=n.addNode({type:"read",name:"y hat"},[1200,1e3]),_=n.addNode({type:"call",name:"sub"},[1450,850]),O=n.addNode({type:"call",name:"abs"},[1650,850]),P=n.addNode({type:"call",name:"mean"},[1850,850]),V=n.addNode({type:"label",name:"loss"},[2100,850]);n.addEdge({node:N.id,input:_.inputs[0]}),n.addEdge({node:T.id,input:_.inputs[1]}),n.addEdge({node:_.id,input:O.inputs[0]}),n.addEdge({node:O.id,input:P.inputs[0]}),n.addEdge({node:P.id,input:V.inputs[0]})};function kQ(n){return ec({a:{fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",viewBox:"0 0 24 24"},c:'<path stroke="none" d="M0 0h24v24H0z"/><path d="M8 10V3L6 5M6 16a2 2 0 114 0c0 .591-.601 1.46-1 2l-3 3.001h4M15 14a2 2 0 102-2 2 2 0 10-2-2M6.5 10h3"/>'},n)}function $Q(n){return ec({a:{fill:"currentColor",viewBox:"0 0 16 16"},c:'<path d="M14 7v1H8v6H7V8H1V7h6V1h1v6h6z"/>'},n)}function vQ(n){return ec({a:{viewBox:"0 0 24 24"},c:'<path d="M20 9a1 1 0 001-1V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v1H9V4a1 1 0 00-1-1H4a1 1 0 00-1 1v4a1 1 0 001 1h1v6H4a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1v-1h6v1a1 1 0 001 1h4a1 1 0 001-1v-4a1 1 0 00-1-1h-1V9h1zm-3-4h2v2h-2V5zM5 5h2v2H5V5zm2 14H5v-2h2v2zm12 0h-2v-2h2v2zm-2-4h-1a1 1 0 00-1 1v1H9v-1a1 1 0 00-1-1H7V9h1a1 1 0 001-1V7h6v1a1 1 0 001 1h1v6z"/>'},n)}const CQ=Jn("<svg><g></g></svg>",4,!0),SQ=Jn('<svg><path fill="none" stroke="#7aa2f7" stroke-width="3"></path></svg>',4,!0),NQ=rt("svg")({width:"100%",height:"100%",position:"absolute","pointer-events":"none"}),TQ=()=>{const n=Vn(),e=Mo(),t=Ji(),s=()=>{const[i,c]=e.position();return`translate(${i} ${c})`},r=()=>`scale(${e.zoom()} ${e.zoom()})`,o=()=>`${s()} ${r()}`,a=(i,c)=>{const[u,l]=t.position(i),[d,h]=t.position(c),p=u<d,f=Math.min(Math.abs(d-u),50),m=p?u+f:u-f,g=p?d-f:d+f;return`M${u},${l} C${m},${l} ${g},${h} ${d},${h}`};return se(NQ,{get children(){const i=CQ.cloneNode(!0);return go(i,se(zr,{get each(){return Object.values(n.database.edges)},children:c=>(()=>{const u=SQ.cloneNode(!0);return sn(()=>Fn(u,"d",a(c.node,c.input))),u})()})),sn(()=>Fn(i,"transform",o())),i}})};function tb(n){return ec({a:{viewBox:"0 0 448 512"},c:'<path d="M135.2 17.69C140.6 6.848 151.7 0 163.8 0h120.4c12.1 0 23.2 6.848 28.6 17.69L320 32h96c17.7 0 32 14.33 32 32s-14.3 32-32 32H32C14.33 96 0 81.67 0 64s14.33-32 32-32h96l7.2-14.31zM31.1 128H416v320c0 35.3-28.7 64-64 64H95.1c-34.45 0-64-28.7-64-64V128zm80 80v224c0 8.8 8.1 16 16 16 9.7 0 16-7.2 16-16V208c0-8.8-6.3-16-16-16-7.9 0-16 7.2-16 16zm96 0v224c0 8.8 8.1 16 16 16 9.7 0 16.9-7.2 16.9-16V208c0-8.8-7.2-16-16.9-16-7.9 0-16 7.2-16 16zm96.9 0v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16s-16 7.2-16 16z"/>'},n)}let tt;(function(n){n[n.ZERO=0]="ZERO",n[n.ONE=1]="ONE",n[n.TWO=2]="TWO",n[n.THREE_OR_MORE=3]="THREE_OR_MORE"})(tt||(tt={}));let Er;(function(n){n[n.BACKGROUND=0]="BACKGROUND",n[n.NODE=1]="NODE"})(Er||(Er={}));const by=(n,e,t)=>{switch(n.kind){case tt.ZERO:return{kind:tt.ONE,pointer:e,target:t};case tt.ONE:return{kind:tt.TWO,data:{[n.pointer.id]:n.pointer,[e.id]:e},midpoint:df(n.pointer.position,e.position),distance:hf(n.pointer.position,e.position)};case tt.TWO:case tt.THREE_OR_MORE:return{kind:tt.THREE_OR_MORE,data:{...n.data,[e.id]:e}}}},EQ=(n,e,t,s,r)=>{switch(n.kind){case tt.ZERO:return n;case tt.ONE:{const o=n.target;switch(o.kind){case Er.BACKGROUND:return s.drag(uo(e.position,n.pointer.position)),{kind:tt.ONE,pointer:e,target:o};case Er.NODE:return r.dragNode(o.id,uo(e.position,n.pointer.position),s.zoom()),{kind:tt.ONE,pointer:e,target:o}}}case tt.TWO:{const o={...n.data,[e.id]:e},[a,i]=Object.values(o),c=df(a.position,i.position),u=hf(a.position,i.position),l=n.distance-u;return s.drag(uo(c,n.midpoint)),s.pinch(uo(c,t.offset()),l),{kind:tt.TWO,data:o,midpoint:c,distance:u}}case tt.THREE_OR_MORE:return{kind:tt.THREE_OR_MORE,data:{...n.data,[e.id]:e}}}},_Q=(n,e)=>{switch(n.kind){case tt.ZERO:return n;case tt.ONE:return{kind:tt.ZERO};case tt.TWO:{const{[e.id]:t,...s}=n.data,[r]=Object.values(s);return{kind:tt.ONE,pointer:r,target:{kind:Er.BACKGROUND}}}case tt.THREE_OR_MORE:{const{[e.id]:t,...s}=n.data;if(Object.keys(n.data).length===3){const[r,o]=Object.values(s);return{kind:tt.TWO,data:s,midpoint:df(r.position,o.position),distance:hf(r.position,o.position)}}return{kind:tt.THREE_OR_MORE,data:s}}}},Fu=n=>({id:n.pointerId,position:[n.clientX,n.clientY]}),RQ=(n,e,t)=>{const[s,r]=Bt({kind:tt.ZERO});return{downOnBackground:o=>{o.stopPropagation();const a=Fu(o),i={kind:Er.BACKGROUND};r(by(s(),a,i))},downOnNode:(o,a)=>{o.stopPropagation();const i=Fu(o),c={kind:Er.NODE,id:a};r(by(s(),i,c))},move:o=>{const a=Fu(o);r(EQ(s(),a,e,n,t))},up:o=>{const a=Fu(o);r(_Q(s(),a))},draggingNode:()=>{const o=s();return o.kind===tt.ONE&&o.target.kind===Er.NODE},twoPointersDown:()=>s().kind==tt.TWO}},lC=Js(),AQ=n=>{const e=Mo(),t=Zg(),s=Vn(),r=RQ(e,t,s);return se(lC.Provider,{value:r,get children(){return n.children}})},uC=()=>Qs(lC),DQ=n=>{const[e,t]=Bt(),[s,r]=Bt();return Iy(()=>{e()&&s()&&(n.addEdge({input:e(),node:s()}),t(void 0),r(void 0))}),{input:e,setInput:o=>{t(o)},output:s,setOutput:o=>{r(o)},clear:()=>{t(void 0),r(void 0)}}},dC=Js(),FQ=n=>{const e=Vn(),t=DQ(e);return se(dC.Provider,{value:t,get children(){return n.children}})},nb=()=>Qs(dC),OQ=rt("div")({display:"flex",gap:"10px",cursor:"pointer"}),MQ=rt("div")({width:"20px",height:"20px","border-radius":"50%"}),LQ=n=>{const e=nb(),t=Qo(),s=Vn(),r=Ji(),o=a=>i=>requestAnimationFrame(()=>r.track(a,i));return se(OQ,{onClick:()=>{e.setInput(n.input.id)},onContextMenu:a=>{t.show({position:[a.clientX,a.clientY],options:[{icon:tb,label:"delete",onClick:()=>s.deleteInputEdge(n.input.id)}]}),a.preventDefault(),a.stopPropagation()},get children(){return[se(MQ,{get["aria-label"](){return`input ${n.input.id}`},role:"button",ref(a){const i=o(n.input.id);typeof i=="function"&&i(a)},get style(){return{background:e.input()===n.input.id?"#bb9af7":"#7aa2f7"}}}),mn(()=>n.input.name)]}})},PQ=rt("div")({display:"flex",gap:"10px",cursor:"pointer"}),BQ=rt("div")({width:"20px",height:"20px","border-radius":"50%"}),zQ=n=>{const e=nb(),t=Qo(),s=Vn(),r=Ji(),o=a=>i=>requestAnimationFrame(()=>r.track(a,i));return se(PQ,{onClick:()=>{e.setOutput(n.node)},onContextMenu:a=>{t.show({position:[a.clientX,a.clientY],options:[{icon:tb,label:"delete",onClick:()=>s.deleteOutputEdges(n.node)}]}),a.preventDefault(),a.stopPropagation()},get children(){return se(BQ,{ref(a){const i=o(n.node);typeof i=="function"&&i(a)},get style(){return{background:e.output()===n.node?"#bb9af7":"#7aa2f7"}}})}})},VQ=n=>mn(()=>{const t=n.node.self,s=t.type==="call"?n.node.output.value:t,r=Xy(Zs,"show",[s]).fn;return se(r,{get node(){return n.node.id},value:s})}),xy=Jn("<div></div>",2),WQ=rt("div")({position:"absolute",display:"flex",padding:"10px 0",gap:"10px",background:"#3b4261","border-radius":"10px",color:"white","font-family":"monospace","font-size":"20px","box-shadow":"0 0 4px rgba(0, 0, 0, 0.5)"}),UQ=rt("div")({display:"flex","flex-direction":"column",gap:"10px",transform:"translateX(-10px)"}),GQ=rt("div")({display:"flex","flex-direction":"column",gap:"10px",transform:"translateX(10px)"}),HQ=rt("div")({display:"flex","flex-direction":"column","align-items":"center",gap:"10px"}),jQ=rt("div")({color:"#bb9af7"}),qQ=n=>{const e=()=>{const[c,u]=n.node.position;return`translate(${c}px, ${u}px)`},t=()=>n.node.inputs.map(c=>a.database.inputs[c]),s=()=>{switch(n.node.self.type){case"call":return n.node.self.name;default:return n.node.self.type}},r=uC(),o=Qo(),a=Vn(),i=Qi();return se(WQ,{get style(){return{transform:e()}},onPointerDown:c=>{c.button===0&&r.downOnNode(c,n.node.id)},onContextMenu:c=>{o.show({position:[c.clientX,c.clientY],options:[{icon:tb,label:"delete",onClick:()=>a.deleteNode(n.node.id)},{icon:eb,label:"replace",onClick:()=>i.show({kind:Pr.REPLACE,node:n.node.id})}]}),c.preventDefault(),c.stopPropagation()},get children(){return[se(UQ,{get children(){return se(Hu,{get when(){return t().length>0},get fallback(){return(()=>{const c=xy.cloneNode(!0);return c.style.setProperty("width","10px"),c})()},get children(){return se(zr,{get each(){return t()},children:c=>se(LQ,{input:c})})}})}}),se(HQ,{get children(){return[se(jQ,{get children(){return s()}}),se(VQ,{get node(){return n.node}})]}}),se(GQ,{get children(){return se(Hu,{get when(){return n.node.output},get fallback(){return(()=>{const c=xy.cloneNode(!0);return c.style.setProperty("width","10px"),c})()},get children(){return se(zQ,{get node(){return n.node.id}})}})}})]}})},XQ=rt("div")({"transform-origin":"top left"}),KQ=()=>{const n=Mo(),e=Vn(),t=()=>{const[o,a]=n.position();return`translate(${o}px, ${a}px)`},s=()=>`scale(${n.zoom()}, ${n.zoom()})`,r=()=>`${t()} ${s()}`;return se(XQ,{get style(){return{transform:r()}},get children(){return se(zr,{get each(){return Object.values(e.database.nodes)},children:o=>se(qQ,{node:o})})}})},YQ=rt("div")({overflow:"hidden",position:"relative",width:"100%",height:"100%",background:"#24283b","background-size":"40px 40px","background-image":"radial-gradient(circle, #3b4261 1px, rgba(0, 0, 0, 0) 1px)"}),ZQ=()=>{const n=Qi(),e=Qo(),t=Mo(),s=Vn(),r=uC(),o=nb(),a=Zg(),[i,c]=Bt(!1),[u,l]=Bt([0,0]),[d,h]=Bt(!1),p=x=>{x.button===0?(c(!1),r.up(x)):x.button===1&&h(!1)},f=x=>{if(c(!1),!e.visible())if(d()){const y=[x.clientX,x.clientY],w=uo(y,u());l(y),t.drag(w)}else r.move(x)};document.addEventListener("pointerup",p),document.addEventListener("pointermove",f),rf(()=>{document.removeEventListener("pointerup",p),document.removeEventListener("pointermove",f)});const m=x=>{x.preventDefault(),x.ctrlKey||x.metaKey?t.pinch(uo([x.clientX,x.clientY],a.fullOffset()),x.deltaY):x.shiftKey?t.drag([-x.deltaX-x.deltaY,0]):t.drag([-x.deltaX,-x.deltaY])},g=x=>{const y=w=>()=>s.addNode(w,t.worldSpace(x));e.show({position:x,options:[{icon:vQ,label:"select",onClick:()=>console.log("select")},{icon:eb,label:"search",onClick:()=>n.show({kind:Pr.INSERT,position:x})},{icon:kQ,label:"num",onClick:y({type:"num",data:0})},{icon:$Q,label:"add",onClick:y({type:"call",name:"add"})},{icon:nQ,label:"sub",onClick:y({type:"call",name:"sub"})}]})};return se(YQ,{ref(x){const y=a.set;typeof y=="function"?y(x):a.set=x},onPointerDown:x=>{o.clear(),x.button===0?(r.downOnBackground(x),c(!0),setTimeout(()=>{i()&&g([x.clientX,x.clientY])},300)):x.button===1&&(h(!0),l([x.clientX,x.clientY]))},onWheel:m,onContextMenu:x=>{x.preventDefault(),g([x.clientX,x.clientY])},get children(){return[se(TQ,{}),se(KQ,{})]}})},JQ=()=>se(dJ,{get children(){return se(fJ,{get children(){return se(AQ,{get children(){return se(FQ,{get children(){return se(ZQ,{})}})}})}})}}),QQ=rt("div")({width:"100vw",height:"100vh"}),eee=()=>{const n=Qi(),e=Qo(),t=s=>{if(!(n.visible()||e.visible()))switch(s.key){case"f":return s.preventDefault(),n.show({kind:Pr.INSERT,position:[window.innerWidth/2,window.innerHeight/2]});default:return}};return document.addEventListener("keydown",t),rf(()=>document.removeEventListener("keydown",t)),[se(JQ,{}),se(dQ,{}),se(wQ,{})]},tee=()=>{const n=YJ();return IQ(n),se(hJ,{graph:n,get children(){return se(TS,{get children(){return se(QJ,{get children(){return se(pQ,{get children(){return se(mJ,{get children(){return se(QQ,{get children(){return se(eee,{})}})}})}})}})}})}})};tS(()=>se(tee,{}),document.getElementById("root"));
