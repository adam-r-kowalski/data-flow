function rf(n,e){for(var t=0;t<e.length;t++){const s=e[t];if(typeof s!="string"&&!Array.isArray(s)){for(const o in s)if(o!=="default"&&!(o in n)){const r=Object.getOwnPropertyDescriptor(s,o);r&&Object.defineProperty(n,o,r.get?r:{enumerable:!0,get:()=>s[o]})}}}return Object.freeze(Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}))}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))s(o);new MutationObserver(o=>{for(const r of o)if(r.type==="childList")for(const a of r.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&s(a)}).observe(document,{childList:!0,subtree:!0});function t(o){const r={};return o.integrity&&(r.integrity=o.integrity),o.referrerpolicy&&(r.referrerPolicy=o.referrerpolicy),o.crossorigin==="use-credentials"?r.credentials="include":o.crossorigin==="anonymous"?r.credentials="omit":r.credentials="same-origin",r}function s(o){if(o.ep)return;o.ep=!0;const r=t(o);fetch(o.href,r)}})();const Zt={};function MC(n){Zt.context=n}const LC=(n,e)=>n===e,js=Symbol("solid-proxy"),cp=Symbol("solid-track"),ky=Symbol("solid-dev-component"),Wu={equals:LC};let vy=Ry;const Vo=1,Uu=2,PC={owned:null,cleanups:null,context:null,owner:null};var ct=null;let mr=null,Ot=null,fn=null,uo=null,af=0,BC=0;function Mu(n,e){const t=Ot,s=ct,o=n.length===0,r={owned:null,cleanups:null,context:null,owner:e||s},a=o?()=>n(()=>{throw new Error("Dispose method must be an explicit argument to createRoot function")}):()=>n(()=>_s(()=>uf(r)));s&&(r.name=`${s.name}-r${BC++}`),globalThis._$afterCreateRoot&&globalThis._$afterCreateRoot(r),ct=r,Ot=null;try{return Ma(a,!0)}finally{Ot=t,ct=s}}function Bt(n,e){e=e?Object.assign({},Wu,e):Wu;const t={value:n,observers:null,observerSlots:null,comparator:e.equals||void 0};e.internal||(t.name=Ty(e.name||Ny(n),t));const s=o=>(typeof o=="function"&&(o=o(t.value)),lf(t,o));return[_y.bind(t),s]}function mn(n,e,t){const s=$d(n,e,!1,Vo,t);Oa(s)}function $y(n,e,t){vy=GC;const s=$d(n,e,!1,Vo,t);s.user=!0,uo?uo.push(s):Oa(s)}function rn(n,e,t){t=t?Object.assign({},Wu,t):Wu;const s=$d(n,e,!0,0,t);return s.observers=null,s.observerSlots=null,s.comparator=t.equals||void 0,Oa(s),_y.bind(s)}function Cy(n){return Ma(n,!1)}function _s(n){const e=Ot;Ot=null;try{return n()}finally{Ot=e}}function cf(n){return ct===null?console.warn("cleanups created outside a `createRoot` or `render` will never be run"):ct.cleanups===null?ct.cleanups=[n]:ct.cleanups.push(n),n}function Sy(){return Ot}function zC(n,e){const t=$d(()=>_s(()=>(Object.assign(n,{[ky]:!0}),n(e))),void 0,!0);return t.props=e,t.observers=null,t.observerSlots=null,t.state=0,t.componentName=n.name,Oa(t),t.tValue!==void 0?t.tValue:t.value}function Ny(n){const e=new Set;return`s${wb(typeof n=="string"?n:_s(()=>JSON.stringify(n,(t,s)=>{if(typeof s=="object"&&s!=null){if(e.has(s))return;e.add(s);const o=Object.keys(s),r=Object.getOwnPropertyDescriptors(s),a=o.reduce((i,c)=>{const u=r[c];return u.get||(i[c]=u),i},{});s=Object.create({},a)}return typeof s=="bigint"?`${s.toString()}n`:s})||""))}`}function Ty(n,e){let t=n;if(ct){let s=0;for(ct.sourceMap||(ct.sourceMap={});ct.sourceMap[t];)t=`${n}-${++s}`;ct.sourceMap[t]=e}return t}function VC(n){return n||(n=ct),n?{...Oy(n.sourceMap),...n.owned?My(n):{}}:{}}function Zs(n,e){const t=Symbol("context");return{id:t,Provider:jC(t,e),defaultValue:n}}function Js(n){let e;return(e=Fy(ct,n.id))!==void 0?e:n.defaultValue}function Ey(n){const e=rn(n),t=rn(()=>lp(e()));return t.toArray=()=>{const s=t();return Array.isArray(s)?s:s!=null?[s]:[]},t}function _y(){const n=mr;if(this.sources&&(this.state||n))if(this.state===Vo||n)Oa(this);else{const e=fn;fn=null,Ma(()=>Hu(this),!1),fn=e}if(Ot){const e=this.observers?this.observers.length:0;Ot.sources?(Ot.sources.push(this),Ot.sourceSlots.push(e)):(Ot.sources=[this],Ot.sourceSlots=[e]),this.observers?(this.observers.push(Ot),this.observerSlots.push(Ot.sources.length-1)):(this.observers=[Ot],this.observerSlots=[Ot.sources.length-1])}return this.value}function lf(n,e,t){let s=n.value;return(!n.comparator||!n.comparator(s,e))&&(n.value=e,n.observers&&n.observers.length&&Ma(()=>{for(let o=0;o<n.observers.length;o+=1){const r=n.observers[o],a=mr&&mr.running;a&&mr.disposed.has(r),(a&&!r.tState||!a&&!r.state)&&(r.pure?fn.push(r):uo.push(r),r.observers&&Ay(r)),a||(r.state=Vo)}if(fn.length>1e6){throw fn=[],new Error("Potential Infinite Loop Detected.");throw new Error}},!1)),e}function Oa(n){if(!n.fn)return;uf(n);const e=ct,t=Ot,s=af;Ot=ct=n,WC(n,n.value,s),Ot=t,ct=e}function WC(n,e,t){let s;try{s=n.fn(e)}catch(o){n.pure&&(n.state=Vo),Dy(o)}(!n.updatedAt||n.updatedAt<=t)&&(n.updatedAt!=null&&"observers"in n?lf(n,s):n.value=s,n.updatedAt=t)}function $d(n,e,t,s=Vo,o){const r={fn:n,state:s,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:e,owner:ct,context:null,pure:t};return ct===null?console.warn("computations created outside a `createRoot` or `render` will never be disposed"):ct!==PC&&(ct.owned?ct.owned.push(r):ct.owned=[r],r.name=o&&o.name||`${ct.name||"c"}-${(ct.owned||ct.tOwned).length}`),r}function Gu(n){const e=mr;if(n.state===0||e)return;if(n.state===Uu||e)return Hu(n);if(n.suspense&&_s(n.suspense.inFallback))return n.suspense.effects.push(n);const t=[n];for(;(n=n.owner)&&(!n.updatedAt||n.updatedAt<af);)(n.state||e)&&t.push(n);for(let s=t.length-1;s>=0;s--)if(n=t[s],n.state===Vo||e)Oa(n);else if(n.state===Uu||e){const o=fn;fn=null,Ma(()=>Hu(n,t[0]),!1),fn=o}}function Ma(n,e){if(fn)return n();let t=!1;e||(fn=[]),uo?t=!0:uo=[],af++;try{const s=n();return UC(t),s}catch(s){fn||(uo=null),Dy(s)}}function UC(n){if(fn&&(Ry(fn),fn=null),n)return;const e=uo;uo=null,e.length?Ma(()=>vy(e),!1):globalThis._$afterUpdate&&globalThis._$afterUpdate()}function Ry(n){for(let e=0;e<n.length;e++)Gu(n[e])}function GC(n){let e,t=0;for(e=0;e<n.length;e++){const s=n[e];s.user?n[t++]=s:Gu(s)}for(Zt.context&&MC(),e=0;e<t;e++)Gu(n[e])}function Hu(n,e){const t=mr;n.state=0;for(let s=0;s<n.sources.length;s+=1){const o=n.sources[s];o.sources&&(o.state===Vo||t?o!==e&&Gu(o):(o.state===Uu||t)&&Hu(o,e))}}function Ay(n){const e=mr;for(let t=0;t<n.observers.length;t+=1){const s=n.observers[t];(!s.state||e)&&(s.state=Uu,s.pure?fn.push(s):uo.push(s),s.observers&&Ay(s))}}function uf(n){let e;if(n.sources)for(;n.sources.length;){const t=n.sources.pop(),s=n.sourceSlots.pop(),o=t.observers;if(o&&o.length){const r=o.pop(),a=t.observerSlots.pop();s<o.length&&(r.sourceSlots[a]=s,o[s]=r,t.observerSlots[s]=a)}}if(n.owned){for(e=0;e<n.owned.length;e++)uf(n.owned[e]);n.owned=null}if(n.cleanups){for(e=0;e<n.cleanups.length;e++)n.cleanups[e]();n.cleanups=null}n.state=0,n.context=null,delete n.sourceMap}function HC(n){return n instanceof Error||typeof n=="string"?n:new Error("Unknown error")}function Dy(n){throw n=HC(n),n}function Fy(n,e){return n?n.context&&n.context[e]!==void 0?n.context[e]:Fy(n.owner,e):void 0}function lp(n){if(typeof n=="function"&&!n.length)return lp(n());if(Array.isArray(n)){const e=[];for(let t=0;t<n.length;t++){const s=lp(n[t]);Array.isArray(s)?e.push.apply(e,s):e.push(s)}return e}return n}function jC(n,e){return function(s){let o;return mn(()=>o=_s(()=>(ct.context={[n]:s.value},Ey(()=>s.children))),void 0,e),o}}function wb(n){for(var e=0,t=9;e<n.length;)t=Math.imul(t^n.charCodeAt(e++),9**9);return`${t^t>>>9}`}function Oy(n={}){const e=Object.keys(n),t={};for(let s=0;s<e.length;s++){const o=e[s];t[o]=n[o].value}return t}function My(n){const e={};for(let t=0,s=n.owned.length;t<s;t++){const o=n.owned[t];e[o.componentName?`${o.componentName}:${o.name}`:o.name]={...Oy(o.sourceMap),...o.owned?My(o):{}}}return e}const qC=Symbol("fallback");function Ib(n){for(let e=0;e<n.length;e++)n[e]()}function XC(n,e,t={}){let s=[],o=[],r=[],a=0,i=e.length>1?[]:null;return cf(()=>Ib(r)),()=>{let c=n()||[],u,l;return c[cp],_s(()=>{let h=c.length,p,f,m,g,b,x,y,w,I;if(h===0)a!==0&&(Ib(r),r=[],s=[],o=[],a=0,i&&(i=[])),t.fallback&&(s=[qC],o[0]=Mu(k=>(r[0]=k,t.fallback())),a=1);else if(a===0){for(o=new Array(h),l=0;l<h;l++)s[l]=c[l],o[l]=Mu(d);a=h}else{for(m=new Array(h),g=new Array(h),i&&(b=new Array(h)),x=0,y=Math.min(a,h);x<y&&s[x]===c[x];x++);for(y=a-1,w=h-1;y>=x&&w>=x&&s[y]===c[w];y--,w--)m[w]=o[y],g[w]=r[y],i&&(b[w]=i[y]);for(p=new Map,f=new Array(w+1),l=w;l>=x;l--)I=c[l],u=p.get(I),f[l]=u===void 0?-1:u,p.set(I,l);for(u=x;u<=y;u++)I=s[u],l=p.get(I),l!==void 0&&l!==-1?(m[l]=o[u],g[l]=r[u],i&&(b[l]=i[u]),l=f[l],p.set(I,l)):r[u]();for(l=x;l<h;l++)l in m?(o[l]=m[l],r[l]=g[l],i&&(i[l]=b[l],i[l](l))):o[l]=Mu(d);o=o.slice(0,a=h),s=c.slice(0)}return o});function d(h){if(r[l]=h,i){const[p,f]=Bt(l);return i[l]=f,e(c[l],p)}return e(c[l])}}}function ne(n,e){return zC(n,e||{})}function Iu(){return!0}const Ly={get(n,e,t){return e===js?t:n.get(e)},has(n,e){return n.has(e)},set:Iu,deleteProperty:Iu,getOwnPropertyDescriptor(n,e){return{configurable:!0,enumerable:!0,get(){return n.get(e)},set:Iu,deleteProperty:Iu}},ownKeys(n){return n.keys()}};function Vh(n){return(n=typeof n=="function"?n():n)?n:{}}function Lu(...n){if(n.some(t=>t&&(js in t||typeof t=="function")))return new Proxy({get(t){for(let s=n.length-1;s>=0;s--){const o=Vh(n[s])[t];if(o!==void 0)return o}},has(t){for(let s=n.length-1;s>=0;s--)if(t in Vh(n[s]))return!0;return!1},keys(){const t=[];for(let s=0;s<n.length;s++)t.push(...Object.keys(Vh(n[s])));return[...new Set(t)]}},Ly);const e={};for(let t=n.length-1;t>=0;t--)if(n[t]){const s=Object.getOwnPropertyDescriptors(n[t]);for(const o in s)o in e||Object.defineProperty(e,o,{enumerable:!0,get(){for(let r=n.length-1;r>=0;r--){const a=(n[r]||{})[o];if(a!==void 0)return a}}})}return e}function Py(n,...e){const t=new Set(e.flat()),s=Object.getOwnPropertyDescriptors(n),o=js in n;o||e.push(Object.keys(s).filter(a=>!t.has(a)));const r=e.map(a=>{const i={};for(let c=0;c<a.length;c++){const u=a[c];!o&&!(u in n)||Object.defineProperty(i,u,s[u]?s[u]:{get(){return n[u]},set(){return!0},enumerable:!0})}return i});return o&&r.push(new Proxy({get(a){return t.has(a)?void 0:n[a]},has(a){return t.has(a)?!1:a in n},keys(){return Object.keys(n).filter(a=>!t.has(a))}},Ly)),r}function po(n){const e="fallback"in n&&{fallback:()=>n.fallback};return rn(XC(()=>n.each,n.children,e||void 0))}function ju(n){let e=!1;const t=n.keyed,s=rn(()=>n.when,void 0,{equals:(o,r)=>e?o===r:!o==!r});return rn(()=>{const o=s();if(o){const r=n.children,a=typeof r=="function"&&r.length>0;return e=t||a,a?_s(()=>r(o)):r}return n.fallback})}function Fc(n){let e=!1,t=!1;const s=Ey(()=>n.children),o=rn(()=>{let r=s();Array.isArray(r)||(r=[r]);for(let a=0;a<r.length;a++){const i=r[a].when;if(i)return t=!!r[a].keyed,[a,i,r[a]]}return[-1]},void 0,{equals:(r,a)=>r[0]===a[0]&&(e?r[1]===a[1]:!r[1]==!a[1])&&r[2]===a[2]});return rn(()=>{const[r,a,i]=o();if(r<0)return n.fallback;const c=i.children,u=typeof c=="function"&&c.length>0;return e=t||u,u?_s(()=>c(a)):c})}function qs(n){return n}let Pu;Pu={writeSignal:lf,serializeGraph:VC,registerGraph:Ty,hashValue:Ny};globalThis&&(globalThis.Solid$$?console.warn("You appear to have multiple instances of Solid. This can lead to unexpected behavior."):globalThis.Solid$$=!0);const KC=["allowfullscreen","async","autofocus","autoplay","checked","controls","default","disabled","formnovalidate","hidden","indeterminate","ismap","loop","multiple","muted","nomodule","novalidate","open","playsinline","readonly","required","reversed","seamless","selected"],YC=new Set(["className","value","readOnly","formNoValidate","isMap","noModule","playsInline",...KC]),ZC=new Set(["innerHTML","textContent","innerText","children"]),JC=Object.assign(Object.create(null),{className:"class",htmlFor:"for"}),kb=Object.assign(Object.create(null),{class:"className",formnovalidate:"formNoValidate",ismap:"isMap",nomodule:"noModule",playsinline:"playsInline",readonly:"readOnly"}),QC=new Set(["beforeinput","click","dblclick","contextmenu","focusin","focusout","input","keydown","keyup","mousedown","mousemove","mouseout","mouseover","mouseup","pointerdown","pointermove","pointerout","pointerover","pointerup","touchend","touchmove","touchstart"]),eS=new Set(["altGlyph","altGlyphDef","altGlyphItem","animate","animateColor","animateMotion","animateTransform","circle","clipPath","color-profile","cursor","defs","desc","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","filter","font","font-face","font-face-format","font-face-name","font-face-src","font-face-uri","foreignObject","g","glyph","glyphRef","hkern","image","line","linearGradient","marker","mask","metadata","missing-glyph","mpath","path","pattern","polygon","polyline","radialGradient","rect","set","stop","svg","switch","symbol","text","textPath","tref","tspan","use","view","vkern"]),tS={xlink:"http://www.w3.org/1999/xlink",xml:"http://www.w3.org/XML/1998/namespace"};function nS(n,e,t){let s=t.length,o=e.length,r=s,a=0,i=0,c=e[o-1].nextSibling,u=null;for(;a<o||i<r;){if(e[a]===t[i]){a++,i++;continue}for(;e[o-1]===t[r-1];)o--,r--;if(o===a){const l=r<s?i?t[i-1].nextSibling:t[r-i]:c;for(;i<r;)n.insertBefore(t[i++],l)}else if(r===i)for(;a<o;)(!u||!u.has(e[a]))&&e[a].remove(),a++;else if(e[a]===t[r-1]&&t[i]===e[o-1]){const l=e[--o].nextSibling;n.insertBefore(t[i++],e[a++].nextSibling),n.insertBefore(t[--r],l),e[o]=t[r]}else{if(!u){u=new Map;let d=i;for(;d<r;)u.set(t[d],d++)}const l=u.get(e[a]);if(l!=null)if(i<l&&l<r){let d=a,h=1,p;for(;++d<o&&d<r&&!((p=u.get(e[d]))==null||p!==l+h);)h++;if(h>l-i){const f=e[a];for(;i<l;)n.insertBefore(t[i++],f)}else n.replaceChild(t[i++],e[a++])}else a++;else e[a++].remove()}}}const vb="_$DX_DELEGATE";function sS(n,e,t,s={}){let o;return Mu(r=>{o=r,e===document?n():gr(e,n(),e.firstChild?null:void 0,t)},s.owner),()=>{o(),e.textContent=""}}function fs(n,e,t){const s=document.createElement("template");if(s.innerHTML=n,e&&s.innerHTML.split("<").length-1!==e)throw`The browser resolved template HTML does not match JSX input:
${s.innerHTML}

${n}. Is your HTML properly formed?`;let o=s.content.firstChild;return t&&(o=o.firstChild),o}function Cd(n,e=window.document){const t=e[vb]||(e[vb]=new Set);for(let s=0,o=n.length;s<o;s++){const r=n[s];t.has(r)||(t.add(r),e.addEventListener(r,dS))}}function Vs(n,e,t){t==null?n.removeAttribute(e):n.setAttribute(e,t)}function oS(n,e,t,s){s==null?n.removeAttributeNS(e,t):n.setAttributeNS(e,t,s)}function rS(n,e){e==null?n.removeAttribute("class"):n.className=e}function aS(n,e,t,s){if(s)Array.isArray(t)?(n[`$$${e}`]=t[0],n[`$$${e}Data`]=t[1]):n[`$$${e}`]=t;else if(Array.isArray(t)){const o=t[0];n.addEventListener(e,t[0]=r=>o.call(n,t[1],r))}else n.addEventListener(e,t)}function iS(n,e,t={}){const s=Object.keys(e||{}),o=Object.keys(t);let r,a;for(r=0,a=o.length;r<a;r++){const i=o[r];!i||i==="undefined"||e[i]||($b(n,i,!1),delete t[i])}for(r=0,a=s.length;r<a;r++){const i=s[r],c=!!e[i];!i||i==="undefined"||t[i]===c||!c||($b(n,i,!0),t[i]=c)}return t}function By(n,e,t){if(!e)return t?Vs(n,"style"):e;const s=n.style;if(typeof e=="string")return s.cssText=e;typeof t=="string"&&(s.cssText=t=void 0),t||(t={}),e||(e={});let o,r;for(r in t)e[r]==null&&s.removeProperty(r),delete t[r];for(r in e)o=e[r],o!==t[r]&&(s.setProperty(r,o),t[r]=o);return t}function df(n,e={},t,s){const o={};return s||mn(()=>o.children=ga(n,e.children,o.children)),mn(()=>e.ref&&e.ref(n)),mn(()=>cS(n,e,t,!0,o,!0)),o}function hf(n,e,t){return _s(()=>n(e,t))}function gr(n,e,t,s){if(t!==void 0&&!s&&(s=[]),typeof e!="function")return ga(n,e,s,t);mn(o=>ga(n,e(),o,t),s)}function cS(n,e,t,s,o={},r=!1){e||(e={});for(const a in o)if(!(a in e)){if(a==="children")continue;o[a]=Cb(n,a,null,o[a],t,r)}for(const a in e){if(a==="children"){s||ga(n,e.children);continue}const i=e[a];o[a]=Cb(n,a,i,o[a],t,r)}}function lS(n){let e,t;if(!Zt.context||!(e=Zt.registry.get(t=hS()))){if(Zt.context&&console.warn("Unable to find DOM nodes for hydration key:",t),!n)throw new Error("Unrecoverable Hydration Mismatch. No template for key: "+t);return n.cloneNode(!0)}return Zt.completed&&Zt.completed.add(e),Zt.registry.delete(t),e}function uS(n){return n.toLowerCase().replace(/-([a-z])/g,(e,t)=>t.toUpperCase())}function $b(n,e,t){const s=e.trim().split(/\s+/);for(let o=0,r=s.length;o<r;o++)n.classList.toggle(s[o],t)}function Cb(n,e,t,s,o,r){let a,i,c;if(e==="style")return By(n,t,s);if(e==="classList")return iS(n,t,s);if(t===s)return s;if(e==="ref")r||t(n);else if(e.slice(0,3)==="on:"){const u=e.slice(3);s&&n.removeEventListener(u,s),t&&n.addEventListener(u,t)}else if(e.slice(0,10)==="oncapture:"){const u=e.slice(10);s&&n.removeEventListener(u,s,!0),t&&n.addEventListener(u,t,!0)}else if(e.slice(0,2)==="on"){const u=e.slice(2).toLowerCase(),l=QC.has(u);if(!l&&s){const d=Array.isArray(s)?s[0]:s;n.removeEventListener(u,d)}(l||t)&&(aS(n,u,t,l),l&&Cd([u]))}else if((c=ZC.has(e))||!o&&(kb[e]||(i=YC.has(e)))||(a=n.nodeName.includes("-")))e==="class"||e==="className"?rS(n,t):a&&!i&&!c?n[uS(e)]=t:n[kb[e]||e]=t;else{const u=o&&e.indexOf(":")>-1&&tS[e.split(":")[0]];u?oS(n,u,e,t):Vs(n,JC[e]||e,t)}return t}function dS(n){const e=`$$${n.type}`;let t=n.composedPath&&n.composedPath()[0]||n.target;for(n.target!==t&&Object.defineProperty(n,"target",{configurable:!0,value:t}),Object.defineProperty(n,"currentTarget",{configurable:!0,get(){return t||document}}),Zt.registry&&!Zt.done&&(Zt.done=!0,document.querySelectorAll("[id^=pl-]").forEach(s=>s.remove()));t!==null;){const s=t[e];if(s&&!t.disabled){const o=t[`${e}Data`];if(o!==void 0?s.call(t,o,n):s.call(t,n),n.cancelBubble)return}t=t.host&&t.host!==t&&t.host instanceof Node?t.host:t.parentNode}}function ga(n,e,t,s,o){for(Zt.context&&!t&&(t=[...n.childNodes]);typeof t=="function";)t=t();if(e===t)return t;const r=typeof e,a=s!==void 0;if(n=a&&t[0]&&t[0].parentNode||n,r==="string"||r==="number"){if(Zt.context)return t;if(r==="number"&&(e=e.toString()),a){let i=t[0];i&&i.nodeType===3?i.data=e:i=document.createTextNode(e),t=sa(n,t,s,i)}else t!==""&&typeof t=="string"?t=n.firstChild.data=e:t=n.textContent=e}else if(e==null||r==="boolean"){if(Zt.context)return t;t=sa(n,t,s)}else{if(r==="function")return mn(()=>{let i=e();for(;typeof i=="function";)i=i();t=ga(n,i,t,s)}),()=>t;if(Array.isArray(e)){const i=[],c=t&&Array.isArray(t);if(up(i,e,t,o))return mn(()=>t=ga(n,i,t,s,!0)),()=>t;if(Zt.context){if(!i.length)return t;for(let u=0;u<i.length;u++)if(i[u].parentNode)return t=i}if(i.length===0){if(t=sa(n,t,s),a)return t}else c?t.length===0?Sb(n,i,s):nS(n,t,i):(t&&sa(n),Sb(n,i));t=i}else if(e instanceof Node){if(Zt.context&&e.parentNode)return t=a?[e]:e;if(Array.isArray(t)){if(a)return t=sa(n,t,s,e);sa(n,t,null,e)}else t==null||t===""||!n.firstChild?n.appendChild(e):n.replaceChild(e,n.firstChild);t=e}else console.warn("Unrecognized value. Skipped inserting",e)}return t}function up(n,e,t,s){let o=!1;for(let r=0,a=e.length;r<a;r++){let i=e[r],c=t&&t[r];if(i instanceof Node)n.push(i);else if(!(i==null||i===!0||i===!1))if(Array.isArray(i))o=up(n,i,c)||o;else if(typeof i=="function")if(s){for(;typeof i=="function";)i=i();o=up(n,Array.isArray(i)?i:[i],Array.isArray(c)?c:[c])||o}else n.push(i),o=!0;else{const u=String(i);c&&c.nodeType===3&&c.data===u?n.push(c):n.push(document.createTextNode(u))}}return o}function Sb(n,e,t=null){for(let s=0,o=e.length;s<o;s++)n.insertBefore(e[s],t)}function sa(n,e,t,s){if(t===void 0)return n.textContent="";const o=s||document.createTextNode("");if(e.length){let r=!1;for(let a=e.length-1;a>=0;a--){const i=e[a];if(o!==i){const c=i.parentNode===n;!r&&!a?c?n.replaceChild(o,i):n.insertBefore(o,t):c&&i.remove()}else r=!0}}else n.insertBefore(o,t);return[o]}function hS(){const n=Zt.context;return`${n.id}${n.count++}`}const pS=!1,fS="http://www.w3.org/2000/svg";function mS(n,e=!1){return e?document.createElementNS(fS,n):document.createElement(n)}function gS(n){const[e,t]=Py(n,["component"]),s=rn(()=>e.component);return rn(()=>{const o=s();switch(typeof o){case"function":return Object.assign(o,{[ky]:!0}),_s(()=>o(t));case"string":const r=eS.has(o),a=Zt.context?lS():mS(o,r);return df(a,t,r),a}})}let bS={data:""},xS=n=>typeof window=="object"?((n?n.querySelector("#_goober"):window._goober)||Object.assign((n||document.head).appendChild(document.createElement("style")),{innerHTML:" ",id:"_goober"})).firstChild:n||bS,yS=/(?:([\u0080-\uFFFF\w-%@]+) *:? *([^{;]+?);|([^;}{]*?) *{)|(}\s*)/g,wS=/\/\*[^]*?\*\/|  +/g,Nb=/\n+/g,ir=(n,e)=>{let t="",s="",o="";for(let r in n){let a=n[r];r[0]=="@"?r[1]=="i"?t=r+" "+a+";":s+=r[1]=="f"?ir(a,r):r+"{"+ir(a,r[1]=="k"?"":e)+"}":typeof a=="object"?s+=ir(a,e?e.replace(/([^,])+/g,i=>r.replace(/(^:.*)|([^,])+/g,c=>/&/.test(c)?c.replace(/&/g,i):i?i+" "+c:c)):r):a!=null&&(r=/^--/.test(r)?r:r.replace(/[A-Z]/g,"-$&").toLowerCase(),o+=ir.p?ir.p(r,a):r+":"+a+";")}return t+(e&&o?e+"{"+o+"}":o)+s},ao={},zy=n=>{if(typeof n=="object"){let e="";for(let t in n)e+=t+zy(n[t]);return e}return n},IS=(n,e,t,s,o)=>{let r=zy(n),a=ao[r]||(ao[r]=(c=>{let u=0,l=11;for(;u<c.length;)l=101*l+c.charCodeAt(u++)>>>0;return"go"+l})(r));if(!ao[a]){let c=r!==n?n:(u=>{let l,d,h=[{}];for(;l=yS.exec(u.replace(wS,""));)l[4]?h.shift():l[3]?(d=l[3].replace(Nb," ").trim(),h.unshift(h[0][d]=h[0][d]||{})):h[0][l[1]]=l[2].replace(Nb," ").trim();return h[0]})(n);ao[a]=ir(o?{["@keyframes "+a]:c}:c,t?"":"."+a)}let i=t&&ao.g?ao.g:null;return t&&(ao.g=ao[a]),((c,u,l,d)=>{d?u.data=u.data.replace(d,c):u.data.indexOf(c)===-1&&(u.data=l?c+u.data:u.data+c)})(ao[a],e,s,i),a},kS=(n,e,t)=>n.reduce((s,o,r)=>{let a=e[r];if(a&&a.call){let i=a(t),c=i&&i.props&&i.props.className||/^go/.test(i)&&i;a=c?"."+c:i&&typeof i=="object"?i.props?"":ir(i,""):i===!1?"":i}return s+o+(a??"")},"");function qu(n){let e=this||{},t=n.call?n(e.p):n;return IS(t.unshift?t.raw?kS(t,[].slice.call(arguments,1),e.p):t.reduce((s,o)=>Object.assign(s,o&&o.call?o(e.p):o),{}):t,xS(e.target),e.g,e.o,e.k)}qu.bind({g:1});qu.bind({k:1});const vS=Zs();function $S(n){let e=this||{};return(...t)=>{const s=o=>{const r=Js(vS),a=Lu(o,{theme:r}),i=Lu(a,{get class(){const p=a.class,f="class"in a&&/^go[0-9]+/.test(p);let m=qu.apply({target:e.target,o:f,p:a,g:e.g},t);return[p,m].filter(Boolean).join(" ")}}),[c,u]=Py(i,["as","theme"]),l=u,d=c.as||n;let h;return typeof d=="function"?h=d(l):e.g==1?(h=document.createElement(d),df(h,l)):h=gS(Lu({component:d},l)),h};return s.class=o=>_s(()=>qu.apply({target:e.target,p:o,g:e.g},t)),s}}const ot=new Proxy($S,{get(n,e){return n(e)}}),CS=[0,0],pf=([n,e],[t,s])=>[n+t,e+s],dr=([n,e],[t,s])=>[n-t,e-s],Vy=([n,e],t)=>[n*t,e*t],ff=(n,e)=>Vy(pf(n,e),.5),SS=([n,e])=>Math.sqrt(Math.pow(n,2)+Math.pow(e,2)),mf=(n,e)=>SS(dr(n,e)),NS=(n,e)=>{const[t,s,o,r,a,i,c,u,l]=n,[d,h,p,f,m,g,b,x,y]=e,w=t*d+s*f+o*b,I=t*h+s*m+o*x,k=t*p+s*g+o*y,v=r*d+a*f+i*b,C=r*h+a*m+i*x,N=r*p+a*g+i*y,T=c*d+u*f+l*b,_=c*h+u*m+l*x,O=c*p+u*g+l*y;return[w,I,k,v,C,N,T,_,O]},Wy=n=>{const[e,t,s,o,r,a,i,c,u]=n,l=r*u-a*c,d=o*u-a*i,h=o*c-r*i,p=t*u-s*c,f=e*u-s*i,m=e*c-t*i,g=t*a-s*r,b=e*a-s*o,x=e*r-t*o,w=1/(i*g-c*b+u*x);return[w*l,w*-p,w*g,w*-d,w*f,w*-b,w*h,w*-m,w*x]},dp=(n,e)=>{const[t,s,o,r,a,i,c,u,l]=n,[d,h,p]=e,f=t*d+s*h+o*p,m=r*d+a*h+i*p,g=c*d+u*h+l*p;return[f,m,g]},Tb=(n,e)=>[1,0,n,0,1,e,0,0,1],TS=n=>[n,0,0,0,n,0,0,0,1],Eb=(n,e,t)=>Math.max(e,Math.min(t,n)),ES=()=>{const[n,e]=Bt([0,0]),[t,s]=Bt(.5),o=()=>[t(),0,n()[0],0,t(),n()[1],0,0,1];return{position:n,zoom:t,transform:o,drag:r=>e(pf(n(),r)),pinch:(r,a)=>{let i=t()*Math.pow(2,Eb(a,-30,30)*-.01);i=Eb(i,.1,5);const c=[Tb(r[0],r[1]),TS(i/t()),Tb(-r[0],-r[1]),o()].reduce(NS);s(c[0]),e([c[2],c[5]])},worldSpace:r=>{const[a,i]=dp(Wy(o()),[...r,1]);return[a,i]}}},Uy=Zs(),_S=n=>{const e=ES();return ne(Uy.Provider,{value:e,get children(){return n.children}})},Mr=()=>Js(Uy),Xu=Symbol("store-raw"),bc=Symbol("store-node"),Ku=Symbol("store-name");function Gy(n,e){let t=n[js];if(!t){if(Object.defineProperty(n,js,{value:t=new Proxy(n,DS)}),!Array.isArray(n)){const s=Object.keys(n),o=Object.getOwnPropertyDescriptors(n);for(let r=0,a=s.length;r<a;r++){const i=s[r];if(o[i].get){const c=o[i].get.bind(t);Object.defineProperty(n,i,{enumerable:o[i].enumerable,get:c})}}}e&&Object.defineProperty(n,Ku,{value:e})}return t}function ba(n){let e;return n!=null&&typeof n=="object"&&(n[js]||!(e=Object.getPrototypeOf(n))||e===Object.prototype||Array.isArray(n))}function xa(n,e=new Set){let t,s,o,r;if(t=n!=null&&n[Xu])return t;if(!ba(n)||e.has(n))return n;if(Array.isArray(n)){Object.isFrozen(n)?n=n.slice(0):e.add(n);for(let a=0,i=n.length;a<i;a++)o=n[a],(s=xa(o,e))!==o&&(n[a]=s)}else{Object.isFrozen(n)?n=Object.assign({},n):e.add(n);const a=Object.keys(n),i=Object.getOwnPropertyDescriptors(n);for(let c=0,u=a.length;c<u;c++)r=a[c],!i[r].get&&(o=n[r],(s=xa(o,e))!==o&&(n[r]=s))}return n}function gf(n){let e=n[bc];return e||Object.defineProperty(n,bc,{value:e={}}),e}function hp(n,e,t){return n[e]||(n[e]=jy(t))}function RS(n,e){const t=Reflect.getOwnPropertyDescriptor(n,e);return!t||t.get||!t.configurable||e===js||e===bc||e===Ku||(delete t.value,delete t.writable,t.get=()=>n[js][e]),t}function Hy(n){if(Sy()){const e=gf(n);(e._||(e._=jy()))()}}function AS(n){return Hy(n),Reflect.ownKeys(n)}function jy(n){const[e,t]=Bt(n,{equals:!1,internal:!0});return e.$=t,e}const DS={get(n,e,t){if(e===Xu)return n;if(e===js)return t;if(e===cp)return Hy(n),t;const s=gf(n),o=s.hasOwnProperty(e);let r=o?s[e]():n[e];if(e===bc||e==="__proto__")return r;if(!o){const a=Object.getOwnPropertyDescriptor(n,e);Sy()&&(typeof r!="function"||n.hasOwnProperty(e))&&!(a&&a.get)&&(r=hp(s,e,r)())}return ba(r)?Gy(r,n[Ku]&&`${n[Ku]}:${e.toString()}`):r},has(n,e){return e===Xu||e===js||e===cp||e===bc||e==="__proto__"?!0:(this.get(n,e,n),e in n)},set(){return console.warn("Cannot mutate a Store directly"),!0},deleteProperty(){return console.warn("Cannot mutate a Store directly"),!0},ownKeys:AS,getOwnPropertyDescriptor:RS};function ya(n,e,t,s=!1){if(!s&&n[e]===t)return;const o=n[e],r=n.length;globalThis._$onStoreNodeUpdate&&globalThis._$onStoreNodeUpdate(n,e,t,o),t===void 0?delete n[e]:n[e]=t;let a=gf(n),i;(i=hp(a,e,o))&&i.$(()=>t),Array.isArray(n)&&n.length!==r&&(i=hp(a,"length",r))&&i.$(n.length),(i=a._)&&i.$()}function qy(n,e){const t=Object.keys(e);for(let s=0;s<t.length;s+=1){const o=t[s];ya(n,o,e[o])}}function FS(n,e){if(typeof e=="function"&&(e=e(n)),e=xa(e),Array.isArray(e)){if(n===e)return;let t=0,s=e.length;for(;t<s;t++){const o=e[t];n[t]!==o&&ya(n,t,o)}ya(n,"length",s)}else qy(n,e)}function cc(n,e,t=[]){let s,o=n;if(e.length>1){s=e.shift();const a=typeof s,i=Array.isArray(n);if(Array.isArray(s)){for(let c=0;c<s.length;c++)cc(n,[s[c]].concat(e),t);return}else if(i&&a==="function"){for(let c=0;c<n.length;c++)s(n[c],c)&&cc(n,[c].concat(e),t);return}else if(i&&a==="object"){const{from:c=0,to:u=n.length-1,by:l=1}=s;for(let d=c;d<=u;d+=l)cc(n,[d].concat(e),t);return}else if(e.length>1){cc(n[s],e,[s].concat(t));return}o=n[s],t=[s].concat(t)}let r=e[0];typeof r=="function"&&(r=r(o,t),r===o)||s===void 0&&r==null||(r=xa(r),s===void 0||ba(o)&&ba(r)&&!Array.isArray(r)?qy(o,r):ya(n,s,r))}function Xy(...[n,e]){const t=xa(n||{}),s=Array.isArray(t);if(typeof t!="object"&&typeof t!="function")throw new Error(`Unexpected type ${typeof t} received when initializing 'createStore'. Expected an object.`);const o=Gy(t,e&&e.name||Pu.hashValue(t));{const a=e&&e.name||Pu.hashValue(t);Pu.registerGraph(a,{value:t})}function r(...a){Cy(()=>{s&&a.length===1?FS(t,a[0]):cc(t,a)})}return[o,r]}const Yu=new WeakMap,Ky={get(n,e){if(e===Xu)return n;const t=n[e];let s;return ba(t)?Yu.get(t)||(Yu.set(t,s=new Proxy(t,Ky)),s):t},set(n,e,t){return ya(n,e,xa(t)),!0},deleteProperty(n,e){return ya(n,e,void 0,!0),!0}};function La(n){return e=>{if(ba(e)){let t;(t=Yu.get(e))||Yu.set(e,t=new Proxy(e,Ky)),n(t)}return e}}var io=(n=>(n[n.SOURCE=0]="SOURCE",n[n.TRANSFORM=1]="TRANSFORM",n[n.SINK=2]="SINK",n))(io||{});const bf={num:{kind:0,name:"num",outputs:[""]},add:{kind:1,name:"add",inputs:["",""],outputs:[""],func:"add"},abs:{kind:1,name:"abs",inputs:[""],outputs:[""],func:"abs"},sub:{kind:1,name:"sub",inputs:["",""],outputs:[""],func:"sub"},mul:{kind:1,name:"mul",inputs:["",""],outputs:[""],func:"mul"},div:{kind:1,name:"div",inputs:["",""],outputs:[""],func:"div"},maximum:{kind:1,name:"maximum",inputs:["",""],outputs:[""],func:"maximum"},mean:{kind:1,name:"mean",inputs:[""],outputs:[""],func:"mean"},minimum:{kind:1,name:"minimum",inputs:["",""],outputs:[""],func:"minimum"},mod:{kind:1,name:"mod",inputs:["",""],outputs:[""],func:"mod"},pow:{kind:1,name:"pow",inputs:["",""],outputs:[""],func:"pow"},"squared difference":{kind:1,name:"squared difference",inputs:["",""],outputs:[""],func:"squared difference"},linspace:{kind:1,name:"linspace",inputs:["start","stop","num"],outputs:[""],func:"linspace"},square:{kind:1,name:"square",inputs:["x"],outputs:[""],func:"square"},scatter:{kind:1,name:"scatter",inputs:["x","y"],outputs:[""],func:"scatter"},line:{kind:1,name:"line",inputs:["x","y"],outputs:[""],func:"line"},overlay:{kind:1,name:"overlay",inputs:["",""],outputs:[""],func:"overlay"},label:{kind:2,name:"label",inputs:[""],func:"label"},read:{kind:0,name:"read",outputs:[""]},id:{kind:1,name:"id",inputs:[""],outputs:[""],func:"id"}},Yy=(n,e,t,s)=>{switch(n.type){case"Function":return n.fn(e);case"Functions":const o=n.fns[e[t].type];return Yy(o,e,t+1,s);default:const r=e.map(a=>a.type);return{type:"Error",message:`Cannot call ${s} with ${r}`}}},pp=(n,e,t)=>{try{return Yy(n[e],t,0,e)}catch(s){if(s instanceof Error)return{type:"Error",message:s.message};throw s}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OS=1e-7,MS=1e-4;class xf{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Sd{refCount(e){return En("refCount")}incRef(e){return En("incRef")}timerAvailable(){return!0}time(e){return En("time")}read(e){return En("read")}readSync(e){return En("readSync")}readToGPU(e,t){return En("readToGPU")}numDataIds(){return En("numDataIds")}disposeData(e,t){return En("disposeData")}write(e,t,s){return En("write")}move(e,t,s,o,r){return En("move")}createTensorFromTexture(e,t,s){return En("createTensorFromTexture")}memory(){return En("memory")}floatPrecision(){return En("floatPrecision")}epsilon(){return this.floatPrecision()===32?OS:MS}dispose(){return En("dispose")}}function En(n){throw new Error(`'${n}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LS(n){let e=n.length,t=0;for(;e>0;)t=Math.random()*e|0,e--,ia(n,e,t)}function Ir(n,e,t){return Math.max(n,Math.min(e,t))}function yf(n){return n%2===0?n:n+1}function ia(n,e,t){const s=n[e];n[e]=n[t],n[t]=s}function PS(n){let e=0;for(let t=0;t<n.length;t++)e+=n[t];return e}function $(n,e){if(!n)throw new Error(typeof e=="string"?e:e())}function Zn(n,e,t=""){$(Ke(n,e),()=>t+` Shapes ${n} and ${e} must match`)}function Zy(n){$(n!=null,()=>"The input to the tensor constructor must be a non-null value.")}function wa(n,e=[],t=!1){if(e==null&&(e=[]),Array.isArray(n)||Xs(n)&&!t)for(let s=0;s<n.length;++s)wa(n[s],e,t);else e.push(n);return e}function L(n){if(n.length===0)return 1;let e=n[0];for(let t=1;t<n.length;t++)e*=n[t];return e}function Ke(n,e){if(n===e)return!0;if(n==null||e==null||n.length!==e.length)return!1;for(let t=0;t<n.length;t++)if(n[t]!==e[t])return!1;return!0}function Ia(n){return n%1===0}function fp(n){const e=Math.ceil(Math.sqrt(n));return[e,Math.ceil(n/e)]}function ha(n,e){return e<=n.length?n:n+" ".repeat(e-n.length)}function _b(n,e=o=>0,t,s){return new Promise((o,r)=>{let a=0;const i=()=>{if(n()){o();return}a++;const c=e(a);if(t!=null&&a>=t){r();return}s!=null?s(i,c):setTimeout(i,c)};i()})}function wf(n,e){let t=1,s=-1;for(let r=0;r<n.length;++r)if(n[r]>=0)t*=n[r];else if(n[r]===-1){if(s!==-1)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${r}`);s=r}else if(n[r]<0)throw Error(`Shapes can not be < 0. Found ${n[r]} at dim ${r}`);if(s===-1){if(e>0&&e!==t)throw Error(`Size(${e}) must match the product of shape ${n}`);return n}if(t===0)throw Error(`Cannot infer the missing size in [${n}] when there are 0 elements`);if(e%t!==0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${t}`);const o=n.slice();return o[s]=e/t,o}function Re(n,e){const t=e.length;return n=n==null?e.map((s,o)=>o):[].concat(n),$(n.every(s=>s>=-t&&s<t),()=>`All values in axis param must be in range [-${t}, ${t}) but got axis ${n}`),$(n.every(s=>Ia(s)),()=>`All values in axis param must be integers but got axis ${n}`),n.map(s=>s<0?t+s:s)}function Wo(n,e){const t=[],s=[],o=e!=null&&Array.isArray(e)&&e.length===0,r=e==null||o?null:Re(e,n).sort();let a=0;for(let i=0;i<n.length;++i){if(r!=null){if(r[a]===i&&n[i]!==1)throw new Error(`Can't squeeze axis ${i} since its dim '${n[i]}' is not 1`);(r[a]==null||r[a]>i)&&n[i]===1&&(t.push(n[i]),s.push(i)),r[a]<=i&&a++}n[i]!==1&&(t.push(n[i]),s.push(i))}return{newShape:t,keptDims:s}}function Qt(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else throw new Error(`Unknown data type ${n}`);return t}function At(n,e){let t=null;if(n==null||n==="float32")t=new Float32Array(e);else if(n==="int32")t=new Int32Array(e);else if(n==="bool")t=new Uint8Array(e);else if(n==="string")t=new Array(e);else throw new Error(`Unknown data type ${n}`);return t}function BS(n,e){for(let t=0;t<n.length;t++){const s=n[t];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${e} being uploaded contains ${s}.`)}}function zS(n){return n==="bool"||n==="complex64"||n==="float32"||n==="int32"||n==="string"}function Jy(n,e){return!(e==="complex64"||e==="float32"&&n!=="complex64"||e==="int32"&&n!=="float32"&&n!=="complex64"||e==="bool"&&n==="bool")}function Xs(n){return n instanceof Float32Array||n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray}function xc(n){if(n==="float32"||n==="int32")return 4;if(n==="complex64")return 8;if(n==="bool")return 1;throw new Error(`Unknown dtype ${n}`)}function VS(n){if(n==null)return 0;let e=0;return n.forEach(t=>e+=t.length),e}function Oc(n){return typeof n=="string"||n instanceof String}function WS(n){return typeof n=="boolean"}function mp(n){return typeof n=="number"}function Mc(n){return Array.isArray(n)?Mc(n[0]):n instanceof Float32Array?"float32":n instanceof Int32Array||n instanceof Uint8Array||n instanceof Uint8ClampedArray?"int32":mp(n)?"float32":Oc(n)?"string":WS(n)?"bool":"float32"}function gp(n){return!!(n&&n.constructor&&n.call&&n.apply)}function bp(n,e){for(let t=e;t<n;++t)if(n%t===0)return t;return n}function me(n){const e=n.length;if(e<2)return[];const t=new Array(e-1);t[e-2]=n[e-1];for(let s=e-3;s>=0;--s)t[s]=t[s+1]*n[s+1];return t}function Qy(n,e,t,s=!1){const o=new Array;if(e.length===1){const r=e[0]*(s?2:1);for(let a=0;a<r;a++)o[a]=t[n+a]}else{const r=e[0],a=e.slice(1),i=a.reduce((c,u)=>c*u)*(s?2:1);for(let c=0;c<r;c++)o[c]=Qy(n+c*i,a,t,s)}return o}function Cs(n,e,t=!1){if(n.length===0)return e[0];const s=n.reduce((o,r)=>o*r)*(t?2:1);if(s===0)return[];if(s!==e.length)throw new Error(`[${n}] does not match the input size ${e.length}${t?" for a complex tensor":""}.`);return Qy(0,n,e,t)}function If(n,e){const t=an(n,e);for(let s=0;s<t.length;s++)t[s]=1;return t}function an(n,e){if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool")return new Uint8Array(n);throw new Error(`Unknown data type ${e}`)}function e0(n,e){const t=n.reduce((s,o)=>s*o,1);if(e==null||e==="float32")return Cs(n,new Float32Array(t));if(e==="int32")return Cs(n,new Int32Array(t));if(e==="bool")return Cs(n,new Uint8Array(t));throw new Error(`Unknown data type ${e}`)}function bo(n){n.forEach(e=>{$(Number.isInteger(e)&&e>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${n}].`)})}function Ws(n,e,t){if(e===0)return 0;if(e===1)return n[0];let s=n[n.length-1];for(let o=0;o<n.length-1;++o)s+=t[o]*n[o];return s}function Pa(n,e,t){if(e===0)return[];if(e===1)return[n];const s=new Array(e);for(let o=0;o<s.length-1;++o)s[o]=Math.floor(n/t[o]),n-=s[o]*t[o];return s[s.length-1]=n,s}function t0(n){return n&&n.then&&typeof n.then=="function"}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Rb="tfjsflags";class US{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=GS,this.populateURLFlags()}setPlatform(e,t){this.platform!=null&&(H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,s){if(this.flagRegistry[e]={evaluationFn:t,setHook:s},this.urlFlags[e]!=null){const o=this.urlFlags[e];H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${o}.`),this.set(e,o)}}async getAsync(e){return e in this.flags?this.flags[e]:(this.flags[e]=await this.evaluateFlag(e),this.flags[e])}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(t0(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(this.flagRegistry[e]==null)throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,this.flagRegistry[e].setHook!=null&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(this.flagRegistry[e]==null)throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(typeof this.global>"u"||typeof this.global.location>"u"||typeof this.global.location.search>"u")return;const e=this.getQueryParams(this.global.location.search);Rb in e&&e[Rb].split(",").forEach(s=>{const[o,r]=s.split(":");this.urlFlags[o]=jS(o,r)})}}function GS(n){const e={};return n.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(t,...s)=>(HS(e,s[0],s[1]),s.join("="))),e}function HS(n,e,t){n[decodeURIComponent(e)]=decodeURIComponent(t||"")}function jS(n,e){if(e=e.toLowerCase(),e==="true"||e==="false")return e==="true";if(`${+e}`===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${n}.`)}function H(){return n0}let n0=null;function qS(n){n0=n}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Wh;function s0(){if(Wh==null){let n;if(typeof window<"u")n=window;else if(typeof global<"u")n=global;else if(typeof process<"u")n=process;else if(typeof self<"u")n=self;else throw new Error("Could not find a global object");Wh=n}return Wh}function XS(){const n=s0();return n._tfGlobals==null&&(n._tfGlobals=new Map),n._tfGlobals}function kf(n,e){const t=XS();if(t.has(n))return t.get(n);{const s=e();return t.set(n,s),t.get(n)}}const Lc="Abs",Pc="Acos",Bc="Acosh",Lr="Add",zc="AddN",Vc="All",Wc="Any",Ba="ArgMax",Nd="ArgMin",Uc="Asin",Gc="Asinh",Hc="Atan",jc="Atanh",qc="Atan2",za="AvgPool",vf="AvgPoolGrad",Td="AvgPool3D",$f="AvgPool3DGrad",Va="BatchMatMul",Xc="BatchToSpaceND",Cf="Bincount",KS="BroadcastTo",o0="BroadcastArgs",Wa="Cast",Ua="Ceil",Pr="ClipByValue",Sf="Complex",Ed="ComplexAbs",Kc="Concat",Ga="Conv2D",Nf="Conv2DBackpropFilter",Ha="Conv2DBackpropInput",_d="Conv3D",Tf="Conv3DBackpropFilterV2",Ef="Conv3DBackpropInputV2",ja="Cos",qa="Cosh",Yc="Cumprod",Xa="Cumsum",Zc="CropAndResize",_f="DenseBincount",Jc="DepthToSpace",Ka="DepthwiseConv2dNative",Rf="DepthwiseConv2dNativeBackpropFilter",Af="DepthwiseConv2dNativeBackpropInput",r0="Diag",Rd="Dilation2D",xp="Dilation2DBackpropInput",yp="Dilation2DBackpropFilter",Ya="RealDiv",a0="Einsum",Za="Elu",Df="EluGrad",Qc="Erf",el="Equal",Ja="Exp",tl="ExpandDims",nl="Expm1",Ff="FFT",Ad="Fill",sl="FlipLeftRight",Qa="Floor",ei="FloorDiv",ti="FusedBatchNorm",ol="GatherV2",Dd="GatherNd",rl="Greater",ni="GreaterEqual",si="Identity",Of="IFFT",Mf="Imag",al="IsFinite",il="IsInf",oi="IsNan",ri="LeakyRelu",cl="Less",ll="LessEqual",Lf="LinSpace",ai="Log",ul="Log1p",dl="LogicalAnd",hl="LogicalNot",pl="LogicalOr",YS="LogicalXor",ZS="LogSoftmax",Fd="LRN",Pf="LRNGrad",ii="Max",ci="Maximum",li="MaxPool",Bf="MaxPoolGrad",Od="MaxPool3D",zf="MaxPool3DGrad",i0="MaxPoolWithArgmax",ui="Mean",di="Min",hi="Minimum",pi="MirrorPad",fl="Mod",c0="Multinomial",fi="Multiply",ml="Neg",gl="NotEqual",bl="NonMaxSuppressionV3",xl="NonMaxSuppressionV4",yl="NonMaxSuppressionV5",wl="OnesLike",mi="OneHot",Il="Pack",gi="PadV2",bi="Pow",xi="Prelu",yi="Prod",l0="RaggedGather",u0="RaggedRange",d0="RaggedTensorToTensor",Md="Range",Vf="Real",wi="Reciprocal",Ii="Relu",kl="Reshape",ki="ResizeNearestNeighbor",Wf="ResizeNearestNeighborGrad",vi="ResizeBilinear",Uf="ResizeBilinearGrad",$i="Relu6",Ci="Reverse",Si="Round",Ni="Rsqrt",Ld="ScatterNd",h0="SearchSorted",vl="Select",$l="Selu",Cl="Slice",Ti="Sin",Sl="Sinh",Nl="Sign",Ei="Sigmoid",Tl="Softplus",_i="Sqrt",Ri="Sum",El="SpaceToBatchND",_l="SplitV",Ai="Softmax",Pd="SparseFillEmptyRows",Rl="SparseReshape",Bd="SparseSegmentMean",zd="SparseSegmentSum",p0="SparseToDense",Di="SquaredDifference",Vd="Square",Al="StridedSlice",Wd="StringNGrams",Ud="StringSplit",Gd="StringToHashBucketFast",Fi="Sub",Oi="Tan",Mi="Tanh",Br="Tile",Dl="TopK",Fl="Transform",So="Transpose",Gf="Unique",Ol="Unpack",Hd="UnsortedSegmentSum",Ml="ZerosLike",zr="Step",JS="FromPixels",Ll="RotateWithOffset",ka="_FusedMatMul",va="FusedConv2D",jd="FusedDepthwiseConv2D";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hn(...n){H().getBool("IS_TEST")||H().getBool("PROD")||console.warn(...n)}function QS(...n){H().getBool("IS_TEST")||H().getBool("PROD")||console.log(...n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Zu=kf("kernelRegistry",()=>new Map),wp=kf("gradRegistry",()=>new Map);function Ab(n,e){const t=f0(n,e);return Zu.get(t)}function Db(n){return wp.get(n)}function Fb(n){const e=Zu.entries(),t=[];for(;;){const{done:s,value:o}=e.next();if(s)break;const[r,a]=o,[i]=r.split("_");i===n&&t.push(a)}return t}function Hf(n){const{kernelName:e,backendName:t}=n,s=f0(e,t);Zu.has(s)&&Hn(`The kernel '${e}' for backend '${t}' is already registered`),Zu.set(s,n)}function e2(n){const{kernelName:e}=n;wp.has(e)&&H().getBool("DEBUG")&&Hn(`Overriding the gradient for '${e}'`),wp.set(e,n)}function f0(n,e){return`${e}_${n}`}var fo=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function t2(n){var e=n.default;if(typeof e=="function"){var t=function(){return e.apply(this,arguments)};t.prototype=e.prototype}else t={};return Object.defineProperty(t,"__esModule",{value:!0}),Object.keys(n).forEach(function(s){var o=Object.getOwnPropertyDescriptor(n,s);Object.defineProperty(t,s,o.get?o:{enumerable:!0,get:function(){return n[s]}})}),t}var Ip=mt,rs=null;try{rs=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch{}function mt(n,e,t){this.low=n|0,this.high=e|0,this.unsigned=!!t}mt.prototype.__isLong__;Object.defineProperty(mt.prototype,"__isLong__",{value:!0});function Pn(n){return(n&&n.__isLong__)===!0}mt.isLong=Pn;var Ob={},Mb={};function Vr(n,e){var t,s,o;return e?(n>>>=0,(o=0<=n&&n<256)&&(s=Mb[n],s)?s:(t=gt(n,(n|0)<0?-1:0,!0),o&&(Mb[n]=t),t)):(n|=0,(o=-128<=n&&n<128)&&(s=Ob[n],s)?s:(t=gt(n,n<0?-1:0,!1),o&&(Ob[n]=t),t))}mt.fromInt=Vr;function as(n,e){if(isNaN(n))return e?hr:is;if(e){if(n<0)return hr;if(n>=m0)return x0}else{if(n<=-Pb)return An;if(n+1>=Pb)return b0}return n<0?as(-n,e).neg():gt(n%$a|0,n/$a|0,e)}mt.fromNumber=as;function gt(n,e,t){return new mt(n,e,t)}mt.fromBits=gt;var Ju=Math.pow;function jf(n,e,t){if(n.length===0)throw Error("empty string");if(n==="NaN"||n==="Infinity"||n==="+Infinity"||n==="-Infinity")return is;if(typeof e=="number"?(t=e,e=!1):e=!!e,t=t||10,t<2||36<t)throw RangeError("radix");var s;if((s=n.indexOf("-"))>0)throw Error("interior hyphen");if(s===0)return jf(n.substring(1),e,t).neg();for(var o=as(Ju(t,8)),r=is,a=0;a<n.length;a+=8){var i=Math.min(8,n.length-a),c=parseInt(n.substring(a,a+i),t);if(i<8){var u=as(Ju(t,i));r=r.mul(u).add(as(c))}else r=r.mul(o),r=r.add(as(c))}return r.unsigned=e,r}mt.fromString=jf;function Rs(n,e){return typeof n=="number"?as(n,e):typeof n=="string"?jf(n,e):gt(n.low,n.high,typeof e=="boolean"?e:n.unsigned)}mt.fromValue=Rs;var Lb=1<<16,n2=1<<24,$a=Lb*Lb,m0=$a*$a,Pb=m0/2,Bb=Vr(n2),is=Vr(0);mt.ZERO=is;var hr=Vr(0,!0);mt.UZERO=hr;var ua=Vr(1);mt.ONE=ua;var g0=Vr(1,!0);mt.UONE=g0;var kp=Vr(-1);mt.NEG_ONE=kp;var b0=gt(-1,2147483647,!1);mt.MAX_VALUE=b0;var x0=gt(-1,-1,!0);mt.MAX_UNSIGNED_VALUE=x0;var An=gt(0,-2147483648,!1);mt.MIN_VALUE=An;var ie=mt.prototype;ie.toInt=function(){return this.unsigned?this.low>>>0:this.low};ie.toNumber=function(){return this.unsigned?(this.high>>>0)*$a+(this.low>>>0):this.high*$a+(this.low>>>0)};ie.toString=function(e){if(e=e||10,e<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative())if(this.eq(An)){var t=as(e),s=this.div(t),o=s.mul(t).sub(this);return s.toString(e)+o.toInt().toString(e)}else return"-"+this.neg().toString(e);for(var r=as(Ju(e,6),this.unsigned),a=this,i="";;){var c=a.div(r),u=a.sub(c.mul(r)).toInt()>>>0,l=u.toString(e);if(a=c,a.isZero())return l+i;for(;l.length<6;)l="0"+l;i=""+l+i}};ie.getHighBits=function(){return this.high};ie.getHighBitsUnsigned=function(){return this.high>>>0};ie.getLowBits=function(){return this.low};ie.getLowBitsUnsigned=function(){return this.low>>>0};ie.getNumBitsAbs=function(){if(this.isNegative())return this.eq(An)?64:this.neg().getNumBitsAbs();for(var e=this.high!=0?this.high:this.low,t=31;t>0&&(e&1<<t)==0;t--);return this.high!=0?t+33:t+1};ie.isZero=function(){return this.high===0&&this.low===0};ie.eqz=ie.isZero;ie.isNegative=function(){return!this.unsigned&&this.high<0};ie.isPositive=function(){return this.unsigned||this.high>=0};ie.isOdd=function(){return(this.low&1)===1};ie.isEven=function(){return(this.low&1)===0};ie.equals=function(e){return Pn(e)||(e=Rs(e)),this.unsigned!==e.unsigned&&this.high>>>31===1&&e.high>>>31===1?!1:this.high===e.high&&this.low===e.low};ie.eq=ie.equals;ie.notEquals=function(e){return!this.eq(e)};ie.neq=ie.notEquals;ie.ne=ie.notEquals;ie.lessThan=function(e){return this.comp(e)<0};ie.lt=ie.lessThan;ie.lessThanOrEqual=function(e){return this.comp(e)<=0};ie.lte=ie.lessThanOrEqual;ie.le=ie.lessThanOrEqual;ie.greaterThan=function(e){return this.comp(e)>0};ie.gt=ie.greaterThan;ie.greaterThanOrEqual=function(e){return this.comp(e)>=0};ie.gte=ie.greaterThanOrEqual;ie.ge=ie.greaterThanOrEqual;ie.compare=function(e){if(Pn(e)||(e=Rs(e)),this.eq(e))return 0;var t=this.isNegative(),s=e.isNegative();return t&&!s?-1:!t&&s?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1};ie.comp=ie.compare;ie.negate=function(){return!this.unsigned&&this.eq(An)?An:this.not().add(ua)};ie.neg=ie.negate;ie.add=function(e){Pn(e)||(e=Rs(e));var t=this.high>>>16,s=this.high&65535,o=this.low>>>16,r=this.low&65535,a=e.high>>>16,i=e.high&65535,c=e.low>>>16,u=e.low&65535,l=0,d=0,h=0,p=0;return p+=r+u,h+=p>>>16,p&=65535,h+=o+c,d+=h>>>16,h&=65535,d+=s+i,l+=d>>>16,d&=65535,l+=t+a,l&=65535,gt(h<<16|p,l<<16|d,this.unsigned)};ie.subtract=function(e){return Pn(e)||(e=Rs(e)),this.add(e.neg())};ie.sub=ie.subtract;ie.multiply=function(e){if(this.isZero())return is;if(Pn(e)||(e=Rs(e)),rs){var t=rs.mul(this.low,this.high,e.low,e.high);return gt(t,rs.get_high(),this.unsigned)}if(e.isZero())return is;if(this.eq(An))return e.isOdd()?An:is;if(e.eq(An))return this.isOdd()?An:is;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(Bb)&&e.lt(Bb))return as(this.toNumber()*e.toNumber(),this.unsigned);var s=this.high>>>16,o=this.high&65535,r=this.low>>>16,a=this.low&65535,i=e.high>>>16,c=e.high&65535,u=e.low>>>16,l=e.low&65535,d=0,h=0,p=0,f=0;return f+=a*l,p+=f>>>16,f&=65535,p+=r*l,h+=p>>>16,p&=65535,p+=a*u,h+=p>>>16,p&=65535,h+=o*l,d+=h>>>16,h&=65535,h+=r*u,d+=h>>>16,h&=65535,h+=a*c,d+=h>>>16,h&=65535,d+=s*l+o*u+r*c+a*i,d&=65535,gt(p<<16|f,d<<16|h,this.unsigned)};ie.mul=ie.multiply;ie.divide=function(e){if(Pn(e)||(e=Rs(e)),e.isZero())throw Error("division by zero");if(rs){if(!this.unsigned&&this.high===-2147483648&&e.low===-1&&e.high===-1)return this;var t=(this.unsigned?rs.div_u:rs.div_s)(this.low,this.high,e.low,e.high);return gt(t,rs.get_high(),this.unsigned)}if(this.isZero())return this.unsigned?hr:is;var s,o,r;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return hr;if(e.gt(this.shru(1)))return g0;r=hr}else{if(this.eq(An)){if(e.eq(ua)||e.eq(kp))return An;if(e.eq(An))return ua;var a=this.shr(1);return s=a.div(e).shl(1),s.eq(is)?e.isNegative()?ua:kp:(o=this.sub(e.mul(s)),r=s.add(o.div(e)),r)}else if(e.eq(An))return this.unsigned?hr:is;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();r=is}for(o=this;o.gte(e);){s=Math.max(1,Math.floor(o.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(s)/Math.LN2),c=i<=48?1:Ju(2,i-48),u=as(s),l=u.mul(e);l.isNegative()||l.gt(o);)s-=c,u=as(s,this.unsigned),l=u.mul(e);u.isZero()&&(u=ua),r=r.add(u),o=o.sub(l)}return r};ie.div=ie.divide;ie.modulo=function(e){if(Pn(e)||(e=Rs(e)),rs){var t=(this.unsigned?rs.rem_u:rs.rem_s)(this.low,this.high,e.low,e.high);return gt(t,rs.get_high(),this.unsigned)}return this.sub(this.div(e).mul(e))};ie.mod=ie.modulo;ie.rem=ie.modulo;ie.not=function(){return gt(~this.low,~this.high,this.unsigned)};ie.and=function(e){return Pn(e)||(e=Rs(e)),gt(this.low&e.low,this.high&e.high,this.unsigned)};ie.or=function(e){return Pn(e)||(e=Rs(e)),gt(this.low|e.low,this.high|e.high,this.unsigned)};ie.xor=function(e){return Pn(e)||(e=Rs(e)),gt(this.low^e.low,this.high^e.high,this.unsigned)};ie.shiftLeft=function(e){return Pn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?gt(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):gt(0,this.low<<e-32,this.unsigned)};ie.shl=ie.shiftLeft;ie.shiftRight=function(e){return Pn(e)&&(e=e.toInt()),(e&=63)===0?this:e<32?gt(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):gt(this.high>>e-32,this.high>=0?0:-1,this.unsigned)};ie.shr=ie.shiftRight;ie.shiftRightUnsigned=function(e){if(Pn(e)&&(e=e.toInt()),e&=63,e===0)return this;var t=this.high;if(e<32){var s=this.low;return gt(s>>>e|t<<32-e,t>>>e,this.unsigned)}else return e===32?gt(t,0,this.unsigned):gt(t>>>e-32,0,this.unsigned)};ie.shru=ie.shiftRightUnsigned;ie.shr_u=ie.shiftRightUnsigned;ie.toSigned=function(){return this.unsigned?gt(this.low,this.high,!1):this};ie.toUnsigned=function(){return this.unsigned?this:gt(this.low,this.high,!0)};ie.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()};ie.toBytesLE=function(){var e=this.high,t=this.low;return[t&255,t>>>8&255,t>>>16&255,t>>>24,e&255,e>>>8&255,e>>>16&255,e>>>24]};ie.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,e&255,t>>>24,t>>>16&255,t>>>8&255,t&255]};mt.fromBytes=function(e,t,s){return s?mt.fromBytesLE(e,t):mt.fromBytesBE(e,t)};mt.fromBytesLE=function(e,t){return new mt(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)};mt.fromBytesBE=function(e,t){return new mt(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)};const s2=rf({__proto__:null,default:Ip},[Ip]);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cr=Ip||s2;function qd(n){return cr.fromString(n,!0,16)}const y0=qd("c3a5c85c97cb3127"),ar=qd("b492b66fbe98f273"),hn=qd("9ae16a3b2f90404f");function vp(n){return n.xor(n.shru(47))}function w0(n,e,t){const s=n.slice(e,e+t);return cr.fromBytes(Array.from(s),!0,!0)}function lt(n,e){return w0(n,e,8)}function zb(n,e){return w0(n,e,4)}function Gt(n,e){return e===0?n:n.shru(e).or(n.shl(64-e))}function No(n,e,t=qd("9ddfea08eb382d69")){let s=n.xor(e).mul(t);s=s.xor(s.shru(47));let o=e.xor(s).mul(t);return o=o.xor(o.shru(47)),o=o.mul(t),o}function o2(n,e,t,s,o,r){o=o.add(n),r=Gt(r.add(o).add(s),21);const a=o;return o=o.add(e),o=o.add(t),r=r.add(Gt(o,44)),[o.add(s),r.add(a)]}function ku(n,e,t,s){return o2(lt(n,e),lt(n,e+8),lt(n,e+16),lt(n,e+24),t,s)}function r2(n,e=n.length){if(e>=8){const t=hn.add(e*2),s=lt(n,0).add(hn),o=lt(n,e-8),r=Gt(o,37).mul(t).add(s),a=Gt(s,25).add(o).mul(t);return No(r,a,t)}if(e>=4){const t=hn.add(e*2),s=zb(n,0);return No(s.shl(3).add(e),zb(n,e-4),t)}if(e>0){const t=n[0],s=n[e>>1],o=n[e-1],r=t+(s<<8),a=e+(o<<2);return vp(hn.mul(r).xor(y0.mul(a))).mul(hn)}return hn}function a2(n,e=n.length){const t=hn.add(e*2),s=lt(n,0).mul(ar),o=lt(n,8),r=lt(n,e-8).mul(t),a=lt(n,e-16).mul(hn);return No(Gt(s.add(o),43).add(Gt(r,30)).add(a),s.add(Gt(o.add(hn),18)).add(r),t)}function i2(n,e=n.length){const t=hn.add(e*2),s=lt(n,0).mul(hn),o=lt(n,8),r=lt(n,e-8).mul(t),a=lt(n,e-16).mul(hn),i=Gt(s.add(o),43).add(Gt(r,30)).add(a),c=No(i,s.add(Gt(o.add(hn),18)).add(r),t),u=lt(n,16).mul(t),l=lt(n,24),d=i.add(lt(n,e-32)).mul(t),h=c.add(lt(n,e-24)).mul(t);return No(Gt(u.add(l),43).add(Gt(d,30)).add(h),u.add(Gt(l.add(s),18)).add(d),t)}function c2(n,e=n.length){const t=cr.fromNumber(81,!0);if(e<=32)return e<=16?r2(n,e):a2(n,e);if(e<=64)return i2(n,e);let s=t,o=t.mul(ar).add(113),r=vp(o.mul(hn).add(113)).mul(hn),a=[cr.UZERO,cr.UZERO],i=[cr.UZERO,cr.UZERO];s=s.mul(hn).add(lt(n,0));let c=0;const u=(e-1>>6)*64,l=u+(e-1&63)-63;do s=Gt(s.add(o).add(a[0]).add(lt(n,c+8)),37).mul(ar),o=Gt(o.add(a[1]).add(lt(n,c+48)),42).mul(ar),s=s.xor(i[1]),o=o.add(a[0]).add(lt(n,c+40)),r=Gt(r.add(i[0]),33).mul(ar),a=ku(n,c,a[1].mul(ar),s.add(i[0])),i=ku(n,c+32,r.add(i[1]),o.add(lt(n,c+16))),[r,s]=[s,r],c+=64;while(c!==u);const d=ar.add(r.and(255).shl(1));return c=l,i[0]=i[0].add(e-1&63),a[0]=a[0].add(i[0]),i[0]=i[0].add(a[0]),s=Gt(s.add(o).add(a[0]).add(lt(n,c+8)),37).mul(d),o=Gt(o.add(a[1]).add(lt(n,c+48)),42).mul(d),s=s.xor(i[1].mul(9)),o=o.add(a[0].mul(9).add(lt(n,c+40))),r=Gt(r.add(i[0]),33).mul(d),a=ku(n,c,a[1].mul(d),s.add(i[0])),i=ku(n,c+32,r.add(i[1]),o.add(lt(n,c+16))),[r,s]=[s,r],No(No(a[0],i[0],d).add(vp(o).mul(y0)).add(r),No(a[1],i[1],d).add(s),d)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uo(n,e){return e==="string"?To(n):Wr([n],e)}function l2(n,e){return n instanceof Float32Array&&e==="float32"||n instanceof Int32Array&&e==="int32"||n instanceof Uint8Array&&e==="bool"}function Wr(n,e){if(e==="string")throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(n)&&(n=wa(n)),H().getBool("DEBUG")&&BS(n,e),l2(n,e))return n;if(e==null||e==="float32"||e==="complex64")return new Float32Array(n);if(e==="int32")return new Int32Array(n);if(e==="bool"){const t=new Uint8Array(n.length);for(let s=0;s<t.length;++s)Math.round(n[s])!==0&&(t[s]=1);return t}else throw new Error(`Unknown data type ${e}`)}function nn(){return H().platform.now()}function To(n,e="utf-8"){return e=e||"utf-8",H().platform.encode(n,e)}function Ao(n,e="utf-8"){return e=e||"utf-8",H().platform.decode(n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class u2{constructor(e,t){this.backendTimer=e,this.logger=t,t==null&&(this.logger=new h2)}profileKernel(e,t,s){let o;const r=()=>{o=s()};let a;const i=nn();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const u of o)u.dataSync();a=Promise.resolve({kernelMs:nn()-i})}if(H().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let u=0;u<o.length;u++){const l=o[u];l.data().then(d=>{d2(d,l.dtype,e)})}return{kernelName:e,outputs:o,inputs:t,timeMs:a.then(u=>u.kernelMs),extraInfo:a.then(u=>u.getExtraProfileInfo!=null?u.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:s,timeMs:o,inputs:r,extraInfo:a}=e;s.forEach(i=>{Promise.all([i.data(),o,a]).then(c=>{this.logger.logKernelProfile(t,i,c[0],c[1],r,c[2])})})}}function d2(n,e,t){if(e!=="float32")return!1;for(let s=0;s<n.length;s++){const o=n[s];if(isNaN(o)||!isFinite(o))return console.warn(`Found ${o} in the result of '${t}'`),!0}return!1}class h2{logKernelProfile(e,t,s,o,r,a){const i=typeof o=="number"?ha(`${o}ms`,9):o.error,c=ha(e,25),u=t.rank,l=t.size,d=ha(t.shape.toString(),14);let h="";for(const p in r){const f=r[p];if(f!=null){const m=f.shape||t.shape,g=m.length;h+=`${p}: ${g}D ${g>0?m:""} `}}console.log(`%c${c}	%c${i}	%c${u}D ${d}	%c${l}	%c${h}	%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p2(n,e,t){const s={},o={};for(let c=0;c<e.length;c++)s[e[c].id]=!0;for(let c=0;c<n.length;c++){const u=n[c],l=u.inputs;for(const d in l){const h=l[d];let p=!1;for(let f=0;f<e.length;f++)if(s[h.id]){u.outputs.forEach(m=>s[m.id]=!0),p=!0,o[u.id]=!0;break}if(p)break}}const r={};r[t.id]=!0;const a={};for(let c=n.length-1;c>=0;c--){const u=n[c],l=u.inputs;for(let d=0;d<u.outputs.length;d++)if(r[u.outputs[d].id]){for(const h in l)r[l[h].id]=!0,a[u.id]=!0;break}}const i=[];for(let c=0;c<n.length;c++){const u=n[c];if(o[u.id]&&a[u.id]){const l={};for(const h in u.inputs){const p=u.inputs[h];s[p.id]&&(l[h]=p)}const d=Object.assign({},u);d.inputs=l,d.outputs=u.outputs,i.push(d)}}return i}function f2(n,e,t,s){for(let o=e.length-1;o>=0;o--){const r=e[o],a=[];if(r.outputs.forEach(c=>{const u=n[c.id];u!=null?a.push(u):a.push(null)}),r.gradient==null)throw new Error(`Cannot compute gradient: gradient function not found for ${r.kernelName}.`);const i=r.gradient(a);for(const c in r.inputs){if(!(c in i))throw new Error(`Cannot backprop through input ${c}. Available gradients found: ${Object.keys(i)}.`);const u=t(()=>i[c]());if(u.dtype!=="float32")throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input ${c} must have 'float32' dtype, but has '${u.dtype}'`);const l=r.inputs[c];if(!Ke(u.shape,l.shape))throw new Error(`Error in gradient for op ${r.kernelName}. The gradient of input '${c}' has shape '${u.shape}', which does not match the shape of the input '${l.shape}'`);if(n[l.id]==null)n[l.id]=u;else{const d=n[l.id];n[l.id]=s(d,u),d.dispose()}}}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Vb=20,rc=3,Uh=7;function m2(n,e,t,s){const o=me(e),r=g2(n,e,t,o),a=e.length,i=Bu(n,e,t,o,r),c=["Tensor"];return s&&(c.push(`  dtype: ${t}`),c.push(`  rank: ${a}`),c.push(`  shape: [${e}]`),c.push("  values:")),c.push(i.map(u=>"    "+u).join(`
`)),c.join(`
`)}function g2(n,e,t,s){const o=L(e),r=s[s.length-1],a=new Array(r).fill(0),i=e.length,c=t==="complex64"?uc(n):n;if(i>1)for(let u=0;u<o/r;u++){const l=u*r;for(let d=0;d<r;d++)a[d]=Math.max(a[d],lc(c[l+d],0,t).length)}return a}function lc(n,e,t){let s;return Array.isArray(n)?s=`${parseFloat(n[0].toFixed(Uh))} + ${parseFloat(n[1].toFixed(Uh))}j`:Oc(n)?s=`'${n}'`:t==="bool"?s=I0(n):s=parseFloat(n.toFixed(Uh)).toString(),ha(s,e)}function I0(n){return n===0?"false":"true"}function Bu(n,e,t,s,o,r=!0){const a=t==="complex64"?2:1,i=e[0],c=e.length;if(c===0){if(t==="complex64"){const m=uc(n);return[lc(m[0],0,t)]}return t==="bool"?[I0(n[0])]:[n[0].toString()]}if(c===1){if(i>Vb){const g=rc*a;let b=Array.from(n.slice(0,g)),x=Array.from(n.slice((i-rc)*a,i*a));return t==="complex64"&&(b=uc(b),x=uc(x)),["["+b.map((y,w)=>lc(y,o[w],t)).join(", ")+", ..., "+x.map((y,w)=>lc(y,o[i-rc+w],t)).join(", ")+"]"]}return["["+(t==="complex64"?uc(n):Array.from(n)).map((g,b)=>lc(g,o[b],t)).join(", ")+"]"]}const u=e.slice(1),l=s.slice(1),d=s[0]*a,h=[];if(i>Vb){for(let m=0;m<rc;m++){const g=m*d,b=g+d;h.push(...Bu(n.slice(g,b),u,t,l,o,!1))}h.push("...");for(let m=i-rc;m<i;m++){const g=m*d,b=g+d;h.push(...Bu(n.slice(g,b),u,t,l,o,m===i-1))}}else for(let m=0;m<i;m++){const g=m*d,b=g+d;h.push(...Bu(n.slice(g,b),u,t,l,o,m===i-1))}const p=c===2?",":"";h[0]="["+h[0]+p;for(let m=1;m<h.length-1;m++)h[m]=" "+h[m]+p;let f=`,
`;for(let m=2;m<c;m++)f+=`
`;return h[h.length-1]=" "+h[h.length-1]+"]"+(r?"":f),h}function uc(n){const e=[];for(let t=0;t<n.length;t+=2)e.push([n[t],n[t+1]]);return e}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sn{constructor(e,t,s){if(this.dtype=t,this.shape=e.slice(),this.size=L(e),s!=null){const o=s.length;$(o===this.size,()=>`Length of values '${o}' does not match the size inferred by the shape '${this.size}'.`)}if(t==="complex64")throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=s||At(t,this.size),this.strides=me(e)}set(e,...t){t.length===0&&(t=[0]),$(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const s=this.locToIndex(t);this.values[s]=e}get(...e){e.length===0&&(e=[0]);let t=0;for(const o of e){if(o<0||o>=this.shape[t]){const r=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(r)}t++}let s=e[e.length-1];for(let o=0;o<e.length-1;++o)s+=this.strides[o]*e[o];return this.values[s]}locToIndex(e){if(this.rank===0)return 0;if(this.rank===1)return e[0];let t=e[e.length-1];for(let s=0;s<e.length-1;++s)t+=this.strides[s]*e[s];return t}indexToLoc(e){if(this.rank===0)return[];if(this.rank===1)return[e];const t=new Array(this.shape.length);for(let s=0;s<t.length-1;++s)t[s]=Math.floor(e/this.strides[s]),e-=t[s]*this.strides[s];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return ks().makeTensor(this.values,this.shape,this.dtype)}}let ks=null,ca=null;function b2(n){ks=n}function x2(n){ca=n}class Rt{constructor(e,t,s,o){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=L(e),this.strides=me(e),this.dataId=s,this.id=o,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return ca.buffer(this.shape,this.dtype,e)}bufferSync(){return ca.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Cs(this.shape,e,this.dtype==="complex64")}arraySync(){return Cs(this.shape,this.dataSync(),this.dtype==="complex64")}async data(){this.throwIfDisposed();const e=ks().read(this.dataId);if(this.dtype==="string"){const t=await e;try{return t.map(s=>Ao(s))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),ks().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=ks().readSync(this.dataId);if(this.dtype==="string")try{return e.map(t=>Ao(t))}catch{throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await ks().read(this.dataId);return this.dtype==="string"?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(ks().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return ca.print(this,e)}clone(){return this.throwIfDisposed(),ca.clone(this)}toString(e=!1){const t=this.dataSync();return m2(t,this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),ca.cast(this,e)}variable(e=!0,t,s){return this.throwIfDisposed(),ks().makeVariable(this,e,t,s)}}Object.defineProperty(Rt,Symbol.hasInstance,{value:n=>!!n&&n.data!=null&&n.dataSync!=null&&n.throwIfDisposed!=null});function j(){return kf("Tensor",()=>Rt)}j();class Qu extends Rt{constructor(e,t,s,o){super(e.shape,e.dtype,e.dataId,o),this.trainable=t,this.name=s}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!Ke(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);ks().disposeTensor(this),this.dataId=e.dataId,ks().incRef(this,null)}dispose(){ks().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(Qu,Symbol.hasInstance,{value:n=>n instanceof Rt&&n.assign!=null&&n.assign instanceof Function});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Wb;(function(n){n.R0="R0",n.R1="R1",n.R2="R2",n.R3="R3",n.R4="R4",n.R5="R5",n.R6="R6"})(Wb||(Wb={}));var $p;(function(n){n.float32="float32",n.int32="int32",n.bool="int32",n.complex64="complex64"})($p||($p={}));var Cp;(function(n){n.float32="float32",n.int32="int32",n.bool="bool",n.complex64="complex64"})(Cp||(Cp={}));var Sp;(function(n){n.float32="float32",n.int32="float32",n.bool="float32",n.complex64="complex64"})(Sp||(Sp={}));var Np;(function(n){n.float32="complex64",n.int32="complex64",n.bool="complex64",n.complex64="complex64"})(Np||(Np={}));const y2={float32:Sp,int32:$p,bool:Cp,complex64:Np};function Fn(n,e){if(n==="string"||e==="string"){if(n==="string"&&e==="string")return"string";throw new Error(`Can not upcast ${n} with ${e}`)}return y2[n][e]}function qf(n){return Fn(n,"int32")}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tt(n,e){if(n.dtype===e.dtype)return[n,e];const t=Fn(n.dtype,e.dtype);return[n.cast(t),e.cast(t)]}function k0(n){const e=[];return v0(n,e,new Set),e}function v0(n,e,t){if(n==null)return;if(n instanceof Rt){e.push(n);return}if(!w2(n))return;const s=n;for(const o in s){const r=s[o];t.has(r)||(t.add(r),v0(r,e,t))}}function w2(n){return Array.isArray(n)||typeof n=="object"}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gh(n){return n.kernelName!=null}class Ub{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class Ca{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new Ub}async ready(){if(this.pendingBackendInit!=null)return this.pendingBackendInit.then(()=>{});if(this.backendInstance!=null)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t];if(await this.initializeBackend(s).success){await this.setBackend(s);return}}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(this.pendingBackendInit!=null)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(this.backendInstance==null){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry))if(e in this.registryFactory){const{asyncInit:t}=this.initializeBackend(e);if(t)return null}else return null;return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,s=1){return e in this.registryFactory?(Hn(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:s},!0)}async setBackend(e){if(this.registryFactory[e]==null)throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,this.registry[e]==null){this.backendInstance=null;const{success:t,asyncInit:s}=this.initializeBackend(e);if(!(s?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new u2(this.backendInstance),!0}setupRegisteredKernels(){Fb(this.backendName).forEach(t=>{t.setupFunc!=null&&t.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){Fb(e).forEach(s=>{s.disposeFunc!=null&&s.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(t==null)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const s=t.factory();if(s&&!(s instanceof Sd)&&typeof s.then=="function"){const o=++this.pendingBackendInitId,r=s.then(a=>o<this.pendingBackendInitId?!1:(this.registry[e]=a,this.pendingBackendInit=null,!0)).catch(a=>(o<this.pendingBackendInitId||(this.pendingBackendInit=null,Hn(`Initialization of backend ${e} failed`),Hn(a.stack||a.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}else return this.registry[e]=s,{success:!0,asyncInit:!1}}catch(s){return Hn(`Initialization of backend ${e} failed`),Hn(s.stack||s.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&this.pendingBackendInit!=null&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(Object.keys(this.registryFactory).length===0)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const s=e[t],{success:o,asyncInit:r}=this.initializeBackend(s);if(r||o)return{name:s,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const s=this.state.tensorInfo.get(t),o=s.backend,r=this.readSync(t),a=o.refCount(t);o.disposeData(t,!0),s.backend=e,e.move(t,r,s.shape,s.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let s=null;if(t==null){if(typeof e!="function")throw new Error("Please provide a function to tidy()");t=e}else{if(typeof e!="string"&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if(typeof t!="function")throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}let o;return this.scopedRun(()=>this.startScope(s),()=>this.endScope(o),()=>(o=t(),o instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),o))}scopedRun(e,t,s){e();try{const o=s();return t(),o}catch(o){throw t(),o}}nextTensorId(){return Ca.nextTensorId++}nextVariableId(){return Ca.nextVariableId++}clone(e){const t=D.runKernel(si,{x:e}),s={x:e},o=a=>({x:()=>{const i="float32",c={x:a},u={dtype:i};return D.runKernel(Wa,c,u)}}),r=[];return this.addTapeNode(this.state.activeScope.name,s,[t],o,r,{}),t}runKernel(e,t,s){if(this.backendName==null&&this.backend,!(Ab(e,this.backendName)!=null))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:s})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,s){const o=this.backend.numDataIds();let r=0;s.forEach(c=>{r+=c.dtype==="complex64"?3:1});const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=o-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,s=[];const o=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);let i;this.backendName==null&&this.backend;let c;const u=Gh(e)?e.kernelName:this.state.activeScope!=null?this.state.activeScope.name:"";if(Gh(e)){const{kernelName:f,inputs:m,attrs:g}=e;this.backendName==null&&this.backend;const b=Ab(f,this.backendName);$(b!=null,()=>`Cannot find registered kernel '${f}' for backend '${this.backendName}'`),i=()=>{const x=this.backend.numDataIds();c=b.kernelFunc({inputs:m,attrs:g,backend:this.backend});const y=Array.isArray(c)?c:[c];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(f,x,y);const w=y.map(I=>I.rank!=null?I:this.makeTensorFromTensorInfo(I));if(o){const I=this.getTensorsForGradient(f,m,w);s=this.saveTensorsForBackwardMode(I)}return w}}else{const{forwardFunc:f}=e,m=g=>{!o||(s=g.map(b=>this.keep(this.clone(b))))};i=()=>{const g=this.backend.numDataIds();c=this.tidy(()=>f(this.backend,m));const b=Array.isArray(c)?c:[c];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,g,b),b}}const{inputs:l,attrs:d}=e,h=Gh(e)?null:e.backwardsFunc;let p;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{!this.ENV.getBool("DEBUG")&&!this.state.profiling?t=i():(p=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs)}),o&&this.addTapeNode(u,l,t,h,s,d),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(f=>l[f]!=null?l[f].shape:null),outputShapes:t.map(f=>f.shape),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(c)?t:t[0]}saveTensorsForBackwardMode(e){return e.map(s=>this.keep(this.clone(s)))}getTensorsForGradient(e,t,s){const o=Db(e);if(o!=null){const r=o.inputsToSave||[],a=o.outputsToSave||[];let i;o.saveAllInputs?($(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),i=Object.keys(t).map(u=>t[u])):i=r.map(u=>t[u]);const c=s.filter((u,l)=>a[l]);return i.concat(c)}return[]}makeTensor(e,t,s,o){if(e==null)throw new Error("Values passed to engine.makeTensor() are null");s=s||"float32",o=o||this.backend;let r=e;s==="string"&&Oc(e[0])&&(r=e.map(c=>To(c)));const a=o.write(r,t,s),i=new Rt(t,s,a,this.nextTensorId());if(this.trackTensor(i,o),s==="string"){const c=this.state.tensorInfo.get(a),u=VS(r);this.state.numBytes+=u-c.bytes,c.bytes=u}return i}makeTensorFromDataId(e,t,s,o){s=s||"float32";const r={dataId:e,shape:t,dtype:s};return this.makeTensorFromTensorInfo(r,o)}makeTensorFromTensorInfo(e,t){const{dataId:s,shape:o,dtype:r}=e,a=new Rt(o,r,s,this.nextTensorId());return this.trackTensor(a,t),a}makeVariable(e,t=!0,s,o){s=s||this.nextVariableId().toString(),o!=null&&o!==e.dtype&&(e=e.cast(o));const r=new Qu(e,t,s,this.nextTensorId());if(this.state.registeredVariables[r.name]!=null)throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,e.dtype==="string"&&this.state.numStringTensors++;let s=0;e.dtype!=="complex64"&&e.dtype!=="string"&&(s=e.size*xc(e.dtype)),this.state.numBytes+=s,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:s})),e instanceof Qu||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,e.dtype==="string"&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),e.dtype!=="complex64"&&e.dtype!=="string"){const s=e.size*xc(e.dtype);this.state.numBytes-=s}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),this.state.registeredVariables[e.name]!=null&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,e.reasons==null&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,s=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(o=>o.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-s;for(const o of this.state.activeProfile.kernels)o.kernelTimeMs=await o.kernelTimeMs,o.extraInfo=await o.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&this.state.kernelDepth===0}addTapeNode(e,t,s,o,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:s,saved:r},c=Db(e);c!=null&&(o=c.gradFunc),o!=null&&(i.gradient=u=>(u=u.map((l,d)=>{if(l==null){const h=s[d],p=an(h.size,h.dtype);return this.makeTensor(p,h.shape,h.dtype)}return l}),o(u.length>1?u:u[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){this.state.gradientDepth===0&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=k0(e),s=new Set(t.map(r=>r.id));for(let r=0;r<this.state.activeScope.track.length;r++){const a=this.state.activeScope.track[r];!a.kept&&!s.has(a.id)&&a.dispose()}const o=this.state.scopeStack.pop();this.state.activeScope=this.state.scopeStack.length===0?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(r=>{!r.kept&&r.scopeId===o.id&&this.track(r)})}gradients(e,t,s,o=!1){if($(t.length>0,()=>"gradients() received an empty list of xs."),s!=null&&s.dtype!=="float32")throw new Error(`dy must have 'float32' dtype, but has '${s.dtype}'`);const r=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));$(r instanceof Rt,()=>"The result y returned by f() must be a tensor.");const a=p2(this.state.activeTape,t,r);if(!o&&a.length===0&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const i={};i[r.id]=s??I2(r.shape),f2(i,a,u=>this.tidy(u),k2);const c=t.map(u=>i[u.id]);return this.state.gradientDepth===0&&(this.state.activeTape.forEach(u=>{for(const l of u.saved)l.dispose()}),this.state.activeTape=null),{value:r,grads:c}})}customGrad(e){return $(gp(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{$(t.every(i=>i instanceof Rt),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");let s;const o={};t.forEach((i,c)=>{o[c]=i});const r=(i,c)=>(s=e(...t,c),$(s.value instanceof Rt,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),$(gp(s.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),s.value),a=(i,c)=>{const u=s.gradFunc(i,c),l=Array.isArray(u)?u:[u];$(l.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),$(l.every(h=>h instanceof Rt),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const d={};return l.forEach((h,p)=>{d[p]=()=>h}),d};return this.runKernelFunc({forwardFunc:r,backwardsFunc:a,inputs:o})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=nn(),s=await this.backend.time(e);return s.wallMs=nn()-t,s}track(e){return this.state.activeScope!=null&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new Ub;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}Ca.nextTensorId=0;Ca.nextVariableId=0;function I2(n){const e=If(L(n),"float32");return D.makeTensor(e,n,"float32")}function $0(){const n=s0();if(n._tfengine==null){const e=new US(n);n._tfengine=new Ca(e)}return qS(n._tfengine.ENV),b2(()=>n._tfengine),n._tfengine}const D=$0();function k2(n,e){const t={a:n,b:e};return D.runKernel(Lr,t)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function v2(){return typeof navigator<"u"&&navigator!=null}function C0(n){if(n||v2()){if(n||(n=navigator),n.product==="ReactNative")return!0;const e=n.userAgent||n.vendor||(typeof window<"u"?window.opera:"");if(!e){const t=n;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(e)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(e.substr(0,4))}return!1}function S0(){return typeof window<"u"&&window.document!=null||typeof WorkerGlobalScope<"u"}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kn=H();Kn.registerFlag("DEBUG",()=>!1,n=>{n&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")});Kn.registerFlag("IS_BROWSER",()=>S0());Kn.registerFlag("IS_NODE",()=>typeof process<"u"&&typeof process.versions<"u"&&typeof process.versions.node<"u");Kn.registerFlag("IS_CHROME",()=>typeof navigator<"u"&&navigator!=null&&navigator.userAgent!=null&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor));Kn.registerFlag("PROD",()=>!1);Kn.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Kn.getBool("DEBUG"));Kn.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0);Kn.registerFlag("IS_TEST",()=>!1);Kn.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0);Kn.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);Kn.registerFlag("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU",()=>!1);Kn.registerFlag("USE_SETTIMEOUTCUSTOM",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xd(n,e){let t=n;if(Xs(n))return e==="string"?[]:[n.length];if(typeof n=="object"&&"texture"in n){const o=n.channels||"RGBA";return[n.height,n.width*o.length]}if(!Array.isArray(n))return[];const s=[];for(;Array.isArray(t)||Xs(t)&&e!=="string";)s.push(t.length),t=t[0];return Array.isArray(n)&&H().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&N0(n,s,[]),s}function N0(n,e,t){if(t=t||[],!Array.isArray(n)&&!Xs(n)){$(e.length===0,()=>`Element arr[${t.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`);return}$(e.length>0,()=>`Element arr[${t.join("][")}] should be a primitive, but is an array of ${n.length} elements`),$(n.length===e[0],()=>`Element arr[${t.join("][")}] should have ${e[0]} elements, but has ${n.length} elements`);const s=e.slice(1);for(let o=0;o<n.length;++o)N0(n[o],s,t.concat(o))}function Gb(n,e,t,s){if(n!=="string_or_numeric"){if(n==null)throw new Error("Expected dtype cannot be null.");if(n!=="numeric"&&n!==e||n==="numeric"&&e==="string")throw new Error(`Argument '${t}' passed to '${s}' must be ${n} tensor, but got ${e} tensor`)}}function S(n,e,t,s="numeric"){if(n instanceof Rt)return Gb(s,n.dtype,e,t),n;let o=Mc(n);if(o!=="string"&&["bool","int32","float32"].indexOf(s)>=0&&(o=s),Gb(s,o,e,t),n==null||!Xs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string"){const c=n==null?"null":n.constructor.name;throw new Error(`Argument '${e}' passed to '${t}' must be a Tensor or TensorLike, but got '${c}'`)}const r=Xd(n,o);!Xs(n)&&!Array.isArray(n)&&(n=[n]);const i=o!=="string"?Wr(n,o):wa(n,[],!0);return D.makeTensor(i,r,o)}function T0(n,e,t,s="numeric"){if(!Array.isArray(n))throw new Error(`Argument ${e} passed to ${t} must be a \`Tensor[]\` or \`TensorLike[]\``);return n.map((r,a)=>S(r,`${e}[${a}]`,t,s))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $2="__op";function F(n){const e=Object.keys(n);if(e.length!==1)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let t=e[0];const s=n[t];t.endsWith("_")&&(t=t.substring(0,t.length-1)),t=t+$2;const o=(...r)=>{D.startScope(t);try{const a=s(...r);return t0(a)&&console.error("Cannot return a Promise inside of tidy."),D.endScope(a),a}catch(a){throw D.endScope(null),a}};return Object.defineProperty(o,"name",{value:t,configurable:!0}),o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C2(n,e){const t=S(n,"real","complex"),s=S(e,"imag","complex");Zn(t.shape,s.shape,`real and imag shapes, ${t.shape} and ${s.shape}, must match in call to tf.complex().`);const o={real:t,imag:s};return D.runKernel(Sf,o)}const Sa=F({complex_:C2});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Kd(n,e,t,s){if(s==null&&(s=Mc(n)),s==="complex64")throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(typeof n=="object"&&"texture"in n){if(s!=="float32"&&s!=="int32")throw new Error(`Creating tensor from texture only supports 'float32'|'int32' dtype, while the dtype is ${s}.`);return n.channels=n.channels||"RGBA",D.backend.createTensorFromTexture(n,e||t,s)}if(!Xs(n)&&!Array.isArray(n)&&typeof n!="number"&&typeof n!="boolean"&&typeof n!="string")throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(e!=null){bo(e);const o=L(e),r=L(t);$(o===r,()=>`Based on the provided shape, [${e}], the tensor should have ${o} values but has ${r}`);for(let a=0;a<t.length;++a){const i=t[a],c=a===t.length-1?i!==L(e.slice(a)):!0;$(t[a]===e[a]||!c,()=>`Error creating a new Tensor. Inferred shape (${t}) does not match the provided shape (${e}). `)}}return!Xs(n)&&!Array.isArray(n)&&(n=[n]),e=e||t,n=s!=="string"?Wr(n,s):wa(n,[],!0),D.makeTensor(n,e,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xf(n,e,t){const s=Xd(n,t);return Kd(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Hb=4;async function jb(n,e){const t=[],s=[],o=Array.isArray(n)?n.map(a=>a.name):Object.keys(n);for(let a=0;a<o.length;++a){const i=o[a],c=Array.isArray(n)?n[a].tensor:n[i];if(c.dtype!=="float32"&&c.dtype!=="int32"&&c.dtype!=="bool"&&c.dtype!=="string"&&c.dtype!=="complex64")throw new Error(`Unsupported dtype in weight '${i}': ${c.dtype}`);const u={name:i,shape:c.shape,dtype:c.dtype};if(c.dtype==="string"){const l=new Promise(async d=>{const h=await c.bytes(),p=h.reduce((g,b)=>g+b.length,0)+Hb*h.length,f=new Uint8Array(p);let m=0;for(let g=0;g<h.length;g++){const b=h[g],x=new Uint8Array(new Uint32Array([b.length]).buffer);f.set(x,m),m+=Hb,f.set(b,m),m+=b.length}d(f)});s.push(l)}else s.push(c.data());e!=null&&(u.group=e),t.push(u)}const r=await Promise.all(s);return{data:S2(r),specs:t}}function S2(n){if(n===null)throw new Error(`Invalid input value: ${JSON.stringify(n)}`);let e=0;const t=[];n.forEach(r=>{if(e+=r.byteLength,t.push(r.byteLength===r.buffer.byteLength?r:new r.constructor(r)),!(r instanceof Float32Array||r instanceof Int32Array||r instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${r.constructor.name}`)});const s=new Uint8Array(e);let o=0;return t.forEach(r=>{s.set(new Uint8Array(r.buffer),o),o+=r.byteLength}),s.buffer}const Kf=typeof Buffer<"u"&&(typeof Blob>"u"||typeof atob>"u"||typeof btoa>"u");function qb(n){return Kf?Buffer.byteLength(n):new Blob([n]).size}function N2(n){if(Kf)return Buffer.from(n).toString("base64");const e=new Uint8Array(n);let t="";for(let s=0,o=e.length;s<o;s++)t+=String.fromCharCode(e[s]);return btoa(t)}function T2(n){if(Kf){const s=Buffer.from(n,"base64");return s.buffer.slice(s.byteOffset,s.byteOffset+s.byteLength)}const e=atob(n),t=new Uint8Array(e.length);for(let s=0;s<e.length;++s)t.set([e.charCodeAt(s)],s);return t.buffer}function E0(n){if(n.length===1)return n[0];let e=0;n.forEach(o=>{e+=o.byteLength});const t=new Uint8Array(e);let s=0;return n.forEach(o=>{t.set(new Uint8Array(o),s),s+=o.byteLength}),t.buffer}function _0(n,e){const t={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy,weightsManifest:e};return n.signature!=null&&(t.signature=n.signature),n.userDefinedMetadata!=null&&(t.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(t.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(t.initializerSignature=n.initializerSignature),n.trainingConfig!=null&&(t.trainingConfig=n.trainingConfig),t}function E2(n,e,t){const s={modelTopology:n.modelTopology,format:n.format,generatedBy:n.generatedBy,convertedBy:n.convertedBy};if(n.trainingConfig!=null&&(s.trainingConfig=n.trainingConfig),n.weightsManifest!=null){if(!e)throw new Error("modelJSON has weightsManifest but weightSpecs is null");if(!t)throw new Error("modelJSON has weightsManifest but weightData is null");s.weightSpecs=e,s.weightData=t}return n.signature!=null&&(s.signature=n.signature),n.userDefinedMetadata!=null&&(s.userDefinedMetadata=n.userDefinedMetadata),n.modelInitializer!=null&&(s.modelInitializer=n.modelInitializer),n.initializerSignature!=null&&(s.initializerSignature=n.initializerSignature),s}async function _2(n,e){let t,s;return n.weightsManifest!=null&&([t,s]=await e(n.weightsManifest)),E2(n,t,s)}function Yd(n){if(n.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:n.modelTopology==null?0:qb(JSON.stringify(n.modelTopology)),weightSpecsBytes:n.weightSpecs==null?0:qb(JSON.stringify(n.weightSpecs)),weightDataBytes:n.weightData==null?0:n.weightData.byteLength}}function R2(n){const e=[];for(const t of n)e.push(...t.weights);return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Ut{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return Ut.instance==null&&(Ut.instance=new Ut),Ut.instance}static registerSaveRouter(e){Ut.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ut.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ut.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ut.getHandlers(e,"load",t)}static getHandlers(e,t,s){const o=[];return(t==="load"?Ut.getInstance().loadRouters:Ut.getInstance().saveRouters).forEach(a=>{const i=a(e,s);i!==null&&o.push(i)}),o}}const A2=n=>Ut.getSaveHandlers(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Tp="tensorflowjs",Ep=1,pr="models_store",vo="model_info_store";function R0(){if(!H().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const n=typeof window>"u"?self:window,e=n.indexedDB||n.mozIndexedDB||n.webkitIndexedDB||n.msIndexedDB||n.shimIndexedDB;if(e==null)throw new Error("The current browser does not appear to support IndexedDB.");return e}function _p(n){const e=n.result;e.createObjectStore(pr,{keyPath:"modelPath"}),e.createObjectStore(vo,{keyPath:"modelPath"})}class kr{constructor(e){if(this.indexedDB=R0(),e==null||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((s,o)=>{const r=this.indexedDB.open(Tp,Ep);r.onupgradeneeded=()=>_p(r),r.onsuccess=()=>{const a=r.result;if(t==null){const i=a.transaction(pr,"readonly"),u=i.objectStore(pr).get(this.modelPath);u.onsuccess=()=>{if(u.result==null)return a.close(),o(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));s(u.result.modelArtifacts)},u.onerror=l=>(a.close(),o(u.error)),i.oncomplete=()=>a.close()}else{const i=Yd(t),c=a.transaction(vo,"readwrite");let u=c.objectStore(vo);const l=u.put({modelPath:this.modelPath,modelArtifactsInfo:i});let d;l.onsuccess=()=>{d=a.transaction(pr,"readwrite");const p=d.objectStore(pr).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:i});p.onsuccess=()=>s({modelArtifactsInfo:i}),p.onerror=f=>{u=c.objectStore(vo);const m=u.delete(this.modelPath);m.onsuccess=()=>(a.close(),o(p.error)),m.onerror=g=>(a.close(),o(p.error))}},l.onerror=h=>(a.close(),o(l.error)),c.oncomplete=()=>{d==null?a.close():d.oncomplete=()=>a.close()}}},r.onerror=a=>o(r.error)})}}kr.URL_SCHEME="indexeddb://";const A0=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(kr.URL_SCHEME)?D2(n.slice(kr.URL_SCHEME.length)):null;Ut.registerSaveRouter(A0);Ut.registerLoadRouter(A0);function D2(n){return new kr(n)}function F2(n){return n.startsWith(kr.URL_SCHEME)?n.slice(kr.URL_SCHEME.length):n}class O2{constructor(){this.indexedDB=R0()}async listModels(){return new Promise((e,t)=>{const s=this.indexedDB.open(Tp,Ep);s.onupgradeneeded=()=>_p(s),s.onsuccess=()=>{const o=s.result,r=o.transaction(vo,"readonly"),i=r.objectStore(vo).getAll();i.onsuccess=()=>{const c={};for(const u of i.result)c[u.modelPath]=u.modelArtifactsInfo;e(c)},i.onerror=c=>(o.close(),t(i.error)),r.oncomplete=()=>o.close()},s.onerror=o=>t(s.error)})}async removeModel(e){return e=F2(e),new Promise((t,s)=>{const o=this.indexedDB.open(Tp,Ep);o.onupgradeneeded=()=>_p(o),o.onsuccess=()=>{const r=o.result,a=r.transaction(vo,"readwrite"),i=a.objectStore(vo),c=i.get(e);let u;c.onsuccess=()=>{if(c.result==null)return r.close(),s(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const l=i.delete(e),d=()=>{u=r.transaction(pr,"readwrite");const p=u.objectStore(pr).delete(e);p.onsuccess=()=>t(c.result.modelArtifactsInfo),p.onerror=f=>s(c.error)};l.onsuccess=d,l.onerror=h=>(d(),r.close(),s(c.error))}},c.onerror=l=>(r.close(),s(c.error)),a.oncomplete=()=>{u==null?r.close():u.oncomplete=()=>r.close()}},o.onerror=r=>s(o.error)})}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lo="/",la="tensorflowjs_models",D0="info",M2="model_topology",L2="weight_specs",P2="weight_data",B2="model_metadata";function F0(n){return{info:[la,n,D0].join(lo),topology:[la,n,M2].join(lo),weightSpecs:[la,n,L2].join(lo),weightData:[la,n,P2].join(lo),modelMetadata:[la,n,B2].join(lo)}}function O0(n){for(const e of Object.values(n))window.localStorage.removeItem(e)}function z2(n){const e=n.split(lo);if(e.length<3)throw new Error(`Invalid key format: ${n}`);return e.slice(1,e.length-1).join(lo)}function V2(n){return n.startsWith(vr.URL_SCHEME)?n.slice(vr.URL_SCHEME.length):n}class vr{constructor(e){if(!H().getBool("IS_BROWSER")||typeof window>"u"||typeof window.localStorage>"u")throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,e==null||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=F0(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),s=JSON.stringify(e.weightSpecs),o=Yd(e);try{this.LS.setItem(this.keys.info,JSON.stringify(o)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,s),this.LS.setItem(this.keys.weightData,N2(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:e.signature!=null?e.signature:void 0,userDefinedMetadata:e.userDefinedMetadata!=null?e.userDefinedMetadata:void 0,modelInitializer:e.modelInitializer!=null?e.modelInitializer:void 0,initializerSignature:e.initializerSignature!=null?e.initializerSignature:void 0,trainingConfig:e.trainingConfig!=null?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:o}}catch{throw O0(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${o.modelTopologyBytes}, weightSpecsBytes=${o.weightSpecsBytes}, weightDataBytes=${o.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(e==null)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if(e.modelTopologyType!=="JSON")throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},s=JSON.parse(this.LS.getItem(this.keys.topology));if(s==null)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=s;const o=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(o==null)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=o;const r=this.LS.getItem(this.keys.modelMetadata);if(r!=null){const i=JSON.parse(r);t.format=i.format,t.generatedBy=i.generatedBy,t.convertedBy=i.convertedBy,i.signature!=null&&(t.signature=i.signature),i.userDefinedMetadata!=null&&(t.userDefinedMetadata=i.userDefinedMetadata),i.modelInitializer!=null&&(t.modelInitializer=i.modelInitializer),i.initializerSignature!=null&&(t.initializerSignature=i.initializerSignature),i.trainingConfig!=null&&(t.trainingConfig=i.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(a==null)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=T2(a),t}}vr.URL_SCHEME="localstorage://";const M0=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith(vr.URL_SCHEME)?W2(n.slice(vr.URL_SCHEME.length)):null;Ut.registerSaveRouter(M0);Ut.registerLoadRouter(M0);function W2(n){return new vr(n)}class U2{constructor(){$(H().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),$(typeof window>"u"||typeof window.localStorage<"u",()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=la+lo,s=lo+D0;for(let o=0;o<this.LS.length;++o){const r=this.LS.key(o);if(r.startsWith(t)&&r.endsWith(s)){const a=z2(r);e[a]=JSON.parse(this.LS.getItem(r))}}return e}async removeModel(e){e=V2(e);const t=F0(e);if(this.LS.getItem(t.info)==null)throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(t.info));return O0(t),s}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xb="://";class Fs{constructor(){this.managers={}}static getInstance(){return Fs.instance==null&&(Fs.instance=new Fs),Fs.instance}static registerManager(e,t){$(e!=null,()=>"scheme must not be undefined or null."),e.endsWith(Xb)&&(e=e.slice(0,e.indexOf(Xb))),$(e.length>0,()=>"scheme must not be an empty string.");const s=Fs.getInstance();$(s.managers[e]==null,()=>`A model store manager is already registered for scheme '${e}'.`),s.managers[e]=t}static getManager(e){const t=Fs.getInstance().managers[e];if(t==null)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(Fs.getInstance().managers)}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class G2{constructor(){this.messageName="setTimeoutCustom",this.functionRefs=[],this.handledMessageCount=0,this.hasEventListener=!1}fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return this.textEncoder==null&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}setTimeoutCustom(e,t){if(typeof window>"u"||!H().getBool("USE_SETTIMEOUTCUSTOM")){setTimeout(e,t);return}this.functionRefs.push(e),setTimeout(()=>{window.postMessage({name:this.messageName,index:this.functionRefs.length-1},"*")},t),this.hasEventListener||(this.hasEventListener=!0,window.addEventListener("message",s=>{if(s.source===window&&s.data.name===this.messageName){s.stopPropagation();const o=this.functionRefs[s.data.index];o(),this.handledMessageCount++,this.handledMessageCount===this.functionRefs.length&&(this.functionRefs=[],this.handledMessageCount=0)}},!0))}}if(H().get("IS_BROWSER")){H().setPlatform("browser",new G2);try{Fs.registerManager(vr.URL_SCHEME,new U2)}catch{}try{Fs.registerManager(kr.URL_SCHEME,new O2)}catch{}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H2={importFetch:()=>require("node-fetch")};let Hh;class j2{constructor(){this.util=require("util"),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return H().global.fetch!=null?H().global.fetch(e,t):(Hh==null&&(Hh=H2.importFetch()),Hh(e,t))}now(){const e=process.hrtime();return e[0]*1e3+e[1]/1e6}encode(e,t){if(t!=="utf-8"&&t!=="utf8")throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return e.length===0?"":new this.util.TextDecoder(t).decode(e)}}H().get("IS_NODE")&&!H().get("IS_BROWSER")&&H().setPlatform("node",new j2);/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Me(n,e="float32",t){return e=e||"float32",bo(n),new sn(n,e,t)}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q2(n,e){const t=S(n,"x","cast");if(!zS(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if(e==="string"&&t.dtype!=="string"||e!=="string"&&t.dtype==="string")throw new Error("Only strings can be casted to strings");const s={x:t},o={dtype:e};return D.runKernel(Wa,s,o)}const he=F({cast_:q2});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X2(n){const t={x:S(n,"x","clone","string_or_numeric")};return D.runKernel(si,t)}const br=F({clone_:X2});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K2(n,e=!1){console.log(n.toString(e))}/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */$0();const Y2={buffer:Me,cast:he,clone:br,print:K2};x2(Y2);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Z2="model",J2=".json",Q2=".weights.bin";function Kb(n){return new Promise(e=>setTimeout(e)).then(n)}class $r{constructor(e){if(!H().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith($r.URL_SCHEME)&&(e=e.slice($r.URL_SCHEME.length)),(e==null||e.length===0)&&(e=Z2),this.modelJsonFileName=e+J2,this.weightDataFileName=e+Q2}async save(e){if(typeof document>"u")throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const s=[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}],o=_0(e,s),r=window.URL.createObjectURL(new Blob([JSON.stringify(o)],{type:"application/json"})),a=this.modelJsonAnchor==null?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Kb(()=>a.dispatchEvent(new MouseEvent("click"))),e.weightData!=null){const i=this.weightDataAnchor==null?document.createElement("a"):this.weightDataAnchor;i.download=this.weightDataFileName,i.href=t,await Kb(()=>i.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:Yd(e)}}}}$r.URL_SCHEME="downloads://";const eN=n=>H().getBool("IS_BROWSER")&&!Array.isArray(n)&&n.startsWith($r.URL_SCHEME)?tN(n.slice($r.URL_SCHEME.length)):null;Ut.registerSaveRouter(eN);function tN(n="model"){return new $r(n)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yb(n,e,t,s){a(n),t=t??0,s=s??1,i(t,s);let o=0;const r=c=>(c.then(u=>{const l=t+ ++o/n.length*(s-t);return e(l),u}),c);function a(c){$(c!=null&&Array.isArray(c)&&c.length>0,()=>"promises must be a none empty array")}function i(c,u){$(c>=0&&c<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${c}`),$(u>=0&&u<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${u}`),$(u>=c,()=>`startFraction must be no more than endFraction, but got startFraction ${c} and endFraction ${u}`)}return Promise.all(n.map(r))}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function nN(n,e){e==null&&(e={});const t=e.fetchFunc==null?H().platform.fetch:e.fetchFunc,s=n.map(d=>t(d,e.requestInit,{isBinary:!0})),o=0,r=.5,i=(e.onProgress==null?await Promise.all(s):await Yb(s,e.onProgress,o,r)).map(d=>d.arrayBuffer()),c=.5,u=1;return e.onProgress==null?await Promise.all(i):await Yb(i,e.onProgress,c,u)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sN="application/octet-stream",oN="application/json";class Yf{constructor(e,t){if(this.DEFAULT_METHOD="POST",t==null&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,t.fetchFunc!=null?($(typeof t.fetchFunc=="function",()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=H().platform.fetch,$(e!=null&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&$(e.length===2,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,t.requestInit!=null&&t.requestInit.body!=null)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const s=[{paths:["./model.weights.bin"],weights:e.weightSpecs}],o=_0(e,s);t.body.append("model.json",new Blob([JSON.stringify(o)],{type:oN}),"model.json"),e.weightData!=null&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:sN}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Yd(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch{let a=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?a+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":a+=" Please make sure the server is serving valid JSON for this request.",new Error(a)}const s=t.modelTopology,o=t.weightsManifest;if(s==null&&o==null)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return _2(t,r=>this.loadWeights(r))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[s,o]=rN(t),r=this.weightPathPrefix||s,a=R2(e),i=[],c=[];for(const l of e)for(const d of l.paths)this.weightUrlConverter!=null?c.push(this.weightUrlConverter(d)):i.push(r+d+o);this.weightUrlConverter&&i.push(...await Promise.all(c));const u=await nN(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress});return[a,E0(u)]}}Yf.URL_SCHEME_REGEX=/^https?:\/\//;function rN(n){const e=n.lastIndexOf("/"),t=n.lastIndexOf("?"),s=n.substring(0,e),o=t>e?n.substring(t):"";return[s+"/",o]}function Zb(n){return n.match(Yf.URL_SCHEME_REGEX)!=null}const L0=(n,e)=>{if(typeof fetch>"u"&&(e==null||e.fetchFunc==null))return null;{let t=!0;if(Array.isArray(n)?t=n.every(s=>Zb(s)):t=Zb(n),t)return aN(n,e)}return null};Ut.registerSaveRouter(L0);Ut.registerLoadRouter(L0);function aN(n,e){return new Yf(n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iN(n,e,t=!1,s=!1){let o=S(n,"a","matMul"),r=S(e,"b","matMul");[o,r]=Tt(o,r);const a={a:o,b:r},i={transposeA:t,transposeB:s};return D.runKernel(Va,a,i)}const Xe=F({matMul_:iN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cN(n,e,t=1,s=0,o="int32"){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const a={indices:S(n,"indices","oneHot","int32")},i={dtype:o,depth:e,onValue:t,offValue:s};return D.runKernel(mi,a,i)}const P0=F({oneHot_:cN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Is(){return D}function Rp(){return D.memory()}function G(n,e){return D.tidy(n,e)}function Pe(n){k0(n).forEach(t=>t.dispose())}function Us(n){return D.keep(n)}function lN(n){return D.setBackend(n)}function Zf(n,e,t=1){return D.registerBackend(n,e,t)}function uN(){return D.backend}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dN(n){const t={input:S(n,"input","imag")};return D.runKernel(Mf,t)}const Jf=F({imag_:dN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hN(n){const t={x:S(n,"x","neg")};return D.runKernel(ml,t)}const $t=F({neg_:hN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pN(n){const t={input:S(n,"input","real")};return D.runKernel(Vf,t)}const ed=F({real_:pN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fN(n,e,t){const s=S(n,"x","transpose");if(e==null&&(e=s.shape.map((a,i)=>i).reverse()),$(s.rank===e.length,()=>`Error in transpose: rank of input ${s.rank} must match length of perm ${e}.`),e.forEach(a=>{$(a>=0&&a<s.rank,()=>`All entries in 'perm' must be between 0 and ${s.rank-1} but got ${e}`)}),s.rank<=1)return s.clone();const o={x:s},r={perm:e};return s.dtype==="complex64"?G(()=>{let a=ed(s),i=Jf(s);return a=D.runKernel(So,{x:a},r),i=D.runKernel(So,{x:i},r),t&&(i=$t(i)),Sa(a,i)}):D.runKernel(So,o,r)}const We=F({transpose_:fN});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Na(n,e){const t=n.length,s=[];for(let o=0;o<t;o++){const r=t-1-o,a=n[r]||1;(e[e.length-1-o]||1)>1&&a===1&&s.unshift(r)}return s}function Wt(n,e){const t=[];for(let s=0;s<e.length;s++){const o=n[n.length-s-1],r=e.length-s-1,a=e[r];(o==null||o===1&&a>1)&&t.unshift(r)}return t}function Ee(n,e){const t=[],s=Math.max(n.length,e.length);for(let o=0;o<s;o++){let r=n[n.length-o-1];r==null&&(r=1);let a=e[e.length-o-1];if(a==null&&(a=1),r===1)t.unshift(a);else if(a===1)t.unshift(r);else if(r!==a){const i=`Operands could not be broadcast together with shapes ${n} and ${e}.`;throw Error(i)}else t.unshift(r)}return t}function Zd(n,e){const t=n.shape.length,s=e.shape.length;if(t<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if(e.dtype!=="int32")throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[s-1]>t)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[s-1]} vs. ${t}`);if(L(n.shape)===0)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${n.shape}.`);const o=e.shape,r=o[o.length-1];let a=1;for(let d=0;d<o.length-1;++d)a*=o[d];const i=n.shape,c=o.slice();c.pop();let u=1;for(let d=r;d<t;++d)u*=i[d],c.push(i[d]);const l=[...me(n.shape).map(d=>d/u),1].slice(0,r);return[c,a,u,l]}function B0(n,e,t){const s=e.rank>1?e.shape[e.rank-1]:1,o=e.rank>1?e.rank-1:1,r=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${t.shape}, indices.shape: ${e.shape}, shape: ${n}, sliceDim: ${s}, and batchDim: ${o}.`;if(t.rank<o)throw new Error(r+` update.rank < ${o}. `);if(n.length<s+(t.rank-o))throw new Error(r+` Output shape length < ${s+(t.rank-o)}`);if(t.rank!==o+n.length-s)throw new Error(r+` update.rank != ${o+n.length-s}`);for(let a=0;a<o;++a)if(t.shape[a]!==e.shape[a])throw new Error(r+` updates.shape[${a}] (${t.shape[a]}) != indices.shape[${a}] (${e.shape[a]}).`);for(let a=0;a<t.rank-o;++a)if(t.shape[a+o]!==n[a+s])throw new Error(r+` updates.shape[${a+o}] (${t.shape[a+o]}) != shape[${a+o}] (${n[a+o]})`)}function mN(n,e,t){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(n.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${n.rank}.`);if(e.dtype!=="int32")throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(t.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${t}`);if(t.length===0){if(e.size===0)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(n.size===0)throw new Error(`Updates specified for empty output. updates shape: ${n.shape}`)}B0(t,e,n)}function Li(n,e,t){const s=e.shape.length,o=s>1?e.shape[s-1]:1,r=t.length;let a=1;for(let d=o;d<r;++d)a*=t[d];const i=o<1?1:o,c=L(e.shape)/i,u=[...me(t.slice(0,o)),1],l=L(t);return{sliceRank:o,numUpdates:c,sliceSize:a,strides:u,outputSize:l}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ap=-2,gN=-1;function Qf(n,e,t){const s=n.shape.length;$(s===e.length,()=>`Error in slice${s}D: Length of begin ${e} must match the rank of the array (${s}).`),$(s===t.length,()=>`Error in slice${s}D: Length of size ${t} must match the rank of the array (${s}).`);for(let o=0;o<s;++o)$(e[o]+t[o]<=n.shape[o],()=>`Error in slice${s}D: begin[${o}] + size[${o}] (${e[o]+t[o]}) would overflow input.shape[${o}] (${n.shape[o]})`)}function bN(n){const e=[];let t=0;for(;n>0;)n&1&&e.push(t),n/=2,t++;return e}function Jd(n,e,t){const s=[];for(let o=0;o<n.length;o++)s[o]=Math.ceil((e[o]-n[o])/t[o]);return s}function z0(n,e,t,s){const o=[...n];for(let r=o.length;r<s.length;r++)o.push(1);for(let r=0;r<t;r++)r===0?o[e]=1:(o.splice(e,0,1),o.pop());return o}function V0(n,e,t){return t<=n?t:t-(e-1)}function W0(n,e){const t=[];for(let s=0;s<n;s++)t.push(e+s);return t}function xN(n,e,t,s,o,r,a,i,c){const u=n.length;let l=new Array(u),d=new Array(u),h=new Array(u);if(e.length&&t>0){const p=e[0],f=t+1;l=U0(a,p,f,s,n),d=G0(i,p,f,o,n),h=z0(r,p,f,n)}else for(let p=0;p<u;p++)l[p]=j0(a,s,r,n,p,c),d[p]=q0(i,o,r,n,p,c),h[p]=H0(r,p,c);return{begin:l,end:d,strides:h}}function U0(n,e,t,s,o){const r=[...o],a=W0(t,e);for(let i=0;i<r.length;i++)if(a.indexOf(i)>-1)r[i]=0;else{const c=V0(e,t,i);let u=s[c];n&1<<c&&(u=0),r[i]=u}return r}function G0(n,e,t,s,o){const r=[...o],a=W0(t,e);for(let i=0;i<r.length;i++)if(a.indexOf(i)>-1)r[i]=Number.MAX_SAFE_INTEGER;else{const c=V0(e,t,i);let u=s[c];n&1<<c&&(u=Number.MAX_SAFE_INTEGER),r[i]=u}for(let i=0;i<r.length;i++){const c=o[i];r[i]<0&&(r[i]+=c),r[i]=Ir(0,r[i],o[i])}return r}function H0(n,e,t){let s=n[e];return(t&1<<e||s==null)&&(s=1),s}function j0(n,e,t,s,o,r){let a=e[o];const i=t[o]||1;(n&1<<o||r&1<<o||a==null)&&(i>0?a=Number.MIN_SAFE_INTEGER:a=Number.MAX_SAFE_INTEGER);const c=s[o];return a<0&&(a+=c),a=Ir(0,a,c-1),a}function q0(n,e,t,s,o,r){let a=e[o];const i=t[o]||1;(n&1<<o||r&1<<o||a==null)&&(i>0?a=Number.MAX_SAFE_INTEGER:a=Number.MIN_SAFE_INTEGER);const c=s[o];return a<0&&(a+=c),i>0?a=Ir(0,a,c):a=Ir(-1,a,c-1),a}function Qd(n,e,t){let s=t.length;for(let o=0;o<t.length;o++)if(t[o]>1){s=o;break}for(let o=s+1;o<t.length;o++)if(e[o]>0||t[o]!==n[o])return!1;return!0}function eh(n,e){let t=n.length>0?n[n.length-1]:1;for(let s=0;s<n.length-1;s++)t+=n[s]*e[s];return t}function Pl(n,e,t){let s;const o=n.shape.length;typeof e=="number"?s=[e,...new Array(o-1).fill(0)]:e.length<o?s=e.concat(new Array(o-e.length).fill(0)):s=e.slice(),s.forEach(a=>{$(a!==-1,()=>"slice() does not support negative begin indexing.")});let r;return t==null?r=new Array(o).fill(-1):typeof t=="number"?r=[t,...new Array(o-1).fill(-1)]:t.length<o?r=t.concat(new Array(o-t.length).fill(-1)):r=t,r=r.map((a,i)=>a>=0?a:($(a===-1,()=>`Negative size values should be exactly -1 but got ${a} for the slice() size at index ${i}.`),n.shape[i]-s[i])),[s,r]}function th(n,e,t,s,o,r,a,i,c){let u;if(s==null?(u=new Array(e.length),u.fill(1)):u=s,a!=null&&(a&a-1)!==0)throw new Error("Multiple ellipses in slice is not allowed.");let l=!1;const d={dims:u.length,numAddAxisAfterEllipsis:0,begin:e.slice(),end:t.slice(),strides:u.slice(),beginMask:o,endMask:r,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:c};for(let y=0;y<d.dims;y++)l&&(1<<y&i)!==0&&d.numAddAxisAfterEllipsis++,1<<y&a&&(l=!0);l||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:n.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};yN(d,h);let p=!0,f=!0,m=!0;const g=[],b=[];for(let y=0;y<n.length;++y){if(h.strides[y]===0)throw Error(`strides[${y}] must be non-zero`);const w=!!(h.shrinkAxisMask&1<<y),I=n[y];if(I===-1){g.push(w?1:-1);continue}const k=[h.beginMask&1<<y,h.endMask&1<<y],v=[h.strides[y]>0?0:-1,h.strides[y]>0?I:I-1];if(w&&h.strides[y]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&h.strides[y]===1;const C=!!(h.beginMask&1<<y&&h.endMask&1<<y);if(h.beginValid&&h.endValid){if(w){const O=h.begin[y]<0?I+h.begin[y]:h.begin[y];if(h.begin[y]=O,h.end[y]=h.begin[y]+1,O<0||O>=I)throw Error(`slice index ${h.begin[y]} of dimension ${y} out of bounds.`)}else h.begin[y]=Jb(h.begin[y],0,h.strides[y],I,k,v),h.end[y]=Jb(h.end[y],1,h.strides[y],I,k,v);const _=h.strides[y]===1&&h.begin[y]===0&&h.end[y]===I;p=p&&_,f=f&&(y===0&&h.strides[y]===1||_)}else p=p&&h.strides[y]===1&&C,f=f&&(y===0&&h.strides[y]===1||C);let N,T=!1;if(h.beginValid&&h.endValid?(N=h.end[y]-h.begin[y],T=!0):w?(N=1,T=!0):C&&I>=0&&(h.strides[y]<0?N=-I:N=I,T=!0),T){let _;N===0||N<0!=h.strides[y]<0?_=0:_=Math.trunc(N/h.strides[y])+(N%h.strides[y]!==0?1:0),g.push(_)}else g.push(-1)}for(let y=0;y<h.finalShapeGatherIndices.length;++y){const w=h.finalShapeGatherIndices[y];w>=0?b.push(g[w]):w===Ap&&b.push(1)}return{finalShapeSparse:b.filter((y,w)=>h.finalShapeGatherIndices[w]!==Ap),finalShape:b,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function yN(n,e){e.beginMask=0,e.endMask=0,e.shrinkAxisMask=0;let t=0;e.beginValid=n.begin!=null,e.endValid=n.end!=null,e.begin=new Array(e.dims),e.end=new Array(e.dims),e.strides=new Array(e.dims),e.finalShapeGatherIndices=[],e.finalShapeGatherIndicesSparse=[],e.inputShapeGatherIndicesSparse=new Array(e.dims);for(let s=0;s<n.dims;s++)if(1<<s&n.ellipsisMask){const o=Math.min(e.dims-(n.dims-s)+1+n.numAddAxisAfterEllipsis,e.dims);for(;t<o;t++)e.begin[t]=0,e.end[t]=0,e.strides[t]=1,e.beginMask|=1<<t,e.endMask|=1<<t,e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(-1),e.inputShapeGatherIndicesSparse[t]=s}else if(1<<s&n.newAxisMask)e.finalShapeGatherIndices.push(Ap),e.finalShapeGatherIndicesSparse.push(-1);else{if(t===e.begin.length)throw Error(`Index out of range using input dim ${t}; input has only ${e.dims} dims, ${e.begin.length}.`);n.begin!=null&&(e.begin[t]=n.begin[s]),n.end!=null&&(e.end[t]=n.end[s]),e.strides[t]=n.strides[s],n.beginMask&1<<s&&(e.beginMask|=1<<t),n.endMask&1<<s&&(e.endMask|=1<<t),n.shrinkAxisMask&1<<s?(e.finalShapeGatherIndices.push(gN),e.finalShapeGatherIndicesSparse.push(-1),e.shrinkAxisMask|=1<<t):(e.finalShapeGatherIndices.push(t),e.finalShapeGatherIndicesSparse.push(s)),e.inputShapeGatherIndicesSparse[t]=s,t++}}function Jb(n,e,t,s,o,r){if(o[e])return t>0?r[e]:r[e+1&1];{const a=n<0?s+n:n;return a<r[0]?r[0]:a>r[1]?r[1]:a}}const wN=Object.freeze(Object.defineProperty({__proto__:null,assertParamsValid:Qf,maskToAxes:bN,computeOutShape:Jd,stridesWithElidedDims:z0,getNormalizedAxes:xN,startIndicesWithElidedDims:U0,stopIndicesWithElidedDims:G0,stridesForAxis:H0,startForAxis:j0,stopForAxis:q0,isSliceContinous:Qd,computeFlatOffset:eh,parseSliceParams:Pl,sliceInfo:th},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pi{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class os{constructor(){this.classNameMap={}}static getMap(){return os.instance==null&&(os.instance=new os),os.instance}static register(e){os.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Q(n){$(n.className!=null,()=>"Class being registered does not have the static className property defined."),$(typeof n.className=="string",()=>"className is required to be a string, but got type "+typeof n.className),$(n.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),os.register(n)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IN(n,e){let t=S(n,"a","add"),s=S(e,"b","add");[t,s]=Tt(t,s);const o={a:t,b:s};return D.runKernel(Lr,o)}const ee=F({add_:IN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kN(n,e){let t=S(n,"a","floorDiv"),s=S(e,"b","floorDiv");[t,s]=Tt(t,s);const o={a:t,b:s};return D.runKernel(ei,o)}const X0=F({floorDiv_:kN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vN(n,e){let t=S(n,"a","div"),s=S(e,"b","div");if([t,s]=Tt(t,s),t.dtype==="int32"&&s.dtype==="int32")return X0(t,s);const o={a:t,b:s},r={};return D.runKernel(Ya,o,r)}const ke=F({div_:vN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $N(n,e){let t=S(n,"a","mul"),s=S(e,"b","mul");[t,s]=Tt(t,s);const o={a:t,b:s};return D.runKernel(fi,o)}const R=F({mul_:$N});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CN(n){const e=S(n,"x","abs");if(e.dtype==="complex64"){const t={x:e};return D.runKernel(Ed,t)}else{const t={x:e};return D.runKernel(Lc,t)}}const Mt=F({abs_:CN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SN(n){const t={x:S(n,"x","acos")};return D.runKernel(Pc,t)}const NN=F({acos_:SN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TN(n){const t={x:S(n,"x","acosh")};return D.runKernel(Bc,t)}const EN=F({acosh_:TN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _N(n,e=null,t=!1){const o={x:S(n,"x","all","bool")},r={axis:e,keepDims:t};return D.runKernel(Vc,o,r)}const K0=F({all_:_N});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RN(n,e=null,t=!1){const o={x:S(n,"x","any","bool")},r={axis:e,keepDims:t};return D.runKernel(Wc,o,r)}const Dp=F({any_:RN});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AN(n,e=0){const s={x:S(n,"x","argMax")},o={axis:e};return D.runKernel(Ba,s,o)}const yc=F({argMax_:AN});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DN(n,e=0){const s={x:S(n,"x","argMin")},o={axis:e};return D.runKernel(Nd,s,o)}const FN=F({argMin_:DN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ON(n){const t={x:S(n,"x","asin")};return D.runKernel(Uc,t)}const MN=F({asin_:ON});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LN(n){const t={x:S(n,"x","asinh")};return D.runKernel(Gc,t)}const PN=F({asinh_:LN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BN(n){const t={x:S(n,"x","atan")};return D.runKernel(Hc,t)}const zN=F({atan_:BN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VN(n,e){let t=S(n,"a","atan2"),s=S(e,"b","atan2");[t,s]=Tt(t,s);const o={a:t,b:s};return D.runKernel(qc,o)}const WN=F({atan2_:VN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UN(n){const t={x:S(n,"x","atanh")};return D.runKernel(jc,t)}const GN=F({atanh_:UN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bl(n,e,t,s,o="NHWC",r){const a=n[3],i=[...e,a],c=As(o);return Nt(n,i,t,r,s,null,null,c)}function Bn(n,e,t,s,o,r,a="channelsLast"){const[i,c]=td(e);let u;if(a==="channelsLast")u=[i,c,n[3],n[3]];else if(a==="channelsFirst")u=[i,c,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Nt(n,u,t,s,o,r,!1,a)}function xo(n,e,t,s,o,r,a="NDHWC"){const[i,c,u]=Fp(e);let l,d;if(a==="NDHWC")d="channelsLast",l=[i,c,u,n[4],n[4]];else if(a==="NCDHW")d="channelsFirst",l=[i,c,u,n[1],n[1]];else throw new Error(`Unknown dataFormat ${a}`);return Go(n,l,t,s,o,!1,d,r)}function Nt(n,e,t,s,o,r,a=!1,i="channelsLast"){let[c,u,l,d]=[-1,-1,-1,-1];if(i==="channelsLast")[c,u,l,d]=n;else if(i==="channelsFirst")[c,d,u,l]=n;else throw new Error(`Unknown dataFormat ${i}`);const[h,p,,f]=e,[m,g]=td(t),[b,x]=td(s),y=pa(h,b),w=pa(p,x),{padInfo:I,outHeight:k,outWidth:v}=qN(o,u,l,m,g,y,w,r,i),C=a?f*d:f;let N;return i==="channelsFirst"?N=[c,C,k,v]:i==="channelsLast"&&(N=[c,k,v,C]),{batchSize:c,dataFormat:i,inHeight:u,inWidth:l,inChannels:d,outHeight:k,outWidth:v,outChannels:C,padInfo:I,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:y,effectiveFilterWidth:w,dilationHeight:b,dilationWidth:x,inShape:n,outShape:N,filterShape:e}}function Go(n,e,t,s,o,r=!1,a="channelsLast",i){let[c,u,l,d,h]=[-1,-1,-1,-1,-1];if(a==="channelsLast")[c,u,l,d,h]=n;else if(a==="channelsFirst")[c,h,u,l,d]=n;else throw new Error(`Unknown dataFormat ${a}`);const[p,f,m,,g]=e,[b,x,y]=Fp(t),[w,I,k]=Fp(s),v=pa(p,w),C=pa(f,I),N=pa(m,k),{padInfo:T,outDepth:_,outHeight:O,outWidth:P}=XN(o,u,l,d,b,x,y,v,C,N,i),V=r?g*h:g;let B;return a==="channelsFirst"?B=[c,V,_,O,P]:a==="channelsLast"&&(B=[c,_,O,P,V]),{batchSize:c,dataFormat:a,inDepth:u,inHeight:l,inWidth:d,inChannels:h,outDepth:_,outHeight:O,outWidth:P,outChannels:V,padInfo:T,strideDepth:b,strideHeight:x,strideWidth:y,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:v,effectiveFilterHeight:C,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:I,dilationWidth:k,inShape:n,outShape:B,filterShape:e}}function HN(n,e,t,s,o){s==null&&(s=em(n,e,t));const r=n[0],a=n[1],i=xr((r-e+2*s)/t+1,o),c=xr((a-e+2*s)/t+1,o);return[i,c]}function jN(n,e,t,s,o,r){o==null&&(o=em(n,e,s));const a=n[0],i=n[1],c=n[2],u=xr((a-e+2*o)/s+1,r),l=xr((i-e+2*o)/s+1,r),d=xr((c-e+2*o)/s+1,r);return[u,l,d,t]}function em(n,e,t,s=1){const o=pa(e,s);return Math.floor((n[0]*(t-1)-t+o)/2)}function td(n){return typeof n=="number"?[n,n,n]:n.length===2?[n[0],n[1],1]:n}function Fp(n){return typeof n=="number"?[n,n,n]:n}function pa(n,e){return e<=1?n:n+(n-1)*(e-1)}function qN(n,e,t,s,o,r,a,i,c){let u,l,d;if(typeof n=="number"){u={top:n,bottom:n,left:n,right:n,type:n===0?"VALID":"NUMBER"};const p=HN([e,t],r,s,n,i);l=p[0],d=p[1]}else if(n==="same"){l=Math.ceil(e/s),d=Math.ceil(t/o);const h=Math.max(0,(l-1)*s+r-e),p=Math.max(0,(d-1)*o+a-t),f=Math.floor(h/2),m=h-f,g=Math.floor(p/2),b=p-g;u={top:f,bottom:m,left:g,right:b,type:"SAME"}}else if(n==="valid")u={top:0,bottom:0,left:0,right:0,type:"VALID"},l=Math.ceil((e-r+1)/s),d=Math.ceil((t-a+1)/o);else if(typeof n=="object"){const h=c==="channelsLast"?n[1][0]:n[2][0],p=c==="channelsLast"?n[1][1]:n[2][1],f=c==="channelsLast"?n[2][0]:n[3][0],m=c==="channelsLast"?n[2][1]:n[3][1];u={top:h,bottom:p,left:f,right:m,type:h===0&&p===0&&f===0&&m===0?"VALID":"EXPLICIT"},l=xr((e-r+h+p)/s+1,i),d=xr((t-a+f+m)/o+1,i)}else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:u,outHeight:l,outWidth:d}}function XN(n,e,t,s,o,r,a,i,c,u,l){let d,h,p,f;if(typeof n=="number"){d={top:n,bottom:n,left:n,right:n,front:n,back:n,type:n===0?"VALID":"NUMBER"};const g=jN([e,t,s,1],i,1,o,n,l);h=g[0],p=g[1],f=g[2]}else if(n==="same"){h=Math.ceil(e/o),p=Math.ceil(t/r),f=Math.ceil(s/a);const m=(h-1)*o+i-e,g=(p-1)*r+c-t,b=(f-1)*a+u-s,x=Math.floor(m/2),y=m-x,w=Math.floor(g/2),I=g-w,k=Math.floor(b/2),v=b-k;d={top:w,bottom:I,left:k,right:v,front:x,back:y,type:"SAME"}}else if(n==="valid")d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((e-i+1)/o),p=Math.ceil((t-c+1)/r),f=Math.ceil((s-u+1)/a);else throw Error(`Unknown padding parameter: ${n}`);return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}function xr(n,e){if(!e)return Math.trunc(n);switch(e){case"round":return Math.round(n);case"ceil":return Math.ceil(n);case"floor":return Math.floor(n);default:throw new Error(`Unknown roundingMode ${e}`)}}function Cr(n){const[e,t,s]=td(n);return e===1&&t===1&&s===1}function cn(n,e){return Cr(n)||Cr(e)}function As(n){if(n==="NHWC")return"channelsLast";if(n==="NCHW")return"channelsFirst";throw new Error(`Unknown dataFormat ${n}`)}function $n(n,e,t){if(t!=null){if(typeof e=="string")throw Error(`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);if(typeof e=="number")$(Ia(e),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${e}.`);else if(typeof e=="object")e.forEach(s=>{s.forEach(o=>{$(Ia(o),()=>`Error in ${n}: pad must be an integer when using dimRoundingMode ${t} but got pad ${o}.`)})});else throw Error(`Error in ${n}: Unknown padding parameter: ${e}`)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KN(n,e){const s={x:S(n,"x","reshape","string_or_numeric")},o={shape:e};return D.runKernel(kl,s,o)}const M=F({reshape_:KN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YN(n,e,t,s,o){const r=S(n,"x","avgPool","float32"),a=1;$(cn(t,a),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`);let i=r,c=!1;r.rank===3&&(c=!0,i=M(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(i.rank===4,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),$n("avgPool",s,o);const u={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:o};let d=D.runKernel(za,u,l);return d=he(d,r.dtype),c?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const tm=F({avgPool_:YN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZN(n,e,t,s,o,r="NDHWC"){const a=S(n,"x","avgPool3d","float32");let i=a,c=!1;a.rank===4&&(c=!0,i=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),$(i.rank===5,()=>`Error in avgPool3d: x must be rank 5 but got rank ${i.rank}.`),$(r==="NDHWC",()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),$n("avgPool3d",s,o);const u={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:o,dataFormat:r};let d=D.runKernel(Td,u,l);return d=he(d,i.dtype),c?M(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const JN=F({avgPool3d_:ZN});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QN(n,e=0){$(n.length>=1,()=>"Pass at least one tensor to concat");const t=T0(n,"tensors","concat","string_or_numeric");if(t[0].dtype==="complex64"&&t.forEach(r=>{if(r.dtype!=="complex64")throw new Error(`Cannot concatenate complex64 tensors with a tensor
          with dtype ${r.dtype}. `)}),t.length===1)return br(t[0]);const s=t,o={axis:e};return D.runKernel(Kc,s,o)}const on=F({concat_:QN});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eT(n){const t={x:S(n,"x","sigmoid","float32")};return D.runKernel(Ei,t)}const Bi=F({sigmoid_:eT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tT(n,e,t){const s=S(n,"x","slice","string_or_numeric");if(s.rank===0)throw new Error("Slicing scalar is not possible");const o={x:s},r={begin:e,size:t};return D.runKernel(Cl,o,r)}const Qe=F({slice_:tT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nT(n){const t={x:S(n,"x","tanh","float32")};return D.runKernel(Mi,t)}const nm=F({tanh_:nT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sT(n,e,t){const s=S(n,"x","batchToSpaceND"),o=e.reduce((i,c)=>i*c);$(s.rank>=1+e.length,()=>`input rank is ${s.rank} but should be > than blockShape.length ${e.length}`),$(t.length===e.length,()=>`crops.length is ${t.length} but should be equal to blockShape.length  ${e.length}`),$(s.shape[0]%o===0,()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${o}`);const r={x:s},a={blockShape:e,crops:t};return D.runKernel(Xc,r,a)}const sm=F({batchToSpaceND_:sT});function oT(n){let e;return n.rank===0||n.rank===1?e=M(n,[1,1,1,n.size]):n.rank===2?e=M(n,[1,1,n.shape[0],n.shape[1]]):n.rank===3?e=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]):e=n,e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rT(n,e,t,s,o,r){r==null&&(r=.001);const a=S(n,"x","batchNorm"),i=S(e,"mean","batchNorm"),c=S(t,"variance","batchNorm");let u;o!=null&&(u=S(o,"scale","batchNorm"));let l;s!=null&&(l=S(s,"offset","batchNorm")),$(i.rank===c.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(l==null||i.rank===l.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(u==null||i.rank===u.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const h={x:oT(a),scale:u,offset:l,mean:i,variance:c},p={varianceEpsilon:r},f=D.runKernel(ti,h,p);return M(f,a.shape)}const nh=F({batchNorm_:rT});function aT(n,e,t,s,o,r){const a=S(n,"x","batchNorm"),i=S(e,"mean","batchNorm"),c=S(t,"variance","batchNorm");let u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return s!=null&&(l=S(s,"offset","batchNorm")),$(a.rank===2,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${a.rank}.`),$(i.rank===2||i.rank===1,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${i.rank}.`),$(c.rank===2||c.rank===1,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${c.rank}.`),u!=null&&$(u.rank===2||u.rank===1,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`),l!=null&&$(l.rank===2||l.rank===1,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${l.rank}.`),nh(a,i,c,l,u,r)}const iT=F({batchNorm2d_:aT});function cT(n,e,t,s,o,r){const a=S(n,"x","batchNorm"),i=S(e,"mean","batchNorm"),c=S(t,"variance","batchNorm");let u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return s!=null&&(l=S(s,"offset","batchNorm")),$(a.rank===3,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${a.rank}.`),$(i.rank===3||i.rank===1,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${i.rank}.`),$(c.rank===3||c.rank===1,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${c.rank}.`),u!=null&&$(u.rank===3||u.rank===1,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`),l!=null&&$(l.rank===3||l.rank===1,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${l.rank}.`),nh(a,i,c,l,u,r)}const lT=F({batchNorm3d_:cT});function uT(n,e,t,s,o,r){const a=S(n,"x","batchNorm"),i=S(e,"mean","batchNorm"),c=S(t,"variance","batchNorm");let u;o!=null&&(u=S(o,"scale","batchNorm"));let l;return s!=null&&(l=S(s,"offset","batchNorm")),$(a.rank===4,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${a.rank}.`),$(i.rank===4||i.rank===1,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${i.rank}.`),$(c.rank===4||c.rank===1,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${c.rank}.`),u!=null&&$(u.rank===4||u.rank===1,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`),l!=null&&$(l.rank===4||l.rank===1,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${l.rank}.`),nh(a,i,c,l,u,r)}const dT=F({batchNorm4d_:uT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hT(n,e,t){const s=S(n,"x","bincount"),o=S(e,"weights","bincount");$(s.dtype==="int32",()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`),$(t>=0,()=>`size must be non-negative, but got ${t}.`),$(o.size===s.size||o.size===0,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${o.shape}.`);const r={x:s,weights:o},a={size:t};return D.runKernel(Cf,r,a)}const pT=F({bincount_:hT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fT(n,e){let t=S(n,"broadcastTo","x");const s=t.shape;if(bo(e),e.length<t.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${t.rank}.`);if(e.length>t.rank){const u=t.shape.slice();for(;u.length<e.length;)u.unshift(1);t=M(t,u)}const o=t.shape,r=Array.from(e);for(let u=e.length-1;u>=0;u--)if(o[u]===e[u])r[u]=1;else if(t.shape[u]!==1)throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${e}].`);if(r.map((u,l)=>u>1?l:-1).filter(u=>u>=0).length===0)return br(t);const i={x:t},c={reps:r};return D.runKernel(Br,i,c)}const mc=F({broadcastTo_:fT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mT(n){const t={x:S(n,"x","ceil","float32")};return D.runKernel(Ua,t)}const gT=F({ceil_:mT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zl(n,e,t){bo(n);const s={shape:n,value:e,dtype:t};return D.runKernel(Ad,{},s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bT(n,e,t){const s=S(n,"x","clipByValue");if($(e<=t,()=>`Error in clip: min (${e}) must be less than or equal to max (${t}).`),e===t)return zl(s.shape,e,s.dtype);const o={x:s},r={clipValueMin:e,clipValueMax:t};return D.runKernel(Pr,o,r)}const Yn=F({clipByValue_:bT});function xT(n){return on(n,0)}const yT=F({concat1d_:xT});function wT(n,e){return on(n,e)}const IT=F({concat2d_:wT});function kT(n,e){return on(n,e)}const vT=F({concat3d_:kT});function $T(n,e){return on(n,e)}const CT=F({concat4d_:$T});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ST(n,e,t,s,o="NHWC",r=[1,1],a){const i=S(n,"x","conv2d","float32"),c=S(e,"filter","conv2d","float32");let u=i,l=!1;i.rank===3&&(l=!0,u=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(u.rank===4,()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`),$(c.rank===4,()=>`Error in conv2d: filter must be rank 4, but got rank ${c.rank}.`),$n("conv2d",s,a);const d=o==="NHWC"?u.shape[3]:u.shape[1];$(d===c.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${c.shape[2]}.`),$(cn(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`);const h={x:u,filter:c},p={strides:t,pad:s,dataFormat:o,dilations:r,dimRoundingMode:a},f=D.runKernel(Ga,h,p);return l?M(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const Sr=F({conv2d_:ST});function NT(n,e,t,s,o="NWC",r=1,a){const i=S(n,"x","conv1d"),c=S(e,"filter","conv1d");let u=i,l=!1;i.rank===2&&(l=!0,u=M(i,[1,i.shape[0],i.shape[1]])),$(u.rank===3,()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`),$(c.rank===3,()=>`Error in conv1d: filter must be rank 3, but got rank ${c.rank}.`),$n("conv1d",s,a),$(u.shape[2]===c.shape[1],()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${c.shape[1]}.`),$(cn(t,r),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${t} and dilation '${r}'`),$(o==="NWC",()=>`Error in conv1d: got dataFormat of ${o} but only NWC is currently supported.`);const d=M(c,[1,c.shape[0],c.shape[1],c.shape[2]]),h=M(u,[u.shape[0],1,u.shape[1],u.shape[2]]),g=Sr(h,d,[1,t],s,"NHWC",[1,r],a);return l?M(g,[g.shape[2],g.shape[3]]):M(g,[g.shape[0],g.shape[2],g.shape[3]])}const Y0=F({conv1d_:NT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TT(n,e,t,s,o,r="NHWC",a){$(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let i=n,c=e,u=!1;e.rank===3&&(u=!0,c=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]),i=[1,n[0],n[1],n[2]]),$(i.length===4,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${i.length}.`),$(c.rank===4,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${c.rank}`),$(t.rank===4,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${t.rank}`);const l=r==="NHWC"?i[3]:i[1],d=r==="NHWC"?c.shape[3]:c.shape[1];$(l===t.shape[2],()=>`Error in conv2dDerInput: depth of input (${l}) must match input depth for filter ${t.shape[2]}.`),$(d===t.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${t.shape[3]}.`),$n("conv2dDerInput",o,a);const h={dy:c,filter:t},p={strides:s,pad:o,dataFormat:r,dimRoundingMode:a,inputShape:i},f=D.runKernel(Ha,h,p);return u?M(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const om=F({conv2DBackpropInput_:TT});function ET(n,e,t,s,o,r){const a=S(n,"x","conv2dTranspose"),i=S(e,"filter","conv2dTranspose");return om(t,a,i,s,o,"NHWC",r)}const Z0=F({conv2dTranspose_:ET});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _T(n,e,t,s,o="NDHWC",r=[1,1,1]){const a=S(n,"x","conv3d"),i=S(e,"filter","conv3d");let c=a,u=!1;a.rank===4&&(u=!0,c=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),$(c.rank===5,()=>`Error in conv3d: input must be rank 5, but got rank ${c.rank}.`),$(i.rank===5,()=>`Error in conv3d: filter must be rank 5, but got rank ${i.rank}.`),$(c.shape[4]===i.shape[3],()=>`Error in conv3d: depth of input (${c.shape[4]}) must match input depth for filter ${i.shape[3]}.`),$(cn(t,r),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`),$(o==="NDHWC",()=>`Error in conv3d: got dataFormat of ${o} but only NDHWC is currently supported.`);const l={x:c,filter:i},d={strides:t,pad:s,dataFormat:o,dilations:r},h=D.runKernel(_d,l,d);return u?M(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const RT=F({conv3d_:_T});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AT(n,e,t,s,o){$(n.length===e.rank,()=>`Length of inShape (${n.length}) and rank of dy (${e.rank}) must match`);let r=n,a=e,i=!1;e.rank===4&&(i=!0,a=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),r=[1,n[0],n[1],n[2],n[3]]);const c=r[4],u=a.shape[4];$(r.length===5,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${r.length}.`),$(a.rank===5,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${a.rank}`),$(t.rank===5,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${t.rank}`),$(c===t.shape[3],()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${t.shape[3]}.`),$(u===t.shape[4],()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${t.shape[4]}.`);const l={dy:a,filter:t},d={pad:o,strides:s,inputShape:r},h=D.runKernel(Ef,l,d);return i?M(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}const J0=F({conv3DBackpropInput_:AT});function DT(n,e,t,s,o){const r=S(n,"x","conv3dTranspose"),a=S(e,"filter","conv3dTranspose");return J0(t,r,a,s,o)}const FT=F({conv3dTranspose_:DT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OT(n){const t={x:S(n,"x","cos","float32")};return D.runKernel(ja,t)}const rm=F({cos_:OT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MT(n){const t={x:S(n,"x","cosh","float32")};return D.runKernel(qa,t)}const Q0=F({cosh_:MT});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LT(n,e=0,t=!1,s=!1){const r={x:S(n,"x","cumprod")},a={axis:e,exclusive:t,reverse:s};return D.runKernel(Yc,r,a)}const Op=F({cumprod_:LT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PT(n,e=0,t=!1,s=!1){const r={x:S(n,"x","cumsum")},a={axis:e,exclusive:t,reverse:s};return D.runKernel(Xa,r,a)}const ew=F({cumsum_:PT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BT(n,e,t,s=!1){const o=S(n,"x","denseBincount"),r=S(e,"weights","denseBincount");$(o.dtype==="int32",()=>`Error in denseBincount: input dtype must be int32, but got ${o.dtype}`),$(o.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${o.rank}.`),$(t>=0,()=>`size must be non-negative, but got ${t}.`),$(r.size===o.size||r.size===0,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${o.shape}, weights shape: ${r.shape}.`);const a={x:o,weights:r},i={size:t,binaryOutput:s};return D.runKernel(_f,a,i)}const Qb=F({denseBincount_:BT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zT(n,e,t="NHWC"){const s=S(n,"x","depthToSpace","float32"),o=t==="NHWC"?s.shape[1]:s.shape[2],r=t==="NHWC"?s.shape[2]:s.shape[3],a=t==="NHWC"?s.shape[3]:s.shape[1];$(e>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`),$(o*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${o} and ${e}  for depthToSpace with input shape
    ${s.shape}`),$(r*e>=0,()=>`Negative dimension size caused by overflow when multiplying
    ${r} and ${e} for depthToSpace with input shape
        ${s.shape}`),$(a%(e*e)===0,()=>`Dimension size must be evenly divisible by ${e*e} but is ${a} for depthToSpace with input shape ${s.shape}`);const i={x:s},c={blockSize:e,dataFormat:t};return D.runKernel(Jc,i,c)}const VT=F({depthToSpace_:zT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WT(n,e,t,s,o="NHWC",r=[1,1],a){const i=S(n,"x","depthwiseConv2d","float32"),c=S(e,"filter","depthwiseConv2d","float32");let u=i,l=!1;i.rank===3&&(l=!0,u=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(u.rank===4,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`),$(c.rank===4,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${c.rank}.`);const d=o==="NHWC"?u.shape[3]:u.shape[1];$(d===c.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${d}) must match the inChannels dimension in filter ${c.shape[2]}.`),$n("depthwiseConv2d",s,a);const h={x:u,filter:c},p={strides:t,pad:s,dataFormat:o,dilations:r,dimRoundingMode:a},f=D.runKernel(Ka,h,p);return l?M(f,[f.shape[1],f.shape[2],f.shape[3]]):f}const am=F({depthwiseConv2d_:WT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UT(n,e,t,s,o=[1,1],r="NHWC"){const a=S(n,"x","dilation2d"),i=S(e,"filter","dilation2d");$(a.rank===3||a.rank===4,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${a.rank}.`),$(i.rank===3,()=>`Error in dilation2d: filter must be rank 3, but got rank ${i.rank}.`),$(r==="NHWC",()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${r}`);let c=a,u=!1;a.rank===3&&(c=M(a,[1,a.shape[0],a.shape[1],a.shape[2]]),u=!0);const l={x:c,filter:i},d={strides:t,pad:s,dilations:o},h=D.runKernel(Rd,l,d);return u?M(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const GT=F({dilation2d_:UT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HT(n,e){let t=S(n,"a","equal","string_or_numeric"),s=S(e,"b","equal","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(el,o)}const Ks=F({equal_:HT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jT(n,e,t){const s=S(e,"a","where"),o=S(t,"b","where"),r=S(n,"condition","where","bool"),a=Ee(Ee(r.shape,s.shape),o.shape),i=mc(r,a),c=mc(s,a),u=mc(o,a),l={condition:i,t:c,e:u};return D.runKernel(vl,l)}const On=F({where_:jT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qT(n){const t={x:S(n,"x","zerosLike")};return D.runKernel(Ml,t)}const Ge=F({zerosLike_:qT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XT(n,e){let t=S(n,"a","div"),s=S(e,"b","div");[t,s]=Tt(t,s);const o=ke(t,s),r=Ge(o),a=Ks(s,r);return On(a,r,o)}const KT=F({divNoNan_:XT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YT(n,e){const t=S(n,"t1","dot"),s=S(e,"t2","dot");$((t.rank===1||t.rank===2)&&(s.rank===1||s.rank===2),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${t.rank} and ${s.rank}.`);const o=t.rank===1?t.size:t.shape[1],r=s.rank===1?s.size:s.shape[0];if($(o===r,()=>`Error in dot: inner dimensions of inputs must match, but got ${o} and ${r}.`),t.rank===1&&s.rank===1){const a=M(t,[1,-1]),i=M(s,[-1,1]),c=Xe(a,i);return M(c,[])}else if(t.rank===1&&s.rank===2){const a=M(t,[1,-1]),i=M(s,[s.shape[0],s.shape[1]]),c=Xe(a,i);return M(c,[c.size])}else if(t.rank===2&&s.rank===1){const a=M(s,[-1,1]),i=Xe(t,a);return M(i,[i.size])}else{const a=M(s,[s.shape[0],s.shape[1]]);return Xe(t,a)}}const ZT=F({dot_:YT});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JT(n){const t={x:S(n,"x","elu","float32")};return D.runKernel(Za,t)}const sh=F({elu_:JT});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QT(n){let e=S(n,"x","erf");$(e.dtype==="int32"||e.dtype==="float32",()=>"Input dtype must be `int32` or `float32`."),e.dtype==="int32"&&(e=he(e,"float32"));const t={x:e};return D.runKernel(Qc,t)}const eE=F({erf_:QT});/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function im(n,e){for(let t=0;t<n.length;++t)if(n[n.length-t-1]!==e-1-t)return!1;return!0}function tw(n,e,t){const s=n.length+e.length,o=[];let r=0,a=0;for(let i=0;i<s;i++)t.indexOf(i)===-1?o.push(n[r++]):o.push(e[a++]);return o}function bt(n,e){const t=[],s=n.length;for(let r=0;r<s;r++)e.indexOf(r)===-1&&t.push(n[r]);const o=e.map(r=>n[r]);return[t,o]}function et(n,e){const t=e.map(s=>1);return tw(n,t,e)}function ht(n,e,t){$(im(e,t),()=>`${n} supports only inner-most axes for now. Got axes ${e} and rank-${t} input.`)}function pt(n,e){if(im(n,e))return null;const t=[];for(let s=0;s<e;++s)n.indexOf(s)===-1&&t.push(s);return n.forEach(s=>t.push(s)),t}function Qs(n){return n.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function rt(n,e){const t=[];for(let s=e-n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tE(n,e=null,t=!1){const o={x:S(n,"x","max")},r={reductionIndices:e,keepDims:t};return D.runKernel(ii,o,r)}const us=F({max_:tE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nE(n,e=null,t=!1){const o={x:S(n,"x","min")},r={axis:e,keepDims:t};return D.runKernel(di,o,r)}const wc=F({min_:nE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sE(n,e){let t=S(n,"base","pow"),s=S(e,"exp","pow");[t,s]=Tt(t,s);const o={a:t,b:s};return D.runKernel(bi,o)}const Nr=F({pow_:sE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Se(n,e){if((Xs(n)&&e!=="string"||Array.isArray(n))&&e!=="complex64")throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if(e==="string"&&Xs(n)&&!(n instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Kd(n,[],[],e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oE(n){const t={x:S(n,"x","sqrt","float32")};return D.runKernel(_i,t)}const gn=F({sqrt_:oE});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rE(n){const e=S(n,"x","square"),t={};return D.runKernel("Square",{x:e},t)}const nt=F({square_:rE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aE(n,e=null,t=!1){let s=S(n,"x","sum");s.dtype==="bool"&&(s=he(s,"int32"));const o={x:s},r={axis:e,keepDims:t};return D.runKernel(Ri,o,r)}const ye=F({sum_:aE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iE(n,e="euclidean",t=null,s=!1){n=S(n,"x","norm");const o=nw(n,e,t);let r=o.shape;if(s){const a=Re(t,n.shape);r=et(o.shape,a)}return M(o,r)}function nw(n,e,t=null){if(n.rank===0)return Mt(n);if(n.rank!==1&&t===null)return nw(M(n,[-1]),e,t);if(n.rank===1||typeof t=="number"||Array.isArray(t)&&t.length===1){if(e===1)return ye(Mt(n),t);if(e===1/0)return us(Mt(n),t);if(e===-1/0)return wc(Mt(n),t);if(e==="euclidean"||e===2)return gn(ye(Nr(Mt(n),Se(2,"int32")),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(t)&&t.length===2){if(e===1)return us(ye(Mt(n),t[0]),t[1]-1);if(e===1/0)return us(ye(Mt(n),t[1]),t[0]);if(e===-1/0)return wc(ye(Mt(n),t[1]),t[0]);if(e==="fro"||e==="euclidean")return gn(ye(nt(n),t));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${t}`)}const oh=F({norm_:iE});/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cE(n,e=null,t=!1){return oh(n,"euclidean",e,t)}const lE=F({euclideanNorm_:cE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uE(n){const t={x:S(n,"x","exp")};return D.runKernel(Ja,t)}const ds=F({exp_:uE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dE(n,e=0){const t=S(n,"x","expandDims","string_or_numeric");$(e<=t.rank,()=>"Axis must be <= rank of the tensor");const s={input:t},o={dim:e};return D.runKernel(tl,s,o)}const _n=F({expandDims_:dE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hE(n){const t={x:S(n,"x","expm1")};return D.runKernel(nl,t)}const pE=F({expm1_:hE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fE(n,e){const t=S(n,"x","tile","string_or_numeric");$(t.rank===e.length,()=>`Error in transpose: rank of input ${t.rank} must match length of reps ${e}.`);const s={x:t},o={reps:e};return D.runKernel(Br,s,o)}const $s=F({tile_:fE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mE(n,e,t,s="float32"){e==null&&(e=n);const o=Me([n,e],s),r=n<=e?n:e;for(let i=0;i<r;++i)o.set(1,i,i);const a=M(o.toTensor(),[n,e]);if(t==null)return a;if(t.length===1)return $s(_n(a,0),[t[0],1,1]);if(t.length===2)return $s(_n(_n(a,0),0),[t[0],t[1],1,1]);if(t.length===3)return $s(_n(_n(_n(a,0),0),0),[t[0],t[1],t[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${t.length}D.`)}const sw=F({eye_:mE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gE(n){const t={x:S(n,"x","floor","float32")};return D.runKernel(Qa,t)}const rh=F({floor_:gE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bE(n,e,t=0,s=0){const o=S(n,"x","gather"),r=S(e,"indices","gather","int32"),a={x:o,indices:r},i={axis:t,batchDims:s};return D.runKernel(ol,a,i)}const cm=F({gather_:bE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xE(n,e){let t=S(n,"a","greater","string_or_numeric"),s=S(e,"b","greater","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(rl,o)}const Jn=F({greater_:xE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yE(n,e){let t=S(n,"a","greaterEqual","string_or_numeric"),s=S(e,"b","greaterEqual","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(ni,o)}const Ur=F({greaterEqual_:yE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wE(n){const t={x:S(n,"x","isFinite")};return D.runKernel(al,t)}const IE=F({isFinite_:wE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kE(n){const t={x:S(n,"x","isInf")};return D.runKernel(il,t)}const vE=F({isInf_:kE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $E(n){const t={x:S(n,"x","isNaN")};return D.runKernel(oi,t)}const CE=F({isNaN_:$E});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SE(n,e=.2){const s={x:S(n,"x","leakyRelu")},o={alpha:e};return D.runKernel(ri,s,o)}const lm=F({leakyRelu_:SE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NE(n,e){let t=S(n,"a","less","string_or_numeric"),s=S(e,"b","less","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(cl,o)}const ow=F({less_:NE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TE(n,e){let t=S(n,"a","lessEqual","string_or_numeric"),s=S(e,"b","lessEqual","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(ll,o)}const zi=F({lessEqual_:TE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EE(n,e,t){if(t<=0)throw new Error("The number of values should be positive.");const s={start:n,stop:e,num:t};return D.runKernel(Lf,{},s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _E(n,e=5,t=1,s=1,o=.5){const r=S(n,"x","localResponseNormalization");$(r.rank===4||r.rank===3,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got
               rank ${r.rank}.`),$(Ia(e),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`);let a=r,i=!1;r.rank===3&&(i=!0,a=M(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const c={x:a},u={depthRadius:e,bias:t,alpha:s,beta:o},l=D.runKernel(Fd,c,u);return i?M(l,[l.shape[1],l.shape[2],l.shape[3]]):l}const RE=F({localResponseNormalization_:_E});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AE(n){const t={x:S(n,"x","log","float32")};return D.runKernel(ai,t)}const hs=F({log_:AE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DE(n){const t={x:S(n,"x","log1p")};return D.runKernel(ul,t)}const um=F({log1p_:DE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FE(n,e){$(gp(n),()=>"The f passed in variableGrads(f) must be a function"),$(e==null||Array.isArray(e)&&e.every(u=>u instanceof Qu),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const t=e!=null;if(!t){e=[];for(const u in D.registeredVariables)e.push(D.registeredVariables[u])}const s=t?e.filter(u=>!u.trainable):null,o=e.length;e=e.filter(u=>u.trainable),$(e.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${o} variables is trainable.`);const r=!0,{value:a,grads:i}=D.gradients(n,e,null,r);$(i.some(u=>u!=null),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),$(a.rank===0,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`);const c={};return e.forEach((u,l)=>{i[l]!=null&&(c[u.name]=i[l])}),s?.forEach(u=>c[u.name]=null),{value:a,grads:c}}function Tr(n){return D.customGrad(n)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OE(n){const t={x:S(n,"x","softplus")};return D.runKernel(Tl,t)}const Vl=F({softplus_:OE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ME(n){const e=S(n,"x","logSigmoid");return Tr(s=>({value:$t(Vl($t(s))),gradFunc:a=>R(a,Bi($t(s)))}))(e)}const LE=F({logSigmoid_:ME});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PE(n,e){let t=S(n,"a","sub"),s=S(e,"b","sub");[t,s]=Tt(t,s);const o={a:t,b:s};return D.runKernel(Fi,o)}const xe=F({sub_:PE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BE(n,e=-1){const t=S(n,"logits","logSoftmax");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and axis was ${e}`);return Tr((o,r)=>{const i=us(o,e,!0),c=xe(o,i),u=xe(he(c,"float32"),hs(ye(ds(c),e,!0)));return r([u]),{value:u,gradFunc:(d,h)=>{const[p]=h,f=!0,m=ds(p);return xe(d,R(ye(d,e,f),m))}}})(t)}const rw=F({logSoftmax_:BE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zE(n,e=null,t=!1){const s=S(n,"x","logSumExp"),o=Re(e,s.shape),r=us(s,o,!0),a=xe(s,r),i=ds(a),c=ye(i,o),u=hs(c),l=ee(M(r,u.shape),u);if(t){const d=et(l.shape,o);return M(l,d)}return l}const aw=F({logSumExp_:zE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VE(n,e){const t=S(n,"a","logicalAnd","bool"),s=S(e,"b","logicalAnd","bool");Ee(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(dl,o)}const mo=F({logicalAnd_:VE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WE(n){const t={x:S(n,"x","logicalNot","bool")};return D.runKernel(hl,t)}const dm=F({logicalNot_:WE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UE(n,e){const t=S(n,"a","logicalOr","bool"),s=S(e,"b","logicalOr","bool");Ee(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(pl,o)}const iw=F({logicalOr_:UE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GE(n,e){const t=S(n,"a","logicalXor","bool"),s=S(e,"b","logicalXor","bool");return Ee(t.shape,s.shape),mo(iw(n,e),dm(mo(n,e)))}const HE=F({logicalXor_:GE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jE(n,e,t,s,o){const r=S(n,"x","maxPool"),a=1;let i=r,c=!1;r.rank===3&&(c=!0,i=M(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(i.rank===4,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),$(cn(t,a),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${t} and dilations '${a}'`),$n("maxPool",s,o);const u={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:o},d=D.runKernel(li,u,l);return c?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const hm=F({maxPool_:jE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qE(n,e=[1,1,1],t,s,o,r="NDHWC"){const a=S(n,"x","maxPool3d");let i=a,c=!1;a.rank===4&&(c=!0,i=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),$(i.rank===5,()=>`Error in maxPool3d: x must be rank 5 but got rank ${i.rank}.`),$(r==="NDHWC",()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${r}`),$n("maxPool3d",s,o);const u={x:i},l={filterSize:e,strides:t,pad:s,dimRoundingMode:o,dataFormat:r},d=D.runKernel(Od,u,l);return c?M(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}const XE=F({maxPool3d_:qE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KE(n,e){let t=S(n,"a","maximum"),s=S(e,"b","maximum");[t,s]=Tt(t,s),t.dtype==="bool"&&(t=he(t,"int32"),s=he(s,"int32")),Ee(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(ci,o)}const yo=F({maximum_:KE});/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YE(n,e=null,t=!1){const o={x:S(n,"x","mean")},r={axis:e,keepDims:t};return D.runKernel(ui,o,r)}const St=F({mean_:YE});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ht(n,e="float32"){if(bo(n),e==="complex64"){const s=Ht(n,"float32"),o=Ht(n,"float32");return Sa(s,o)}const t=an(L(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ho(n,e="float32"){if(bo(n),e==="complex64"){const s=Ho(n,"float32"),o=Ht(n,"float32");return Sa(s,o)}const t=If(L(n),e);return D.makeTensor(t,n,e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZE(n,e){let t=S(n,"a","minimum"),s=S(e,"b","minimum");[t,s]=Tt(t,s),t.dtype==="bool"&&(t=he(t,"int32"),s=he(s,"int32")),Ee(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(hi,o)}const Wl=F({minimum_:ZE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JE(n,e,t){$(t==="reflect"||t==="symmetric",()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${t}.`);const s=S(n,"x","mirrorPad");if(s.rank===0)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");$(e.length===s.rank,()=>`Padding doesn't match input. Must be ${s.rank}. Got ${e.length}.`);const o=t==="reflect"?1:0;for(let i=0;i<s.rank;i++)$(e[i].length===2,()=>"Invalid number of paddings. Must be length of 2 each."),$(e[i][0]>=0&&e[i][0]<=s.shape[i]-o&&e[i][1]>=0&&e[i][1]<=s.shape[i]-o,()=>`Padding in dimension ${i} cannot be greater than or equal to ${s.shape[i]-o} or less than 0 for input of shape ${s.shape}`);const r={paddings:e,mode:t},a={x:s};return D.runKernel(pi,a,r)}const QE=F({mirrorPad_:JE});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e_(n,e){let t=S(n,"a","mod"),s=S(e,"b","mod");[t,s]=Tt(t,s);const o={a:t,b:s};return D.runKernel(fl,o)}const cw=F({mod_:e_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function t_(n,e=null,t=!1){n=S(n,"x","moments");const s=Re(e,n.shape),o=St(n,s,t);let r=o.shape;t||(r=et(o.shape,s));const a=nt(xe(he(n,"float32"),M(o,r))),i=St(a,s,t);return{mean:o,variance:i}}const pm=F({moments_:t_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n_(n,e){let t=S(n,"a","notEqual","string_or_numeric"),s=S(e,"b","notEqual","string_or_numeric");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const o={a:t,b:s};return D.runKernel(gl,o)}const Ic=F({notEqual_:n_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function s_(n){const t={x:S(n,"x","onesLike")};return D.runKernel(wl,t)}const ps=F({onesLike_:s_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o_(n,e,t=0){const s=S(n,"x","pad");if(s.rank===0)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const o={paddings:e,constantValue:t},r={x:s};return D.runKernel(gi,r,o)}const fm=F({pad_:o_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r_(n,e,t){const s=S(n,"x","spaceToBatchND");$(s.rank>=1+e.length,()=>`input rank ${s.rank} should be > than [blockShape] ${e.length}`),$(t.length===e.length,()=>`paddings.shape[0] ${t.length} must be equal to [blockShape] ${e.length}`),$(s.shape.reduce((a,i,c)=>c>0&&c<=e.length?a&&(i+t[c-1][0]+t[c-1][1])%e[c-1]===0:a,!0),()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${t.toString()} must be divisible by blockShapes ${e.toString()}`);const o={x:s},r={blockShape:e,paddings:t};return D.runKernel(El,o,r)}const mm=F({spaceToBatchND_:r_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a_(n,e,t,s,o,r,a){o==null&&(o=[1,1]),r==null&&(r=1),s===0&&(s="valid");const i=S(n,"x","maxPool");let c=i,u=!1;i.rank===3&&(u=!0,c=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),$(cn(r,o),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${r} and dilations '${o}'`);const l=Bn(c.shape,e,r,o,s),d=[l.dilationHeight,l.dilationWidth];let h;s==="same"?h=c_([l.filterHeight,l.filterWidth],d):h=[[0,0],[0,0]];const p=d[0]===1&&d[1]===1,[f,m]=i_([l.inHeight,l.inWidth],d,h),g=p?s:"valid",b=p?c:mm(c,d,f),y=(t==="avg"?()=>tm(b,e,r,g,a):()=>hm(b,e,r,g,a))(),w=p?y:sm(y,d,m);return u?M(w,[w.shape[1],w.shape[2],w.shape[3]]):w}function i_(n,e,t){const s=t.map(l=>l[0]),o=t.map(l=>l[1]),r=n.concat(s,o),a=e.map((l,d)=>(l-r[d]%l)%l),i=o.map((l,d)=>l+a[d]),c=e.map((l,d)=>[s[d],i[d]]),u=e.map((l,d)=>[0,a[d]]);return[c,u]}function c_(n,e){const s=n.map((a,i)=>a+(a-1)*(e[i]-1)).map(a=>a-1),o=s.map(a=>Math.floor(a/2)),r=s.map((a,i)=>a-o[i]);return s.map((a,i)=>[o[i],r[i]])}const l_=F({pool_:a_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u_(n,e){const t=S(n,"x","prelu"),s=S(e,"alpha","prelu"),o={x:t,alpha:s};return D.runKernel(xi,o)}const gm=F({prelu_:u_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d_(n,e=null,t=!1){let s=S(n,"x","prod");s.dtype==="bool"&&(s=he(s,"int32"));const o={x:s},r={axis:e,keepDims:t};return D.runKernel(yi,o,r)}const h_=F({prod_:d_});var lw={exports:{}};(function(n){(function(e,t,s){function o(c){var u=this,l=i();u.next=function(){var d=2091639*u.s0+u.c*23283064365386963e-26;return u.s0=u.s1,u.s1=u.s2,u.s2=d-(u.c=d|0)},u.c=1,u.s0=l(" "),u.s1=l(" "),u.s2=l(" "),u.s0-=l(c),u.s0<0&&(u.s0+=1),u.s1-=l(c),u.s1<0&&(u.s1+=1),u.s2-=l(c),u.s2<0&&(u.s2+=1),l=null}function r(c,u){return u.c=c.c,u.s0=c.s0,u.s1=c.s1,u.s2=c.s2,u}function a(c,u){var l=new o(c),d=u&&u.state,h=l.next;return h.int32=function(){return l.next()*4294967296|0},h.double=function(){return h()+(h()*2097152|0)*11102230246251565e-32},h.quick=h,d&&(typeof d=="object"&&r(d,l),h.state=function(){return r(l,{})}),h}function i(){var c=4022871197,u=function(l){l=String(l);for(var d=0;d<l.length;d++){c+=l.charCodeAt(d);var h=.02519603282416938*c;c=h>>>0,h-=c,h*=c,c=h>>>0,h-=c,c+=h*4294967296}return(c>>>0)*23283064365386963e-26};return u}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.alea=a})(fo,n,!1)})(lw);var uw={exports:{}};(function(n){(function(e,t,s){function o(i){var c=this,u="";c.x=0,c.y=0,c.z=0,c.w=0,c.next=function(){var d=c.x^c.x<<11;return c.x=c.y,c.y=c.z,c.z=c.w,c.w^=c.w>>>19^d^d>>>8},i===(i|0)?c.x=i:u+=i;for(var l=0;l<u.length+64;l++)c.x^=u.charCodeAt(l)|0,c.next()}function r(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c}function a(i,c){var u=new o(i),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,l&&(typeof l=="object"&&r(l,u),d.state=function(){return r(u,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xor128=a})(fo,n,!1)})(uw);var dw={exports:{}};(function(n){(function(e,t,s){function o(i){var c=this,u="";c.next=function(){var d=c.x^c.x>>>2;return c.x=c.y,c.y=c.z,c.z=c.w,c.w=c.v,(c.d=c.d+362437|0)+(c.v=c.v^c.v<<4^(d^d<<1))|0},c.x=0,c.y=0,c.z=0,c.w=0,c.v=0,i===(i|0)?c.x=i:u+=i;for(var l=0;l<u.length+64;l++)c.x^=u.charCodeAt(l)|0,l==u.length&&(c.d=c.x<<10^c.x>>>4),c.next()}function r(i,c){return c.x=i.x,c.y=i.y,c.z=i.z,c.w=i.w,c.v=i.v,c.d=i.d,c}function a(i,c){var u=new o(i),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,l&&(typeof l=="object"&&r(l,u),d.state=function(){return r(u,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xorwow=a})(fo,n,!1)})(dw);var hw={exports:{}};(function(n){(function(e,t,s){function o(i){var c=this;c.next=function(){var l=c.x,d=c.i,h,p;return h=l[d],h^=h>>>7,p=h^h<<24,h=l[d+1&7],p^=h^h>>>10,h=l[d+3&7],p^=h^h>>>3,h=l[d+4&7],p^=h^h<<7,h=l[d+7&7],h=h^h<<13,p^=h^h<<9,l[d]=p,c.i=d+1&7,p};function u(l,d){var h,p=[];if(d===(d|0))p[0]=d;else for(d=""+d,h=0;h<d.length;++h)p[h&7]=p[h&7]<<15^d.charCodeAt(h)+p[h+1&7]<<13;for(;p.length<8;)p.push(0);for(h=0;h<8&&p[h]===0;++h);for(h==8?p[7]=-1:p[h],l.x=p,l.i=0,h=256;h>0;--h)l.next()}u(c,i)}function r(i,c){return c.x=i.x.slice(),c.i=i.i,c}function a(i,c){i==null&&(i=+new Date);var u=new o(i),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,l&&(l.x&&r(l,u),d.state=function(){return r(u,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xorshift7=a})(fo,n,!1)})(hw);var pw={exports:{}};(function(n){(function(e,t,s){function o(i){var c=this;c.next=function(){var l=c.w,d=c.X,h=c.i,p,f;return c.w=l=l+1640531527|0,f=d[h+34&127],p=d[h=h+1&127],f^=f<<13,p^=p<<17,f^=f>>>15,p^=p>>>12,f=d[h]=f^p,c.i=h,f+(l^l>>>16)|0};function u(l,d){var h,p,f,m,g,b=[],x=128;for(d===(d|0)?(p=d,d=null):(d=d+"\0",p=0,x=Math.max(x,d.length)),f=0,m=-32;m<x;++m)d&&(p^=d.charCodeAt((m+32)%d.length)),m===0&&(g=p),p^=p<<10,p^=p>>>15,p^=p<<4,p^=p>>>13,m>=0&&(g=g+1640531527|0,h=b[m&127]^=p+g,f=h==0?f+1:0);for(f>=128&&(b[(d&&d.length||0)&127]=-1),f=127,m=4*128;m>0;--m)p=b[f+34&127],h=b[f=f+1&127],p^=p<<13,h^=h<<17,p^=p>>>15,h^=h>>>12,b[f]=p^h;l.w=g,l.X=b,l.i=f}u(c,i)}function r(i,c){return c.i=i.i,c.w=i.w,c.X=i.X.slice(),c}function a(i,c){i==null&&(i=+new Date);var u=new o(i),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,l&&(l.X&&r(l,u),d.state=function(){return r(u,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.xor4096=a})(fo,n,!1)})(pw);var fw={exports:{}};(function(n){(function(e,t,s){function o(i){var c=this,u="";c.next=function(){var d=c.b,h=c.c,p=c.d,f=c.a;return d=d<<25^d>>>7^h,h=h-p|0,p=p<<24^p>>>8^f,f=f-d|0,c.b=d=d<<20^d>>>12^h,c.c=h=h-p|0,c.d=p<<16^h>>>16^f,c.a=f-d|0},c.a=0,c.b=0,c.c=-1640531527,c.d=1367130551,i===Math.floor(i)?(c.a=i/4294967296|0,c.b=i|0):u+=i;for(var l=0;l<u.length+20;l++)c.b^=u.charCodeAt(l)|0,c.next()}function r(i,c){return c.a=i.a,c.b=i.b,c.c=i.c,c.d=i.d,c}function a(i,c){var u=new o(i),l=c&&c.state,d=function(){return(u.next()>>>0)/4294967296};return d.double=function(){do var h=u.next()>>>11,p=(u.next()>>>0)/4294967296,f=(h+p)/(1<<21);while(f===0);return f},d.int32=u.next,d.quick=d,l&&(typeof l=="object"&&r(l,u),d.state=function(){return r(u,{})}),d}t&&t.exports?t.exports=a:s&&s.amd?s(function(){return a}):this.tychei=a})(fo,n,!1)})(fw);var mw={exports:{}};const p_={},f_=Object.freeze(Object.defineProperty({__proto__:null,default:p_},Symbol.toStringTag,{value:"Module"})),Os=t2(f_);(function(n){(function(e,t,s){var o=256,r=6,a=52,i="random",c=s.pow(o,r),u=s.pow(2,a),l=u*2,d=o-1,h;function p(w,I,k){var v=[];I=I==!0?{entropy:!0}:I||{};var C=b(g(I.entropy?[w,y(t)]:w??x(),3),v),N=new f(v),T=function(){for(var _=N.g(r),O=c,P=0;_<u;)_=(_+P)*o,O*=o,P=N.g(1);for(;_>=l;)_/=2,O/=2,P>>>=1;return(_+P)/O};return T.int32=function(){return N.g(4)|0},T.quick=function(){return N.g(4)/4294967296},T.double=T,b(y(N.S),t),(I.pass||k||function(_,O,P,V){return V&&(V.S&&m(V,N),_.state=function(){return m(N,{})}),P?(s[i]=_,O):_})(T,C,"global"in I?I.global:this==s,I.state)}function f(w){var I,k=w.length,v=this,C=0,N=v.i=v.j=0,T=v.S=[];for(k||(w=[k++]);C<o;)T[C]=C++;for(C=0;C<o;C++)T[C]=T[N=d&N+w[C%k]+(I=T[C])],T[N]=I;(v.g=function(_){for(var O,P=0,V=v.i,B=v.j,W=v.S;_--;)O=W[V=d&V+1],P=P*o+W[d&(W[V]=W[B=d&B+O])+(W[B]=O)];return v.i=V,v.j=B,P})(o)}function m(w,I){return I.i=w.i,I.j=w.j,I.S=w.S.slice(),I}function g(w,I){var k=[],v=typeof w,C;if(I&&v=="object")for(C in w)try{k.push(g(w[C],I-1))}catch{}return k.length?k:v=="string"?w:w+"\0"}function b(w,I){for(var k=w+"",v,C=0;C<k.length;)I[d&C]=d&(v^=I[d&C]*19)+k.charCodeAt(C++);return y(I)}function x(){try{var w;return h&&(w=h.randomBytes)?w=w(o):(w=new Uint8Array(o),(e.crypto||e.msCrypto).getRandomValues(w)),y(w)}catch{var I=e.navigator,k=I&&I.plugins;return[+new Date,e,k,e.screen,y(t)]}}function y(w){return String.fromCharCode.apply(0,w)}if(b(s.random(),t),n.exports){n.exports=p;try{h=Os}catch{}}else s["seed"+i]=p})(typeof self<"u"?self:fo,[],Math)})(mw);var m_=lw.exports,g_=uw.exports,b_=dw.exports,x_=hw.exports,y_=pw.exports,w_=fw.exports,Gr=mw.exports;Gr.alea=m_;Gr.xor128=g_;Gr.xorwow=b_;Gr.xorshift7=x_;Gr.xor4096=y_;Gr.tychei=w_;var bm=Gr;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class gw{constructor(e,t,s,o,r){this.mean=e,this.stdDev=t,this.dtype=s,this.nextVal=NaN,this.truncated=o,this.truncated&&(this.upper=this.mean+this.stdDev*2,this.lower=this.mean-this.stdDev*2);const a=r||Math.random();this.random=bm.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const o=this.nextVal;return this.nextVal=NaN,o}let e,t,s=!1;for(;!s;){let o,r,a;do o=2*this.random()-1,r=2*this.random()-1,a=o*o+r*r;while(a>=1||a===0);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*o*i,t=this.mean+this.stdDev*r*i,(!this.truncated||this.isValidTruncated(e))&&(s=!0)}return(!this.truncated||this.isValidTruncated(t))&&(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return this.dtype==null||this.dtype==="float32"?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class I_{constructor(e=0,t=1,s,o){if(this.canReturnFloat=()=>this.dtype==null||this.dtype==="float32",this.min=e,this.range=t-e,this.dtype=s,o==null&&(o=Math.random()),typeof o=="number"&&(o=o.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=bm.alea(o)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k_(n,e=0,t=1,s,o){if(bo(n),s!=null&&s==="bool")throw new Error(`Unsupported data type ${s}`);const r=new gw(e,t,s,!1,o),a=Me(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=r.nextValue();return a.toTensor()}const v_=F({randomNormal_:k_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $_(n,e=0,t=1,s="float32",o){bo(n);const r=Me(n,s),a=new I_(e,t,null,o);for(let i=0;i<r.values.length;i++)r.values[i]=a.nextValue();return r.toTensor()}const ah=F({randomUniform_:$_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kc(n,e,t=1,s="float32"){if(t===0)throw new Error("Cannot have a step of zero");const o={start:n,stop:e,step:t,dtype:s};return D.runKernel(Md,{},o)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function C_(n){const t={x:S(n,"x","reciprocal")};return D.runKernel(wi,t)}const S_=F({reciprocal_:C_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N_(n){const t={x:S(n,"x","relu")};return D.runKernel(Ii,t)}const wo=F({relu_:N_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T_(n){const t={x:S(n,"x","relu6")};return D.runKernel($i,t)}const bw=F({relu6_:T_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function E_(n,e){const s={x:S(n,"x","reverse")},o={dims:e};return D.runKernel(Ci,s,o)}const Er=F({reverse_:E_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function __(n){const t={x:S(n,"x","round")};return D.runKernel(Si,t)}const xw=F({round_:__});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function R_(n){const t={x:S(n,"x","rsqrt","float32")};return D.runKernel(Ni,t)}const yw=F({rsqrt_:R_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A_(n){const t={x:S(n,"x","selu")};return D.runKernel($l,t)}const ww=F({selu_:A_});function D_(n,e,t,s,o,r=[1,1],a="NHWC"){const i=S(n,"x","separableConv2d"),c=S(e,"depthwiseFilter","separableConv2d"),u=S(t,"pointwiseFilter","separableConv2d");let l=i,d=!1;if(i.rank===3&&(d=!0,l=M(i,[1,i.shape[0],i.shape[1],i.shape[2]])),a==="NCHW")throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");$(l.rank===4,()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`),$(c.rank===4,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${c.rank}.`),$(u.rank===4,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${c.rank}.`),$(u.shape[0]===1,()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`),$(u.shape[1]===1,()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`);const h=c.shape[2],p=c.shape[3];$(u.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${u.shape[2]}.`);const f=am(l,c,s,o,a,r),g=Sr(f,u,1,"valid",a);return d?M(g,[g.shape[1],g.shape[2],g.shape[3]]):g}const Iw=F({separableConv2d_:D_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F_(n){const t={x:S(n,"x","sign")};return D.runKernel(Nl,t)}const O_=F({sign_:F_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M_(n){const t={x:S(n,"x","sin","float32")};return D.runKernel(Ti,t)}const kw=F({sin_:M_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L_(n){const t={x:S(n,"x","sinh")};return D.runKernel(Sl,t)}const vw=F({sinh_:L_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function P_(n,e,t){const s=S(n,"x","slice1d");return $(s.rank===1,()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`),Qe(s,[e],[t])}const xm=F({slice1d_:P_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B_(n,e,t){const s=S(n,"x","slice2d");return $(s.rank===2,()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`),Qe(s,e,t)}const $w=F({slice2d_:B_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function z_(n,e,t){const s=S(n,"x","slice3d");return $(s.rank===3,()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`),Qe(s,e,t)}const ym=F({slice3d_:z_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function V_(n,e,t){const s=S(n,"x","slice4d");return $(s.rank===4,()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`),Qe(s,e,t)}const nd=F({slice4d_:V_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function W_(n,e=-1){const t=S(n,"logits","softmax","float32");if(e===-1&&(e=t.rank-1),e!==t.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${t.rank} and dim was ${e}`);const s={logits:t},o={dim:e};return D.runKernel(Ai,s,o)}const wm=F({softmax_:W_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U_(n){$(n.dtype==="complex64",()=>`The dtype for tf.spectral.fft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(Ff,e)}const Cw=F({fft_:U_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function G_(n){$(n.dtype==="complex64",()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${n.dtype}.`);const e={input:n};return D.runKernel(Of,e)}const Mp=F({ifft_:G_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H_(n){const e=n.shape[n.shape.length-1],t=n.size/e;let s;if(e<=2){const o=M(n,[t,e]);s=Mp(o)}else{const o=[t,2*(e-1)],r=M(ed(n),[t,e]),a=M(Jf(n),[t,e]),i=Er(Qe(r,[0,1],[t,e-2]),1),c=R(Er(Qe(a,[0,1],[t,e-2]),1),Se(-1)),u=on([r,i],1),l=on([a,c],1),d=M(Sa(u,l),[o[0],o[1]]);s=Mp(d)}if(s=ed(s),n.rank===3&&n.shape[0]!==0){const o=s,r=n.shape[0];s=M(s,[r,s.shape[0]/r,s.shape[1]]),o.dispose()}return s}const j_=F({irfft_:H_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function q_(n,e,t=0){const o={x:S(n,"x","split")},r={numOrSizeSplits:e,axis:t};return D.runKernel(_l,o,r)}const qn=F({split_:q_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X_(n,e){$(n.dtype==="float32",()=>`The dtype for rfft() must be real value but got ${n.dtype}`);let t=n.shape[n.shape.length-1];const s=n.size/t;let o;if(e!=null&&e<t){const f=n.shape.map(g=>0),m=n.shape.map(g=>g);m[n.shape.length-1]=e,o=Qe(n,f,m),t=e}else if(e!=null&&e>t){const f=n.shape.map(m=>m);f[n.shape.length-1]=e-t,o=on([n,Ht(f)],n.shape.length-1),t=e}else o=n;const r=Ge(o),a=M(Sa(o,r),[s,t]),i=Cw(a),c=Math.floor(t/2)+1,u=ed(i),l=Jf(i),d=qn(u,[c,t-c],u.shape.length-1),h=qn(l,[c,t-c],l.shape.length-1),p=o.shape.slice();return p[o.shape.length-1]=c,M(Sa(d[0],h[0]),p)}const Sw=F({rfft_:X_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function K_(n,e){let t=S(n,"a","squaredDifference"),s=S(e,"b","squaredDifference");[t,s]=Tt(t,s),Ee(t.shape,s.shape);const o={a:t,b:s},r={};return D.runKernel(Di,o,r)}const Im=F({squaredDifference_:K_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Y_(n,e){const t=S(n,"x","squeeze","string_or_numeric");return M(t,Wo(t.shape,e).newShape)}const Ul=F({squeeze_:Y_});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z_(n,e=0){const t=T0(n,"tensors","stack","string_or_numeric");$(t.length>=1,()=>"Pass at least one tensor to tf.stack"),t.length>0&&$(e<=t[0].rank,()=>"Axis must be <= rank of the tensor");const s=t,o={axis:e};return D.runKernel(Il,s,o)}const Do=F({stack_:Z_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function J_(n,e=0){const s={x:S(n,"x","step")},o={alpha:e};return D.runKernel(zr,s,o)}const Gl=F({step_:J_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q_(n,e,t,s,o=0,r=0,a=0,i=0,c=0){const l={x:S(n,"x","stridedSlice","string_or_numeric")},d={begin:e,end:t,strides:s,beginMask:o,endMask:r,ellipsisMask:a,newAxisMask:i,shrinkAxisMask:c};return D.runKernel(Al,l,d)}const eR=F({stridedSlice_:Q_});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tR(n){const t={x:S(n,"x","tan","float32")};return D.runKernel(Oi,t)}const nR=F({tan_:tR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dn(n,e){Zy(n);const t=Xd(n,e);if(t.length!==1)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Kd(n,null,t,e)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zu(n,e,t){if(Zy(n),e!=null&&e.length!==2)throw new Error("tensor2d() requires shape to have two numbers");const s=Xd(n,t);if(s.length!==2&&s.length!==1)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(s.length===1&&e==null)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Kd(n,e,s,t)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sR(n,e=1,t=!0){const s=S(n,"x","topk");if(s.rank===0)throw new Error("topk() expects the input to be of rank 1 or higher");const o=s.shape[s.shape.length-1];if(e<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${e}`);if(e>o)throw new Error(`'k' passed to topk() must be <= the last dimension (${o}) but got ${e}`);const r={x:s},a={k:e,sorted:t},[i,c]=D.runKernel(Dl,r,a);return{values:i,indices:c}}const oR=F({topk_:sR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rR(n,e=0,t=1,s,o){if(bo(n),s!=null&&s==="bool")throw new Error("Unsupported data type $ { dtype }");const r=new gw(e,t,s,!0,o),a=Me(n,s);for(let i=0;i<a.values.length;i++)a.values[i]=r.nextValue();return a.toTensor()}const Nw=F({truncatedNormal_:rR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aR(n,e=0){const t=S(n,"x","unique","string_or_numeric");$(t.rank>0,()=>"The input tensor must be at least 1D");const s={x:t},o={axis:e},[r,a]=D.runKernel(Gf,s,o);return{values:r,indices:a}}const iR=F({unique_:aR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cR(n,e,t){const s=S(n,"x","unsortedSegmentSum"),o=S(e,"segmentIds","unsortedSegmentSum","int32");$(Ia(t),()=>"numSegments must be of dtype int");const r={x:s,segmentIds:o},a={numSegments:t};return D.runKernel(Hd,r,a)}const Tw=F({unsortedSegmentSum_:cR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lR(n,e=0){const t=S(n,"x","unstack","string_or_numeric");$(e>=-t.shape.length&&e<t.shape.length,()=>`Axis = ${e} is not in [-${t.shape.length}, ${t.shape.length})`);const s={value:t},o={axis:e};return D.runKernel(Ol,s,o)}const _r=F({unstack_:lR});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uR(n,e=!0,t,s){return D.makeVariable(n,e,t,s)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ew(n,e){const t=[];for(let r=0;r<e.length;r++)e[r]&&t.push(r);const s=Me(n,"int32"),o=Me([t.length,n.length],"int32");for(let r=0;r<t.length;r++){const a=s.indexToLoc(t[r]),i=r*n.length;o.values.set(a,i)}return o.toTensor()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dR(n,e){if(e==null)return n.shape.slice();if(Ke(n.shape,e))return e;if(n.shape.length===e.length){const t=[];for(let s=0;s<n.shape.length;s++)e[s]==null&&n.shape[s]!=null?t.push(n.shape[s]):t.push(e[s]);return t}return e}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hR(n,e,t,s){const o=S(n,"x","dropout");if($(o.dtype==="float32",()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${o.dtype} tensor instead.`),$(e>=0&&e<1,()=>`rate must be a float in the range [0, 1), but got ${e}.`),e===0)return n instanceof Rt?o.clone():o;const r=dR(o,t),a=1-e,i=ke(rh(ee(ah(r,0,1,"float32",s),a)),a);return R(o,i)}const pR=F({dropout_:hR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fR(n){return Math.floor(Math.pow(2,Math.ceil(Math.log(n)/Math.log(2))))}function _w(n,e,t){const s=1-n%2,o=new Float32Array(n);for(let r=0;r<n;++r){const a=2*Math.PI*r/(n+s-1);o[r]=e-t*Math.cos(a)}return Dn(o,"float32")}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mR(n,e,t,s,o,r="NHWC",a){let i=n;n.rank===3&&(i=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=M(e,[1,e.shape[0],e.shape[1],e.shape[2]])),$(i.rank===4,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${i.shape}.`),$(c.rank===4,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${c.shape}.`),$(t.length===4,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${t}.`);const u=r==="NHWC"?i.shape[3]:i.shape[1],l=r==="NHWC"?c.shape[3]:c.shape[1];$(u===t[2],()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${t[2]}.`),$(l===t[3],()=>`Error in conv2dDerFilter: depth of dy (${l}) must match output depth for filter (${t[3]}).`),$n("conv2dDerFilter",o,a);const d={x:i,dy:c},h={strides:s,pad:o,dataFormat:r,dimRoundingMode:a,filterShape:t};return D.runKernel(Nf,d,h)}const km=F({conv2DBackpropFilter_:mR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vm(n,e,t){if(t==null||t==="linear")return n;if(t==="relu")return R(n,Gl(e));throw new Error(`Cannot compute gradient for fused activation ${t}.`)}function $m(n,e){let t=e;const s=Wt(n.shape,e.shape);return s.length>0&&(t=ye(t,s)),M(t,n.shape)}function Cm(n,e,t,s){if(e==="linear")return n;if(e==="relu")return wo(n);if(e==="elu")return sh(n);if(e==="relu6")return bw(n);if(e==="prelu")return gm(n,t);if(e==="leakyrelu")return lm(n,s);if(e==="sigmoid")return Bi(n);throw new Error(`Unknown fused activation ${e}.`)}const Sm=(n,e)=>!(n>0)||e==="linear";/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gR({x:n,filter:e,strides:t,pad:s,dataFormat:o="NHWC",dilations:r=[1,1],dimRoundingMode:a,bias:i,activation:c="linear",preluActivationWeights:u,leakyreluAlpha:l}){if(c=c||"linear",Sm(D.state.gradientDepth,c)===!1){$(o==="NHWC",()=>`Error in fused conv2d: got dataFormat of ${o} but only NHWC is currently supported for the case of gradient depth is 0 and the activation is not linear.`);let k=Sr(n,e,t,s,o,r,a);return i!=null&&(k=ee(k,i)),Cm(k,c,u,l)}const d=S(n,"x","conv2d","float32"),h=S(e,"filter","conv2d","float32");let p=d,f=!1;d.rank===3&&(f=!0,p=M(d,[1,d.shape[0],d.shape[1],d.shape[2]])),$(p.rank===4,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),$(h.rank===4,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),$n("fused conv2d",s,a);const m=o==="NHWC"?p.shape[3]:p.shape[1];$(h.shape[2]===m,()=>`Error in conv2d: depth of input (${m}) must match input depth for filter ${h.shape[2]}.`),$(cn(t,r),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${t} and dilations '${r}'`);const g=Nt(p.shape,h.shape,t,r,s,a);let b;i!=null&&(b=S(i,"bias","fused conv2d"),[b]=Tt(b,d),o==="NHWC"?Ee(g.outShape,b.shape):($(b.shape.length<=1,()=>`Error in fused conv2d: only supports scalar or 1-D Tensor bias for NCHW format but got the bias of rank-${b.shape.length}.`),$(b.shape.length===0||b.shape[0]===g.outChannels||b.shape[0]===1,()=>`Error in fused conv2d: bias shape (${b.shape}) is not compatible with the number of output channels (${g.outChannels})`)));let x;if(u!=null){const k=u.shape;if($(k.length<=1||k.length===3,()=>`Error in fused conv2d: only supports scalar, 1-D Tensor or 3-D Tensor PReLU activation weights but got a tensor of rank-${k.length}.`),k.length===1)$(k[0]===1||k[0]===g.outChannels,()=>`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the number of output channels (${g.outChannels}).`);else if(k.length===3)try{Ee(k,g.outShape)}catch{const C=`Error in fused conv2d: PReLU activation weights (${k}) is not compatible with the output shape of the conv2d (${g.outShape}).`;throw Error(C)}x=S(u,"prelu weights","fused conv2d")}const y=(k,v)=>{$(o==="NHWC",()=>`Error in gradient of fused conv2D: got dataFormat of ${o} but only NHWC is currently supported.`);const[C,N,T,_]=v,O=vm(k,T,c);$(Cr(r),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const P=om(N.shape,O,C,t,s),V=km(N,O,C.shape,t,s),B=[P,V];if(_!=null){const W=$m(_,O);B.push(W)}return B},w={x:p,filter:h,bias:b,preluActivationWeights:x},I={strides:t,pad:s,dataFormat:o,dilations:r,dimRoundingMode:a,activation:c,leakyreluAlpha:l};return i==null?Tr((v,C,N)=>{let T=D.runKernel(va,w,I);return N([C,v,T]),f&&(T=M(T,[T.shape[1],T.shape[2],T.shape[3]])),{value:T,gradFunc:y}})(p,h):Tr((v,C,N,T)=>{let _=D.runKernel(va,w,I);return T([C,v,_,N]),f&&(_=M(_,[_.shape[1],_.shape[2],_.shape[3]])),{value:_,gradFunc:y}})(p,h,b)}const bR=F({fusedConv2d_:gR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xR(n,e,t,s,o,r=[1,1],a){let i=n;n.rank===3&&(i=M(n,[1,n.shape[0],n.shape[1],n.shape[2]]));let c=e;c.rank===3&&(c=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={x:i,dy:c},l={strides:s,pad:o,dimRoundingMode:a,dilations:r,filterShape:t};return D.runKernel(Rf,u,l)}const yR=F({depthwiseConv2dNativeBackpropFilter_:xR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wR(n,e,t,s,o,r=[1,1],a){let i=e,c=!1;e.rank===3&&(c=!0,i=M(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const u={dy:i,filter:t},l={strides:s,pad:o,dimRoundingMode:a,dilations:r,inputShape:n},d=D.runKernel(Af,u,l);return c?M(d,[d.shape[1],d.shape[2],d.shape[3]]):d}const IR=F({depthwiseConv2dNativeBackpropInput_:wR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kR({a:n,b:e,transposeA:t=!1,transposeB:s=!1,bias:o,activation:r="linear",preluActivationWeights:a,leakyreluAlpha:i=.2}){if(Sm(D.state.gradientDepth,r)===!1){let _=Xe(n,e,t,s);return o!=null&&(_=ee(_,o)),Cm(_,r,a,i)}let c=S(n,"a","fused matMul"),u=S(e,"b","fused matMul");[c,u]=Tt(c,u);const l=t?c.shape[c.rank-2]:c.shape[c.rank-1],d=s?u.shape[u.rank-1]:u.shape[u.rank-2],h=t?c.shape[c.rank-1]:c.shape[c.rank-2],p=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=c.shape.slice(0,-2),m=u.shape.slice(0,-2),g=L(f),b=L(m);$(l===d,()=>`Error in fused matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${c.shape} and ${u.shape} and transposeA=${t} and transposeB=${s} must match.`);const y=Ee(c.shape.slice(0,-2),u.shape.slice(0,-2)).concat([h,p]),w=t?M(c,[g,l,h]):M(c,[g,h,l]),I=s?M(u,[b,p,d]):M(u,[b,d,p]);let k;o!=null&&(k=S(o,"bias","fused matMul"),[k]=Tt(k,c),Ee(y,k.shape));let v;a!=null&&(v=S(a,"prelu weights","fused matMul"));const C=(_,O)=>{const[P,V,B,W]=O,q=vm(M(_,B.shape),B,r);let z,X;if(!t&&!s?(z=Xe(q,V,!1,!0),X=Xe(P,q,!0,!1)):!t&&s?(z=Xe(q,V,!1,!1),X=Xe(q,P,!0,!1)):t&&!s?(z=Xe(V,q,!1,!0),X=Xe(P,q,!1,!1)):(z=Xe(V,q,!0,!0),X=Xe(q,P,!0,!0)),o!=null){const Y=$m(W,q);return[z,X,Y]}else return[z,X]},N={a:w,b:I,bias:k,preluActivationWeights:v},T={transposeA:t,transposeB:s,activation:r,leakyreluAlpha:i};return o==null?Tr((O,P,V)=>{const B=D.runKernel(ka,N,T);return V([O,P,B]),{value:M(B,y),gradFunc:C}})(w,I):Tr((O,P,V,B)=>{const W=D.runKernel(ka,N,T);return B([O,P,W,V]),{value:M(W,y),gradFunc:C}})(w,I,k)}const ex=F({fusedMatMul_:kR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vR(n){return _w(n,.54,.46)}const oee=F({hammingWindow_:vR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $R(n){return _w(n,.5,.5)}const CR=F({hannWindow_:$R});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SR(n,e,t,s=!1,o=0){let r=0;const a=[];for(;r+e<=n.size;)a.push(Qe(n,r,e)),r+=t;if(s)for(;r<n.size;){const i=r+e-n.size,c=on([Qe(n,r,e-i),zl([i],o)]);a.push(c),r+=t}return a.length===0?zu([],[0,e]):M(on(a),[a.length,e])}const NR=F({frame_:SR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TR(n,e,t,s,o=CR){s==null&&(s=fR(e));const r=NR(n,e,t),a=R(r,o(e));return Sw(a,s)}const ree=F({stft_:TR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ER(n,e,t,s,o="bilinear",r=0){const a=S(n,"image","cropAndResize"),i=S(e,"boxes","cropAndResize","float32"),c=S(t,"boxInd","cropAndResize","int32"),u=i.shape[0];$(a.rank===4,()=>`Error in cropAndResize: image must be rank 4,but got rank ${a.rank}.`),$(i.rank===2&&i.shape[1]===4,()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${i.shape}.`),$(c.rank===1&&c.shape[0]===u,()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${i.shape}.`),$(s.length===2,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`),$(s[0]>=1&&s[1]>=1,()=>`cropSize must be atleast [1,1], but was ${s}`),$(o==="bilinear"||o==="nearest",()=>`method must be bilinear or nearest, but was ${o}`);const l={image:a,boxes:i,boxInd:c},d={method:o,extrapolationValue:r,cropSize:s};return D.runKernel(Zc,l,d)}const _R=F({cropAndResize_:ER});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RR(n){const e=S(n,"image","flipLeftRight","float32");$(e.rank===4,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`);const t={image:e};return D.runKernel(sl,t,{})}const AR=F({flipLeftRight_:RR});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DR(n){const e=S(n,"image","grayscaleToRGB"),t=e.rank-1,s=e.shape[t];$(e.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${e.rank}.`),$(s===1,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`);const o=new Array(e.rank);return o.fill(1,0,t),o[t]=3,$s(e,o)}const FR=F({grayscaleToRGB_:DR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OR(n,e,t=0,s=.5){const o=S(n,"image","rotateWithOffset","float32");$(o.rank===4,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${o.rank}.`);const r={image:o},a={radians:e,fillValue:t,center:s};return D.runKernel(Ll,r,a)}const MR=F({rotateWithOffset_:OR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vi(n,e,t,s,o,r){s==null&&(s=.5),o==null&&(o=Number.NEGATIVE_INFINITY),r==null&&(r=0);const a=n.shape[0];return t=Math.min(t,a),$(0<=s&&s<=1,()=>`iouThreshold must be in [0, 1], but was '${s}'`),$(n.rank===2,()=>`boxes must be a 2D tensor, but was of rank '${n.rank}'`),$(n.shape[1]===4,()=>`boxes must have 4 columns, but 2nd dimension was ${n.shape[1]}`),$(e.rank===1,()=>"scores must be a 1D tensor"),$(e.shape[0]===a,()=>`scores has incompatible shape with boxes. Expected ${a}, but was ${e.shape[0]}`),$(0<=r&&r<=1,()=>`softNmsSigma must be in [0, 1], but was '${r}'`),{maxOutputSize:t,iouThreshold:s,scoreThreshold:o,softNmsSigma:r}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LR(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY){const r=S(n,"boxes","nonMaxSuppression","float32"),a=S(e,"scores","nonMaxSuppression","float32"),i=Vi(r,a,t,s,o);t=i.maxOutputSize,s=i.iouThreshold,o=i.scoreThreshold;const c={maxOutputSize:t,iouThreshold:s,scoreThreshold:o};return D.runKernel(bl,{boxes:r,scores:a},c)}const PR=F({nonMaxSuppression_:LR});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function BR(n,e,t){const s=zR(n,e,t),o=s<0?-(s+1):s;n.splice(o,0,e)}function zR(n,e,t){return WR(n,e,t||VR)}function VR(n,e){return n>e?1:n<e?-1:0}function WR(n,e,t){let s=0,o=n.length,r=0,a=!1;for(;s<o;){r=s+(o-s>>>1);const i=t(e,n[r]);i>0?s=r+1:(o=r,a=!i)}return a?s:-s-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nm(n,e,t,s,o){return _m(n,e,t,s,o,0)}function Tm(n,e,t,s,o,r){return _m(n,e,t,s,o,0,!1,r,!0)}function Em(n,e,t,s,o,r){return _m(n,e,t,s,o,r,!0)}function _m(n,e,t,s,o,r,a=!1,i=!1,c=!1){const u=[];for(let g=0;g<e.length;g++)e[g]>o&&u.push({score:e[g],boxIndex:g,suppressBeginIndex:0});u.sort(tx);const l=r>0?-.5/r:0,d=[],h=[];for(;d.length<t&&u.length>0;){const g=u.pop(),{score:b,boxIndex:x,suppressBeginIndex:y}=g;if(b<o)break;let w=!1;for(let I=d.length-1;I>=y;--I){const k=UR(n,x,d[I]);if(k>=s){w=!0;break}if(g.score=g.score*GR(s,l,k),g.score<=o)break}g.suppressBeginIndex=d.length,w||(g.score===b?(d.push(x),h.push(g.score)):g.score>o&&BR(u,g,tx))}const p=d.length,f=t-p;i&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return a&&(m.selectedScores=h),c&&(m.validOutputs=p),m}function UR(n,e,t){const s=n.subarray(e*4,e*4+4),o=n.subarray(t*4,t*4+4),r=Math.min(s[0],s[2]),a=Math.min(s[1],s[3]),i=Math.max(s[0],s[2]),c=Math.max(s[1],s[3]),u=Math.min(o[0],o[2]),l=Math.min(o[1],o[3]),d=Math.max(o[0],o[2]),h=Math.max(o[1],o[3]),p=(i-r)*(c-a),f=(d-u)*(h-l);if(p<=0||f<=0)return 0;const m=Math.max(r,u),g=Math.max(a,l),b=Math.min(i,d),x=Math.min(c,h),y=Math.max(b-m,0)*Math.max(x-g,0);return y/(p+f-y)}function GR(n,e,t){const s=Math.exp(e*t*t);return t<=n?s:0}function tx(n,e){return n.score-e.score||n.score===e.score&&e.boxIndex-n.boxIndex}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function HR(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY){const r=S(n,"boxes","nonMaxSuppressionAsync"),a=S(e,"scores","nonMaxSuppressionAsync"),i=Vi(r,a,t,s,o);t=i.maxOutputSize,s=i.iouThreshold,o=i.scoreThreshold;const c=await Promise.all([r.data(),a.data()]),u=c[0],l=c[1],{selectedIndices:d}=Nm(u,l,t,s,o);return r!==n&&r.dispose(),a!==e&&a.dispose(),Dn(d,"int32")}const jR=HR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qR(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=0){const a=S(n,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),c=Vi(a,i,t,s,o,r);t=c.maxOutputSize,s=c.iouThreshold,o=c.scoreThreshold,r=c.softNmsSigma;const u={boxes:a,scores:i},l={maxOutputSize:t,iouThreshold:s,scoreThreshold:o,softNmsSigma:r},d=D.runKernel(yl,u,l);return{selectedIndices:d[0],selectedScores:d[1]}}const XR=F({nonMaxSuppressionWithScore_:qR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function KR(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=0){const a=S(n,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),c=Vi(a,i,t,s,o,r);t=c.maxOutputSize,s=c.iouThreshold,o=c.scoreThreshold,r=c.softNmsSigma;const u=await Promise.all([a.data(),i.data()]),l=u[0],d=u[1],{selectedIndices:h,selectedScores:p}=Em(l,d,t,s,o,r);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Dn(h,"int32"),selectedScores:Dn(p)}}const YR=KR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZR(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=!1){const a=S(n,"boxes","nonMaxSuppression"),i=S(e,"scores","nonMaxSuppression"),c=Vi(a,i,t,s,o,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,h={boxes:a,scores:i},p={maxOutputSize:u,iouThreshold:l,scoreThreshold:d,padToMaxOutputSize:r},f=D.runKernel(xl,h,p);return{selectedIndices:f[0],validOutputs:f[1]}}const JR=F({nonMaxSuppressionPadded_:ZR});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */async function QR(n,e,t,s=.5,o=Number.NEGATIVE_INFINITY,r=!1){const a=S(n,"boxes","nonMaxSuppressionAsync"),i=S(e,"scores","nonMaxSuppressionAsync"),c=Vi(a,i,t,s,o,null),u=c.maxOutputSize,l=c.iouThreshold,d=c.scoreThreshold,[h,p]=await Promise.all([a.data(),i.data()]),{selectedIndices:f,validOutputs:m}=Tm(h,p,u,l,d,r);return a!==n&&a.dispose(),i!==e&&i.dispose(),{selectedIndices:Dn(f,"int32"),validOutputs:Se(m,"int32")}}const eA=QR;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tA(n,e,t=!1,s=!1){const o=S(n,"images","resizeBilinear");$(o.rank===3||o.rank===4,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${o.rank}.`),$(e.length===2,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`),$(s===!1||t===!1,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let r=o,a=!1;o.rank===3&&(a=!0,r=M(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const i={images:r},c={alignCorners:t,halfPixelCenters:s,size:e},u=D.runKernel(vi,i,c);return a?M(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Rw=F({resizeBilinear_:tA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nA(n,e,t=!1,s=!1){const o=S(n,"images","resizeNearestNeighbor");$(o.rank===3||o.rank===4,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${o.rank}.`),$(e.length===2,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`),$(o.dtype==="float32"||o.dtype==="int32",()=>"`images` must have `int32` or `float32` as dtype"),$(s===!1||t===!1,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let r=o,a=!1;o.rank===3&&(a=!0,r=M(o,[1,o.shape[0],o.shape[1],o.shape[2]]));const i={images:r},c={alignCorners:t,halfPixelCenters:s,size:e},u=D.runKernel(ki,i,c);return a?M(u,[u.shape[1],u.shape[2],u.shape[3]]):u}const Aw=F({resizeNearestNeighbor_:nA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sA(n,e="binary",t=!1,s=.5){const o=S(n,"image","threshold"),r=.2989,a=.587,i=.114,c=o.shape[0]*o.shape[1];let u=R(Dn([s]),255),l,d,h,p;if($(o.rank===3,()=>`Error in threshold: image must be rank 3,but got rank ${o.rank}.`),$(o.shape[2]===3||o.shape[2]===1,()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${o.shape[2]}.`),$(o.dtype==="int32"||o.dtype==="float32",()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${o.dtype}.`),$(e==="otsu"||e==="binary",()=>`Method must be binary or otsu, but was ${e}`),o.shape[2]===3){[l,d,h]=qn(o,[1,1,1],-1);const g=R(l,r),b=R(d,a),x=R(h,i);p=ee(ee(g,b),x)}else p=n;if(e==="otsu"){const g=pT(he(xw(p),"int32"),Xf([]),256);u=oA(g,c)}const f=t?zi(p,u):Jn(p,u);return he(R(f,255),"int32")}function oA(n,e){let t=Dn([-1]),s=Dn([0]),o=Dn([0]),r,a,i,c,u,l;for(let d=0;d<n.size-1;d++){r=Qe(n,0,d+1),a=Qe(n,d+1),u=ke(ye(r),e),l=ke(ye(a),e);const h=ye(R(r,kc(0,r.size)));i=ke(h,ye(r));const p=zl(a.shape,r.size),f=ee(kc(0,a.size),p),m=R(a,f);c=ke(ye(m),ye(a));const g=xe(i,c),b=xe(i,c),x=R(u,l);o=R(R(x,g),b);const y=Jn(o,s);s=On(y,o,s),t=On(y,Dn([d]),t)}return t}const rA=F({threshold_:sA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aA(n,e,t="nearest",s="constant",o=0,r){const a=S(n,"image","transform","float32"),i=S(e,"transforms","transform","float32");$(a.rank===4,()=>`Error in transform: image must be rank 4,but got rank ${a.rank}.`),$(i.rank===2&&(i.shape[0]===a.shape[0]||i.shape[0]===1)&&i.shape[1]===8,()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),$(r==null||r.length===2,()=>`Error in transform: outputShape must be [height, width] or null, but got ${r}.`);const c={image:a,transforms:i},u={interpolation:t,fillMode:s,fillValue:o,outputShape:r};return D.runKernel(Fl,c,u)}const iA=F({transform_:aA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cA(n,e,t){$(e%1===0,()=>`bandPart(): numLower must be an integer, got ${e}.`),$(t%1===0,()=>`bandPart(): numUpper must be an integer, got ${t}.`);const s=S(n,"a","bandPart");$(s.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`);const o=s.shape,[r,a]=s.shape.slice(-2);if(!(e<=r))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${r}).`);if(!(t<=a))throw new Error(`bandPart(): numUpper (${t}) must not be greater than the number of columns (${a}).`);e<0&&(e=r),t<0&&(t=a);const i=M(kc(0,r,1,"int32"),[-1,1]),c=kc(0,a,1,"int32"),u=xe(i,c),l=mo(zi(u,Se(+e,"int32")),Ur(u,Se(-t,"int32"))),d=Ht([r,a],s.dtype);return M(Do(_r(M(s,[-1,r,a])).map(h=>On(l,h,d))),o)}const lA=F({bandPart_:cA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uA(n){let e;if(Array.isArray(n)){e=!1,$(n!=null&&n.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const o=n[0].shape[0];for(let r=1;r<n.length;++r)$(n[r].shape[0]===o,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${n[r].shape[0]} vs. ${o})`)}else e=!0,n=qn(n,n.shape[0],0).map(o=>Ul(o,[0]));$(n.length<=n[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${n.length}) exceeds number of dimensions (${n[0].shape[0]}).`);const t=[],s=n;for(let o=0;o<n.length;++o)t.push(D.tidy(()=>{let r=s[o];if(o>0)for(let a=0;a<o;++a){const i=R(ye(R(t[a],r)),t[a]);r=xe(r,i)}return ke(r,oh(r,"euclidean"))}));return e?Do(t,0):t}const dA=F({gramSchmidt_:uA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hA(n,e=!1){if($(n.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${n.rank}`),n.rank===2)return nx(n,e);{const t=n.shape.slice(0,n.shape.length-2).reduce((c,u)=>c*u),s=_r(M(n,[t,n.shape[n.shape.length-2],n.shape[n.shape.length-1]]),0),o=[],r=[];s.forEach(c=>{const[u,l]=nx(c,e);o.push(u),r.push(l)});const a=M(Do(o,0),n.shape),i=M(Do(r,0),n.shape);return[a,i]}}function nx(n,e=!1){return D.tidy(()=>{$(n.shape.length===2,()=>`qr2d() requires a 2D Tensor, but got a ${n.shape.length}D Tensor.`);const t=n.shape[0],s=n.shape[1];let o=sw(t),r=br(n);const a=zu([[1]],[1,1]);let i=br(a);const c=t>=s?s:t;for(let u=0;u<c;++u){const l=r,d=i,h=o;[i,r,o]=D.tidy(()=>{const p=Qe(r,[u,u],[t-u,1]),f=oh(p),m=Qe(r,[u,u],[1,1]),g=On(Jn(m,0),zu([[-1]]),zu([[1]])),b=xe(m,R(g,f)),x=ke(p,b);x.shape[0]===1?i=br(a):i=on([a,Qe(x,[1,0],[x.shape[0]-1,x.shape[1]])],0);const y=$t(ke(Xe(g,b),f)),w=Qe(r,[u,0],[t-u,s]),I=R(y,i),k=We(i);if(u===0)r=xe(w,Xe(I,Xe(k,w)));else{const N=xe(w,Xe(I,Xe(k,w)));r=on([Qe(r,[0,0],[u,s]),N],0)}const v=We(I),C=Qe(o,[0,u],[t,o.shape[1]-u]);if(u===0)o=xe(C,Xe(Xe(C,i),v));else{const N=xe(C,Xe(Xe(C,i),v));o=on([Qe(o,[0,0],[t,u]),N],1)}return[i,r,o]}),Pe([l,d,h])}return!e&&t>s&&(o=Qe(o,[0,0],[t,s]),r=Qe(r,[0,0],[s,s])),[o,r]})}const pA=F({qr_:hA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var In;(function(n){n[n.NONE=0]="NONE",n[n.MEAN=1]="MEAN",n[n.SUM=2]="SUM",n[n.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"})(In||(In={}));function fA(n,e,t=In.SUM_BY_NONZERO_WEIGHTS){const s=S(n,"losses","computeWeightedLoss");let o=null;e!=null&&(o=S(e,"weights","computeWeightedLoss"));const r=o==null?s:R(s,o);if(t===In.NONE)return r;if(t===In.SUM)return ye(r);if(t===In.MEAN){if(o==null)return St(r);{const a=s.size/o.size,i=ke(ye(r),ye(o));return a>1?ke(i,Se(a)):i}}if(t===In.SUM_BY_NONZERO_WEIGHTS){if(o==null)return ke(ye(r),Se(s.size));{const a=R(o,Ho(s.shape)),i=he(ye(Ic(a,Se(0))),"float32");return ke(ye(r),i)}}throw Error(`Unknown reduction: ${t}`)}const jo=F({computeWeightedLoss_:fA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mA(n,e,t,s=In.SUM_BY_NONZERO_WEIGHTS){const o=S(n,"labels","absoluteDifference"),r=S(e,"predictions","absoluteDifference");let a=null;t!=null&&(a=S(t,"weights","absoluteDifference")),Zn(o.shape,r.shape,"Error in absoluteDifference: ");const i=Mt(xe(o,r));return jo(i,a,s)}const aee=F({absoluteDifference_:mA});function gA(n,e,t,s,o=In.SUM_BY_NONZERO_WEIGHTS){const r=S(n,"labels","cosineDistance"),a=S(e,"predictions","cosineDistance");let i=null;s!=null&&(i=S(s,"weights","cosineDistance")),Zn(r.shape,a.shape,"Error in cosineDistance: ");const c=Se(1),u=xe(c,ye(R(r,a),t,!0));return jo(u,i,o)}const iee=F({cosineDistance_:gA});function bA(n,e,t,s=In.SUM_BY_NONZERO_WEIGHTS){let o=S(n,"labels","hingeLoss");const r=S(e,"predictions","hingeLoss");let a=null;t!=null&&(a=S(t,"weights","hingeLoss")),Zn(o.shape,r.shape,"Error in hingeLoss: ");const i=Se(1);o=xe(R(Se(2),o),i);const c=wo(xe(i,R(o,r)));return jo(c,a,s)}const cee=F({hingeLoss_:bA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xA(n,e,t,s=1,o=In.SUM_BY_NONZERO_WEIGHTS){const r=S(n,"labels","huberLoss"),a=S(e,"predictions","huberLoss");let i=null;t!=null&&(i=S(t,"weights","huberLoss")),Zn(r.shape,a.shape,"Error in huberLoss: ");const c=Se(s),u=Mt(xe(a,r)),l=Wl(u,c),d=xe(u,l),h=ee(R(Se(.5),nt(l)),R(c,d));return jo(h,i,o)}const lee=F({huberLoss_:xA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yA(n,e,t,s=1e-7,o=In.SUM_BY_NONZERO_WEIGHTS){const r=S(n,"labels","logLoss"),a=S(e,"predictions","logLoss");let i=null;t!=null&&(i=S(t,"weights","logLoss")),Zn(r.shape,a.shape,"Error in logLoss: ");const c=Se(1),u=Se(s),l=$t(R(r,hs(ee(a,u)))),d=R(xe(c,r),hs(ee(xe(c,a),u))),h=xe(l,d);return jo(h,i,o)}const uee=F({logLoss_:yA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wA(n,e,t,s=In.SUM_BY_NONZERO_WEIGHTS){const o=S(n,"labels","meanSquaredError"),r=S(e,"predictions","meanSquaredError");let a=null;t!=null&&(a=S(t,"weights","meanSquaredError")),Zn(o.shape,r.shape,"Error in meanSquaredError: ");const i=Im(o,r);return jo(i,a,s)}const dee=F({meanSquaredError_:wA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function IA(n,e){const t=S(n,"labels","sigmoidCrossEntropyWithLogits"),s=S(e,"logits","sigmoidCrossEntropyWithLogits");Zn(t.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=wo(s),r=R(s,t),a=um(ds($t(Mt(s))));return ee(xe(o,r),a)}function kA(n,e,t,s=0,o=In.SUM_BY_NONZERO_WEIGHTS){let r=S(n,"multiClassLabels","sigmoidCrossEntropy");const a=S(e,"logits","sigmoidCrossEntropy");let i=null;if(t!=null&&(i=S(t,"weights","sigmoidCrossEntropy")),Zn(r.shape,a.shape,"Error in sigmoidCrossEntropy: "),s>0){const u=Se(s),l=Se(1),d=Se(.5);r=ee(R(r,xe(l,u)),R(d,u))}const c=IA(r,a);return jo(c,i,o)}const hee=F({sigmoidCrossEntropy_:kA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vA(n,e,t=-1){if(t===-1&&(t=e.rank-1),t!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${t}`);return Tr((o,r,a)=>{const c=aw(r,[t],!0),u=xe(he(r,"float32"),c);a([o,u]);const l=$t(R(u,o));return{value:ye(l,[t]),gradFunc:(p,f)=>{const[m,g]=f,b=et(p.shape,[t]);return[R(M(p,b),xe(he(m,"float32"),ds(g))),R(M(p,b),xe(ds(g),he(m,"float32")))]}}})(n,e)}function $A(n,e,t,s=0,o=In.SUM_BY_NONZERO_WEIGHTS){let r=S(n,"onehotLabels","softmaxCrossEntropy");const a=S(e,"logits","softmaxCrossEntropy");let i=null;if(t!=null&&(i=S(t,"weights","softmaxCrossEntropy")),Zn(r.shape,a.shape,"Error in softmaxCrossEntropy: "),s>0){const u=Se(s),l=Se(1),d=Se(r.shape[1]);r=ee(R(r,xe(l,u)),ke(u,d))}const c=vA(r,a);return jo(c,i,o)}const pee=F({softmaxCrossEntropy_:$A});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CA(n,e,t,s){const o=S(n,"indices","sparseFillEmptyRows","int32"),r=S(e,"values","sparseFillEmptyRows"),a=S(t,"denseShape","sparseFillEmptyRows","int32"),i=S(s,"defaultValue","sparseFillEmptyRows",r.dtype);if(o.rank!==2)throw new Error(`Indices should be Tensor2D but received shape
        ${o.shape}`);if(r.rank!==1)throw new Error(`Values should be Tensor1D but received shape ${r.shape}`);if(a.rank!==1)throw new Error(`Dense shape should be Tensor1D but received shape ${a.shape}`);if(i.rank!==0)throw new Error(`Default value should be a scalar but received shape ${i.shape}`);const c={indices:o,values:r,denseShape:a,defaultValue:i},u=D.runKernel(Pd,c);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}const fee=F({sparseFillEmptyRows_:CA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SA(n,e,t){const s=S(n,"inputIndices","sparseReshape","int32"),o=S(e,"inputShape","sparseReshape","int32"),r=S(t,"newShape","sparseReshape","int32");if(s.rank!==2)throw new Error(`Input indices should be Tensor2D but received shape
        ${s.shape}`);if(o.rank!==1)throw new Error(`Input shape should be Tensor1D but received shape ${o.shape}`);if(r.rank!==1)throw new Error(`New shape should be Tensor1D but received shape ${r.shape}`);const a={inputIndices:s,inputShape:o,newShape:r},i=D.runKernel(Rl,a);return{outputIndices:i[0],outputShape:i[1]}}const mee=F({sparseReshape_:SA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NA(n,e,t){const s=S(n,"data","sparseSegmentMean"),o=S(e,"indices","sparseSegmentMean","int32"),r=S(t,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
          ${o.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
          ${r.shape}`);const a={data:s,indices:o,segmentIds:r};return D.runKernel(Bd,a)}const gee=F({sparseSegmentMean_:NA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TA(n,e,t){const s=S(n,"data","sparseSegmentSum"),o=S(e,"indices","sparseSegmentSum","int32"),r=S(t,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.rank!==1)throw new Error(`Indices should be Tensor1D but received shape
         ${o.shape}`);if(r.rank!==1)throw new Error(`Segment ids should be Tensor1D but received shape
         ${r.shape}`);const a={data:s,indices:o,segmentIds:r};return D.runKernel(zd,a)}const bee=F({sparseSegmentSum_:TA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EA(n,e,t,s,o,r,a,i){const c=S(n,"data","stringNGrams","string");if(c.dtype!=="string")throw new Error("Data must be of datatype string");if(c.shape.length!==1)throw new Error(`Data must be a vector, saw: ${c.shape}`);const u=S(e,"dataSplits","stringNGrams");if(u.dtype!=="int32")throw new Error("Data splits must be of datatype int32");const l={separator:t,nGramWidths:s,leftPad:o,rightPad:r,padWidth:a,preserveShortSequences:i},d={data:c,dataSplits:u},h=D.runKernel(Wd,d,l);return{nGrams:h[0],nGramsSplits:h[1]}}const xee=F({stringNGrams_:EA});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _A(n,e,t=!0){const s=S(n,"input","stringSplit","string"),o=S(e,"delimiter","stringSplit","string");if(s.rank!==1)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(o.rank!==0)throw new Error(`Delimiter should be a scalar but received shape ${o.shape}`);const r={skipEmpty:t},a={input:s,delimiter:o},i=D.runKernel(Ud,a,r);return{indices:i[0],values:i[1],shape:i[2]}}const yee=F({stringSplit_:_A});/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RA(n,e){const t=S(n,"input","stringToHashBucketFast","string"),s={numBuckets:e};if(e<=0)throw new Error("Number of buckets must be at least 1");const o={input:t};return D.runKernel(Gd,o,s)}const wee=F({stringToHashBucketFast_:RA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fr={flipLeftRight:AR,grayscaleToRGB:FR,resizeNearestNeighbor:Aw,resizeBilinear:Rw,rotateWithOffset:MR,cropAndResize:_R,nonMaxSuppression:PR,nonMaxSuppressionAsync:jR,nonMaxSuppressionWithScore:XR,nonMaxSuppressionWithScoreAsync:YR,nonMaxSuppressionPadded:JR,nonMaxSuppressionPaddedAsync:eA,threshold:rA,transform:iA},AA={bandPart:lA,gramSchmidt:dA,qr:pA};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qo extends Pi{minimize(e,t=!1,s){const{value:o,grads:r}=this.computeGradients(e,s);if(s!=null){const a=s.map(i=>({name:i.name,tensor:r[i.name]}));this.applyGradients(a)}else this.applyGradients(r);return Pe(r),t?o:(o.dispose(),null)}get iterations(){return this.iterations_==null&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return FE(e,t)}dispose(){this.iterations_!=null&&Pe(this.iterations_)}async saveIterations(){return this.iterations_==null&&(this.iterations_=0),{name:"iter",tensor:Se(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(qo,Symbol.hasInstance,{value:n=>n.minimize!=null&&n.computeGradients!=null&&n.applyGradients!=null});/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Rm extends qo{constructor(e,t,s=null){super(),this.learningRate=e,this.rho=t,this.epsilon=s,this.accumulatedGrads=[],this.accumulatedUpdates=[],s==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=D.registeredVariables[s],a=!1;this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accum_grad`,variable:G(()=>Ge(r).variable(a))}),this.accumulatedUpdates[o]==null&&(this.accumulatedUpdates[o]={originalName:`${s}/accum_var`,variable:G(()=>Ge(r).variable(a))});const i=Array.isArray(e)?e[o].tensor:e[s];if(i==null)return;const c=this.accumulatedGrads[o].variable,u=this.accumulatedUpdates[o].variable;G(()=>{const l=ee(R(c,this.rho),R(nt(i),1-this.rho)),d=R(ke(gn(ee(u,this.epsilon)),gn(ee(c,this.epsilon))),i),h=ee(R(u,this.rho),R(nt(d),1-this.rho));c.assign(l),u.assign(h);const p=ee(R(d,-this.learningRate),r);r.assign(p)})}),this.incrementIterations()}dispose(){this.accumulatedUpdates!=null&&(Pe(this.accumulatedGrads.map(e=>e.variable)),Pe(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=e.length/2,s=!1;this.accumulatedGrads=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedUpdates=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}Rm.className="Adadelta";Q(Rm);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Am extends qo{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=D.registeredVariables[s];this.accumulatedGrads[o]==null&&(this.accumulatedGrads[o]={originalName:`${s}/accumulator`,variable:G(()=>zl(r.shape,this.initialAccumulatorValue).variable(!1))});const a=Array.isArray(e)?e[o].tensor:e[s];if(a==null)return;const i=this.accumulatedGrads[o].variable;G(()=>{const c=ee(i,nt(a));i.assign(c);const u=ee(R(ke(a,gn(ee(c,D.backend.epsilon()))),-this.learningRate),r);r.assign(u)})}),this.incrementIterations()}dispose(){this.accumulatedGrads!=null&&Pe(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulatedGrads=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Am.className="Adagrad";Q(Am);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dm extends qo{constructor(e,t,s,o=null){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=o,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],G(()=>{this.accBeta1=Se(t).variable(),this.accBeta2=Se(s).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);G(()=>{const s=xe(1,this.accBeta1),o=xe(1,this.accBeta2);t.forEach((r,a)=>{const i=D.registeredVariables[r],c=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:G(()=>Ge(i).variable(c))}),this.accumulatedSecondMoment[a]==null&&(this.accumulatedSecondMoment[a]={originalName:`${r}/v`,variable:G(()=>Ge(i).variable(c))});const u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;const l=this.accumulatedFirstMoment[a].variable,d=this.accumulatedSecondMoment[a].variable,h=ee(R(l,this.beta1),R(u,1-this.beta1)),p=ee(R(d,this.beta2),R(nt(u),1-this.beta2)),f=ke(h,s),m=ke(p,o);l.assign(h),d.assign(p);const g=ee(R(ke(f,ee(gn(m),this.epsilon)),-this.learningRate),i);i.assign(g)}),this.accBeta1.assign(R(this.accBeta1,this.beta1)),this.accBeta2.assign(R(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),this.accumulatedFirstMoment!=null&&Pe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedSecondMoment!=null&&Pe(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e),G(()=>{this.accBeta1.assign(Nr(this.beta1,this.iterations_+1)),this.accBeta2.assign(Nr(this.beta2,this.iterations_+1))});const t=e.length/2,s=!1;this.accumulatedFirstMoment=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedSecondMoment=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Dm.className="Adam";Q(Dm);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fm extends qo{constructor(e,t,s,o=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=s,this.epsilon=o,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],G(()=>{this.iteration=Se(0).variable(),this.accBeta1=Se(t).variable()}),o==null&&(this.epsilon=D.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(s=>s.name):Object.keys(e);G(()=>{const s=xe(1,this.accBeta1),o=ke(-this.learningRate,ee(R(this.iteration,this.decay),1));t.forEach((r,a)=>{const i=D.registeredVariables[r],c=!1;this.accumulatedFirstMoment[a]==null&&(this.accumulatedFirstMoment[a]={originalName:`${r}/m`,variable:Ge(i).variable(c)}),this.accumulatedWeightedInfNorm[a]==null&&(this.accumulatedWeightedInfNorm[a]={originalName:`${r}/v`,variable:Ge(i).variable(c)});const u=Array.isArray(e)?e[a].tensor:e[r];if(u==null)return;const l=this.accumulatedFirstMoment[a].variable,d=this.accumulatedWeightedInfNorm[a].variable,h=ee(R(l,this.beta1),R(u,1-this.beta1)),p=R(d,this.beta2),f=Mt(u),m=yo(p,f);l.assign(h),d.assign(m);const g=ee(R(ke(o,s),ke(h,ee(m,this.epsilon))),i);i.assign(g)}),this.iteration.assign(ee(this.iteration,1)),this.accBeta1.assign(R(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),this.accumulatedFirstMoment!=null&&Pe(this.accumulatedFirstMoment.map(e=>e.variable)),this.accumulatedWeightedInfNorm!=null&&Pe(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Fm.className="Adamax";Q(Fm);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ih extends qo{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=Array.isArray(e)?e[o].tensor:e[s];if(r==null)return;const a=D.registeredVariables[s];G(()=>{const i=ee(R(this.c,r),a);a.assign(i)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,this.c!=null&&this.c.dispose(),this.c=Us(Se(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(e=await this.extractIterations(e),e.length!==0)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}ih.className="SGD";Q(ih);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Om extends ih{constructor(e,t,s=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=s,this.accumulations=[],this.m=Se(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=D.registeredVariables[s];this.accumulations[o]==null&&(this.accumulations[o]={originalName:`${s}/momentum`,variable:G(()=>Ge(r).variable(!1))});const a=this.accumulations[o].variable,i=Array.isArray(e)?e[o].tensor:e[s];i!=null&&G(()=>{let c;const u=ee(R(this.m,a),i);this.useNesterov?c=ee(R(this.c,ee(i,R(u,this.m))),r):c=ee(R(this.c,u),r),a.assign(u),r.assign(c)})}),this.incrementIterations()}dispose(){this.m.dispose(),this.accumulations!=null&&Pe(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=!1;this.accumulations=e.map(s=>({originalName:s.name,variable:s.tensor.variable(t)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Om.className="Momentum";Q(Om);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Mm extends qo{constructor(e,t=.9,s=0,o=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=s,this.epsilon=o,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,o==null&&(this.epsilon=D.backend.epsilon()),e==null)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(s=>s.name):Object.keys(e)).forEach((s,o)=>{const r=D.registeredVariables[s],a=!1;this.accumulatedMeanSquares[o]==null&&(this.accumulatedMeanSquares[o]={originalName:`${s}/rms`,variable:G(()=>Ge(r).variable(a))}),this.accumulatedMoments[o]==null&&(this.accumulatedMoments[o]={originalName:`${s}/momentum`,variable:G(()=>Ge(r).variable(a))}),this.accumulatedMeanGrads[o]==null&&this.centered&&(this.accumulatedMeanGrads[o]={originalName:`${s}/mg`,variable:G(()=>Ge(r).variable(a))});const i=Array.isArray(e)?e[o].tensor:e[s];if(i==null)return;const c=this.accumulatedMeanSquares[o].variable,u=this.accumulatedMoments[o].variable;G(()=>{const l=ee(R(c,this.decay),R(nt(i),1-this.decay));if(this.centered){const d=this.accumulatedMeanGrads[o].variable,h=ee(R(d,this.decay),R(i,1-this.decay)),p=ke(R(i,this.learningRate),gn(xe(l,ee(nt(h),this.epsilon)))),f=ee(R(u,this.momentum),p);c.assign(l),d.assign(h),u.assign(f);const m=xe(r,f);r.assign(m)}else{const d=ee(R(c,this.decay),R(nt(i),1-this.decay)),h=ee(R(u,this.momentum),ke(R(i,this.learningRate),gn(ee(d,this.epsilon))));c.assign(d),u.assign(h);const p=xe(r,h);r.assign(p)}})}),this.incrementIterations()}dispose(){this.accumulatedMeanSquares!=null&&Pe(this.accumulatedMeanSquares.map(e=>e.variable)),this.accumulatedMeanGrads!=null&&this.centered&&Pe(this.accumulatedMeanGrads.map(e=>e.variable)),this.accumulatedMoments!=null&&Pe(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(t=>({name:t.originalName,tensor:t.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,s=!1;this.accumulatedMeanSquares=e.slice(0,t).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.accumulatedMoments=e.slice(t,t*2).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})),this.centered&&(this.accumulatedMeanGrads=e.slice(t*2,t*3).map(o=>({originalName:o.name,variable:o.tensor.variable(s)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Mm.className="RMSProp";Q(Mm);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sr{static sgd(e){return new ih(e)}static momentum(e,t,s=!1){return new Om(e,t,s)}static rmsprop(e,t=.9,s=0,o=null,r=!1){return new Mm(e,t,s,o,r)}static adam(e=.001,t=.9,s=.999,o=null){return new Dm(e,t,s,o)}static adadelta(e=.001,t=.95,s=null){return new Rm(e,t,s)}static adamax(e=.002,t=.9,s=.999,o=null,r=0){return new Fm(e,t,s,o,r)}static adagrad(e,t=.1){return new Am(e,t)}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oa={sgd:sr.sgd,momentum:sr.momentum,adadelta:sr.adadelta,adagrad:sr.adagrad,rmsprop:sr.rmsprop,adamax:sr.adamax,adam:sr.adam};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DA=(()=>typeof requestAnimationFrame<"u"?requestAnimationFrame:typeof setImmediate<"u"?setImmediate:n=>n())();function Dw(){return new Promise(n=>DA(()=>n()))}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ch(n,e){const t=n[0].length;n.forEach((o,r)=>{$(o.length===t,()=>`Error in concat${t}D: rank of tensors[${r}] must be the same as the rank of the rest (${t})`)}),$(e>=0&&e<t,()=>`Error in concat${t}D: axis must be between 0 and ${t-1}.`);const s=n[0];n.forEach((o,r)=>{for(let a=0;a<t;a++)$(a===e||o[a]===s[a],()=>`Error in concat${t}D: Shape of tensors[${r}] (${o}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`)})}function Xn(n,e){const t=n[0].slice();for(let s=1;s<n.length;s++)t[e]+=n[s][e];return t}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var vs;(function(n){n[n.FIRST_DIM_SIZE=0]="FIRST_DIM_SIZE",n[n.VALUE_ROWIDS=1]="VALUE_ROWIDS",n[n.ROW_LENGTHS=2]="ROW_LENGTHS",n[n.ROW_SPLITS=3]="ROW_SPLITS",n[n.ROW_LIMITS=4]="ROW_LIMITS",n[n.ROW_STARTS=5]="ROW_STARTS"})(vs||(vs={}));function Fw(n,e,t){let s=new Array;if(t==null&&e==null)return s;if(e==null)for(;s.length<n+t.length;)s.push(-1);else s=e.slice();if(t==null)return s;if(n+t.length!==s.length)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.rank = ${n+t.length}, but shape.rank = ${s.length}`);for(let o=1;o<t.length;++o){const r=t[o],a=s[s.length-t.length+o],i=s[a];if(r>=0)if(i>=0){if(i!==r)throw new Error(`rt input.shape and shape=${e} are incompatible: rt input.shape[${o+n}] = ${r} but shape[${o+n}] = ${i}`)}else s[a]=r}return s}function Ow(n){const e={FIRST_DIM_SIZE:vs.FIRST_DIM_SIZE,VALUE_ROWIDS:vs.VALUE_ROWIDS,ROW_LENGTHS:vs.ROW_LENGTHS,ROW_SPLITS:vs.ROW_SPLITS,ROW_LIMITS:vs.ROW_LIMITS,ROW_STARTS:vs.ROW_STARTS},t=[];for(const s of n)if(s in e)t.push(e[s]);else break;return t}function Mw(n){return n.length===0?0:n[0]===vs.FIRST_DIM_SIZE?n.length-1:n.length}function Lw(n,e){if(n==null||e==null)return;const t=n.length,s=e.length;if(t>=s)throw new Error(`defaultValue.shape=${n} and ragged tensor flatValues.shape=${e}, are incompatible: defaultValue.rank = ${t} must be less than ragged tensor input flatValues.rank = ${s})`);for(let o=0;o<Math.min(t,s-1);++o){const r=n[o],a=e[o+1];if(r>=0&&a>=0&&r!==1&&r!==a)throw new Error(`defaultValue.shape=${n}, and ragged tensor input flatValues.shape=${e} are incompatible: defaultValue.shape[${o-n.length}] = ${r} but ragged tensor input.flatValues.shape[${o-n.length}] = ${a}`)}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lm=30;function lh(n){return n<=Lm?n:bp(n,Math.floor(Math.sqrt(n)))}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uh(n,e,t){const s=t*(typeof n=="number"?n:n[0]),o=e*(typeof n=="number"?n:n[1]);return[s,o]}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hr(n,e,t,s=!0){let o=[];if(s)o=o.concat(e.slice(0)),o.push(n[0]/t),o=o.concat(n.slice(1));else{o=o.concat(n[0]);const r=e.length;for(let a=0;a<r;++a)o=o.concat([n[a+1]/e[a],e[a]]);o=o.concat(n.slice(r+1))}return o}function jr(n,e,t=!0){const s=[];if(t){s.push(e);for(let o=e+1;o<n;++o)o<=2*e?(s.push(o),s.push(o-(e+1))):s.push(o)}else{const o=[],r=[];for(let a=1;a<n;++a)a>=e*2+1||a%2===1?r.push(a):o.push(a);s.push(...o),s.push(0),s.push(...r)}return s}function qr(n,e,t,s=!0){const o=[];s?o.push(n[0]/t):o.push(n[0]*t);for(let r=1;r<n.length;++r)r<=e.length?s?o.push(e[r-1]*n[r]):o.push(n[r]/e[r-1]):o.push(n[r]);return o}function dh(n,e){const t=[0];for(let s=0;s<e;++s)t.push(n[s][0]);return t}function hh(n,e,t){const s=n.slice(0,1);for(let o=0;o<t;++o)s.push(n[o+1]-e[o][0]-e[o][1]);return s}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ph=1.7580993408473768,fh=1.0507009873554805;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pm=.3275911,Bm=.254829592,zm=-.284496736,Vm=1.421413741,Wm=-1.453152027,Um=1.061405429;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function go(n,e){if(n.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${n.length}, imag: ${e.length}.`);const t=new Float32Array(n.length*2);for(let s=0;s<t.length;s+=2)t[s]=n[s/2],t[s+1]=e[s/2];return t}function Pw(n){const e=new Float32Array(n.length/2),t=new Float32Array(n.length/2);for(let s=0;s<n.length;s+=2)e[s/2]=n[s],t[s/2]=n[s+1];return{real:e,imag:t}}function Bw(n){const e=Math.ceil(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let o=0;o<n.length;o+=4)t[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:t,imag:s}}function zw(n){const e=Math.floor(n.length/4),t=new Float32Array(e),s=new Float32Array(e);for(let o=2;o<n.length;o+=4)t[Math.floor(o/4)]=n[o],s[Math.floor(o/4)]=n[o+1];return{real:t,imag:s}}function Gm(n,e){const t=n[e*2],s=n[e*2+1];return{real:t,imag:s}}function Vw(n,e,t,s){n[s*2]=e,n[s*2+1]=t}function Ww(n,e){const t=new Float32Array(n/2),s=new Float32Array(n/2);for(let o=0;o<Math.ceil(n/2);o++){const r=(e?2:-2)*Math.PI*(o/n);t[o]=Math.cos(r),s[o]=Math.sin(r)}return{real:t,imag:s}}function Uw(n,e,t){const s=(t?2:-2)*Math.PI*(n/e),o=Math.cos(s),r=Math.sin(s);return{real:o,imag:r}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jh="->",FA=/->/g,sx=",",ox="...";function Hm(n,e){n=n.replace(/\s/g,"");const t=(n.length-n.replace(FA,"").length)/jh.length;if(t<1)throw new Error("Equations without an arrow are not supported.");if(t>1)throw new Error(`Equation must contain exactly one arrow ("${jh}").`);const[s,o]=n.split(jh);$(s.indexOf(ox)===-1,()=>`The ellipsis notation ("${ox}") is not supported yet.`);const r=s.split(sx),a=r.length;if(e!==a)throw new Error(`Expected ${a} input tensors, received ${e}`);if(a>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const i=[];for(let h=0;h<o.length;++h){const p=o[h];if(!r.some(f=>f.indexOf(p)!==-1))throw new Error(`Output subscripts contain the label ${p} not present in the input subscripts.`);i.indexOf(p)===-1&&i.push(p)}for(let h=0;h<s.length;++h){const p=s[h];i.indexOf(p)===-1&&p!==sx&&i.push(p)}const c=new Array(r.length);for(let h=0;h<a;++h){if(new Set(r[h].split("")).size!==r[h].length)throw new Error(`Found duplicate axes in input component ${r[h]}. Support for duplicate axes in input is not implemented yet.`);c[h]=[];for(let p=0;p<r[h].length;++p)c[h].push(i.indexOf(r[h][p]))}const u=i.length,l=o.length,d=[];for(let h=l;h<u;++h)d.push(h);return{allDims:i,summedDims:d,idDims:c}}function jm(n,e){let t=new Array(n);t.fill(-1);for(let o=0;o<e.length;++o)t[e[o]]=o;const s=[];for(let o=0;o<n;++o)t[o]===-1&&s.push(o);return t=t.filter(o=>o!==-1),{permutationIndices:t,expandDims:s}}function qm(n,e,t){const s=new Array(n);for(let o=0;o<t.length;++o){const r=t[o].shape;for(let a=0;a<e[o].length;++a)s[e[o][a]]===void 0?s[e[o][a]]=r[a]:$(s[e[o][a]]===r[a],()=>`Expected dimension ${s[e[o][a]]} at axis ${a} of input shaped ${JSON.stringify(r)}, but got dimension ${r[a]}`)}}function Xm(n,e){const t=n,s=[];let o=0;n.length===0&&t.push(-1),o=n.length+1;for(let a=0;a<o;++a)s.push([]);const r=[];for(let a=0;a<t.length;++a){const i=t[a],c=OA(e,i);for(const u of c)r.indexOf(u)===-1&&(s[a].push(u),r.push(u))}return{path:t,steps:s}}function Km(n){return n.every((e,t)=>e===t)}function OA(n,e){const t=[];for(let s=0;s<n.length;++s)(n[s].length===0||n[s].indexOf(e)!==-1||e===-1)&&t.push(s);return t}function mh(n,e,t=0){let s=[];if(typeof e=="number")$(n.shape[t]%e===0,()=>"Number of splits must evenly divide the axis."),s=new Array(e).fill(n.shape[t]/e);else{const o=e.reduce((a,i)=>(i===-1&&(a+=1),a),0);$(o<=1,()=>"There should be only one negative value in split array.");const r=e.indexOf(-1);if(r!==-1){const a=e.reduce((i,c)=>c>0?i+c:i);e[r]=n.shape[t]-a}$(n.shape[t]===e.reduce((a,i)=>a+i),()=>"The sum of sizes must match the size of the axis dimension."),s=e}return s}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ym(n){return`Received SparseTensor with denseShape[0] = 0 but
  indices.shape[0] = ${n}`}function Zm(n,e){return`indices(${n}, 0) is invalid: ${e} < 0`}function Jm(n,e,t){return`indices(${n}, 0) is invalid: ${e} >= ${t}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qm(n,e){return`only one output dimension may be -1, not both ${n} and ${e}`}function eg(n,e){return`size ${n} must be non-negative, not ${e}`}function tg(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function ng(n,e){const t=L(n),s=L(e);return`Input to reshape is a SparseTensor with ${t}
  dense values, but the requested shape requires a multiple of ${s}. inputShape=${n} outputShape= ${e}`}function sg(n,e){const t=L(n),s=L(e);return`Input to reshape is a tensor with ${t} dense values, but the requested shape has ${s}. inputShape=${n} outputShape=${e}`}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vc(){return"segment ids must be >= 0"}function og(){return"segment ids are not increasing"}function rg(n,e){return`Segment id ${n} out of range [0, ${e}), possibly because segmentIds input is not sorted.`}function ag(n,e,t){return`Bad: indices[${n}] == ${e} out of range [0, ${t})`}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gw(n,e){let t=!1,s;for(n<=Lm?(s=n,t=!0):s=bp(n,Math.floor(Math.sqrt(n)));!t;)s>e||s===n?t=!0:s=bp(n,s+1);return s}function Hw(n,e,t){const s=[],o=n.length;for(let r=0;r<o;r++)r!==e?s.push(n[r]):s.push(t);return s}function gh(n,e,t,s){const o=e.shape.length,r=n.shape.length;if(s!==0&&(s<-o||s>o))throw new Error(`Expect batchDims in the range of [-${o}, ${o}], but got ${s}`);if(s<0&&(s+=o),s>r)throw new Error(`batchDims (${s}) must be less than rank(x) (
    ${r}).`);if(t<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${t}).`);for(let d=0;d<s;++d)if(n.shape[d]!==e.shape[d])throw new Error(`x.shape[${d}]: ${n.shape[d]} should be equal to indices.shape[${d}]: ${e.shape[d]}.`);const a=n.shape[t],i=[];let c=1,u=1,l=1;for(let d=0;d<s;++d)i.push(n.shape[d]),c*=n.shape[d];for(let d=s;d<t;d++)i.push(n.shape[d]),u*=n.shape[d];for(let d=s;d<o;d++)i.push(e.shape[d]);for(let d=t+1;d<r;d++)i.push(n.shape[d]),l*=n.shape[d];return{batchSize:c,sliceSize:l,outerSize:u,dimSize:a,outputShape:i}}const MA=Object.freeze(Object.defineProperty({__proto__:null,segOpComputeOptimalWindowSize:Gw,computeOutShape:Hw,collectGatherOpShapeInfo:gh},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rr(n){try{return n.map(e=>Ao(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function ig(n){return n.map(e=>To(e))}const LA=Object.freeze(Object.defineProperty({__proto__:null,slice_util:wN,segment_util:MA,fromUint8ToStringArray:Rr,fromStringArrayToUint8:ig,upcastType:Fn,axesAreInnerMostDims:im,combineLocations:tw,computeOutAndReduceShapes:bt,expandShapeToKeepDim:et,assertAxesAreInnerMostDims:ht,getAxesPermutation:pt,getUndoAxesPermutation:Qs,getInnerMostAxes:rt,getBroadcastDims:Na,getReductionAxes:Wt,assertAndGetBroadcastShape:Ee,assertParamsConsistent:ch,computeOutShape:Xn,computeDilation2DInfo:Bl,computePool2DInfo:Bn,computePool3DInfo:xo,computeConv2DInfo:Nt,computeConv3DInfo:Go,computeDefaultPad:em,tupleValuesAreOne:Cr,eitherStridesOrDilationsAreOne:cn,convertConv2DDataFormat:As,checkPadOnDimRoundingMode:$n,getFusedDyActivation:vm,getFusedBiasGradient:$m,applyActivation:Cm,shouldFuse:Sm,get RowPartitionType(){return vs},combineRaggedTensorToTensorShapes:Fw,getRowPartitionTypesHelper:Ow,getRaggedRank:Mw,validateDefaultValueShape:Lw,PARALLELIZE_THRESHOLD:Lm,computeOptimalWindowSize:lh,getImageCenter:uh,getReshaped:Hr,getPermuted:jr,getReshapedPermuted:qr,getSliceBeginCoords:dh,getSliceSize:hh,prepareAndValidate:Zd,validateUpdateShape:B0,validateInput:mN,calculateShapes:Li,SELU_SCALEALPHA:ph,SELU_SCALE:fh,ERF_P:Pm,ERF_A1:Bm,ERF_A2:zm,ERF_A3:Vm,ERF_A4:Wm,ERF_A5:Um,warn:Hn,log:QS,mergeRealAndImagArrays:go,splitRealAndImagArrays:Pw,complexWithEvenIndex:Bw,complexWithOddIndex:zw,getComplexWithIndex:Gm,assignToTypedArray:Vw,exponents:Ww,exponent:Uw,decodeEinsumEquation:Hm,getEinsumPermutation:jm,checkEinsumDimSizes:qm,getEinsumComputePath:Xm,isIdentityPermutation:Km,prepareSplitSize:mh,getSparseFillEmptyRowsIndicesDenseShapeMismatch:Ym,getSparseFillEmptyRowsNegativeIndexErrorMessage:Zm,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:Jm,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:Qm,getSparseReshapeNegativeOutputDimErrorMessage:eg,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:tg,getSparseReshapeInputOutputMultipleErrorMessage:ng,getSparseReshapeInputOutputMismatchErrorMessage:sg,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:vc,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:og,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:rg,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:ag},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jw={kernelName:Lc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,Gl(he(t,"float32"),-1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PA={kernelName:Pc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=nt(he(t,"float32")),o=gn(xe(Se(1),s));return $t(ke(n,o))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BA={kernelName:Bc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=gn(xe(nt(he(t,"float32")),1));return ke(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zA={kernelName:Lr,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=Ee(t.shape,s.shape);return{a:()=>{let i=n;const c=Wt(t.shape,o);return c.length>0&&(i=ye(i,c)),M(i,t.shape)},b:()=>{let i=n;const c=Wt(s.shape,o);return c.length>0&&(i=ye(i,c)),M(i,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VA={kernelName:zc,saveAllInputs:!0,gradFunc:(n,e)=>{const t={};return e.forEach((s,o)=>{t[o]=()=>n.clone()}),t}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const WA={kernelName:Ba,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ge(t)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UA={kernelName:Nd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>Ge(t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GA={kernelName:Uc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,gn(xe(Se(1),nt(he(t,"float32")))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const HA={kernelName:Gc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=gn(ee(Se(1),nt(he(t,"float32"))));return ke(n,s)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jA={kernelName:qc,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=Ee(t.shape,s.shape);return{a:()=>{const i=ee(nt(t),nt(s));let c=R(n,ke(s,i));const u=Wt(t.shape,o);return u.length>0&&(c=ye(c,u)),M(c,t.shape)},b:()=>{const i=ee(nt(t),nt(s));let c=$t(R(n,ke(t,i)));const u=Wt(s.shape,o);return u.length>0&&(c=ye(c,u)),M(c,s.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qA={kernelName:Hc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,ee(nt(he(t,"float32")),1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XA={kernelName:jc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,xe(Se(1),nt(he(t,"float32"))))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KA(n,e,t,s,o,r){const a=S(n,"dy","avgPool3dGrad"),i=S(e,"input","avgPool3dGrad");let c=a,u=i,l=!1;i.rank===4&&(l=!0,c=M(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),u=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),$(c.rank===5,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),$(u.rank===5,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`),$n("avgPool3dGrad",o,r);const d={dy:c,input:u},h={filterSize:t,strides:s,pad:o,dimRoundingMode:r},p=D.runKernel($f,d,h);return l?M(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}const YA=F({avgPool3dGrad_:KA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZA={kernelName:Td,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:o,strides:r,pad:a,dimRoundingMode:i}=t;return{x:()=>YA(n,s,o,r,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JA(n,e,t,s,o){const r=S(n,"dy","avgPoolGrad"),a=S(e,"input","avgPoolGrad");$(a.rank===r.rank,()=>`Rank of input (${a.rank}) does not match rank of dy (${r.rank})`);let i=a,c=r,u=!1;a.rank===3&&(u=!0,i=M(a,[1,a.shape[0],a.shape[1],a.shape[2]]),c=M(r,[1,r.shape[0],r.shape[1],r.shape[2]])),$(c.rank===4,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${c.rank}.`),$(i.rank===4,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${i.rank}.`);const l={dy:c,input:i},d={filterSize:t,strides:s,pad:o},h=D.runKernel(vf,l,d);return u?M(h,[h.shape[1],h.shape[2],h.shape[3]]):h}const QA=F({avgPoolGrad_:JA});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eD={kernelName:za,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{filterSize:o,strides:r,pad:a}=t;return{x:()=>QA(n,s,o,r,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tD={kernelName:Va,inputsToSave:["a","b"],gradFunc:(n,e,t)=>{const[s,o]=e,{transposeA:r,transposeB:a}=t;return!r&&!a?{a:()=>Xe(n,o,!1,!0),b:()=>Xe(s,n,!0,!1)}:!r&&a?{a:()=>Xe(n,o,!1,!1),b:()=>Xe(n,s,!0,!1)}:r&&!a?{a:()=>Xe(o,n,!1,!0),b:()=>Xe(s,n,!1,!1)}:{a:()=>Xe(o,n,!0,!0),b:()=>Xe(n,s,!0,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nD={kernelName:Xc,gradFunc:(n,e,t)=>{const{blockShape:s,crops:o}=t;return{x:()=>mm(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sD={kernelName:KS,gradFunc:(n,e,t)=>{const s=t,o=s.inputShape,r=s.shape,a=Array.from(r);for(let c=o.length-1;c>=0;c--)if(o[c]===r[c])a[c]=1;else if(o[c]!==1)throw new Error(`broadcastTo(): [${o}] cannot be broadcast to [${r}].`);const i=[];for(let c=0;c<a.length;c++)a[c]>1&&i.push(c);return{x:()=>ye(n,i,!0)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oD={kernelName:Wa,gradFunc:n=>({x:()=>n.clone()})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rD={kernelName:Ua,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const aD={kernelName:Pr,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{clipValueMin:o,clipValueMax:r}=t;return{x:()=>On(mo(Ur(s,o),zi(s,r)),n,Ge(n))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iD={kernelName:Ed,inputsToSave:["x"],gradFunc:jw.gradFunc};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cD={kernelName:Kc,saveAllInputs:!0,gradFunc:(n,e,t)=>{const s=e.map(c=>c.shape),{axis:o}=t,r=Re(o,e[0].shape)[0],a=s.map(c=>c[r]);return qn(n,a,r).map(c=>()=>c)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lD={kernelName:Ga,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,{dilations:r,strides:a,pad:i,dataFormat:c}=t;return $(Cr(r),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`),{x:()=>om(s.shape,n,o,a,i,c),filter:()=>km(s,n,o.shape,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uD={kernelName:Ha,inputsToSave:["dy","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,{strides:r,pad:a,dataFormat:i,dimRoundingMode:c}=t;return{dy:()=>Sr(n,o,r,a,i,1,c),filter:()=>km(n,s,o.shape,r,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dD(n,e,t,s,o){let r=n;n.rank===4&&(r=M(n,[1,n.shape[0],n.shape[1],n.shape[2],n.shape[3]]));let a=e;a.rank===4&&(a=M(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),$(r.rank===5,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${r.shape}.`),$(a.rank===5,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${a.shape}.`),$(t.length===5,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${t}.`),$(r.shape[4]===t[3],()=>`Error in conv3dDerFilter: depth of input ${r.shape[4]}) must match input depth in filter (${t[3]}.`),$(a.shape[4]===t[4],()=>`Error in conv3dDerFilter: depth of dy (${a.shape[4]}) must match output depth for filter (${t[4]}).`);const i={x:r,dy:a},c={strides:s,pad:o,filterShape:t};return D.runKernel(Tf,i,c)}const hD=F({conv3DBackpropFilter_:dD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pD={kernelName:_d,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:o,pad:r}=t;$(Cr(s),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const[a,i]=e;return{x:()=>J0(a.shape,n,i,o,r),filter:()=>hD(a,n,i.shape,o,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fD={kernelName:ja,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R($t(kw(he(t,"float32"))),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mD={kernelName:qa,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(vw(he(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gD={kernelName:Xa,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o,exclusive:r,reverse:a}=t;return{x:()=>{const i=pt([o],s.rank);let c=ew(n,o,r,!a);return i!=null&&(c=We(c,i)),c}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bD={kernelName:Ka,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const{dilations:s,strides:o,pad:r,dimRoundingMode:a}=t,i=s??[1,1];$(Cr(i),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${i}'`);const[c,u]=e;return $(c.rank===4,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${c.rank}.`),$(u.rank===4,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`),$(c.shape[3]===u.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${c.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),$(cn(o,i),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${o} and dilations '${i}'.`),$n("depthwiseConv2d",r,a),{x:()=>IR(c.shape,n,u,o,r,i,a),filter:()=>yR(c,n,u.shape,o,r,i,a)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xD={kernelName:Rd,inputsToSave:["x","filter"],gradFunc:(n,e,t)=>{const[s,o]=e,r={x:s,filter:o,dy:n},a={x:s,filter:o,dy:n};return{x:()=>D.runKernel(xp,r,t),filter:()=>D.runKernel(yp,a,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yD={kernelName:Za,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e,s={dy:n,y:t};return{x:()=>D.runKernel(Df,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wD={kernelName:Qc,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=R(ds($t(nt(t))),2/Math.sqrt(Math.PI));return{x:()=>R(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ID={kernelName:Ja,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kD={kernelName:tl,inputsToSave:["input"],gradFunc:(n,e)=>{const[t]=e;return{input:()=>M(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vD={kernelName:nl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,ds(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $D={kernelName:Qa,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CD={kernelName:ei,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=Ee(t.shape,s.shape);return{a:()=>{const i=ke(n,he(s,"float32")),c=Wt(t.shape,o);return c.length>0?M(ye(i,c),t.shape):i},b:()=>{let i=R(n,he(t,"float32"));const c=Wt(s.shape,o);c.length>0&&(i=M(ye(i,c),s.shape));const u=nt(s);return $t(ke(i,he(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SD={kernelName:ti,inputsToSave:["x","mean","variance","scale"],gradFunc:(n,e,t)=>{const{varianceEpsilon:s}=t,[o,r,a,i]=e,c=i??Se(1),u=Wt(r.shape,o.shape),l=[];if(r.rank===1){for(let w=0;w<o.shape.length-1;++w)l.push(o.shape[w]);l.push(1)}const d=xe(o,r),h=R(n,c),p=yw(ee(a,Se(s))),f=R(R(R(p,p),p),Se(-.5));return{x:()=>r.rank===1?M(R(R(n,$s(M(p,[1,1,1,r.shape[0]]),l)),c),o.shape):M(R(R(n,p),c),o.shape),mean:()=>{let w=R(R(p,Se(-1)),h);return r.rank===1&&(w=ye(w,u)),M(w,r.shape)},variance:()=>{let w=R(R(f,d),h);return r.rank===1&&(w=ye(w,u)),M(w,r.shape)},scale:()=>{const w=R(d,p);let I=R(n,w);return r.rank===1&&(I=ye(I,u)),M(I,r.shape)},offset:()=>{let w=n;return r.rank===1&&(w=ye(w,u)),M(w,r.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ND={kernelName:ol,inputsToSave:["x","indices"],gradFunc:(n,e,t)=>{const[s,o]=e,{axis:r}=t,a=Re(r,s.shape)[0];return{x:()=>{const c=s.shape,u=o.size,l=c.slice(0,a),d=l.length,h=c.slice(r,c.length).slice(1),p=h.length,f=rx(0,d),m=rx(d+1,d+1+p),g=ax([l,[u],h]),b=M(n,g),x=M(o,[u]),y=ax([[d],f,m]),w=We(b,y);let I=Tw(w,x,s.shape[a]);const k=Qs(y);return I=We(I,k),I},indices:()=>o}}};function rx(n,e){const t=[];for(let s=n;s<e;++s)t.push(s);return t}function ax(n){const e=[];for(let t=0;t<n.length;++t)for(let s=0;s<n[t].length;++s)e.push(n[t][s]);return e}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TD={kernelName:ni,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>Ge(t),b:()=>Ge(s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ED={kernelName:si,gradFunc:n=>({x:()=>he(n,"float32")})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _D={kernelName:al,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RD={kernelName:il,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AD={kernelName:oi,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DD={kernelName:ri,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{alpha:o}=t,r=Jn(s,0);return{x:()=>On(r,n,R(n,o))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FD={kernelName:ul,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,ee(t,1))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OD={kernelName:ai,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,he(t,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MD={kernelName:ZS,inputsToSave:[],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t;return{logits:()=>{const a=ds(s);return xe(n,R(ye(n,o,!0),a))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function LD(n,e,t,s=5,o=1,r=1,a=.5){const i={x:n,y:e,dy:t},c={depthRadius:s,bias:o,alpha:r,beta:a};return D.runKernel(Pf,i,c)}const PD=F({localResponseNormalizationBackprop_:LD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BD={kernelName:Fd,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{depthRadius:r,bias:a,alpha:i,beta:c}=t;return{x:()=>PD(s,o,n,r,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qw(n,e,t,s){return e.rank<t.rank&&(e=M(e,et(e.shape,s))),n.rank<t.rank&&(n=M(n,et(n.shape,s))),{x:()=>R(n,he(Ks(t,e),n.dtype))}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ix={kernelName:ii,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{reductionIndices:o}=s,r=e[0],a=e[1],i=Re(o,r.shape),c=qw(n,a,r,i);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zD={kernelName:ci,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>R(n,he(Ur(t,s),"float32")),b:()=>R(n,he(ow(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VD(n,e,t,s,o,r,a){const i=S(n,"dy","maxPool3dGrad"),c=S(e,"input","maxPool3dGrad"),u=S(t,"output","maxPool3dGrad");let l=i,d=c,h=u,p=!1;c.rank===4&&(p=!0,l=M(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),d=M(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),h=M(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),$(l.rank===5,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`),$(d.rank===5,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),$(h.rank===5,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),$n("maxPool3dGrad",r,a);const f={dy:l,input:d,output:h},m={filterSize:s,strides:o,pad:r,dimRoundingMode:a},g=D.runKernel(zf,f,m);return p?M(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}const WD=F({maxPool3dGrad_:VD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UD={kernelName:Od,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{filterSize:r,strides:a,pad:i,dimRoundingMode:c}=t;return{x:()=>WD(n,s,o,r,a,i,c)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GD(n,e,t,s,o,r,a){const i=S(n,"dy","maxPoolGrad"),c=S(e,"input","maxPoolGrad"),u=S(t,"output","maxPoolGrad");$(c.rank===i.rank,()=>`Rank of input (${c.rank}) does not match rank of dy (${i.rank})`),$(i.rank===4,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${i.rank}.`),$(c.rank===4,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${c.rank}.`),$n("maxPoolGrad",r,a);const l={dy:i,input:c,output:u},d={filterSize:s,strides:o,pad:r,dimRoundingMode:a};return D.runKernel(Bf,l,d)}const HD=F({maxPoolGrad_:GD});/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jD={kernelName:li,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s,o]=e,{filterSize:r,strides:a,pad:i}=t;return{x:()=>HD(n,s,o,r,a,i)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qD={kernelName:ui,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t,r=Re(o,s.shape),i=bt(s.shape,r)[1],c=L(i);return{x:()=>{const l=s.shape.slice();r.forEach(p=>{l[p]=1});const d=M(n,l);return ke(R(d,Ho(s.shape,"float32")),c)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XD={kernelName:di,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(n,e,t)=>{const s=t,{axis:o}=s,[r,a]=e,i=Re(o,r.shape),c=qw(n,a,r,i);return{x:()=>c.x()}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KD={kernelName:hi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e;return{a:()=>R(n,he(zi(t,s),"float32")),b:()=>R(n,he(Jn(t,s),"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YD={kernelName:pi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:o}=t,r=o.map(a=>a[0]);return{x:()=>Qe(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZD={kernelName:fl,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=Ee(t.shape,s.shape);return{a:()=>{const i=Wt(t.shape,o);return i.length>0?M(ye(n,i),t.shape):n},b:()=>{const i=R(n,$t(rh(ke(t,s)))),c=Wt(s.shape,o);return c.length>0?M(ye(i,c),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JD={kernelName:fi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=Ee(t.shape,s.shape);return{a:()=>{const i=R(n,he(s,"float32")),c=Wt(t.shape,o);return c.length>0?M(ye(i,c),t.shape):i},b:()=>{const i=R(n,he(t,"float32")),c=Wt(s.shape,o);return c.length>0?M(ye(i,c),s.shape):i}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const QD={kernelName:ml,gradFunc:n=>({x:()=>$t(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eF={kernelName:mi,inputsToSave:["indices"],gradFunc:(n,e)=>{const t=e[0];return{indices:()=>Ht(t.shape,"float32")}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tF={kernelName:wl,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nF={kernelName:Il,saveAllInputs:!0,gradFunc:(n,e,t)=>{const{axis:s}=t;return _r(n,s).map(r=>()=>r)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cx={kernelName:gi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const s=e[0],{paddings:o}=t,r=o.map(a=>a[0]);return{x:()=>Qe(n,r,s.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sF={kernelName:bi,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(n,e)=>{const[t,s,o]=e,r=t,a=s,i=Ee(r.shape,a.shape);return{a:()=>{const l=he(a,"float32");let d=R(n,R(l,Nr(r,xe(l,Se(1)))));const h=Wt(r.shape,i);return h.length>0&&(d=ye(d,h)),M(d,r.shape)},b:()=>{const l=Jn(r,0),d=On(l,hs(r),Ge(r));let h=R(n,R(o,d));const p=Wt(a.shape,i);return p.length>0&&(h=ye(h,p)),M(h,a.shape)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oF={kernelName:xi,inputsToSave:["x","alpha"],gradFunc:(n,e)=>{const[t,s]=e,o=Jn(t,0);return{x:()=>On(o,n,R(n,s)),alpha:()=>{let r=On(o,Ge(n),R(n,t));const a=Wt(s.shape,n.shape);return a.length>0&&(r=ye(r,a)),M(r,s.shape)}}}};/**
 * @license
 * Copyright 2022 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rF(n,e,t){const s=n.shape.slice();s[t]=1;const o=M(e,s),r=Op(n,t,!0,!1),a=Op(n,t,!0,!0),i=R(r,a);return R(o,i)}function aF(n,e,t){const s=n.shape.length,o=s-t.length,r=pt(t,s);let a=n;r!=null&&(a=We(n,r));const i=a.shape.slice(),u=i.splice(s-t.length,t.length).reduce((h,p)=>h*p,1);i.push(u);const l=a.reshape(i);let d=rF(l,e,o);if(d=d.reshape(a.shape),r!=null){const h=Qs(r);d=We(d,h)}return d}const iF={kernelName:yi,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{axis:o}=t;let r=[];return o==null?r=s.shape.map((a,i)=>i):typeof o=="number"?r=[o]:r=o,{x:()=>aF(s,n,r)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const cF={kernelName:Ya,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=Ee(t.shape,s.shape);return{a:()=>{const i=ke(n,he(s,"float32")),c=Wt(t.shape,o);return c.length>0?M(ye(i,c),t.shape):i},b:()=>{let i=R(n,he(t,"float32"));const c=Wt(s.shape,o);c.length>0&&(i=M(ye(i,c),s.shape));const u=nt(s);return $t(ke(i,he(u,"float32")))}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lF={kernelName:wi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,$t(nt(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uF={kernelName:$i,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e,s=R(zi(t,6),Gl(t));return{x:()=>R(n,he(s,"float32"))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dF={kernelName:Ii,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,he(Gl(t),"float32"))}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hF={kernelName:kl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>M(n,t.shape)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pF={kernelName:vi,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,o={dy:n,images:s};return{images:()=>D.runKernel(Uf,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fF={kernelName:ki,inputsToSave:["images"],gradFunc:(n,e,t)=>{const[s]=e,o={dy:n,images:s};return{images:()=>D.runKernel(Wf,o,t)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mF={kernelName:Ci,gradFunc:(n,e,t)=>{const{dims:s}=t,o=Re(s,n.shape);return{x:()=>Er(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gF={kernelName:Si,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bF={kernelName:Ni,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>$t(ke(n,R(Nr(t,1.5),2)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xF={kernelName:vl,inputsToSave:["condition"],gradFunc:(n,e)=>{const[t]=e;return{condition:()=>he(Ge(t),"float32"),t:()=>R(n,he(t,n.dtype)),e:()=>R(n,he(dm(t),n.dtype))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yF={kernelName:$l,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>{const s=Jn(t,Se(0)),o=Se(ph),r=Se(fh),a=R(n,r),i=R(R(n,o),ds(he(t,"float32")));return On(s,a,i)}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wF={kernelName:Ei,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,R(t,xe(Se(1),t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IF={kernelName:Nl,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kF={kernelName:Ti,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(rm(he(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vF={kernelName:Sl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(Q0(he(t,"float32")),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $F={kernelName:Cl,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{begin:o,size:r}=t,a=s.shape,[i,c]=Pl(s,o,r),u=[];for(let l=0;l<n.rank;l++)u.push([i[l],a[l]-i[l]-c[l]]);return{x:()=>fm(n,u)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CF={kernelName:Ai,outputsToSave:[!0],gradFunc:(n,e,t)=>{const[s]=e,{dim:o}=t,r=!0,a=R(n,s);return{logits:()=>xe(a,R(ye(a,[o],r),s))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const SF={kernelName:Tl,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,Bi(t))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lx={kernelName:El,gradFunc:(n,e,t)=>{const{blockShape:s,paddings:o}=t;return{x:()=>sm(n,s,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ux={kernelName:_l,gradFunc:(n,e,t)=>{const{axis:s}=t;return{x:()=>on(n,s)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NF={kernelName:_i,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,R(gn(he(t,"float32")),2))}}};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TF={kernelName:Vd,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(n,R(he(t,"float32"),2))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const EF={kernelName:Di,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=Se(2);return{a:()=>R(n,R(o,xe(t,s))),b:()=>R(n,R(o,xe(s,t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _F={kernelName:zr,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RF={kernelName:Fi,inputsToSave:["a","b"],gradFunc:(n,e)=>{const[t,s]=e,o=Ee(t.shape,s.shape);return{a:()=>{let i=n;const c=Wt(t.shape,o);return c.length>0&&(i=ye(i,c)),M(i,t.shape)},b:()=>{let i=n;const c=Wt(s.shape,o);return c.length>0&&(i=ye(i,c)),M($t(i),s.shape)}}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AF={kernelName:Ri,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,o=s.shape.slice(),{axis:r}=t;Re(r,s.shape).forEach(u=>{o[u]=1});const i=M(n,o),c=R(i,Ho(s.shape,"float32"));return{x:()=>c}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DF={kernelName:Oi,inputsToSave:["x"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>ke(n,nt(rm(t)))}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FF={kernelName:Mi,outputsToSave:[!0],gradFunc:(n,e)=>{const[t]=e;return{x:()=>R(xe(Se(1),nt(t)),n)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const OF={kernelName:Br,inputsToSave:["x"],gradFunc:(n,e,t)=>{const[s]=e,{reps:o}=t;return{x:()=>{let a=Ge(s);if(s.rank===1)for(let i=0;i<o[0];++i)a=ee(a,Qe(n,[i*s.shape[0]],[s.shape[0]]));else if(s.rank===2)for(let i=0;i<o[0];++i)for(let c=0;c<o[1];++c)a=ee(a,Qe(n,[i*s.shape[0],c*s.shape[1]],[s.shape[0],s.shape[1]]));else if(s.rank===3)for(let i=0;i<o[0];++i)for(let c=0;c<o[1];++c)for(let u=0;u<o[2];++u)a=ee(a,Qe(n,[i*s.shape[0],c*s.shape[1],u*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else if(s.rank===4)for(let i=0;i<o[0];++i)for(let c=0;c<o[1];++c)for(let u=0;u<o[2];++u)for(let l=0;l<o[3];++l)a=ee(a,Qe(n,[i*s.shape[0],c*s.shape[1],u*s.shape[2],l*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]));else throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);return a}}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MF={kernelName:So,gradFunc:(n,e,t)=>{const s=t,{perm:o}=s,r=Qs(o);return{x:()=>We(n,r)}}};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LF={kernelName:Ol,gradFunc:(n,e,t)=>{const s=t,{axis:o}=s;return{value:()=>Do(n,o)}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PF={kernelName:Hd,inputsToSave:["segmentIds"],gradFunc:(n,e)=>{const[t]=e;return{x:()=>BF(n,t)}}};function BF(n,e){const t=yo(e,Ge(e)),s=cm(n,t);let o=Ur(e,Se(0,"int32"));const r=s.rank-o.rank;for(let i=0;i<r;++i)o=_n(o,i+1);o=mo(o,Ho(s.shape,"bool"));const a=Ge(s);return On(o,s,a)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zF={kernelName:Ml,gradFunc:n=>({x:()=>Ge(n)})};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VF=[jw,PA,BA,zA,VA,WA,UA,GA,HA,jA,qA,XA,ZA,eD,tD,nD,sD,oD,rD,aD,iD,cD,uD,lD,pD,fD,mD,gD,bD,xD,cF,yD,wD,ID,kD,vD,CD,$D,SD,ND,TD,ED,_D,RD,AD,DD,FD,OD,MD,BD,ix,ix,zD,UD,jD,qD,XD,KD,YD,ZD,JD,QD,eF,tF,nF,cx,cx,sF,oF,iF,lF,uF,dF,hF,pF,fF,mF,gF,bF,xF,yF,wF,IF,kF,vF,$F,CF,SF,lx,lx,ux,ux,NF,EF,TF,_F,RF,AF,DF,FF,OF,MF,LF,PF,zF];for(const n of VF)e2(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.abs=function(){return this.throwIfDisposed(),Mt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.acos=function(){return this.throwIfDisposed(),NN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.acosh=function(){return this.throwIfDisposed(),EN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.add=function(n){return this.throwIfDisposed(),ee(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.all=function(n,e){return this.throwIfDisposed(),K0(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.any=function(n,e){return this.throwIfDisposed(),Dp(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.argMax=function(n){return this.throwIfDisposed(),yc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.argMin=function(n){return this.throwIfDisposed(),FN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.asScalar=function(){return this.throwIfDisposed(),$(this.size===1,()=>"The array must have only 1 element."),M(this,[])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.asType=function(n){return this.throwIfDisposed(),he(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.as1D=function(){return this.throwIfDisposed(),M(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.as2D=function(n,e){return this.throwIfDisposed(),M(this,[n,e])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.as3D=function(n,e,t){return this.throwIfDisposed(),M(this,[n,e,t])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.as4D=function(n,e,t,s){return this.throwIfDisposed(),M(this,[n,e,t,s])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.as5D=function(n,e,t,s,o){return this.throwIfDisposed(),M(this,[n,e,t,s,o])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.asin=function(){return this.throwIfDisposed(),MN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.asinh=function(){return this.throwIfDisposed(),PN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.atan=function(){return this.throwIfDisposed(),zN(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.atan2=function(n){return this.throwIfDisposed(),WN(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.atanh=function(){return this.throwIfDisposed(),GN(this)};j().prototype.avgPool=function(n,e,t,s){return this.throwIfDisposed(),tm(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.batchToSpaceND=function(n,e){return this.throwIfDisposed(),sm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.batchNorm=function(n,e,t,s,o){return this.throwIfDisposed(),nh(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.broadcastTo=function(n){return this.throwIfDisposed(),mc(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.cast=function(n){return this.throwIfDisposed(),he(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.ceil=function(){return this.throwIfDisposed(),gT(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.clipByValue=function(n,e){return this.throwIfDisposed(),Yn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.concat=function(n,e){return this.throwIfDisposed(),n instanceof Rt&&(n=[n]),on([this,...n],e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.conv1d=function(n,e,t,s,o,r){return this.throwIfDisposed(),Y0(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.conv2dTranspose=function(n,e,t,s,o){return this.throwIfDisposed(),Z0(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.conv2d=function(n,e,t,s,o,r){return this.throwIfDisposed(),Sr(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.cos=function(){return this.throwIfDisposed(),rm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.cosh=function(){return this.throwIfDisposed(),Q0(this)};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.cumprod=function(n,e,t){return this.throwIfDisposed(),Op(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.cumsum=function(n,e,t){return this.throwIfDisposed(),ew(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.depthToSpace=function(n,e){return this.throwIfDisposed(),VT(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.depthwiseConv2d=function(n,e,t,s,o,r){return this.throwIfDisposed(),am(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.dilation2d=function(n,e,t,s,o){return this.throwIfDisposed(),GT(this,n,e,t,s,o)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.divNoNan=function(n){return this.throwIfDisposed(),KT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.div=function(n){return this.throwIfDisposed(),ke(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.dot=function(n){return this.throwIfDisposed(),ZT(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.elu=function(){return this.throwIfDisposed(),sh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.equal=function(n){return this.throwIfDisposed(),Ks(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.erf=function(){return this.throwIfDisposed(),eE(this)};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.euclideanNorm=function(n,e){return this.throwIfDisposed(),lE(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.exp=function(){return this.throwIfDisposed(),ds(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.expandDims=function(n){return this.throwIfDisposed(),_n(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.expm1=function(){return this.throwIfDisposed(),pE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.fft=function(){return this.throwIfDisposed(),Cw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.flatten=function(){return this.throwIfDisposed(),M(this,[this.size])};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.floor=function(){return this.throwIfDisposed(),rh(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.floorDiv=function(n){return this.throwIfDisposed(),X0(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.gather=function(n,e){return this.throwIfDisposed(),cm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.greaterEqual=function(n){return this.throwIfDisposed(),Ur(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.greater=function(n){return this.throwIfDisposed(),Jn(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.ifft=function(){return this.throwIfDisposed(),Mp(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.irfft=function(){return this.throwIfDisposed(),j_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.isFinite=function(){return this.throwIfDisposed(),IE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.isInf=function(){return this.throwIfDisposed(),vE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.isNaN=function(){return this.throwIfDisposed(),CE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.leakyRelu=function(n){return this.throwIfDisposed(),lm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.lessEqual=function(n){return this.throwIfDisposed(),zi(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.less=function(n){return this.throwIfDisposed(),ow(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.localResponseNormalization=function(n,e,t,s){return this.throwIfDisposed(),RE(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logSigmoid=function(){return this.throwIfDisposed(),LE(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logSoftmax=function(n){return this.throwIfDisposed(),rw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logSumExp=function(n,e){return this.throwIfDisposed(),aw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.log=function(){return this.throwIfDisposed(),hs(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.log1p=function(){return this.throwIfDisposed(),um(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logicalAnd=function(n){return this.throwIfDisposed(),mo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logicalNot=function(){return this.throwIfDisposed(),dm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logicalOr=function(n){return this.throwIfDisposed(),iw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.logicalXor=function(n){return this.throwIfDisposed(),HE(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.matMul=function(n,e,t){return this.throwIfDisposed(),Xe(this,n,e,t)};j().prototype.maxPool=function(n,e,t,s){return this.throwIfDisposed(),hm(this,n,e,t,s)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.max=function(n,e){return this.throwIfDisposed(),us(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.maximum=function(n){return this.throwIfDisposed(),yo(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.mean=function(n,e){return this.throwIfDisposed(),St(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.min=function(n,e){return this.throwIfDisposed(),wc(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.minimum=function(n){return this.throwIfDisposed(),Wl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.mirrorPad=function(n,e){return this.throwIfDisposed(),QE(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.mod=function(n){return this.throwIfDisposed(),cw(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.mul=function(n){return this.throwIfDisposed(),R(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.neg=function(){return this.throwIfDisposed(),$t(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.norm=function(n,e,t){return this.throwIfDisposed(),oh(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.notEqual=function(n){return this.throwIfDisposed(),Ic(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.oneHot=function(n,e=1,t=0){return this.throwIfDisposed(),P0(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.onesLike=function(){return this.throwIfDisposed(),ps(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.pad=function(n,e){return this.throwIfDisposed(),fm(this,n,e)};j().prototype.pool=function(n,e,t,s,o,r){return this.throwIfDisposed(),l_(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.pow=function(n){return this.throwIfDisposed(),Nr(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.prelu=function(n){return this.throwIfDisposed(),gm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.prod=function(n,e){return this.throwIfDisposed(),h_(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.reciprocal=function(){return this.throwIfDisposed(),S_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.relu=function(){return this.throwIfDisposed(),wo(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.relu6=function(){return this.throwIfDisposed(),bw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.reshapeAs=function(n){return this.throwIfDisposed(),M(this,n.shape)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.reshape=function(n){return this.throwIfDisposed(),M(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.resizeBilinear=function(n,e,t){return this.throwIfDisposed(),Rw(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.resizeNearestNeighbor=function(n,e,t){return this.throwIfDisposed(),Aw(this,n,e,t)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.reverse=function(n){return this.throwIfDisposed(),Er(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.rfft=function(){return this.throwIfDisposed(),Sw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.round=function(){return this.throwIfDisposed(),xw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.rsqrt=function(){return this.throwIfDisposed(),yw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.selu=function(){return this.throwIfDisposed(),ww(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.separableConv2d=function(n,e,t,s,o,r){return this.throwIfDisposed(),Iw(this,n,e,t,s,o,r)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sigmoid=function(){return this.throwIfDisposed(),Bi(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sign=function(){return this.throwIfDisposed(),O_(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sin=function(){return this.throwIfDisposed(),kw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sinh=function(){return this.throwIfDisposed(),vw(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.slice=function(n,e){return this.throwIfDisposed(),Qe(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.softmax=function(n){return this.throwIfDisposed(),wm(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.softplus=function(){return this.throwIfDisposed(),Vl(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.spaceToBatchND=function(n,e){return this.throwIfDisposed(),mm(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.split=function(n,e){return this.throwIfDisposed(),qn(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sqrt=function(){return this.throwIfDisposed(),gn(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.square=function(){return this.throwIfDisposed(),nt(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.squaredDifference=function(n){return this.throwIfDisposed(),Im(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.squeeze=function(n){return this.throwIfDisposed(),Ul(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.stack=function(n,e){this.throwIfDisposed();const t=n instanceof Rt?[this,n]:[this,...n];return Do(t,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.step=function(n){return this.throwIfDisposed(),Gl(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.stridedSlice=function(n,e,t,s,o,r,a,i){return this.throwIfDisposed(),eR(this,n,e,t,s,o,r,a,i)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sub=function(n){return this.throwIfDisposed(),xe(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.sum=function(n,e){return this.throwIfDisposed(),ye(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.tan=function(){return this.throwIfDisposed(),nR(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.tanh=function(){return this.throwIfDisposed(),nm(this)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.tile=function(n){return this.throwIfDisposed(),$s(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.toBool=function(){return this.throwIfDisposed(),he(this,"bool")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.toFloat=function(){return this.throwIfDisposed(),he(this,"float32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.toInt=function(){return this.throwIfDisposed(),he(this,"int32")};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.topk=function(n,e){return this.throwIfDisposed(),oR(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.transpose=function(n){return this.throwIfDisposed(),We(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.unique=function(n){return this.throwIfDisposed(),iR(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.unsortedSegmentSum=function(n,e){return this.throwIfDisposed(),Tw(this,n,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.unstack=function(n){return this.throwIfDisposed(),_r(this,n)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.where=function(n,e){return this.throwIfDisposed(),On(n,this,e)};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */j().prototype.zerosLike=function(){return this.throwIfDisposed(),Ge(this)};/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Ms extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ms.prototype)}}class cs extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cs.prototype)}}class A extends Error{constructor(e){super(e),Object.setPrototypeOf(this,A.prototype)}}class De extends Error{constructor(e){super(e),Object.setPrototypeOf(this,De.prototype)}}class cg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,cg.prototype)}}/**
 * @license
 * Copyright 2022 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Xw{constructor(e){this.maxEntries=e||100,this.cache=new Map}get(e){let t;return this.cache.has(e)&&(t=this.cache.get(e),this.cache.delete(e),this.cache.set(e,t)),t}put(e,t){if(this.cache.has(e))this.cache.delete(e);else if(this.cache.size>=this.maxEntries){const s=this.cache.keys().next().value;this.cache.delete(s)}this.cache.set(e,t)}getMaxEntries(){return this.maxEntries}setMaxEntries(e){if(e<0)throw new Error(`The maxEntries of LRU caches must be at least 0, but got ${e}.`);if(this.maxEntries>e)for(let t=0;t<this.maxEntries-e;t++){const s=this.cache.keys().next().value;this.cache.delete(s)}this.maxEntries=e}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Ar(n,e){if(Array.isArray(n)){let t=[];for(let s=0;s<e;s++)t=t.concat(n);return t}else{const t=new Array(e);return t.fill(n),t}}function Ls(n,e){if(!n)throw new cg(e)}function dx(n,e){let t=0;for(const s of n)s===e&&t++;return t}function wn(n){return n.length===1?n[0]:n}function ft(n){return Array.isArray(n)?n:[n]}function co(n){const t=n.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return t[0]!=="_"?t:"private"+t}function lr(n){return n.length<=1||n.indexOf("_")===-1?n:n.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}let ts={};function lg(n){if(n==null)return null;const e={};return e.className=n.getClassName(),e.config=n.getConfig(),e}function Lp(n){if(!(n==null||typeof n!="object"))if(Array.isArray(n))n.forEach(e=>Lp(e));else{const e=Object.keys(n);for(const t of e){const s=n[t];s!=null&&typeof s=="object"&&(!Array.isArray(s)&&s.type==="ndarray"&&typeof s.value=="number"?n[t]=s.value:Lp(s))}}}function Hl(n,e={},t={},s="object",o=!1){if(typeof n=="string"){const r=n;let a;if(r in t)a=t[r];else if(r in ts)a=ts[r];else if(a=e[r],a==null)throw new A(`Unknown ${s}: ${n}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}else{const r=n;if(r.className==null||r.config==null)throw new A(`${s}: Improper config format: ${JSON.stringify(r)}.
'className' and 'config' must set.`);const a=r.className;let i,c;if(a in t?[i,c]=t[a]:a in ts?[i,c]=ts.className:a in e&&([i,c]=e[a]),i==null)throw new A(`Unknown ${s}: ${a}. This may be due to one of the following reasons:
1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.
2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(c!=null){const u={};for(const p of Object.keys(ts))u[p]=ts[p];for(const p of Object.keys(t))u[p]=t[p];const l=r.config;l.customObjects=u;const d=Object.assign({},ts);for(const p of Object.keys(t))ts[p]=t[p];Lp(r.config);const h=c(i,r.config,t,o);return ts=Object.assign({},d),h}else{const u=Object.assign({},ts);for(const d of Object.keys(t))ts[d]=t[d];const l=new i(r.config);return ts=Object.assign({},u),l}}}function WF(n,e){return n<e?-1:n>e?1:0}function vu(n,e){return-1*WF(n,e)}function Eo(n){if(n==null)return n;const e=[];for(const t of n)e.indexOf(t)===-1&&e.push(t);return e}function UF(n){if(n==null)throw new A(`Invalid value in obj: ${JSON.stringify(n)}`);for(const e in n)if(n.hasOwnProperty(e))return!1;return!0}function Xr(n,e,t){if(t!=null&&n.indexOf(t)<0)throw new A(`${t} is not a valid ${e}.  Valid values are ${n} or null/undefined.`)}function ug(n,e,t=0,s=1/0){return Ls(t>=0),Ls(s>=t),Array.isArray(n)&&n.length>=t&&n.length<=s&&n.every(o=>typeof o===e)}function jt(n,e){Array.isArray(n)?($(n.length>0,()=>`${e} is unexpectedly an empty array.`),n.forEach((t,s)=>jt(t,`element ${s+1} of ${e}`))):$(Number.isInteger(n)&&n>0,()=>`Expected ${e} to be a positive integer, but got ${Kw(n)}.`)}function Kw(n){return n===null?"null":Array.isArray(n)?"["+n.map(e=>Kw(e)).join(",")+"]":typeof n=="string"?`"${n}"`:`${n}`}function GF(n,e,t){let s=t!=null?t():nn(),o;return(...a)=>{const i=t!=null?t():nn();return i-s<e||(s=i,o=n(...a)),o}}function Yw(n){return n==="relu"?"relu":n==="linear"?"linear":n==="elu"?"elu":null}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let HF=0;function Zw(){return HF++}const $u={};function bh(n=""){return n in $u||($u[n]=0),$u[n]+=1,n+$u[n].toString()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const jF=["channelsFirst","channelsLast"],qF=["nearest","bilinear"],XF=["valid","same","causal"],KF=["max","avg"],YF=["sum","mul","concat","ave"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const ra=new Map;function Et(n){Xr(jF,"DataFormat",n)}function ZF(n){Xr(qF,"InterpolationFormat",n)}function Qn(n){Xr(XF,"PaddingMode",n)}function Jw(n){Xr(KF,"PoolMode",n)}const gc=[],hx="/";function yr(n,e){gc.push(n);try{const t=e();return gc.pop(),t}catch(t){throw gc.pop(),t}}function JF(){return gc.length===0?"":gc.join(hx)+hx}function Qw(n){if(!t1(n))throw new Error("Not a valid tensor name: '"+n+"'");return JF()+n}function e1(n){if(!t1(n))throw new Error("Not a valid tensor name: '"+n+"'");ra.has(n)||ra.set(n,0);const e=ra.get(n);if(ra.set(n,ra.get(n)+1),e>0){const t=`${n}_${e}`;return ra.set(t,1),t}else return n}const QF=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function t1(n){return!!n.match(QF)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function eO(n){return n===parseInt(n.toString(),10)}function _o(n,e,t){e==null&&(e=0),t==null&&(t=n.length);let s=1;for(let o=e;o<t;++o)s*=n[o];return s}function Ta(n){if(n.length===0)return Number.NaN;let e=Number.POSITIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s<e&&(e=s)}return e}function Fo(n){if(n.length===0)return Number.NaN;let e=Number.NEGATIVE_INFINITY;for(let t=0;t<n.length;t++){const s=n[t];s>e&&(e=s)}return e}function Ns(n,e){if(e<n)throw new A(`end (${e}) < begin (${n}) is forbidden.`);const t=[];for(let s=n;s<e;++s)t.push(s);return t}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */let qh;function Lt(){return qh==null&&(qh=uN().epsilon()),qh}function Ts(){return"channelsLast"}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Gs(n,e){return he(n,e)}function jl(n,e=-1){const t=n.shape.slice();return e<0&&(e=t.length+e+1),t.splice(e,0,1),M(n,t)}function tO(n,e){return G(()=>{if(n.shape.length!==2)throw new A(`repeat() expects a rank-2 tensor, but received a rank-${n.shape.length} tensor.`);const t=jl(n,1);return Pp(t,[1,e,1])})}function nO(n){const e=[_o(n.shape)];return M(n,e)}function sO(n){if(n.rank<=1)throw new A(`batchFlatten requires a minimum rank of 2. Got rank: ${n.rank}.`);const e=[n.shape[0],_o(n.shape,1)];return M(n,e)}function wr(n,e,t){return G(()=>{switch(n.rank){case 1:return xm(n,e,t);case 2:return $w(n,[e,0],[t,n.shape[1]]);case 3:return ym(n,[e,0,0],[t,n.shape[1],n.shape[2]]);case 4:return nd(n,[e,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3]]);case 5:return Qe(n,[e,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4]]);case 6:return Qe(n,[e,0,0,0,0,0],[t,n.shape[1],n.shape[2],n.shape[3],n.shape[4],n.shape[5]]);default:throw new A(`sliceAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Xh(n,e,t){return G(()=>{switch(n.rank){case 1:return xm(n,e,t);case 2:return $w(n,[0,e],[n.shape[0],t]);case 3:return ym(n,[0,0,e],[n.shape[0],n.shape[1],t]);case 4:return nd(n,[0,0,0,e],[n.shape[0],n.shape[1],n.shape[2],t]);default:throw new A(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function Cu(n,e,t,s){return G(()=>{switch(n.rank){case 1:return xm(n,e,t);case 2:switch(s){case 1:return wr(n,e,t);case 2:return Xh(n,e,t);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return wr(n,e,t);case 2:return ym(n,[0,e,0],[n.shape[0],t,n.shape[2]]);case 3:return Xh(n,e,t);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return wr(n,e,t);case 2:return nd(n,[0,e,0,0],[n.shape[0],t,n.shape[2],n.shape[3]]);case 3:return nd(n,[0,0,e,0],[n.shape[0],n.shape[1],t,n.shape[3]]);case 4:return Xh(n,e,t);default:throw new A(`The axis is not within the rank of the tensor ${s}`)}default:throw new A(`sliceAlongLastAxis() received an unsupported tensor rank: ${n.rank}`)}})}function dg(n,e=-1){let t;return e<0&&(t=n[0].rank,t!==0?e=t:e=0),e===n[0].rank&&(e=-1),on(n,e)}function px(n,e){switch(n.rank){case 1:return yT([n,e]);case 2:return IT([n,e],0);case 3:return vT([n,e],0);case 4:return CT([n,e],0);default:throw new A(`concatAlongFirstAxis() received an unsupported tensor rank: ${n.rank}`)}}function Pp(n,e){if(Array.isArray(e)||(e=[e]),n.rank!==e.length)throw new A(`The length of input n (${e.length}) does not match the number of dimensions in input x (${n.rank})`);return $s(n,e)}function xh(n,e=0,t=1,s,o){return v_(n,e,t,s,o)}function Hs(n,e,t,s){if(n.rank<2||e.rank<2)throw new De(`dot requires both inputs to be rank >= 2 but got x shape = ${n.shape} and y shape = ${e.shape}`);if(e.rank>=3){const o=n.shape.slice(-1)[0],r=e.shape.slice(-2)[0];if(o!==r)throw new De(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${n.shape} and  y shape = ${e.shape}`)}if(n.rank===2&&e.rank===2)return ex({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Bp(n.rank,s,Ts()):null,activation:t});{const o=n.shape.slice(),r=o.pop();n=M(n,[-1,r]);const a=e.shape.slice(),i=a.pop(),c=a.pop(),u=[...a,i],l=Array.from({length:e.rank},(f,m)=>m===0?e.rank-2:m<=e.rank-2?m-1:m);e=M(We(e,l),[c,-1]);const d=[...o,...u];return M(ex({a:n,b:e,transposeA:!1,transposeB:!1,bias:s?Bp(n.rank,s,Ts()):null,activation:t}),d)}}function n1(n,e,t){return G(()=>(Array.isArray(e)?e=Dn(e,"int32"):e=he(e,"int32"),cm(n,e,t)))}function ql(n){return R(n,n)}function Bp(n,e,t){const s=e.shape;if(e.rank!==1&&e.rank!==n)throw new A(`Unexpected bias dimensions: ${e.rank}; expected it to be 1 or ${n}`);if(n===5){if(t==="channelsFirst")return s.length===1?M(e,[1,s[0],1,1,1]):M(e,[1,s[3],s[0],s[1],s[2]]);if(t==="channelsLast")return s.length===1?M(e,[1,1,1,1,s[0]]):M(e,[1].concat(s))}else if(n===4){if(t==="channelsFirst")return s.length===1?M(e,[1,s[0],1,1]):M(e,[1,s[2],s[0],s[1]]);if(t==="channelsLast")return s.length===1?M(e,[1,1,1,s[0]]):M(e,[1].concat(s))}else if(n===3){if(t==="channelsFirst")return s.length===1?M(e,[1,s[0],1]):M(e,[1,s[1],s[0]]);if(t==="channelsLast")return s.length===1?M(e,[1,1,s[0]]):M(e,[1].concat(s))}else if(n<3)return e;throw new A(`Unsupported input rank by biasAdd: ${e.rank}`)}function Ds(n,e,t){return G(()=>(t==null&&(t=Ts()),Et(t),ee(n,Bp(n.rank,e,t))))}function oO(n,e=1){if(e!==1)throw new De(`Support for alpha values other than 1 (${e}) is not implemented yet.`);return sh(n)}function rO(n){return G(()=>ke(n,ee(Mt(n),1)))}function s1(n,e,t,s){return G(()=>pR(n,e,t,s))}function aO(n){return G(()=>{const e=ee(.5,R(.2,n));return Yn(e,0,1)})}function Xl(n,e,t=!1){return t?n():e()}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const iO=["fanIn","fanOut","fanAvg"],cO=["normal","uniform","truncatedNormal"];/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function lO(n){Xr(iO,"FanMode",n)}function uO(n){Xr(cO,"Distribution",n)}class ms extends Pi{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class o1 extends ms{apply(e,t){return Ht(e,t)}}o1.className="Zeros";Q(o1);class hg extends ms{apply(e,t){return Ho(e,t)}}hg.className="Ones";Q(hg);class r1 extends ms{constructor(e){if(super(),typeof e!="object")throw new A(`Expected argument of type ConstantConfig but got ${e}`);if(e.value===void 0)throw new A(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return G(()=>R(Se(this.value),Ho(e,t)))}getConfig(){return{value:this.value}}}r1.className="Constant";Q(r1);class a1 extends ms{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return ah(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}a1.className="RandomUniform";Q(a1);class i1 extends ms{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new De(`randomNormal does not support dType ${t}.`);return xh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}i1.className="RandomNormal";Q(i1);class c1 extends ms{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if(t=t||"float32",t!=="float32"&&t!=="int32")throw new De(`truncatedNormal does not support dType ${t}.`);return Nw(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}c1.className="TruncatedNormal";Q(c1);class l1 extends ms{constructor(e){super(),this.gain=e.gain!=null?e.gain:1}apply(e,t){return G(()=>{if(e.length!==2||e[0]!==e[1])throw new A("Identity matrix initializer can only be used for 2D square matrices.");return R(this.gain,sw(e[0]))})}getConfig(){return{gain:this.gain}}}l1.className="Identity";Q(l1);function dO(n,e="channelsLast"){let t,s;if(Et(e),n.length===2)t=n[0],s=n[1];else if([3,4,5].indexOf(n.length)!==-1){if(e==="channelsFirst"){const o=_o(n,2);t=n[1]*o,s=n[0]*o}else if(e==="channelsLast"){const o=_o(n,0,n.length-2);t=n[n.length-2]*o,s=n[n.length-1]*o}}else{const o=_o(n);t=Math.sqrt(o),s=Math.sqrt(o)}return[t,s]}class Mn extends ms{constructor(e){if(super(),e.scale<0)throw new A(`scale must be a positive float. Got: ${e.scale}`);this.scale=e.scale==null?1:e.scale,this.mode=e.mode==null?"fanIn":e.mode,lO(this.mode),this.distribution=e.distribution==null?"normal":e.distribution,uO(this.distribution),this.seed=e.seed}apply(e,t){const s=dO(e),o=s[0],r=s[1];let a=this.scale;if(this.mode==="fanIn"?a/=Math.max(1,o):this.mode==="fanOut"?a/=Math.max(1,r):a/=Math.max(1,(o+r)/2),this.distribution==="normal"){const i=Math.sqrt(a);if(t=t||"float32",t!=="float32"&&t!=="int32")throw new De(`${this.getClassName()} does not support dType ${t}.`);return Nw(e,0,i,t,this.seed)}else{const i=Math.sqrt(3*a);return ah(e,-i,i,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Mn.className="VarianceScaling";Q(Mn);class pg extends Mn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}pg.className="GlorotUniform";Q(pg);class fg extends Mn{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}fg.className="GlorotNormal";Q(fg);class mg extends Mn{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}mg.className="HeNormal";Q(mg);class gg extends Mn{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}gg.className="HeUniform";Q(gg);class bg extends Mn{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}bg.className="LeCunNormal";Q(bg);class xg extends Mn{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:e==null?null:e.seed})}getClassName(){return Mn.className}}xg.className="LeCunNormal";Q(xg);class u1 extends ms{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=e.gain==null?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,this.seed!=null)throw new De("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return G(()=>{if(e.length<2)throw new De("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const s=e[0]>e[1]?[e[1],e[0]]:e,o=xh(s,0,1,"float32");let r=AA.gramSchmidt(o);return e[0]>e[1]&&(r=We(r)),R(this.gain,r)})}getConfig(){return{gain:this.gain,seed:this.seed}}}u1.className="Orthogonal";Q(u1);const fx={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function mx(n,e={}){return Hl(n,os.getMap().classNameMap,e,"initializer")}function vt(n){return lg(n)}function wt(n){if(typeof n=="string"){const e=n in fx?fx[n]:n;if(e==="GlorotNormal")return new fg;if(e==="GlorotUniform")return new pg;if(e==="HeNormal")return new mg;if(e==="HeUniform")return new gg;if(e==="LeCunNormal")return new bg;if(e==="LeCunUniform")return new xg;{const t={};return t.className=e,t.config={},mx(t)}}else return n instanceof ms?n:mx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function zp(n){return Array.isArray(n)&&Array.isArray(n[0])}function sd(n){return n.length===0?[]:Array.isArray(n[0])?n:[n]}function Ce(n){let e;if(Array.isArray(n)){if(n.length!==1)throw new A(`Expected Tensor length to be 1; got ${n.length}`);e=n[0]}else e=n;return e}function je(n){if(Array.isArray(n)&&Array.isArray(n[0])){if(n.length===1)return n=n,n[0];throw new A(`Expected exactly 1 Shape; got ${n.length}`)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function od(n){let e=0;for(const t of n)t.shape.length===0?e+=1:e+=t.shape.reduce((s,o)=>s*o);return e}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const gx="Variable";class hO{constructor(e,t="float32",s=gx,o=!0,r=null){this.dtype=t??"float32",this.shape=e.shape,this.id=Zw(),s=s??gx,this.originalName=Qw(s),this.name=e1(this.originalName),this.trainable_=o,this.constraint=r,this.val=uR(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),pO(this.val,e),this.val.id!==e.id&&(this.val.assign(e),this.constraint!=null&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function pO(n,e){if(n.shape.toString()!==e.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(n.shape)+" vs. "+JSON.stringify(e.shape))}function Vp(n){return n.map(e=>e.read())}function yg(n){n.forEach(e=>{e[0].write(e[1])})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Pt{constructor(e){this.dtype=e.dtype,this.shape=e.shape,e.shape!=null?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Bs{constructor(e,t,s,o,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=s,this.inputs=o,this.callArgs=r,this.outputTensorIndex=i,this.id=Zw(),a!=null&&(this.originalName=Qw(a),this.name=e1(this.originalName)),this.rank=t.length}}let fO=0;class yh{constructor(e,t){this.callArgs=t,this.id=fO++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const s of e.inboundLayers)s?.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)t!=null?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let mO=0;class Be extends Pi{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=mO++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const s=this.getClassName();t=co(s)+"_"+bh(s)}if(this.name=t,this.trainable_=e.trainable==null?!0:e.trainable,e.inputShape!=null||e.batchInputShape!=null){let s;if(e.batchInputShape!=null)s=e.batchInputShape;else if(e.inputShape!=null){let r=null;e.batchSize!=null&&(r=e.batchSize),s=[r].concat(e.inputShape)}this.batchInputShape=s;let o=e.dtype;o==null&&(o=e.inputDType),o==null&&(o="float32"),this.dtype=o}e.weights!=null?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(this.inboundNodes.length===0)throw new cs(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new A(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return wn(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return wn(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ms(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(this.inboundNodes.length===0)throw new Ms(`Layer ${this.name} is not connected, no input to return.`);return wn(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(this.inboundNodes.length===0)throw new Ms(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ms(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return wn(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ft(e),this.inputSpec==null||this.inputSpec.length===0)return;const t=ft(this.inputSpec);if(e.length!==t.length)throw new A(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let s=0;s<e.length;s++){const o=e[s],r=t[s];if(r==null)continue;const a=o.rank;if(r.ndim!=null&&a!==r.ndim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(r.maxNDim!=null&&a>r.maxNDim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(r.minNDim!=null&&a<r.minNDim)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(r.dtype!=null&&o.dtype!==r.dtype)throw new A(`Input ${s} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${o.dtype}.`);if(r.axes){const i=o.shape;for(const c in r.axes){const u=Number(c),l=r.axes[c],d=u>=0?i[u]:i[i.length+u];if(l!=null&&[l,null].indexOf(d)===-1)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected axis ${u} of input shape to have value ${l} but got shape ${i}.`)}}if(r.shape!=null)for(let i=0;i<r.shape.length;++i){const c=r.shape[i],u=o.shape[i];if(c!=null&&u!=null&&c!==u)throw new A(`Input ${s} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${o.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){this._callHook!=null&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const s=ft(e);let o=!0;for(const a of s)if(!(a instanceof Bs)){o=!1;break}let r=!0;for(const a of s)if(a instanceof Bs){r=!1;break}if(o===r)throw new A("Arguments to apply() must be all SymbolicTensors or all Tensors");return yr(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const a=[];for(const i of ft(e))a.push(i.shape);this.build(wn(a)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),this._refCount===null&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let a=this.call(e,t);const i=ft(a),c=[];for(let u of i)s.indexOf(u)!==-1&&(u=u.clone()),c.push(u);if(a=wn(c),this.activityRegularizer!=null)throw new De("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}else{const a=gO(e),i=this.computeOutputShape(a);let c;const u=bO(e);if(this.warnOnIncompatibleInputShape(Array.isArray(e)?a[0]:a),i!=null&&i.length>0&&Array.isArray(i[0])?c=i.map((l,d)=>new Bs(u,l,this,ft(e),t,this.name,d)):c=new Bs(u,i,this,ft(e),t,this.name),this.addInboundNode(e,c,null,null,a,i,t),this._refCount++,this.activityRegularizer!=null)throw new De("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return c}})}warnOnIncompatibleInputShape(e){if(this.batchInputShape!=null)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((s,o)=>{s!=null&&e[o]!=null&&e[o]!==s&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(this.inboundNodes==null||this.inboundNodes.length===0)throw new Ms(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const s=JSON.stringify(t.outputShapes);e.indexOf(s)===-1&&e.push(s)}if(e.length===1){const t=this.inboundNodes[0].outputShapes;return Array.isArray(t)&&Array.isArray(t[0])&&t.length===1?t[0]:t}else throw new Ms(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new cs(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return od(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Vp(e?this.trainableWeights:this.weights)}setWeights(e){G(()=>{const t=this.weights;if(t.length!==e.length)throw new A(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(t.length===0)return;const s=[],o=Vp(t);for(let r=0;r<o.length;++r){const a=o[r],i=t[r],c=e[r];if(!Ke(a.shape,c.shape))throw new A(`Layer weight shape ${a.shape} not compatible with provided weight shape ${c.shape}`);s.push([i,c])}yg(s)})}addWeight(e,t,s,o,r,a,i,c){if(this._addedWeightNames.indexOf(e)!==-1)throw new A(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),s==null&&(s="float32"),this.fastWeightInitDuringBuild&&(o=c!=null?c():wt("zeros"));const u=o.apply(t,s),l=new hO(u,s,e,a,i);return u.dispose(),r!=null&&this.addLoss(()=>r.apply(l.read())),a==null&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){e==null||Array.isArray(e)&&e.length===0||(e=ft(e),this._losses!==void 0&&this._losses!==null&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(t!=null)if(Array.isArray(t))t.forEach(s=>{if(s!=null)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)});else throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);return null}return t}addInboundNode(e,t,s,o,r,a,i=null){const c=ft(e);t=ft(t),s=ft(s),o=ft(o),r=sd(r),a=sd(a);const u=[],l=[],d=[];for(const h of c)u.push(h.sourceLayer),l.push(h.nodeIndex),d.push(h.tensorIndex);new yh({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:d,inputTensors:c,outputTensors:t,inputMasks:s,outputMasks:o,inputShapes:r,outputShapes:a},i);for(let h=0;h<t.length;h++)t[h].sourceLayer=this,t[h].nodeIndex=this.inboundNodes.length-1,t[h].tensorIndex=h}getConfig(){const e={name:this.name,trainable:this.trainable};return this.batchInputShape!=null&&(e.batchInputShape=this.batchInputShape),this.dtype!=null&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(this._refCount===0)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(this._refCount===null)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return--this._refCount===0&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function gO(n){n=ft(n);const e=[];for(const t of n)e.push(t.shape);return wn(e)}function bO(n){return"float32"}function d1(n,e,t){if((e==null||t!=null&&t>0)&&(e=n.sourceLayer,t=n.nodeIndex),e.inboundNodes.length===0)return[n];{const s=e.inboundNodes[t];if(s.inboundLayers.length===0)return s.inputTensors;{const o=[];for(let r=0;r<s.inboundLayers.length;r++){const a=s.inputTensors[r],i=s.inboundLayers[r],c=s.nodeIndices[r],u=d1(a,i,c);for(const l of u)o.indexOf(l)===-1&&o.push(l)}return o}}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Kl extends Be{constructor(e){if(super({dtype:e.dtype,name:e.name!=null?e.name:bh("input").toString()}),e.batchSize==null&&(e.batchSize=null),e.sparse==null&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,e.inputShape!=null&&e.batchInputShape!=null)throw new A("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(t==null){if(e.inputShape==null)throw new A("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(e.batchSize!=null)throw new A("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const s=e.dtype||"float32";this.batchInputShape=t,this.dtype=s,this.inputSpec=[{shape:t}];const o=new Bs(this.dtype,this.batchInputShape,this,[],{},this.name);o.nodeIndex=0,o.tensorIndex=0,new yh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[o],outputTensors:[o],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new A(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}Kl.className="InputLayer";Q(Kl);function xO(n){if(n.batchShape==null&&n.shape==null)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(n.batchShape!=null&&n.shape!=null)throw new A("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let e=n.batchShape;n.shape!=null&&e==null&&(e=[null].concat(n.shape));let t=n.dtype;return t==null&&(t="float32"),new Kl({batchInputShape:e,name:n.name,dtype:t,sparse:n.sparse}).inboundNodes[0].outputTensors[0]}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yO(n,e){if(n.dtype==null||n.dtype===e.dtype)return e;try{return he(e,n.dtype)}catch{throw new A(`The dtype of the feed (${e.dtype}) can not be cast to the dtype of the key '${n.name}' (${n.dtype}).`)}}class $o{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof $o)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(e==null)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,s){if(this.id2Value[e.id]==null)this.id2Value[e.id]=yO(e,t),this.name2Id[e.name]=e.id,s!=null&&(this.id2Mask[e.id]=s);else throw new A(`Duplicate key: name=${e.name}, id=${e.id}`);return this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return this.id2Value[e.id]!=null}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Bs){if(this.id2Value[e.id]==null)throw new A(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}else{const t=this.name2Id[e];if(t==null)throw new A(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Bs){if(this.id2Value[e.id]==null)throw new A(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}else{const t=this.name2Id[e];if(t==null)throw new A(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){this.id2Mask!=null&&Pe(this.id2Mask)}}const rd=new Xw,ad=new Xw;function wO(n){rd?.setMaxEntries(n),ad?.setMaxEntries(n)}function dc(n,e,t,s){const o=t==null?!1:t.training,r=Array.isArray(n),a=r?n:[n],i=a.map(f=>f.name),c=[],u=e.names();for(const f of i)u.indexOf(f)!==-1?c.push(e.getValue(f)):c.push(null);s!=null&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const l=i.join(",")+"|"+e.names().sort().join(",");let d=rd.get(l),h;if(d==null){const f=IO(a,e);d=f.sorted,h=f.recipientCounts,rd.put(l,d),ad.put(l,h)}h={},o||Object.assign(h,ad.get(l));const p=new $o(e);for(let f=0;f<d.length;++f){if(s!=null){const N=Rp().numTensors;N>s.maxNumTensors&&(s.maxNumTensors=N),N<s.minNumTensors&&(s.minNumTensors=N)}const m=d[f],g=m.sourceLayer;if(g instanceof Kl)continue;const b=[],x=[],y=[];let w=!1;for(const N of m.inputs){const T=p.getValue(N),_=p.getMask(N);b.push(T),x.push(_),_!=null&&(w=!0),o||(h[N.name]--,h[N.name]===0&&!e.hasKey(N)&&i.indexOf(N.name)===-1&&!T.isDisposed&&N.sourceLayer.stateful!==!0&&y.push(T))}w&&(t=t||{},t.mask=x[0]);const I=ft(g.apply(b,t));let k=null;g.supportsMasking&&(k=g.computeMask(b,x));const v=vO(m),C=Array.isArray(v)?v:[v];for(let N=0;N<C.length;++N){p.hasKey(C[N])||p.add(C[N],I[N],Array.isArray(k)?k[0]:k);const T=i.indexOf(C[N].name);T!==-1&&(c[T]=I[N])}o||Pe(y)}return p.disposeMasks(),r?c:c[0]}function IO(n,e){$(n!=null&&n.length>0,()=>"Expected at least one fetch, got none");let t=[],s={};if(n.length===1){const o=bx(n[0],e);t=o.sorted,s=o.recipientMap}else{const o=new Set;for(const r of n){const{sorted:a,recipientMap:i}=bx(r,e);for(const c of a)o.has(c.name)||(t.push(c),o.add(c.name));for(const c in i)s[c]==null&&(s[c]=new Set),i[c].forEach(u=>s[c].add(u))}}return{sorted:t,recipientCounts:kO(s)}}function kO(n){const e={};for(const t in n)e[t]=n[t].size;return e}function bx(n,e){const t=new Set,s=[],o={};for(const i of e.names())t.add(i);const r=[],a=[];for(r.push(n);r.length>0;){const i=r[r.length-1];if(t.has(i.name)){r.pop();continue}const c=a[a.length-1]===r.length-1;if(i.inputs.length===0||c)r.pop(),s.push(i),t.add(i.name),c&&a.pop();else{a.push(r.length-1);for(const u of i.inputs)o[u.name]==null&&(o[u.name]=new Set),o[u.name].add(i.name),!t.has(u.name)&&r.push(u)}}return{sorted:s,recipientMap:o}}function vO(n){let e;if(n.sourceLayer.inboundNodes.length===1)e=n.sourceLayer.output;else{let t=null;for(let s=0;s<n.sourceLayer.inboundNodes.length;++s)for(const o of n.sourceLayer.inboundNodes[s].outputTensors)if(o.id===n.id){t=s;break}e=n.sourceLayer.getOutputAt(t)}return e}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $O=H();$O.registerFlag("TOPOLOGICAL_SORT_CACHE_MAX_ENTRIES",()=>100,wO);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function wg(n,e){return G(()=>gn(ye(R(n,n),e,!0)))}class Yl extends Pi{getConfig(){return{}}}class h1 extends Yl{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{const t=wg(e,this.axis),s=Yn(t,0,this.maxValue);return R(e,ke(s,ee(Lt(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}h1.className="MaxNorm";Q(h1);class p1 extends Yl{constructor(e){super(),this.defaultAxis=0,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>ke(e,ee(Lt(),wg(e,this.axis))))}getConfig(){return{axis:this.axis}}}p1.className="UnitNorm";Q(p1);class f1 extends Yl{apply(e){return wo(e)}}f1.className="NonNeg";Q(f1);class m1 extends Yl{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=e.minValue!=null?e.minValue:this.defaultMinValue,this.maxValue=e.maxValue!=null?e.maxValue:this.defaultMaxValue,this.rate=e.rate!=null?e.rate:this.defaultRate,this.axis=e.axis!=null?e.axis:this.defaultAxis}apply(e){return G(()=>{const t=wg(e,this.axis),s=ee(R(this.rate,Yn(t,this.minValue,this.maxValue)),R(1-this.rate,t));return R(e,ke(s,ee(Lt(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}m1.className="MinMaxNorm";Q(m1);const xx={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function zt(n){return lg(n)}function yx(n,e={}){return Hl(n,os.getMap().classNameMap,e,"constraint")}function Vt(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in xx?xx[n]:n,config:{}};return yx(t)}else return n instanceof Yl?n:yx(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */async function or(n){if(n==null)return;const e=[],t=[],s=[];for(const o in n){const r=n[o];if(typeof r!="number"){const a=r;e.push(a.data()),t.push(o),s.push(a)}}if(e.length>0){const o=await Promise.all(e);for(let r=0;r<o.length;++r)n[t[r]]=o[r][0];Pe(s)}}function g1(n){if(n!=null)for(const e in n){const t=n[e];typeof t!="number"&&t.dispose()}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var wx;(function(n){n[n.SILENT=0]="SILENT",n[n.VERBOSE=1]="VERBOSE"})(wx||(wx={}));const CO=125;class $c{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class SO{constructor(e,t=10){e==null&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochBegin(e,t)}async onEpochEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onEpochEnd(e,t)}async onBatchBegin(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchBegin(e,t)}async onBatchEnd(e,t){t==null&&(t={});for(const s of this.callbacks)await s.onBatchEnd(e,t)}async onTrainBegin(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){e==null&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class NO extends $c{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){t==null&&(t={});const s=t.size==null?0:t.size;this.seen+=s;for(const o in t){const r=t[o];if(typeof r=="number")this.totals.hasOwnProperty(o)||(this.totals[o]=0),this.totals[o]=this.totals[o]+r*s;else{let a;o in this.totals?a=this.totals[o]:this.totals[o]=0;const i=G(()=>ee(this.totals[o],R(r,s)));this.totals[o]=i,a?.dispose()}}}async onEpochEnd(e,t){if(t!=null)for(const s of this.params.metrics)this.totals[s]!=null&&(typeof this.totals[s]=="number"?t[s]=this.totals[s]/this.seen:G(()=>{const o=R(ke(1,this.seen),this.totals[s]);t[s]=o,this.totals[s].dispose(),Us(t[s])}))}}class TO extends $c{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){t==null&&(t={}),this.epoch.push(e);for(const s in t)this.history[s]==null&&(this.history[s]=[]),this.history[s].push(t[s])}async syncData(){const e=[],t=[],s=[];for(const r in this.history){const a=this.history[r];for(let i=0;i<a.length;++i)if(typeof a[i]!="number"){const c=a[i];e.push(c.data()),t.push(r),s.push(i)}}const o=await Promise.all(e);for(let r=0;r<o.length;++r)this.history[t[r]][s[r]].dispose(),this.history[t[r]][s[r]]=o[r][0]}}class EO extends $c{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Dw,this.yieldEvery=t||"auto",this.yieldEvery==="auto"&&(this.yieldEvery=CO),this.yieldEvery==="never"&&e.onYield!=null)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");mp(this.yieldEvery)&&(this.maybeWait=GF(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,s){const o=[];this.yield!=null&&(await or(s),o.push(this.yield(e,t,s))),o.push(this.nextFrameFunc()),await Promise.all(o)}async onEpochBegin(e,t){this.currentEpoch=e,this.epochBegin!=null&&(await or(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const s=[];this.epochEnd!=null&&(await or(t),s.push(this.epochEnd(e,t))),this.yieldEvery==="epoch"&&s.push(this.nextFrameFunc()),await Promise.all(s)}async onBatchBegin(e,t){this.batchBegin!=null&&(await or(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const s=[];this.batchEnd!=null&&(await or(t),s.push(this.batchEnd(e,t))),this.yieldEvery==="batch"?s.push(this.nextFrameFunc()):mp(this.yieldEvery)&&s.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(s)}async onTrainBegin(e){this.trainBegin!=null&&(await or(e),await this.trainBegin(e))}async onTrainEnd(e){this.trainEnd!=null&&(await or(e),await this.trainEnd(e))}}function b1(n,e){return n==null&&(n={}),n instanceof $c?[n]:Array.isArray(n)&&n[0]instanceof $c?n:ft(n).map(s=>new EO(s,e))}class ss{constructor(){}static registerCallbackConstructor(e,t){$(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),ss.checkForDuplicate(t),ss.constructors[e]==null&&(ss.constructors[e]=[]),ss.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ss.constructors)ss.constructors[+t].forEach(o=>{if(o===e)throw new A("Duplicate callback constructor.")})}static clear(){ss.constructors={}}static createCallbacks(e){const t=[];for(const s in ss.constructors){const o=+s;e>=o&&t.push(...ss.constructors[o])}return t.map(s=>new s)}}ss.constructors={};function x1(n,e,t,s,o,r,a,i,c){const u=new TO,l=[new NO,...ss.createCallbacks(e)];n!=null&&l.push(...n),l.push(u);const d=new SO(l);return d.setParams({epochs:t,initialEpoch:s,samples:o,steps:r,batchSize:a,verbose:e,doValidation:i,metrics:c}),{callbackList:d,history:u}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ho(n,e={},t=!1){return Hl(n,os.getMap().classNameMap,e,"layer",t)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function id(n,e){return G(()=>{n.dtype!=="float32"&&(n=he(n,"float32"));const t=ye(ql(n),e,!0),s=zl(t.shape,Lt()),o=gn(yo(t,s));return ke(n,o)})}function wh(n,e){return G(()=>St(ql(xe(e,n)),-1))}function Ig(n,e){return G(()=>St(Mt(xe(e,n)),-1))}function kg(n,e){return G(()=>{const t=xe(n,e),s=Yn(Mt(n),Lt(),Number.MAX_VALUE),o=Mt(ke(t,s));return R(100,St(o,-1))})}function _O(n,e){return G(()=>{const t=Yn(e,Lt(),Number.MAX_VALUE),s=hs(ee(1,t)),o=Yn(n,Lt(),Number.MAX_VALUE),r=hs(ee(1,o));return St(ql(xe(s,r)),-1)})}function RO(n,e){return G(()=>{const t=yo(0,xe(1,R(n,e)));return St(ql(t),-1)})}function AO(n,e){return G(()=>{const t=yo(0,xe(1,R(n,e)));return St(t,-1)})}function DO(n,e){return G(()=>{const t=ye(R(n,e),-1),s=us(R(xe(1,n),e),-1);return yo(0,ee(1,xe(s,t)))})}function FO(n,e){return G(()=>{const t=Math.log(2),s=xe(e,n),o=xe(ee(s,Vl(R(-2,s))),t);return St(o,-1)})}function Cc(n,e,t=!1){return G(()=>{if(t)e=wm(e);else{const s=ye(e,e.shape.length-1,!0);e=ke(e,s)}return e=Yn(e,Lt(),1-Lt()),$t(ye(R(he(n,"float32"),hs(e)),e.shape.length-1))})}function cd(n,e,t=!1){return G(()=>{const s=he(rh(nO(n)),"int32");e=Yn(e,Lt(),1-Lt());const o=e.shape,r=M(P0(s,o[o.length-1]),o);return Cc(r,e,t)})}function OO(n,e){if(!Ke(n.shape,e.shape))throw new A(`logits and labels must have the same shape, but got shapes ${JSON.stringify(n.shape)} and ${JSON.stringify(e.shape)}`);return G(()=>{const t=wo(e),s=$t(Mt(e));return ee(xe(t,R(e,n)),um(ds(s)))})}function Ih(n,e){return G(()=>{let t;return t=Yn(e,Lt(),1-Lt()),t=hs(ke(t,xe(1,t))),St(OO(n,t),-1)})}function MO(n,e){return G(()=>{const t=Yn(n,Lt(),1),s=Yn(e,Lt(),1);return ye(R(n,hs(ke(t,s))),-1)})}function LO(n,e){return G(()=>{const t=hs(ee(Lt(),e));return St(xe(e,R(n,t)),-1)})}function y1(n,e){return G(()=>{const t=id(n,-1),s=id(e,-1),o=R(t,s);return $t(ye(o,-1))})}const ld={meanSquaredError:wh,meanAbsoluteError:Ig,meanAbsolutePercentageError:kg,meanSquaredLogarithmicError:_O,squaredHinge:RO,hinge:AO,categoricalHinge:DO,logcosh:FO,categoricalCrossentropy:Cc,sparseCategoricalCrossentropy:cd,binaryCrossentropy:Ih,kullbackLeiblerDivergence:MO,poisson:LO,cosineProximity:y1};function Kh(n){if(typeof n=="string"){if(n in ld)return ld[n];let e=`Unknown loss ${n}`;throw n.toLowerCase().includes("softmaxcrossentropy")&&(e=`Unknown loss ${n}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new A(e)}else return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function w1(n,e){return G(()=>{const t=R(.5,ps(e)),s=Gs(Jn(e,t),n.dtype);return St(Ks(n,s),-1)})}function I1(n,e){return G(()=>Gs(Ks(yc(n,-1),yc(e,-1)),"float32"))}function PO(n,e){return G(()=>he(ye(mo(Ks(n,1),Ks(e,1))),"float32"))}function BO(n,e){return G(()=>he(ye(mo(Ks(n,0),Ks(e,1))),"float32"))}function zO(n,e){return G(()=>{const t=PO(n,e),s=BO(n,e),o=ee(t,s);return he(On(Jn(o,0),ke(t,o),0),"float32")})}function VO(n,e){return Ih(n,e)}function WO(n,e){return n.rank===e.rank&&(n=Ul(n,[n.rank-1])),e=yc(e,-1),e.dtype!==n.dtype&&(e=he(e,n.dtype)),he(Ks(n,e),"float32")}const UO=wh,GO=wh,HO=Ig,jO=Ig,qO=kg,XO=kg,k1=Cc,KO=y1,v1=cd,ud={binaryAccuracy:w1,categoricalAccuracy:I1,precision:zO,categoricalCrossentropy:k1,sparseCategoricalCrossentropy:v1,mse:UO,MSE:GO,mae:HO,MAE:jO,mape:qO,MAPE:XO,cosine:KO};function YO(n){if(typeof n=="string"&&n in ud)return ud[n];if(typeof n!="string"&&n!=null)return n;throw new A(`Unknown metric ${n}`)}function Su(n){if(Ls(n!==null,`Unknown LossOrMetricFn ${n}`),typeof n=="string")return n;{let e;for(const t of Object.keys(ld))if(ld[t]===n){e=t;break}if(e!==void 0)return e;for(const t of Object.keys(ud))if(ud[t]===n){e=t;break}return e!==void 0?e:n.name}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ZO(n){const e={Adagrad:()=>oa.adagrad(.01),Adadelta:()=>oa.adadelta(1,.95,Lt()),Adam:()=>oa.adam(.001,.9,.999,Lt()),Adamax:()=>oa.adamax(.002,.9,.999,Lt(),0),RMSProp:()=>oa.rmsprop(.001,.9,0,Lt()),SGD:()=>oa.sgd(.01)};if(e.adagrad=e.Adagrad,e.adadelta=e.Adadelta,e.adam=e.Adam,e.adamax=e.Adamax,e.rmsprop=e.RMSProp,e.sgd=e.SGD,n in e)return e[n]();throw new A(`Unknown Optimizer ${n}`)}/**
 * @license
 * Copyright 2019 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const Ix=1*1024*1024;function kx(n,e,t=!1){if(n==null||typeof n!="object"||Object.getPrototypeOf(n)!==Object.prototype||!Wp(n))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(t){const s=JSON.stringify(n);s.length>Ix&&console.warn(`User-defined metadata of model "${e}" is too large in size (length=${s.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= ${Ix}.`)}}function Wp(n){if(n===null)return!0;if(typeof n=="object")if(Object.getPrototypeOf(n)===Object.prototype){const e=Object.keys(n);for(const t of e)if(typeof t!="string"||!Wp(n[t]))return!1;return!0}else if(Array.isArray(n)){for(const e of n)if(!Wp(e))return!1;return!0}else return!1;else{const e=typeof n;return e==="string"||e==="number"||e==="boolean"}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function JO(n,e,t,s=console.log){const o=eM(n),r=["Layer (type)","Input Shape","Output shape","Param #"];o?(e=e||90,t=t||[.32,.61,.89,1]):(e=e||115,t=t||[.24,.48,.7,.8,1]),t[t.length-1]<=1&&(t=t.map(l=>Math.floor(e*l)));let a;if(!o){r.push("Receives inputs"),a=[];for(const l in n.nodesByDepth)a.push(...n.nodesByDepth[l])}s("_".repeat(e)),dd(r,t,s),s("=".repeat(e));const i=n.layers;for(let l=0;l<i.length;++l)o?tM(i[l],t,s):nM(i[l],t,a,s),s((l===i.length-1?"=":"_").repeat(e));n.checkTrainableWeightsConsistency();const c=QO(n),u=od(n.nonTrainableWeights);s(`Total params: ${c+u}`),s(`Trainable params: ${c}`),s(`Non-trainable params: ${u}`),s("_".repeat(e))}function QO(n){let e;return n.collectedTrainableWeights!=null?e=od(n.collectedTrainableWeights):e=od(n.trainableWeights),e}function eM(n){let e=!0;const t=[],s=[];for(const o in n.nodesByDepth)t.push(n.nodesByDepth[o]);for(const o of t){if(o.length>1||o.length===1&&o[0].inboundLayers.length>1){e=!1;break}s.push(...o)}if(e)for(const o of n.layers){let r=!1;for(const a of o.inboundNodes)if(s.indexOf(a)!==-1)if(r){e=!1;break}else r=!0;if(!e)break}return e}function dd(n,e,t=console.log){let s="";for(let o=0;o<n.length;++o)o>0&&(s=s.slice(0,s.length-1)+" "),s+=n[o],s=s.slice(0,e[o]),s+=" ".repeat(e[o]-s.length);t(s)}function tM(n,e,t){let s,o;try{o=n.inboundNodes.map(c=>JSON.stringify(c.inputShapes)).join(",")}catch{o="multiple"}try{s=JSON.stringify(n.outputShape)}catch{s="multiple"}const r=n.name,a=n.getClassName(),i=[`${r} (${a})`,o,s,n.countParams().toString()];dd(i,e,t)}function nM(n,e,t,s){let o,r;try{r=n.inboundNodes.map(d=>JSON.stringify(d.inputShapes)).join(",")}catch{r="multiple"}try{o=JSON.stringify(n.outputShape)}catch{o="multiple"}const a=[];for(const d of n.inboundNodes)if(!(t!=null&&t.length>0&&t.indexOf(d)===-1))for(let h=0;h<d.inboundLayers.length;++h){const p=d.inboundLayers[h].name,f=d.nodeIndices[h],m=d.tensorIndices[h];a.push(`${p}[${f}][${m}]`)}const i=n.name,c=n.getClassName(),u=a.length===0?"":a[0],l=[`${i} (${c})`,r,o,n.countParams().toString(),u];dd(l,e,s);for(let d=1;d<a.length;++d)dd(["","","","",a[d]],e,s)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $1(n,e,t){return(n==="inboundNodes"||n==="outputLayers"||n==="inputLayers")&&e===0&&typeof t=="string"}function Up(n,e){if(n===null)return null;if(typeof n=="string")return lr(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let o=0;o<s;++o){const r=n[o];$1(e,o,r)?t.push(r):t.push(Up(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const o=n[s];if(s==="name"&&typeof o=="string")t[s]=o;else{const r=lr(s);t[r]=Up(o,r)}}return t}}function Gp(n,e){if(n==null)return null;if(typeof n=="string")return co(n);if(typeof n=="number"||typeof n=="boolean")return n;if(n instanceof Array){const t=[],s=n.length;for(let o=0;o<s;++o){const r=n[o];$1(e,o,r)?t.push(r):t.push(Gp(r,e))}return t}else{const t={};for(const s of Object.keys(n)){const o=n[s],r=co(s);(s==="name"||s==="className")&&typeof o=="string"?t[r]=o:t[r]=Gp(o,s)}return t}}/** @license See the LICENSE file. */const C1="4.1.0";/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ws extends Be{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,this.name==null){const x=this.getClassName().toLowerCase();this.name=bh(x)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Eo(this.inputs).length!==this.inputs.length)throw new A(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(x=>x.name)}`);Eo(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(x=>x.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const x of this.outputs){const y=x.sourceLayer,w=x.nodeIndex,I=x.tensorIndex;this.outputLayers.push(y),this.outputLayersNodeIndices.push(w),this.outputLayersTensorIndices.push(I)}for(const x of this.inputs){const y=x.sourceLayer,w=x.nodeIndex,I=x.tensorIndex;Ls(w===0,"input layer has >1 nodes"),Ls(I===0,"input layer has >1 tensors"),this.inputLayers.push(y),this.inputLayersNodeIndices.push(w),this.inputLayersTensorIndices.push(I)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let x=0;x<this.inputLayers.length;x++){const y=this.inputLayers[x];if(!(y instanceof Kl))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${x} (0-based) originates from layer type ${y.getClassName()}.`);this.inputNames.push(y.name),this.feedInputShapes.push(y.batchInputShape),this.feedInputNames.push(y.name)}for(const x of this.outputLayers)this.outputNames.push(x.name);this.internalInputShapes=this.inputs.map(x=>x.shape),this.internalOutputShapes=this.outputs.map(x=>x.shape);const t={},s={},o={},r={},a={},i=[],c=(x,y,w,I,k,v)=>{(I==null||k==null||v==null)&&(I=x.sourceLayer,k=x.nodeIndex,v=x.tensorIndex);const C=I.inboundNodes[k];if(w.indexOf(C)!==-1)throw new cs(`The tensor ${x.name} at layer "${I.name}" is part of a cycle.`);if(y.indexOf(C)!==-1)return;this.containerNodes.add(ws.nodeKey(I,k)),I.id in a||(a[I.id]=Object.keys(a).length),w.indexOf(C)===-1&&w.push(C);const N=C.inboundLayers.length;for(let T=0;T<N;T++){const _=C.inputTensors[T],O=C.inboundLayers[T],P=C.nodeIndices[T],V=C.tensorIndices[T];c(_,y,w,O,P,V)}for(y.push(C);w.indexOf(C)>=0;)w.splice(w.indexOf(C),1);i.push(C)},u=[],l=[];for(const x of this.outputs)c(x,u,l);const d=i.slice().reverse();for(const x of d){s[x.id]=x,x.id in t||(t[x.id]=0);let y=t[x.id];const w=o[x.outboundLayer.id]==null?0:o[x.outboundLayer.id];y=Math.max(y,w),o[x.outboundLayer.id]=y,r[x.outboundLayer.id]=x.outboundLayer,t[x.id]=y;for(let I=0;I<x.inboundLayers.length;I++){const k=x.inboundLayers[I],v=x.nodeIndices[I],C=k.inboundNodes[v],N=t[C.id]==null?0:t[C.id];t[C.id]=Math.max(y+1,N),s[C.id]=C}}const h={};for(const x in t){const y=t[x];y in h||(h[y]=[]),h[y].push(s[x])}const p={};for(const x in o){const y=o[x];y in p||(p[y]=[]),p[y].push(r[x])}let f=Object.keys(p).map(x=>parseInt(x,10)).sort(vu);this.layers=[];for(const x of f){const y=p[x];y.sort((w,I)=>{const k=a[w.id],v=a[I.id];return k<v?-1:k>v?1:0});for(const w of y)w instanceof ws&&this.internalContainerRefs.push(w),this.layers.push(w)}this.layersByDepth=p,f=Object.keys(h).map(x=>parseInt(x,10)).sort(vu);const m=this.inputs.slice(),g=[];for(const x of f)for(const y of h[x]){const w=y.outboundLayer;if(w!=null){for(const I of y.inputTensors)if(m.indexOf(I)===-1)throw new cs(`Graph disconnected: cannot obtain value for tensor ${I} at layer "${w.name}". The following previous layers were accessed without issue: ${g}`);for(const I of y.outputTensors)m.push(I);g.push(w.name)}}this.nodesByDepth=h;const b=this.layers.map(x=>x.name);for(const x of b){const y=b.filter(w=>w===x).length;if(y!==1)throw new cs(`The name "${x}" is used ${y} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(b))}this.outboundNodes=[],this.inboundNodes=[],new yh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(x=>null),outputMasks:this.outputs.map(x=>null),inputShapes:this.inputs.map(x=>x.shape),outputShapes:this.outputs.map(x=>x.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(this._refCount===0)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(--this._refCount===0){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(s=>s.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new A("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.layers)t.push(...s.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const s={};let o=0;for(const a of this.layers)for(const i of a.weights){if(s[i.originalName]!=null)throw new A(`Duplicate weight name: ${i.originalName}`);s[i.originalName]=i,o++}const r=[];for(const a in e){let i=a;if(s[a]==null){const c=a.split("/");i=c.slice(0,-2).concat([c[c.length-1]]).join("/")}if(s[i]!=null)r.push([s[i],e[a]]);else if(t)throw new A(`Provided weight data has no target variable: ${a}`);delete s[i]}if(t){const a=[];for(const i in s)a.push(i);if(a.length>0)throw new A(`${a.length} of ${o} weights are not set: ${a}`)}yg(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${C1}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const s=Gp(this.updatedConfig());return t?JSON.stringify(s):s}call(e,t){return G(()=>{e=ft(e);const s=new $o;for(let o=0;o<this.inputs.length;++o)s.add(this.inputs[o],e[o]);return dc(this.outputs,s,t)})}computeMask(e,t){return G(()=>{e=ft(e);let s;return t==null?s=Ar(null,e.length):s=ft(t),this.runInternalGraph(e,s)[1]})}computeOutputShape(e){const t=sd(e);if(t.length!==this.inputLayers.length)throw new A(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const s={};for(let i=0;i<t.length;i++){const c=this.inputLayers[i],u=t[i],l=c.name+"_0_0";s[l]=u}const o=Object.keys(this.nodesByDepth).map(i=>parseInt(i,10)).sort(vu);if(o.length>1)for(const i of o){const c=this.nodesByDepth[i];for(const u of c){const l=u.outboundLayer;if(this.inputLayers.map(m=>m.id).indexOf(l.id)!==-1)continue;const d=[];for(let m=0;m<u.inboundLayers.length;m++){const g=u.inboundLayers[m],b=u.nodeIndices[m],x=u.tensorIndices[m],y=`${g.name}_${b}_${x}`,w=s[y];d.push(w)}const h=l.computeOutputShape(wn(d)),p=sd(h),f=l.inboundNodes.indexOf(u);for(let m=0;m<p.length;m++){const g=`${l.name}_${f}_${m}`;s[g]=p[m]}}}const r=[],a=[];for(let i=0;i<this.outputLayers.length;i++){const c=this.outputLayers[i],u=this.outputLayersNodeIndices[i],l=this.outputLayersTensorIndices[i],d=`${c.name}_${u}_${l}`;a.push(d)}for(let i=0;i<a.length;i++){const c=a[i];Ls(c in s),r.push(s[c])}return wn(r)}runInternalGraph(e,t){t==null&&(t=Ar(null,e.length));const s={};for(let c=0;c<this.inputs.length;++c){const u=this.inputs[c],l=e[c],d=t[c];s[u.id]=[l,d]}const o=Object.keys(this.nodesByDepth).map(c=>parseInt(c,10)).sort(vu);for(const c of o){const u=this.nodesByDepth[c];for(const l of u){const d=l.outboundLayer,h=l.inputTensors,p=l.outputTensors,f=new Array;for(const m of h)m.id in s&&f.push(s[m.id]);if(f.length===h.length){let m={},g,b,x,y;if(l.callArgs!=null&&(m=l.callArgs),f.length===1){const[w,I]=f[0];m.mask==null&&(m.mask=I),x=ft(d.call(w,m)),y=ft(d.computeMask(w,I)),g=[w],b=[I]}else g=f.map(w=>w[0]),b=f.map(w=>w[1]),m.mask==null&&(m.mask=b),x=ft(d.call(g,m)),y=ft(d.computeMask(g,b));if(d.activityRegularizer)throw new De("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let w=0;w<p.length;++w){const I=p[w],k=x[w],v=y[w];s[I.id]=[k,v]}}}}const r=[],a=[],i=[];for(const c of this.outputs){Ls(c.id in s,`Could not compute output ${c.name} : ${c.id}`);const[u,l]=s[c.id];i.push(u.shape),r.push(u),a.push(l)}return[r,a,i]}buildNodeConversionMap(e){const t={};let s;for(const o of this.layers){s=o instanceof ws?1:0;for(let r=0;r<o.inboundNodes.length;r++){const a=ws.nodeKey(o,r);this.containerNodes.has(a)&&(t[a]=s,s+=1)}}return t}getLayer(e,t){if(t!=null){if(this.layers.length<=t)throw new A(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}else if(e==null)throw new A("Provide either a layer name or layer index");for(const s of this.layers)if(s.name===e)return s;throw new A(`No such layer: ${e}`)}calculateLosses(){return G(()=>{const e=[];for(const t of this.layers)for(let s=0;s<t.inboundNodes.length;++s){const o=ws.nodeKey(t,s);this.containerNodes.has(o)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),s=[];for(const a of this.layers){const i=a.getClassName(),c=a.getConfig(),u=[];for(let d=0;d<a.inboundNodes.length;d++){const h=a.inboundNodes[d],p=ws.nodeKey(a,d);let f={};if(this.containerNodes.has(p)){if(h.callArgs)try{JSON.stringify(h.callArgs),f=h.callArgs}catch{console.warn(`Layer ${a.name} was passed non-serializable keyword arguments: ${h.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),f={}}if(h.inboundLayers.length>0){const m=[];for(let g=0;g<h.inboundLayers.length;g++){const b=h.inboundLayers[g],x=h.nodeIndices[g],y=h.tensorIndices[g],w=ws.nodeKey(b,x);let I=t[w];I==null&&(I=0),m.push([b.name,I,y,f])}u.push(m)}}}const l={};l.name=a.name,l.className=i,l.config=c,l.inboundNodes=u,s.push(l)}e.layers=s;const o=[];for(let a=0;a<this.inputLayers.length;a++){const i=this.inputLayers[a],c=this.inputLayersNodeIndices[a],u=ws.nodeKey(i,c);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);const d=this.inputLayersTensorIndices[a];o.push([i.name,l,d])}e.inputLayers=o;const r=[];for(let a=0;a<this.outputLayers.length;a++){const i=this.outputLayers[a],c=this.outputLayersNodeIndices[a],u=ws.nodeKey(i,c);if(!this.containerNodes.has(u))continue;let l=t[u];l==null&&(l=0);const d=this.outputLayersTensorIndices[a];r.push([i.name,l,d])}return e.outputLayers=r,e}static fromConfig(e,t,s={},o=!1){const r={},a={};function i(g,b){g.name in a?a[g.name].push(b):a[g.name]=[b]}function c(g,b){const x=[];let y;for(const w of b){const I=w[0],k=w[1],v=w[2];if(y=w[3]==null?{}:w[3],!(I in r)){i(g,b);return}const C=r[I];if(C.inboundNodes.length<=k){i(g,b);return}const N=C.inboundNodes[k];x.push(N.outputTensors[v])}x.length>0&&g.apply(wn(x),y)}function u(g){const b=g.name,x=ho(g,t.customObjects!=null?t.customObjects:{});x.setFastWeightInitDuringBuild(o),r[b]=x,g.inboundNodes.forEach(w=>{if(!(w instanceof Array))throw new A(`Corrupted configuration, expected array for nodeData: ${w}`);i(x,w)})}const l=t.name,d=t.layers;for(const g of d)u(g);for(;!UF(a);)for(const g of d){const b=r[g.name];if(b.name in a){const x=a[b.name];delete a[b.name];for(const y of x)c(b,y)}}const h=[],p=[],f=t.inputLayers;for(const g of f){const b=g[0],x=g[1],y=g[2];Ls(b in r);const I=r[b].inboundNodes[x].outputTensors;h.push(I[y])}const m=t.outputLayers;for(const g of m){const b=g[0],x=g[1],y=g[2];Ls(b in r);const I=r[b].inboundNodes[x].outputTensors;p.push(I[y])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new A("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){G(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function sM(n,e,t){const s=e.length;if(n==null||Array.isArray(n)&&n.length===0)return e.map(o=>null);if(s===1)return Array.isArray(n)&&n.length===1?n:typeof n=="object"&&e[0]in n?[n[e[0]]]:[n];if(Array.isArray(n)){if(n.length!==s)throw new Error(`Provided ${t} is an array of ${n.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return n}else if(typeof n=="object"&&Object.keys(n).length>0&&typeof n[Object.keys(n)[0]]=="object"){const o=[];return e.forEach(r=>{r in n?o.push(n[r]):o.push(null)}),o}else throw new Error(`The model has multiple (${s}) outputs, so ${t} must be either an array with ${s} elements or an object with ${e} keys. Provided ${t} not understood: ${JSON.stringify(n)}`)}function S1(n,e){return sM(n,e,"classWeight")}async function N1(n,e,t,s){if(e!=null||s!=null)throw new Error("Support sampleWeight is not implemented yet");if(t!=null){const o=G(()=>{if(n.shape.length===1)return br(n);if(n.shape.length===2){if(n.shape[1]>1)return yc(n,1);if(n.shape[1]===1)return M(n,[n.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${n.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}else throw new Error(`Unexpected rank of target (y) tensor (${n.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await o.data());Pe(o);const a=[];return r.forEach(i=>{if(t[i]==null)throw new Error(`classWeight must contain all classes in the training data. The class ${i} exists in the data but not in classWeight`);a.push(t[i])}),Dn(a,"float32")}else return null}function oM(n,e){return R(n,e)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const rM=32;function T1(n,e){let t,s;const o=e;t=o.xs,s=o.ys,$(t!=null&&s!=null,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${e}`);const r=vx("input",n.inputNames,t),a=vx("output",n.outputNames,s),i=r[0].shape[0];$(r.length===n.inputs.length,()=>`LayersModel has ${n.inputs.length} inputs, but the dataset provides ${r.length} inputs.  (Expected input keys: ${JSON.stringify(n.inputNames)})`),$(a.length===n.outputs.length,()=>`LayersModel has ${n.outputs.length} outputs, but the dataset provides ${a.length} outputs.  (Expected output keys: ${JSON.stringify(n.outputNames)})`);for(let c=0;c<r.length;c++)$(r[c].shape[0]===i,()=>`Batch size mismatch: input ${n.inputNames[c]} has ${r[c].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);for(let c=0;c<a.length;c++)$(a[c].shape[0]===i,()=>`Batch size mismatch: output ${n.outputNames[c]} has ${a[c].shape[0]}; expected  ${i} based on input ${n.inputNames[0]}.`);return{xs:r,ys:a}}function vx(n,e,t){if(t instanceof Rt)return[t];if(Array.isArray(t))return $(t.length===e.length,()=>`Received an array of ${t.length} Tensors, but expected ${e.length} to match the ${n} keys ${e}.`),t;{const s=[];for(const o of e){if(t[o]==null)throw new A(`The feature data generated by the dataset lacks the required ${n} key '${o}'.`);s.push(t[o])}return s}}function aM(n){if(n.length===3)throw new De("Validation with sample weights is not implemented yet.");return{xs:n[0],ys:n[1]}}async function iM(n,e,t){const s=t.batchesPerEpoch!=null;if($(n.optimizer!=null,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),$(t!=null,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),$(t.epochs!=null&&t.epochs>0&&Number.isInteger(t.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${t.epochs}`),$(!s||t.batchesPerEpoch>0&&Number.isInteger(t.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${t.batchesPerEpoch}`),$(t.validationSplit==null,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),n.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");n.isTraining=!0;try{const o=t.validationData!=null;let r,a;if(o)if($x(t.validationData))$(t.validationBatches==null||t.validationBatches>0&&Number.isInteger(t.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${t.validationBatches}`);else{const g=aM(t.validationData);r=g.xs,a=g.ys}const i=n.makeTrainFunction(),c=n.getDedupedMetricsNames();let u;o?u=c.slice().concat(c.map(g=>"val_"+g)):u=c.slice();const l=b1(t.callbacks,t.yieldEvery),d=t.verbose==null?1:t.verbose,{callbackList:h,history:p}=x1(l,d,t.epochs,null,null,cM(e,t),null,o,u);h.setModel(n),n.history=p,await h.onTrainBegin(),n.stopTraining_=!1;let f=t.initialEpoch==null?0:t.initialEpoch,m=await e.iterator();for(;f<t.epochs;){const g={};await h.onEpochBegin(f);let b=0,x=0;for(s||(m=await e.iterator());!s||b<t.batchesPerEpoch;){const y=await m.next();if(s&&y.done){console.warn(`You provided \`batchesPerEpoch\` as ${t.batchesPerEpoch}, but your dataset iterator ran out of data after ${b} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, ${t.batchesPerEpoch*t.epochs} batches). You may need to use the repeat() function when building your dataset.`);break}if(y.value!=null){const{xs:w,ys:I}=T1(n,y.value),k={};k.batch=x,k.size=w[0].shape[0],await h.onBatchBegin(x,k);const v=[];if(t.classWeight!=null){const T=S1(t.classWeight,n.outputNames);for(let _=0;_<T.length;++_)v.push(await N1(I[_],null,T[_]))}const C=w.concat(I).concat(v),N=i(C);Pe(C);for(let T=0;T<c.length;++T){const _=c[T],O=N[T];k[_]=O,Us(O)}await h.onBatchEnd(x,k),g1(k),x++,b++}if(s?b>=t.batchesPerEpoch:y.done){if(o){let w;$x(t.validationData)?w=ft(await n.evaluateDataset(t.validationData,{batches:t.validationBatches})):w=ft(n.evaluate(r,a,{batchSize:t.validationBatchSize==null?rM:t.validationBatchSize,verbose:0}));for(let I=0;I<n.metricsNames.length;++I)g[`val_${n.metricsNames[I]}`]=w[I]}break}if(n.stopTraining_)break}if(await h.onEpochEnd(f,g),f++,n.stopTraining_)break}return await h.onTrainEnd(),await n.history.syncData(),n.history}finally{n.isTraining=!1}}function cM(n,e){let t=null;return e.batchesPerEpoch!=null?t=e.batchesPerEpoch:Number.isFinite(n.size)&&(t=n.size),t}function $x(n){return typeof n.iterator=="function"}function lM(n){return typeof n.next=="function"}async function uM(n,e,t){t=t||{};const s=t.batches!=null,o=n.testFunction;let r=[];if(t.verbose>0)throw new De("Verbose mode is not implemented yet.");$(!s||t.batches>0&&Number.isInteger(t.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(t.batches)}`);const a=lM(e)?e:await e.iterator();let i=0,c=0;for(;!s||c<t.batches;){const u=await a.next();if(r=G(()=>{if(u.value){const{xs:l,ys:d}=T1(n,u.value),h=l.concat(d),p=G(()=>o(h));if(Pe(h),c===0)for(let m=0;m<p.length;++m)r.push(Se(0));const f=h[0].shape[0];for(let m=0;m<p.length;++m){const g=p[m],b=r[m];r[m]=G(()=>ee(r[m],R(f,g))),c>0&&Pe(b)}Pe(p),i+=f,++c}return r}),u.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${t.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let u=0;u<r.length;++u){const l=r[u];r[u]=ke(r[u],i),Pe(l)}return wn(r)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Yh(n){$(n>0&&Number.isInteger(n),()=>`batchSize is required to be a positive integer, but got ${n}`)}function ac(n,e,t){return n==null?[null]:Array.isArray(n)?n.map(s=>wr(s,e,t-e)):wr(n,e,t-e)}function Hp(n,e){return G(()=>n==null?null:Array.isArray(n)?n.map(t=>Hp(t,e)):n1(n,e.dtype==="int32"?e:he(e,"int32")))}function Zh(n,e){const t=[];let s=0,o=null;for(;s<n;)o=s+e,o>=n&&(o=n),t.push([s,o]),s=o;return t}function E1(n){const e=[];n instanceof Rt&&(n=[n]);for(let t=0;t<n.length;++t){const s=n[t];if(s.rank===1)e.push(jl(s,1));else{if(s.rank===0)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");e.push(s)}}return e}function ys(n,e){if(n==null)return;const t=[];if(e instanceof Rt)t.push(e.id);else if(Array.isArray(e))e.forEach(o=>t.push(o.id));else if(e!=null)for(const o in e){const r=e[o];t.push(r.id)}const s=[];if(n instanceof Rt)t.indexOf(n.id)===-1&&s.push(n);else if(Array.isArray(n))n.forEach(o=>{t.indexOf(o.id)===-1&&s.push(o)});else if(n!=null)for(const o in n){const r=n[o];t.indexOf(r.id)===-1&&s.push(r)}s.forEach(o=>{o.isDisposed||o.dispose()})}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function dM(n){return n instanceof Rt}function jp(n){return Array.isArray(n)}function Cx(n){return!dM(n)&&!jp(n)}function Sx(n,e,t,s=!0,o=""){if(e==null||e.length===0){if(n!=null){let a=!1;if(jp(n)&&n.length>0)a=!0;else if(Cx(n)){for(const i in n)if(n.hasOwnProperty(i)){a=!0;break}}else a=!0;if(a)throw new A(`Error when checking model ${o} expected no data, but got ${n}`)}return[]}if(n==null)return e.map(a=>null);let r;if(Cx(n)){n=n,r=[];for(const a of e){if(n[a]==null)throw new A(`No data provided for "${a}". Need data for each key in: ${e}`);r.push(n[a])}}else if(jp(n)){if(n=n,n.length!==e.length)throw new A(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${e.length} Tensor(s), but instead got the following list of Tensor(s): ${n}`);r=n}else{if(n=n,e.length>1)throw new A(`The model ${o} expects ${e.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${n.shape}`);r=[n]}if(r=E1(r),t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=r[a];if(i.shape.length!==t[a].length)throw new A(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s). but got array with shape ${i.shape}`);for(let c=0;c<t[a].length;++c){if(c===0&&!s)continue;const u=i.shape[c],l=t[a][c];if(l!=null&&l>=0&&u!==l)throw new A(`${o} expected a batch of elements where each example has shape [${t[a].slice(1,t[a].length)}] (i.e.,tensor shape [*,${t[a].slice(1,t[a].length)}]) but the ${o} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return r}function hM(n,e,t){const s=Eo(n.map(r=>r.shape[0]));s.sort();const o=Eo(e.map(r=>r.shape[0]));if(o.sort(),s.length>1)throw new A(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(n.map(r=>r.shape))}`);if(o.length>1)throw new A(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(r=>r.shape))}`);if(s.length>0&&o.length>0&&!Ke(s,o))throw new A(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${o[0]} target sample(s).`)}function pM(n,e,t){const s=[wh,Ih,Cc];for(let o=0;o<n.length;++o){const r=n[o],a=e[o],i=t[o];if(a!=null){if(a===Cc&&r.shape[r.shape.length-1]===1)throw new A(`You are passing a target array of shape ${r.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(s.indexOf(a)!==-1){const c=r.shape.slice(1),u=i.slice(1);for(let l=0;l<c.length;++l){const d=c[l],h=u[l];if(h!=null&&d!==h)throw new A(`A target Tensor with shape ${r.shape} was passed for an output of shape ${i}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}function Nx(n,e,t,s=!0,o=""){let r;if(Array.isArray(n)){if(n.length!==e.length)throw new A(`Error when checking model ${o}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${e.length} Tensor(s), but instead got ${n.length} Tensors(s).`);r=n}else{if(e.length>1)throw new A(`The model expects ${e.length} ${o} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(n.shape)}.`);r=[n]}if(t!=null)for(let a=0;a<e.length;++a){if(t[a]==null)continue;const i=r[a];if(i.shape.length!==t[a].length)throw new A(`Error when checking ${o}: expected ${e[a]} to have ${t[a].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let c=0;c<t[a].length;++c){if(c===0&&!s)continue;const u=i.shape[c],l=t[a][c];if(l!=null&&l!==u)throw new A(`Error when checking ${o}: expected ${e[a]} to have shape ${JSON.stringify(t[a])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}function fM(n,e){if(n==null||Array.isArray(n)&&n.length===0)return e.map(s=>[]);let t;if(typeof n=="string"||typeof n=="function")t=[n];else if(Array.isArray(n)||typeof n=="object")t=n;else throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${n}`);if(Array.isArray(t))return e.map(s=>t);{const s=[];for(const o of e){let r=t.hasOwnProperty(o)?t[o]:[];Array.isArray(r)||(r=[r]),s.push(r)}return s}}const mM="layers-model";class fa extends ws{constructor(e){super(e),this.isTraining=!1}summary(e,t,s=console.log){if(!this.built)throw new A("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");JO(this,e,t,s)}compile(e){if(e.loss==null&&(e.loss=[]),this.loss=e.loss,typeof e.optimizer=="string")this.optimizer_=ZO(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof qo))throw new A("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(!Array.isArray(e.loss)&&typeof e.loss!="string"&&typeof e.loss!="function"){e.loss=e.loss;for(const a in e.loss)if(this.outputNames.indexOf(a)===-1)throw new A(`Unknown entry in loss dictionary: "${a}". Only expected the following keys: ${this.outputNames}`);for(const a of this.outputNames)e.loss[a]==null&&console.warn(`Output "${a}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${a} during training`),t.push(Kh(e.loss[a]))}else if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new A(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);t=e.loss.map(i=>Kh(i))}else{const a=Kh(e.loss);this.outputs.forEach(i=>{t.push(a)})}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let a=0;a<this.outputs.length;++a){const i=this.internalOutputShapes[a],c=this.outputNames[a];this.feedOutputNames.push(c),this.feedOutputShapes.push(i),this.feedLossFns.push(this.lossFunctions[a])}const s=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],yr("loss",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=this.lossFunctions[a];this.outputs.length>1&&(this.metricsTensors.push([i,a]),this.metricsNames.push(this.outputNames[a]+"_loss"))}});const o=fM(e.metrics,this.outputNames),r=(a,i,c)=>{this.outputNames.length>1&&(i=this.outputNames[a]+"_"+i),this.metricsNames.push(i),this.metricsTensors.push([c,a])};yr("metric",()=>{for(let a=0;a<this.outputs.length;++a){if(s.indexOf(a)!==-1)continue;const i=o[a];(u=>{const l="";let d,h,p;for(const f of u){if(typeof f=="string"&&["accuracy","acc","crossentropy","ce"].indexOf(f)!==-1){const g=this.internalOutputShapes[a];g[g.length-1]===1||this.lossFunctions[a]===Ih?["accuracy","acc"].indexOf(f)!==-1?h=w1:["crossentropy","ce"].indexOf(f)!==-1&&(h=VO):this.lossFunctions[a]===cd?["accuracy","acc"].indexOf(f)!==-1?h=WO:["crossentropy","ce"].indexOf(f)!==-1&&(h=v1):["accuracy","acc"].indexOf(f)!==-1?h=I1:["crossentropy","ce"].indexOf(f)!==-1&&(h=k1);let b;["accuracy","acc"].indexOf(f)!==-1?b="acc":["crossentropy","ce"].indexOf(f)!==-1&&(b="ce"),p=h,d=l+b}else p=YO(f),d=l+Su(f);let m;yr(d,()=>{m=p}),r(a,d,m)}})(i)}}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){this.collectedTrainableWeights!=null&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,s={}){const o=s.batchSize==null?32:s.batchSize;Yh(o);const r=!0,a=this.standardizeUserDataXY(e,t,r,o);try{const i=a[0].concat(a[1]);this.makeTestFunction();const c=this.testFunction,u=this.testLoop(c,i,o,s.verbose,s.steps);return wn(u)}finally{ys(a[0],e),ys(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),uM(this,e,t)}checkNumSamples(e,t,s,o="steps"){let r;if(s!=null){if(r=null,t!=null)throw new A(`If ${o} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else if(e!=null)Array.isArray(e)?r=e[0].shape[0]:r=e.shape[0];else throw new A(`Either the input data should have a defined shape, or ${o} shoud be specified.`);return r}execute(e,t){if(Array.isArray(t)&&t.length===0)throw new A("`outputs` is an empty Array, which is not allowed.");const s=Array.isArray(t),o=s?t:[t],r=this.retrieveSymbolicTensors(o),a=new $o;if(e instanceof Rt&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new A(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let c=0;c<this.inputs.length;++c)a.add(this.inputs[c],e[c])}else for(const c of this.inputs){const u=e[c.name];if(u==null)throw new A(`No value is provided for the model's input ${c.name}`);a.add(c,u)}const i=dc(r,a);return s?i:i[0]}retrieveSymbolicTensors(e){const t=Ar(null,e.length);let s=e.length;for(const o of this.layers){const r=Array.isArray(o.output)?o.output:[o.output],a=r.map(i=>i.name);for(let i=0;i<e.length;++i){const c=a.indexOf(e[i]);if(c!==-1&&(t[i]=r[c],s--),s===0)break}if(s===0)break}if(s>0){const o=[];throw t.forEach((r,a)=>{r==null&&o.push(e[a])}),new A(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(o)}`)}return t}predictLoop(e,t=32,s=!1){return G(()=>{const o=this.checkNumSamples(e);if(s)throw new De("Verbose predictLoop() is not implemented yet.");const r=Zh(o,t),a=this.outputs.map(i=>[]);for(let i=0;i<r.length;++i)G(()=>{const u=r[i][0],l=r[i][1],d=ac(e,u,l),h=[];if(Array.isArray(d))for(let f=0;f<d.length;++f)h.push({key:this.inputs[f],value:d[f]});else h.push({key:this.inputs[0],value:d});const p=new $o(h);return dc(this.outputs,p)}).forEach((u,l)=>a[l].push(u));return wn(a.map(i=>on(i,0)))})}predict(e,t={}){const s=E1(e);Nx(s,this.inputNames,this.feedInputShapes,!1);try{const o=t.batchSize==null?32:t.batchSize;return Yh(o),this.predictLoop(s,o)}finally{ys(s,e)}}predictOnBatch(e){Nx(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,s=!0,o){if(this.optimizer_==null)throw new cs("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let a=0;a<this.feedOutputShapes.length;++a){const i=this.feedOutputShapes[a];this.feedLossFns[a]===cd?r.push(i.slice(0,i.length-1).concat([1])):r.push(i)}if(e=Sx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Sx(t,this.feedOutputNames,r,!1,"target"),hM(e,t),pM(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&o!=null&&o>0&&e[0].shape[0]%o!==0)throw new A(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${o}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,s,o,r=!0,a){const[i,c]=this.standardizeUserDataXY(e,t,r,a);if(s!=null)throw new Error("sample weight is not supported yet.");let u=null;if(o!=null){const l=S1(o,this.outputNames);u=[];for(let d=0;d<l.length;++d)u.push(await N1(c[d],null,l[d]))}return[i,c,u]}testLoop(e,t,s,o=0,r){return G(()=>{const a=this.checkNumSamples(t,s,r,"steps"),i=[];if(o>0)throw new De("Verbose mode is not implemented yet.");if(r!=null)throw new De("steps mode in testLoop() is not implemented yet");{const c=Zh(a,s),u=Dn(Ns(0,a));for(let l=0;l<c.length;++l){const d=c[l][0],h=c[l][1],p=wr(u,d,h-d),f=Hp(t,p),m=e(f);if(l===0)for(let g=0;g<m.length;++g)i.push(Se(0));for(let g=0;g<m.length;++g){const b=m[g];i[g]=ee(i[g],R(h-d,b))}}for(let l=0;l<i.length;++l)i[l]=ke(i[l],a)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let s=0;s<e.length;++s){const o=e[s];let r=o;if(dx(e,o)>1){const a=dx(e.slice(0,s),o);r+=`_${a}`}t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],s=e.slice(0,this.inputs.length),o=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+this.outputs.length*2),a=[],i=()=>{const d=[];for(let m=0;m<this.inputs.length;++m)d.push({key:this.inputs[m],value:s[m]});const h=new $o(d),p=dc(this.outputs,h,{training:!0});let f;for(let m=0;m<this.lossFunctions.length;++m){const g=this.lossFunctions[m];let b=g(o[m],p[m]);r[m]!=null&&(b=oM(b,r[m]));const x=St(b);t.push(x),m===0?f=b:f=ee(f,b)}for(let m=0;m<this.metricsTensors.length;++m){let g;if(this.outputs.length>1&&m<this.outputs.length)g=t[m];else{const b=this.metricsTensors[m][0],x=this.metricsTensors[m][1];g=St(b(o[x],p[x]))}Us(g),a.push(g)}return f=St(f),this.calculateLosses().forEach(m=>{f=ee(f,m)}),f},c=this.collectedTrainableWeights.map(d=>d.read()),u=!0;return[this.optimizer_.minimize(i,u,c)].concat(a)}}makeTestFunction(){this.testFunction=e=>G(()=>{const t=[];let s;const o=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let u=0;u<this.inputs.length;++u)a.push({key:this.inputs[u],value:o[u]});const i=new $o(a),c=dc(this.outputs,i);for(let u=0;u<this.lossFunctions.length;++u){const l=this.lossFunctions[u],d=St(l(r[u],c[u]));u===0?s=d:s=ee(s,d),t.push(s)}for(let u=0;u<this.metricsTensors.length;++u){const l=this.metricsTensors[u][0],d=this.metricsTensors[u][1],h=St(l(r[d],c[d]));t.push(h)}return t})}async fit(e,t,s={}){if(this.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");this.isTraining=!0;let o,r,a,i,c,u,l,d,h;try{const p=s.batchSize==null?32:s.batchSize;Yh(p);const f=!1,m=await this.standardizeUserData(e,t,s.sampleWeight,s.classWeight,f,p);o=m[0],r=m[1],h=m[2];let g=!1,b;if(s.validationData!=null&&s.validationData.length>0){if(g=!0,s.validationData.length===2)c=s.validationData[0],u=s.validationData[1];else throw s.validationData.length===3?new De("validationData including sample weights is not supported yet."):new A(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);const N=!0,T=await this.standardizeUserData(c,u,null,null,N,p);l=T[0],d=T[1],b=l.concat(d)}else if(s.validationSplit!=null&&s.validationSplit>0&&s.validationSplit<1){g=!0;const N=Math.floor(o[0].shape[0]*(1-s.validationSplit)),T=o[0].shape[0];l=ac(o,N,T),a=o,o=ac(o,0,N),d=ac(r,N,T),i=r,r=ac(r,0,N),b=l.concat(d)}else s.validationSteps!=null&&(g=!0);const x=o.concat(r).concat(h);this.checkTrainableWeightsConsistency();const y=this.makeTrainFunction(),w=this.getDedupedMetricsNames();let I,k;g?(this.makeTestFunction(),I=this.testFunction,k=w.slice().concat(w.map(N=>"val_"+N))):(I=null,b=[],k=w.slice());const v=b1(s.callbacks,s.yieldEvery);return await this.fitLoop(y,x,w,p,s.epochs,s.verbose,v,I,b,s.shuffle,k,s.initialEpoch,null,null)}finally{this.isTraining=!1,ys(o,e),ys(r,t),ys(a,e),ys(i,t),ys(l,c),ys(d,u),h!=null&&Pe(h)}}async fitLoop(e,t,s,o,r,a,i,c,u,l,d,h,p,f){o==null&&(o=32),r==null&&(r=1),l==null&&(l=!0),h==null&&(h=0);let m=!1;if(c!=null&&u!=null&&(m=!0),f!=null&&(m=!0,p==null))throw new A("Can only use `validationSteps` when doing step-wise training, i.e., `stepsPerEpoch` must be set.");const g=this.checkNumSamples(t,o,p,"steps_per_epoch");let b;g!=null&&(b=Ns(0,g)),a==null&&(a=1);const{callbackList:x,history:y}=x1(i,a,r,h,g,p,o,m,d);x.setModel(this),this.history=y,await x.onTrainBegin(),this.stopTraining_=!1;for(let w=h;w<r;++w){await x.onEpochBegin(w);const I={};if(p!=null)throw new De("stepsPerEpoch mode is not implemented yet.");{if(l==="batch")throw new De("batch shuffling is not implemneted yet");l&&LS(b);const k=Dn(b),v=Zh(g,o);for(let C=0;C<v.length;++C){const N={};if(await x.onBatchBegin(C,N),G(()=>{const T=v[C][0],_=v[C][1],O=wr(k,T,_-T);N.batch=C,N.size=_-T;const P=Hp(t,O),V=e(P);for(let B=0;B<s.length;++B){const W=s[B],q=V[B];N[W]=q,Us(q)}if(C===v.length-1&&m){const B=this.testLoop(c,u,o);for(let W=0;W<s.length;++W){const q=s[W],z=B[W];Us(z),I["val_"+q]=z}}}),await x.onBatchEnd(C,N),g1(N),this.stopTraining_)break}k.dispose()}if(await x.onEpochEnd(w,I),this.stopTraining_)break}return await x.onTrainEnd(),await this.history.syncData(),this.history}async fitDataset(e,t){return iM(this,e,t)}async trainOnBatch(e,t){const s=await this.standardizeUserData(e,t),o=s[0],r=s[1],i=this.makeTrainFunction()(o.concat(r)),c=[];for(const u of i){const l=await u.data();c.push(l[0])}return Pe(i),ys(s[0],e),ys(s[1],t),wn(c)}getNamedWeights(e){const t=[],s=e!=null&&e.trainableOnly,o=s?this.trainableWeights:this.weights,r=this.getWeights(s);for(let a=0;a<o.length;++a)s&&!o[a].trainable||t.push({name:o[a].originalName,tensor:r[a]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(e.refCountAfterDispose===0&&this.optimizer!=null&&this.isOptimizerOwned){const t=Rp().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Rp().numTensors}return e}getLossIdentifiers(){let e;if(typeof this.loss=="string")e=co(this.loss);else if(Array.isArray(this.loss)){for(const t of this.loss)if(typeof t!="string")throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(t=>co(t))}else{const t=Object.keys(this.loss);e={};const s=this.loss;for(const o of t)if(typeof s[o]=="string")e[o]=co(s[o]);else throw new Error("Serialization of non-string loss is not supported.")}return e}getMetricIdentifiers(){if(typeof this.metrics=="string"||typeof this.metrics=="function")return[co(Su(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>co(Su(e)));{const e={};for(const t in this.metrics)e[t]=co(Su(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(e.weighted_metrics!=null)throw new Error("Loading weight_metrics is not supported yet.");if(e.loss_weights!=null)throw new Error("Loading loss_weights is not supported yet.");if(e.sample_weight_mode!=null)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Up(e.optimizer_config),s=ho(t);let o;if(typeof e.loss=="string")o=lr(e.loss);else if(Array.isArray(e.loss))o=e.loss.map(a=>lr(a));else if(e.loss!=null){o={};for(const a in e.loss)o[a]=lr(e.loss[a])}let r;if(Array.isArray(e.metrics))r=e.metrics.map(a=>lr(a));else if(e.metrics!=null){r={};for(const a in e.metrics)r[a]=lr(e.metrics[a])}this.compile({loss:o,metrics:r,optimizer:s})}async save(e,t){if(typeof e=="string"){const u=A2(e);if(u.length===0)throw new A(`Cannot find any save handlers for URL '${e}'`);if(u.length>1)throw new A(`Found more than one (${u.length}) save handlers for URL '${e}'`);e=u[0]}if(e.save==null)throw new A("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const s=await jb(this.getNamedWeights(t)),o=!1,r=null,i={modelTopology:this.toJSON(r,o),format:mM,generatedBy:`TensorFlow.js tfjs-layers v${C1}`,convertedBy:null};if((t==null?!1:t.includeOptimizer)&&this.optimizer!=null){i.trainingConfig=this.getTrainingConfig();const u="optimizer",{data:l,specs:d}=await jb(await this.optimizer.getWeights(),u);s.specs.push(...d),s.data=E0([s.data,l])}return this.userDefinedMetadata!=null&&(kx(this.userDefinedMetadata,this.name,!0),i.userDefinedMetadata=this.userDefinedMetadata),i.weightData=s.data,i.weightSpecs=s.specs,e.save(i)}setUserDefinedMetadata(e){kx(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}fa.className="Model";Q(fa);class _1 extends fa{}_1.className="Functional";Q(_1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Sc extends fa{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=e.name!=null?e.name:bh("sequential_"),e.layers!=null)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(s=>s<0))throw new A(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof Sc||e instanceof fa;let s;if(t){if(s=e,s.outputs.length!==1)throw new A("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(s.inputs.length!==1)throw new A("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(this.outputs.length===0){if(e.inboundNodes.length===0){if(e.batchInputShape==null)throw new A("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const o=xO({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(o)}if(t)this.outputs=s.outputs,this.inputs=s.inputs;else{if(e.inboundNodes.length!==1)throw new A(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(e.inboundNodes[0].outputTensors.length!==1)throw new A("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=d1(this.outputs[0])}this.inboundNodes=[],new yh({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ar(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(o=>o.shape),outputShapes:this.outputs[0].shape})}else{const o=e.apply(this.outputs[0]);if(Array.isArray(o))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[o],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(this.layers.length===0)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),this.layers.length===0)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return this.model==null&&this.build(),this.model.call(e,t)}build(e){if(je(e),this.inputs.length===0||this.outputs.length===0)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new fa({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,s=console.log){this.built||this.build(),super.summary(e,t,s)}setWeights(e){this.model==null&&this.build(),this.model.setWeights(e)}evaluate(e,t,s={}){if(!this.built)throw new cs("The model needs to be compiled before being used.");return this.model.evaluate(e,t,s)}async evaluateDataset(e,t){if(!this.built)throw new cs("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return this.model==null&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return this.model==null&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return this.model==null?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,s={}){if(!this.built)throw new cs("The model needs to be compiled before being used.");return this.model.fit(e,t,s)}async fitDataset(e,t){if(!this.built)throw new cs("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,s={},o=!1){let r,a={};if(t instanceof Array){if(t[0].className==null||t[0].className==="Merge")throw new A("Legacy serialization format not supported yet.");r=t}else $(t.layers!=null,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof Sc))throw new De(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const c of r){const l=ho(c,void 0,o);o&&l.setFastWeightInitDuringBuild(!0),i.add(l)}return i}set stopTraining(e){if(this.model==null)throw new A("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(this.model==null)throw new A("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const s={};s.className=t.getClassName(),s.config=t.getConfig(),e.push(s)}return{name:this.name,layers:e}}}Sc.className="Sequential";Q(Sc);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Cn extends Pi{getConfig(){return{}}}class R1 extends Cn{apply(e,t=1){return oO(e,t)}}R1.className="elu";Q(R1);class A1 extends Cn{apply(e){return ww(e)}}A1.className="selu";Q(A1);class D1 extends Cn{apply(e){return wo(e)}}D1.className="relu";Q(D1);class F1 extends Cn{apply(e){return G(()=>Wl(6,wo(e)))}}F1.className="relu6";Q(F1);class O1 extends Cn{apply(e){return e}}O1.className="linear";Q(O1);class M1 extends Cn{apply(e){return Bi(e)}}M1.className="sigmoid";Q(M1);class L1 extends Cn{apply(e){return aO(e)}}L1.className="hardSigmoid";Q(L1);class P1 extends Cn{apply(e){return Vl(e)}}P1.className="softplus";Q(P1);class B1 extends Cn{apply(e){return rO(e)}}B1.className="softsign";Q(B1);class z1 extends Cn{apply(e){return nm(e)}}z1.className="tanh";Q(z1);class vg extends Cn{apply(e,t=-1){return wm(e,t)}}vg.className="softmax";Q(vg);class V1 extends Cn{apply(e,t=-1){return rw(e,t)}}V1.className="logSoftmax";Q(V1);class W1 extends Cn{apply(e,t=1){return G(()=>R(Bi(R(e,t)),e))}}W1.className="swish";Q(W1);class U1 extends Cn{apply(e){return G(()=>R(e,nm(Vl(e))))}}U1.className="mish";Q(U1);function Oo(n){return n.getClassName()}function Jh(n,e={}){return Hl(n,os.getMap().classNameMap,e,"activation")}function Mo(n){if(n==null){const e={};return e.className="linear",e.config={},Jh(e)}if(typeof n=="string"){const e={};return e.className=n,e.config={},Jh(e)}else return n instanceof Cn?n:Jh(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function gM(n){if(n!=null&&typeof n!="object")throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${n}`)}class G1 extends Pi{}class H1 extends G1{constructor(e){super(),gM(e),this.l1=e==null||e.l1==null?.01:e.l1,this.l2=e==null||e.l2==null?.01:e.l2,this.hasL1=this.l1!==0,this.hasL2=this.l2!==0}apply(e){return G(()=>{let t=Ht([1]);return this.hasL1&&(t=ee(t,ye(R(this.l1,Mt(e))))),this.hasL2&&(t=ee(t,ye(R(this.l2,ql(e))))),M(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}H1.className="L1L2";Q(H1);const Tx={l1l2:"L1L2"};function st(n){return lg(n)}function Ex(n,e={}){return Hl(n,os.getMap().classNameMap,e,"regularizer")}function It(n){if(n==null)return null;if(typeof n=="string"){const t={className:n in Tx?Tx[n]:n,config:{}};return Ex(t)}else return n instanceof G1?n:Ex(n)}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class j1 extends Be{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null&&(this.maxValue=e.maxValue)}call(e,t){e=Ce(e);let s=wo(e);return this.maxValue!=null&&(s=Yn(s,0,this.maxValue)),s}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}j1.className="ReLU";Q(j1);class q1 extends Be{constructor(e){super(e??{}),this.DEFAULT_ALPHA=.3,e==null&&(e={}),this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ce(e);return lm(s,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}q1.className="LeakyReLU";Q(q1);class X1 extends Be{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA_INITIALIZER="zeros",e==null&&(e={}),this.supportsMasking=!0,this.alphaInitializer=wt(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=It(e.alphaRegularizer),this.alphaConstraint=Vt(e.alphaConstraint),e.sharedAxes==null)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else if(typeof e.sharedAxes=="number")this.sharedAxes=[e.sharedAxes];else throw new A(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`)}build(e){e=je(e);const t=e.slice(1);if(this.sharedAxes!=null)for(const o of this.sharedAxes)t[o-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const s={};if(this.sharedAxes!=null)for(let o=1;o<e.length;++o)s[o]=e[o];this.inputSpec=[new Pt({ndim:e.length,axes:s})],this.built=!0}call(e,t){return e=Ce(e),gm(e,this.alpha.read())}getConfig(){const e={alphaInitializer:vt(this.alphaInitializer),alphaRegularizer:st(this.alphaRegularizer),alphaConstraint:zt(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}X1.className="PReLU";Q(X1);class K1 extends Be{constructor(e){if(super(e??{}),this.DEFAULT_ALPHA=1,e==null&&(e={}),e.alpha!=null&&e.alpha!==this.DEFAULT_ALPHA)throw new De(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=e.alpha==null?this.DEFAULT_ALPHA:e.alpha}call(e,t){const s=Ce(e);return sh(s)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}K1.className="ELU";Q(K1);class Y1 extends Be{constructor(e){super(e??{}),this.DEFAULT_THETA=1,e==null&&(e={}),this.theta=e.theta==null?this.DEFAULT_THETA:e.theta}call(e,t){const s=Ce(e);return R(s,he(Jn(s,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Y1.className="ThresholdedReLU";Q(Y1);class Z1 extends Be{constructor(e){super(e??{}),this.DEFAULT_AXIS=1,e==null&&(e={}),this.softmax=new vg().apply,this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis}call(e,t){const s=Ce(e);return this.softmax(s,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}Z1.className="Softmax";Q(Z1);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function ma(n,e,t){if(typeof n=="number")return Ar(n,e);if(n.length!==e)throw new A(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${n.length} elements.`);for(let s=0;s<e;++s){const o=n[s];if(!eO(o))throw new A(`The ${t} argument must be an integer or tuple of ${e} integers. Received: ${JSON.stringify(n)} including a non-integer number ${o}`)}return n}function Ss(n,e,t,s,o=1){if(n==null)return n;const r=e+(e-1)*(o-1);let a;return t==="same"?a=n:a=n-r+1,Math.floor((a+s-1)/s)}function Ps(n,e,t,s){if(n==null)return null;if(s==="valid")n=n*e+Fo([t-e,0]);else if(s==="same")n=n*e;else throw new A(`Unsupport padding mode: ${s}.`);return n}/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function $g(n,e){return G(()=>(Et(e),e==="channelsFirst"?We(n,[0,2,3,1]):n))}function J1(n,e){return G(()=>(Et(e),e==="channelsFirst"?We(n,[0,2,3,4,1]):n))}function bM(n,e,t,s=1,o="valid",r,a=1){return G(()=>{if(r==null&&(r=Ts()),Et(r),n.shape.length!==3)throw new A(`The input of a conv1dWithBias operation should be 3, but is ${n.shape.length} instead.`);if(e.shape.length!==3)throw new A(`The kernel for a conv1dWithBias operation should be 3, but is ${e.shape.length} instead`);if(t!=null&&t.shape.length!==1)throw new A(`The bias for a conv1dWithBias operation should be 1, but is ${e.shape.length} instead`);if(r==="channelsFirst"&&(n=We(n,[0,2,1])),o==="causal")throw new De("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let i=Y0(n,e,s,o==="same"?"same":"valid","NWC",a);return t!=null&&(i=Ds(i,t)),i})}function _x(n,e,t,s=[1,1],o="valid",r,a,i=null){return G(()=>{if(r==null&&(r=Ts()),Et(r),n.rank!==3&&n.rank!==4)throw new A(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${n.rank}.`);if(e.rank!==3&&e.rank!==4)throw new A(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${n.rank}.`);let c=$g(n,r);if(o==="causal")throw new De("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return c=bR({x:c,filter:e,strides:s,pad:o==="same"?"same":"valid",dilations:a,dataFormat:"NHWC",bias:t,activation:i}),r==="channelsFirst"&&(c=We(c,[0,3,1,2])),c})}function xM(n,e,t,s=[1,1,1],o="valid",r,a){return G(()=>{if(r==null&&(r=Ts()),Et(r),n.rank!==4&&n.rank!==5)throw new A(`conv3dWithBias expects input to be of rank 4 or 5, but received ${n.rank}.`);if(e.rank!==4&&e.rank!==5)throw new A(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${n.rank}.`);let i=J1(n,r);if(o==="causal")throw new De("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return i=RT(i,e,s,o==="same"?"same":"valid","NDHWC",a),t!=null&&(i=Ds(i,t)),r==="channelsFirst"&&(i=We(i,[0,4,1,2,3])),i})}class kh extends Be{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",kh.verifyArgs(t),this.rank=e,jt(this.rank,"rank"),this.rank!==1&&this.rank!==2&&this.rank!==3)throw new De(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=ma(t.kernelSize,e,"kernelSize"),this.strides=ma(t.strides==null?1:t.strides,e,"strides"),this.padding=t.padding==null?"valid":t.padding,Qn(this.padding),this.dataFormat=t.dataFormat==null?"channelsLast":t.dataFormat,Et(this.dataFormat),this.activation=Mo(t.activation),this.useBias=t.useBias==null?!0:t.useBias,this.biasInitializer=wt(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Vt(t.biasConstraint),this.biasRegularizer=It(t.biasRegularizer),this.activityRegularizer=It(t.activityRegularizer),this.dilationRate=ma(t.dilationRate==null?1:t.dilationRate,e,"dilationRate"),this.rank===1&&Array.isArray(this.dilationRate)&&this.dilationRate.length!==1)throw new A(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(this.rank===2){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==2)throw new A(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(this.rank===3){if(typeof this.dilationRate=="number")this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(this.dilationRate.length!==3)throw new A(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}}static verifyArgs(e){if(Ls("kernelSize"in e,"required key 'kernelSize' not in config"),typeof e.kernelSize!="number"&&!ug(e.kernelSize,"number",1,3))throw new A(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Oo(this.activation),useBias:this.useBias,biasInitializer:vt(this.biasInitializer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Wi extends kh{constructor(e,t){super(e,t),this.kernel=null,Wi.verifyArgs(t),this.filters=t.filters,jt(this.filters,"filters"),this.kernelInitializer=wt(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Vt(t.kernelConstraint),this.kernelRegularizer=It(t.kernelRegularizer)}build(e){e=je(e);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new A(`The channel dimension of the input should be defined. Found ${e[t]}`);const s=e[t],o=this.kernelSize.concat([s,this.filters]);this.kernel=this.addWeight("kernel",o,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:s}}],this.built=!0}call(e,t){return G(()=>{e=Ce(e);let s;const o=this.bias==null?null:this.bias.read(),r=Yw(this.activation.getClassName());if(r!=null&&this.rank===2)s=_x(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(this.rank===1)s=bM(e,this.kernel.read(),o,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(this.rank===2)s=_x(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else if(this.rank===3)s=xM(e,this.kernel.read(),o,this.strides,this.padding,this.dataFormat,this.dilationRate);else throw new De("convolutions greater than 3D are not implemented yet.");this.activation!=null&&(s=this.activation.apply(s))}return s})}computeOutputShape(e){e=je(e);const t=[],s=this.dataFormat==="channelsLast"?e.slice(1,e.length-1):e.slice(2);for(let r=0;r<s.length;++r){const a=Ss(s[r],this.kernelSize[r],this.padding,this.strides[r],typeof this.dilationRate=="number"?this.dilationRate:this.dilationRate[r]);t.push(a)}let o=[e[0]];return this.dataFormat==="channelsLast"?(o=o.concat(t),o.push(this.filters)):(o.push(this.filters),o=o.concat(t)),o}getConfig(){const e={filters:this.filters,kernelInitializer:vt(this.kernelInitializer),kernelRegularizer:st(this.kernelRegularizer),kernelConstraint:zt(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||typeof e.filters!="number"||e.filters<1)throw new A(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Zl extends Wi{constructor(e){super(2,e),Zl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ug(e.kernelSize,"number",1,2))throw new A(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Zl.className="Conv2D";Q(Zl);class Jl extends Wi{constructor(e){super(3,e),Jl.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!(Array.isArray(e.kernelSize)&&(e.kernelSize.length===1||e.kernelSize.length===3)))throw new A(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Jl.className="Conv3D";Q(Jl);class Q1 extends Zl{constructor(e){if(super(e),this.inputSpec=[new Pt({ndim:4})],this.padding!=="same"&&this.padding!=="valid")throw new A(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=je(e),e.length!==4)throw new A("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new A("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:4,axes:{[t]:s}})],this.built=!0}call(e,t){return G(()=>{let s=Ce(e);if(s.shape.length!==4)throw new A(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,r=o[0];let a,i;this.dataFormat==="channelsFirst"?(a=2,i=3):(a=1,i=2);const c=o[a],u=o[i],l=this.kernelSize[0],d=this.kernelSize[1],h=this.strides[0],p=this.strides[1],f=Ps(c,h,l,this.padding),m=Ps(u,p,d,this.padding),g=[r,f,m,this.filters];this.dataFormat!=="channelsLast"&&(s=We(s,[0,2,3,1]));let b=Z0(s,this.kernel.read(),g,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(b=We(b,[0,3,1,2])),this.bias!=null&&(b=Ds(b,this.bias.read(),this.dataFormat)),this.activation!=null&&(b=this.activation.apply(b)),b})}computeOutputShape(e){e=je(e);const t=e.slice();let s,o,r;this.dataFormat==="channelsFirst"?(s=1,o=2,r=3):(s=3,o=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],c=this.strides[0],u=this.strides[1];return t[s]=this.filters,t[o]=Ps(t[o],c,a,this.padding),t[r]=Ps(t[r],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Q1.className="Conv2DTranspose";Q(Q1);class eI extends Jl{constructor(e){if(super(e),this.inputSpec=[new Pt({ndim:5})],this.padding!=="same"&&this.padding!=="valid")throw new A(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(e=je(e),e.length!==5)throw new A("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null)throw new A("The channel dimension of the inputs should be defined. Found `None`.");const s=e[t],o=this.kernelSize.concat([this.filters,s]);this.kernel=this.addWeight("kernel",o,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Pt({ndim:5,axes:{[t]:s}})],this.built=!0}call(e,t){return G(()=>{let s=Ce(e);if(s.shape.length!==5)throw new A(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${s.shape.length}`);const o=s.shape,r=o[0];let a,i,c;this.dataFormat==="channelsFirst"?(c=2,a=3,i=4):(c=1,a=2,i=3);const u=o[c],l=o[a],d=o[i],h=this.kernelSize[0],p=this.kernelSize[1],f=this.kernelSize[2],m=this.strides[0],g=this.strides[1],b=this.strides[2],x=Ps(u,m,h,this.padding),y=Ps(l,g,p,this.padding),w=Ps(d,b,f,this.padding),I=[r,x,y,w,this.filters];this.dataFormat!=="channelsLast"&&(s=We(s,[0,2,3,4,1]));let k=FT(s,this.kernel.read(),I,this.strides,this.padding);return this.dataFormat!=="channelsLast"&&(k=We(k,[0,4,1,2,3])),this.bias!==null&&(k=Ds(k,this.bias.read(),this.dataFormat)),this.activation!==null&&(k=this.activation.apply(k)),k})}computeOutputShape(e){e=je(e);const t=e.slice();let s,o,r,a;this.dataFormat==="channelsFirst"?(s=1,o=2,r=3,a=4):(s=4,o=1,r=2,a=3);const i=this.kernelSize[0],c=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],d=this.strides[1],h=this.strides[2];return t[s]=this.filters,t[o]=Ps(t[o],l,i,this.padding),t[r]=Ps(t[r],d,c,this.padding),t[a]=Ps(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}eI.className="Conv3DTranspose";Q(eI);class tI extends Wi{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,t.filters==null)throw new A("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(t.kernelInitializer!=null||t.kernelRegularizer!=null||t.kernelConstraint!=null)throw new A("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(t.padding!=null&&t.padding!=="same"&&t.padding!=="valid")throw new A(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=t.depthMultiplier==null?1:t.depthMultiplier,this.depthwiseInitializer=wt(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=It(t.depthwiseRegularizer),this.depthwiseConstraint=Vt(t.depthwiseConstraint),this.pointwiseInitializer=wt(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=It(t.pointwiseRegularizer),this.pointwiseConstraint=Vt(t.pointwiseConstraint)}build(e){if(e=je(e),e.length<this.rank+2)throw new A(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[t]==null||e[t]<0)throw new A(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const s=e[t],o=this.kernelSize.concat([s,this.depthMultiplier]),r=[];for(let i=0;i<this.rank;++i)r.push(1);r.push(s*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",o,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new Pt({ndim:this.rank+2,axes:{[t]:s}})],this.built=!0}call(e,t){return G(()=>{e=Ce(e);let s;if(this.rank===1)throw new De("1D separable convolution is not implemented yet.");return this.rank===2&&(this.dataFormat==="channelsFirst"&&(e=We(e,[0,2,3,1])),s=Iw(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(s=Ds(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),this.dataFormat==="channelsFirst"&&(s=We(s,[0,3,1,2])),s})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=vt(this.depthwiseInitializer),e.pointwiseInitializer=vt(this.pointwiseInitializer),e.depthwiseRegularizer=st(this.depthwiseRegularizer),e.pointwiseRegularizer=st(this.pointwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseConstraint),e.pointwiseConstraint=zt(this.pointwiseConstraint),e}}tI.className="SeparableConv";class nI extends tI{constructor(e){super(2,e)}}nI.className="SeparableConv2D";Q(nI);class vh extends Wi{constructor(e){super(1,e),vh.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if(typeof e.kernelSize!="number"&&!ug(e.kernelSize,"number",1,1))throw new A(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}vh.className="Conv1D";Q(vh);class sI extends Be{constructor(e){super(e),typeof e.cropping=="number"?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:typeof e.cropping[0]=="number"?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=e.dataFormat===void 0?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return this.dataFormat==="channelsFirst"?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return G(()=>{if(e=Ce(e),this.dataFormat==="channelsLast"){const s=Cu(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return Cu(s,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}else{const s=Cu(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return Cu(s,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}sI.className="Cropping2D";Q(sI);class oI extends Be{constructor(e){super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=e.size==null?this.DEFAULT_SIZE:e.size,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),this.interpolation=e.interpolation==null?"nearest":e.interpolation,ZF(this.interpolation)}computeOutputShape(e){if(this.dataFormat==="channelsFirst"){const t=e[2]==null?null:this.size[0]*e[2],s=e[3]==null?null:this.size[1]*e[3];return[e[0],e[1],t,s]}else{const t=e[1]==null?null:this.size[0]*e[1],s=e[2]==null?null:this.size[1]*e[2];return[e[0],t,s,e[3]]}}call(e,t){return G(()=>{let s=Ce(e);const o=s.shape;if(this.dataFormat==="channelsFirst"){s=We(s,[0,2,3,1]);const r=this.size[0]*o[2],a=this.size[1]*o[3],i=this.interpolation==="nearest"?fr.resizeNearestNeighbor(s,[r,a]):fr.resizeBilinear(s,[r,a]);return We(i,[0,3,1,2])}else{const r=this.size[0]*o[1],a=this.size[1]*o[2];return this.interpolation==="nearest"?fr.resizeNearestNeighbor(s,[r,a]):fr.resizeBilinear(s,[r,a])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat,interpolation:this.interpolation},t=super.getConfig();return Object.assign(e,t),e}}oI.className="UpSampling2D";Q(oI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function yM(n,e,t=[1,1],s="valid",o,r){return G(()=>{o==null&&(o=Ts()),Et(o);let a=$g(n,o);if(n.rank!==4)throw new A(`Input for depthwiseConv2d is required to be 4-D, but is instead ${n.rank}-D`);if(e.rank!==4)throw new A(`depthwiseKernel is required to be 4-D, but is instead ${e.rank}-D`);return a=am(a,e,t,s==="same"?"same":"valid","NHWC",r),o==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}class rI extends kh{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=e.depthMultiplier==null?1:e.depthMultiplier,this.depthwiseInitializer=wt(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Vt(e.depthwiseConstraint),this.depthwiseRegularizer=It(e.depthwiseRegularizer)}build(e){if(e=je(e),e.length<4)throw new A(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t=this.dataFormat==="channelsFirst"?1:3;if(e[t]==null||e[t]<0)throw new A(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const s=e[t],o=[this.kernelSize[0],this.kernelSize[1],s,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",o,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[s*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{e=Ce(e);let s=yM(e,this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(s=Ds(s,this.bias.read(),this.dataFormat)),this.activation!=null&&(s=this.activation.apply(s)),s})}computeOutputShape(e){e=je(e);const t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=Ss(t,this.kernelSize[0],this.padding,this.strides[0]),a=Ss(s,this.kernelSize[1],this.padding,this.strides[1]);return this.dataFormat==="channelsFirst"?[e[0],o,r,a]:[e[0],r,a,o]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=vt(this.depthwiseInitializer),e.depthwiseRegularizer=st(this.depthwiseRegularizer),e.depthwiseConstraint=zt(this.depthwiseRegularizer),e}}rI.className="DepthwiseConv2D";Q(rI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function aI(n,e,t,s){if(Array.isArray(n)){if(e!=null||t!=null)throw new A("When inputs is an array, neither initialState or constants should be provided");s!=null&&(t=n.slice(n.length-s,n.length),n=n.slice(0,n.length-s)),n.length>1&&(e=n.slice(1,n.length)),n=n[0]}function o(r){return r==null||Array.isArray(r)?r:[r]}return e=o(e),t=o(t),{inputs:n,initialState:e,constants:t}}function iI(n,e,t,s=!1,o,r,a=!1,i=!1){return G(()=>{const c=e.shape.length;if(c<3)throw new A(`Input should be at least 3D, but is ${c}D.`);const u=[1,0].concat(Ns(2,c));if(e=We(e,u),r!=null)throw new De("The rnn() functoin of the deeplearn.js backend does not support constants yet.");a&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),o!=null&&(o=he(he(o,"bool"),"float32"),o.rank===c-1&&(o=_n(o,-1)),o=We(o,u)),s&&(e=Er(e,0),o!=null&&(o=Er(o,0)));const l=[];let d,h=t;const p=e.shape[0],f=_r(e);let m;o!=null&&(m=_r(o));for(let b=0;b<p;++b){const x=f[b],y=G(()=>n(x,h));if(o==null)d=y[0],h=y[1];else{const w=G(()=>{const I=m[b],k=xe(ps(I),I),v=ee(R(y[0],I),R(h[0],k)),C=h.map((N,T)=>ee(R(y[1][T],I),R(N,k)));return{output:v,newStates:C}});d=w.output,h=w.newStates}i&&l.push(d)}let g;return i&&(g=Do(l,1)),[d,g,h]})}class Xo extends Be{constructor(e){super(e);let t;if(e.cell==null)throw new A("cell property is missing for the constructor of RNN.");if(Array.isArray(e.cell)?t=new Ng({cells:e.cell}):t=e.cell,t.stateSize==null)throw new A("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=e.returnSequences==null?!1:e.returnSequences,this.returnState=e.returnState==null?!1:e.returnState,this.goBackwards=e.goBackwards==null?!1:e.goBackwards,this._stateful=e.stateful==null?!1:e.stateful,this.unroll=e.unroll==null?!1:e.unroll,this.supportsMasking=!0,this.inputSpec=[new Pt({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;return Ns(0,e).map(t=>null)}else return this.states_}setStates(e){this.states_=e}computeOutputShape(e){zp(e)&&(e=e[0]),e=e;let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const s=t[0];let o;if(this.returnSequences?o=[e[0],e[1],s]:o=[e[0],s],this.returnState){const r=[];for(const a of t)r.push([e[0],a]);return[o].concat(r)}else return o}computeMask(e,t){return G(()=>{Array.isArray(t)&&(t=t[0]);const s=this.returnSequences?t:null;if(this.returnState){const o=this.states.map(r=>null);return[s].concat(o)}else return s})}get states(){if(this.states_==null){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let s=0;s<e;++s)t.push(null);return t}else return this.states_}set states(e){this.states_=e}build(e){if(this.numConstants!=null)throw new De("Constants support is not implemented in RNN yet.");zp(e)&&(e=e[0]),e=e;const t=this.stateful?e[0]:null,s=e.slice(2);this.inputSpec[0]=new Pt({shape:[t,null,...s]});const o=[e[0]].concat(e.slice(2));this.cell.build(o);let r;if(Array.isArray(this.cell.stateSize)?r=this.cell.stateSize:r=[this.cell.stateSize],this.stateSpec!=null){if(!Ke(this.stateSpec.map(a=>a.shape[a.shape.length-1]),r))throw new A(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map(a=>new Pt({shape:[null,a]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new Ms("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape[0];if(s==null)throw new A("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.states_==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Ht([s,o])):this.states_=[Ht([s,this.cell.stateSize])];else if(e==null)Pe(this.states_),this.keptStates!=null&&(Pe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(o=>Ht([s,o])):this.states_[0]=Ht([s,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new A(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t===!0?this.keptStates.push(this.states_.slice()):Pe(this.states_);for(let o=0;o<this.states_.length;++o){const r=e[o],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[o]:this.cell.stateSize,i=[s,a];if(!Ke(r.shape,i))throw new A(`State ${o} is incompatible with layer ${this.name}: expected shape=${i}, received shape=${r.shape}`);this.states_[o]=r}}this.states_=this.states_.map(o=>Us(o.clone()))})}apply(e,t){let s=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});const r=aI(e,s,o,this.numConstants);e=r.inputs,s=r.initialState,o=r.constants;let a=[],i=[];if(s!=null){t.initialState=s,a=a.concat(s),this.stateSpec=[];for(const u of s)this.stateSpec.push(new Pt({shape:u.shape}));i=i.concat(this.stateSpec)}if(o!=null&&(t.constants=o,a=a.concat(o),this.numConstants=o.length),a[0]instanceof Bs){const u=[e].concat(a),l=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=l;const h=super.apply(u,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return G(()=>{const s=t==null?null:t.mask,o=t==null?null:t.training;let r=t==null?null:t.initialState;e=Ce(e),r==null&&(this.stateful?r=this.states_:r=this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new A(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:o},u=iI((f,m)=>{const g=this.cell.call([f].concat(m),i);return[g[0],g.slice(1)]},e,r,this.goBackwards,s,null,this.unroll,this.returnSequences),l=u[0],d=u[1],h=u[2];this.stateful&&this.resetStates(h,o);const p=this.returnSequences?d:l;return this.returnState?[p].concat(h):p})}getInitialState(e){return G(()=>{let t=Ht(e.shape);return t=ye(t,[1,2]),t=jl(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(s=>s>1?Pp(t,[1,s]):t):this.cell.stateSize>1?[Pp(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.cell!=null&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};this.numConstants!=null&&(t.numConstants=this.numConstants);const s=this.cell.getConfig();return this.getClassName()===Xo.className&&(t.cell={className:this.cell.getClassName(),config:s}),Object.assign(Object.assign(Object.assign({},s),e),t)}static fromConfig(e,t,s={}){const o=t.cell,r=ho(o,s);return new e(Object.assign(t,{cell:r}))}}Xo.className="RNN";Q(Xo);class $h extends Be{}class Cg extends $h{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jt(this.units,"units"),this.activation=Mo(e.activation==null?this.DEFAULT_ACTIVATION:e.activation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=It(e.kernelRegularizer),this.recurrentRegularizer=It(e.recurrentRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.kernelConstraint=Vt(e.kernelConstraint),this.recurrentConstraint=Vt(e.recurrentConstraint),this.biasConstraint=Vt(e.biasConstraint),this.dropout=Ta([1,Fo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ta([1,Fo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=je(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new A(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let s=e[1];e=e[0];const o=t.training==null?!1:t.training;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Lo({ones:()=>ps(e),rate:this.dropout,training:o,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Lo({ones:()=>ps(s),rate:this.recurrentDropout,training:o,dropoutFunc:this.dropoutFunc}));let r;const a=this.dropoutMask,i=this.recurrentDropoutMask;a!=null?r=Hs(R(e,a),this.kernel.read()):r=Hs(e,this.kernel.read()),this.bias!=null&&(r=Ds(r,this.bias.read())),i!=null&&(s=R(s,i));let c=ee(r,Hs(s,this.recurrentKernel.read()));return this.activation!=null&&(c=this.activation.apply(c)),[c,c]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Oo(this.activation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),recurrentInitializer:vt(this.recurrentInitializer),biasInitializer:vt(this.biasInitializer),kernelRegularizer:st(this.kernelRegularizer),recurrentRegularizer:st(this.recurrentRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign(Object.assign({},e),t)}}Cg.className="SimpleRNNCell";Q(Cg);class cI extends Xo{constructor(e){e.cell=new Cg(e),super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,t){return new e(t)}}cI.className="SimpleRNN";Q(cI);class Sg extends $h{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new A("GRUCell does not support reset_after parameter set to true.");this.units=e.units,jt(this.units,"units"),this.activation=Mo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Mo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=It(e.kernelRegularizer),this.recurrentRegularizer=It(e.recurrentRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.kernelConstraint=Vt(e.kernelConstraint),this.recurrentConstraint=Vt(e.recurrentConstraint),this.biasConstraint=Vt(e.biasConstraint),this.dropout=Ta([1,Fo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ta([1,Fo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=je(e);const t=e[e.length-1];this.kernel=this.addWeight("kernel",[t,this.units*3],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*3],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units*3],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return G(()=>{if(e=e,e.length!==2)throw new A(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training==null?!1:t.training;let o=e[1];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Lo({ones:()=>ps(e),rate:this.dropout,training:s,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Lo({ones:()=>ps(o),rate:this.recurrentDropout,training:s,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,c,u;0<this.dropout&&this.dropout<1&&(e=R(e,r[0]));let l=Hs(e,this.kernel.read());this.useBias&&(l=Ds(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(o=R(o,a[0]));const d=this.recurrentKernel.read(),[h,p]=qn(d,[2*this.units,this.units],d.rank-1),f=Hs(o,h),[m,g,b]=qn(l,3,l.rank-1),[x,y]=qn(f,2,f.rank-1);i=this.recurrentActivation.apply(ee(m,x)),c=this.recurrentActivation.apply(ee(g,y));const w=Hs(R(c,o),p);u=this.activation.apply(ee(b,w));const I=ee(R(i,o),R(ee(1,$t(i)),u));return[I,I]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Oo(this.activation),recurrentActivation:Oo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),recurrentInitializer:vt(this.recurrentInitializer),biasInitializer:vt(this.biasInitializer),kernelRegularizer:st(this.kernelRegularizer),recurrentRegularizer:st(this.recurrentRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign(Object.assign({},e),t)}}Sg.className="GRUCell";Q(Sg);class lI extends Xo{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Sg(e),super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}lI.className="GRU";Q(lI);class Ch extends $h{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,jt(this.units,"units"),this.activation=Mo(e.activation===void 0?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Mo(e.recurrentActivation===void 0?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=e.useBias==null?!0:e.useBias,this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=wt(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=It(e.kernelRegularizer),this.recurrentRegularizer=It(e.recurrentRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.kernelConstraint=Vt(e.kernelConstraint),this.recurrentConstraint=Vt(e.recurrentConstraint),this.biasConstraint=Vt(e.biasConstraint),this.dropout=Ta([1,Fo([0,e.dropout==null?0:e.dropout])]),this.recurrentDropout=Ta([1,Fo([0,e.recurrentDropout==null?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;e=je(e);const s=e[e.length-1];this.kernel=this.addWeight("kernel",[s,this.units*4],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units*4],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint);let o;if(this.useBias){if(this.unitForgetBias){const r=this.biasInitializer,a=this.units;o=new(t=class extends ms{apply(c,u){const l=r.apply([a]),d=new hg().apply([a]),h=r.apply([a*2]);return px(px(l,d),h)}},t.className="CustomInit",t)}else o=this.biasInitializer;this.bias=this.addWeight("bias",[this.units*4],null,o,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return G(()=>{const s=t.training==null?!1:t.training;if(e=e,e.length!==3)throw new A(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let o=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Lo({ones:()=>ps(e),rate:this.dropout,training:s,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Lo({ones:()=>ps(o),rate:this.recurrentDropout,training:s,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let c,u,l,d;0<this.dropout&&this.dropout<1&&(e=R(e,a[0]));let h=Hs(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(o=R(o,i[0])),h=ee(h,Hs(o,this.recurrentKernel.read())),this.useBias&&(h=Ds(h,this.bias.read()));const[p,f,m,g]=qn(h,4,h.rank-1);c=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(f),l=ee(R(u,r),R(c,this.activation.apply(m))),d=this.recurrentActivation.apply(g);const b=R(d,this.activation.apply(l));return[b,b,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Oo(this.activation),recurrentActivation:Oo(this.recurrentActivation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),recurrentInitializer:vt(this.recurrentInitializer),biasInitializer:vt(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:st(this.kernelRegularizer),recurrentRegularizer:st(this.recurrentRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),recurrentConstraint:zt(this.recurrentConstraint),biasConstraint:zt(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign(Object.assign({},e),t)}}Ch.className="LSTMCell";Q(Ch);class uI extends Xo{constructor(e){e.implementation===0&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ch(e),super(e)}call(e,t){return G(()=>{this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}static fromConfig(e,t){return t.implmentation===0&&(t.implementation=1),new e(t)}}uI.className="LSTM";Q(uI);class Ng extends $h{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return G(()=>{e=e;let s=e.slice(1);const o=[];for(const i of this.cells.slice().reverse())Array.isArray(i.stateSize)?o.push(s.splice(0,i.stateSize.length)):o.push(s.splice(0,1));o.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const c=this.cells[i];s=o[i],i===0?a=[e[0]].concat(s):a=[a[0]].concat(s),a=c.call(a,t),r.push(a.slice(1))}s=[];for(const i of r.slice().reverse())s.push(...i);return[a[0]].concat(s)})}build(e){zp(e)&&(e=e[0]),e=e;let t;this.cells.forEach((s,o)=>{yr(`RNNCell_${o}`,()=>{s.build(e),Array.isArray(s.stateSize)?t=s.stateSize[0]:t=s.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t=r=>({className:r.getClassName(),config:r.getConfig()}),o={cells:this.cells.map(t)};return Object.assign(Object.assign({},e),o)}static fromConfig(e,t,s={}){const o=[];for(const r of t.cells)o.push(ho(r,s));return new e({cells:o})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const s of this.cells)t.push(...s.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Vp(e)}setWeights(e){const t=[];for(const s of this.cells){const o=s.weights.length,r=e.splice(o);for(let a=0;a<s.weights.length;++a)t.push([s.weights[a],r[a]])}yg(t)}}Ng.className="StackedRNNCells";Q(Ng);function Lo(n){const{ones:e,rate:t,training:s=!1,count:o=1,dropoutFunc:r}=n,a=()=>r!=null?r(e(),t):s1(e(),t),i=()=>Xl(a,e,s);return!o||o<=1?Us(i().clone()):Array(o).fill(void 0).map(i).map(u=>Us(u.clone()))}/**
 * @license
 * Copyright 2020 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */var wM=globalThis&&globalThis.__rest||function(n,e){var t={};for(var s in n)Object.prototype.hasOwnProperty.call(n,s)&&e.indexOf(s)<0&&(t[s]=n[s]);if(n!=null&&typeof Object.getOwnPropertySymbols=="function")for(var o=0,s=Object.getOwnPropertySymbols(n);o<s.length;o++)e.indexOf(s[o])<0&&Object.prototype.propertyIsEnumerable.call(n,s[o])&&(t[s[o]]=n[s[o]]);return t};class dI extends Xo{constructor(e){if(e.unroll)throw new De("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new De("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Pt({ndim:5})]}call(e,t){return G(()=>{if(this.cell.dropoutMask!=null&&(Pe(this.cell.dropoutMask),this.cell.dropoutMask=null),this.cell.recurrentDropoutMask!=null&&(Pe(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new A("ConvRNN2D cell does not support constants");const s=t==null?null:t.mask,o=t==null?null:t.training,r=t==null?null:t.initialState;return super.call(e,{mask:s,training:o,initialState:r})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return G(()=>{const{stateSize:t}=this.cell,s=e.shape,o=this.computeSingleOutputShape(s),r=[o[0],...o.slice(2)],a=Ht(r);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){G(()=>{if(!this.stateful)throw new Ms("Cannot call resetStates() on an RNN Layer that is not stateful.");const s=this.inputSpec[0].shape,o=this.computeSingleOutputShape(s),r=[o[0],...o.slice(2)];if(s[0]==null)throw new A("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(this.getStates()==null)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(r)):this.states_=[Ht(r)];else if(e==null)Pe(this.states_),this.keptStates!=null&&(Pe(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Ht(r)):this.states_[0]=Ht(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new A(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Pe(this.states_);for(let i=0;i<this.states_.length;++i){const c=e[i],u=r;if(!Ke(c.shape,u))throw new A(`State ${i} is incompatible with layer ${this.name}: expected shape=${u}, received shape=${c.shape}`);this.states_[i]=c}}this.states_=this.states_.map(i=>Us(i.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:s,kernelSize:o,padding:r,strides:a,dilationRate:i}=this.cell,c=t==="channelsFirst",u=e[c?3:2],l=e[c?4:3],d=Ss(u,o[0],r,a[0],i[0]),h=Ss(l,o[1],r,a[1],i[1]);return[...e.slice(0,2),...c?[s,d,h]:[d,h,s]]}}dI.className="ConvRNN2D";class Tg extends Ch{constructor(e){const{filters:t,kernelSize:s,strides:o,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign(Object.assign({},e),{units:t})),this.filters=t,jt(this.filters,"filters"),this.kernelSize=ma(s,2,"kernelSize"),this.kernelSize.forEach(c=>jt(c,"kernelSize")),this.strides=ma(o||1,2,"strides"),this.strides.forEach(c=>jt(c,"strides")),this.padding=r||"valid",Qn(this.padding),this.dataFormat=a||"channelsLast",Et(this.dataFormat),this.dilationRate=ma(i||1,2,"dilationRate"),this.dilationRate.forEach(c=>jt(c,"dilationRate"))}build(e){var t;e=je(e);const s=this.dataFormat==="channelsFirst"?1:e.length-1;if(e[s]==null)throw new A(`The channel dimension of the input should be defined. Found ${e[s]}`);const o=e[s],r=4,a=this.kernelSize.concat([o,this.filters*r]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const i=this.kernelSize.concat([this.filters,this.filters*r]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",i,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let c;if(this.unitForgetBias){const u=this.biasInitializer,l=this.filters;c=new(t=class extends ms{apply(h,p){const f=u.apply([l]),m=Ho([l]),g=u.apply([l*2]);return dg([f,m,g])}},t.className="CustomInit",t)}else c=this.biasInitializer;this.bias=this.addWeight("bias",[this.filters*r],null,c,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return G(()=>{if(e.length!==3)throw new A(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const s=t.training||!1,o=e[0],r=e[1],a=e[2],i=4;0<this.dropout&&this.dropout<1&&this.dropoutMask==null&&(this.dropoutMask=Lo({ones:()=>ps(o),rate:this.dropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const c=this.dropoutMask,u=(Y,Z,se)=>!Z||!Z[se]?Y:R(Z[se],Y);let l=u(o,c,0),d=u(o,c,1),h=u(o,c,2),p=u(o,c,3);0<this.recurrentDropout&&this.recurrentDropout<1&&this.recurrentDropoutMask==null&&(this.recurrentDropoutMask=Lo({ones:()=>ps(r),rate:this.recurrentDropout,training:s,count:i,dropoutFunc:this.dropoutFunc}));const f=this.recurrentDropoutMask;let m=u(r,f,0),g=u(r,f,1),b=u(r,f,2),x=u(r,f,3);const y=3,[w,I,k,v]=qn(this.kernel.read(),i,y),[C,N,T,_]=this.useBias?qn(this.bias.read(),i):[null,null,null,null];l=this.inputConv(l,w,C,this.padding),d=this.inputConv(d,I,N,this.padding),h=this.inputConv(h,k,T,this.padding),p=this.inputConv(p,v,_,this.padding);const[O,P,V,B]=qn(this.recurrentKernel.read(),i,y);m=this.recurrentConv(m,O),g=this.recurrentConv(g,P),b=this.recurrentConv(b,V),x=this.recurrentConv(x,B);const W=this.recurrentActivation.apply(ee(l,m)),q=this.recurrentActivation.apply(ee(d,g)),z=ee(R(q,a),R(W,this.activation.apply(ee(h,b)))),X=R(this.recurrentActivation.apply(ee(p,x)),this.activation.apply(z));return[X,X,z]})}getConfig(){const e=super.getConfig(),t=wM(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign(Object.assign({},t),s)}inputConv(e,t,s,o){const r=Sr(e,t,this.strides,o||"valid",this.dataFormat==="channelsFirst"?"NCHW":"NHWC",this.dilationRate);return s?Ds(r,s,this.dataFormat):r}recurrentConv(e,t){return Sr(e,t,1,"same",this.dataFormat==="channelsFirst"?"NCHW":"NHWC")}}Tg.className="ConvLSTM2DCell";Q(Tg);class hI extends dI{constructor(e){const t=new Tg(e);super(Object.assign(Object.assign({},e),{cell:t}))}static fromConfig(e,t){return new e(t)}}hI.className="ConvLSTM2D";Q(hI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Eg extends Be{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(this.noiseShape==null)return this.noiseShape;const t=e.shape,s=[];for(let o=0;o<this.noiseShape.length;++o)s.push(this.noiseShape[o]==null?t[o]:this.noiseShape[o]);return s}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e);if(0<this.rate&&this.rate<1){const o=t.training==null?!1:t.training,r=this.getNoiseShape(s);return Xl(()=>s1(s,this.rate,r,this.seed),()=>s,o)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Eg.className="Dropout";Q(Eg);class pI extends Eg{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}pI.className="SpatialDropout1D";Q(pI);class fI extends Be{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.batchInputShape==null&&e.inputShape==null&&e.inputDim!=null){let t=null;e.batchSize!=null&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,jt(this.units,"units"),this.activation=Mo(e.activation),e.useBias!=null&&(this.useBias=e.useBias),this.kernelInitializer=wt(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=wt(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Vt(e.kernelConstraint),this.biasConstraint=Vt(e.biasConstraint),this.kernelRegularizer=It(e.kernelRegularizer),this.biasRegularizer=It(e.biasRegularizer),this.activityRegularizer=It(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){e=je(e);const t=e[e.length-1];this.kernel==null&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){e=je(e);const t=e.slice();return t[t.length-1]=this.units,t}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e),o=Yw(this.activation.getClassName());let r;return o!=null?r=Hs(s,this.kernel.read(),o,this.bias?this.bias.read():null):(r=Hs(s,this.kernel.read()),this.bias!=null&&(r=Ds(r,this.bias.read())),this.activation!=null&&(r=this.activation.apply(r))),r})}getConfig(){const e={units:this.units,activation:Oo(this.activation),useBias:this.useBias,kernelInitializer:vt(this.kernelInitializer),biasInitializer:vt(this.biasInitializer),kernelRegularizer:st(this.kernelRegularizer),biasRegularizer:st(this.biasRegularizer),activityRegularizer:st(this.activityRegularizer),kernelConstraint:zt(this.kernelConstraint),biasConstraint:zt(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}fI.className="Dense";Q(fI);class mI extends Be{constructor(e){e=e||{},super(e),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=je(e);for(const t of e.slice(1))if(t==null)throw new A(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],_o(e,1)]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let s=Ce(e);if(this.dataFormat==="channelsFirst"&&s.rank>1){const o=[0];for(let r=2;r<s.rank;++r)o.push(r);o.push(1),s=We(s,o)}return sO(s)})}getConfig(){const e={};this.dataFormat!=null&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}mI.className="Flatten";Q(mI);class gI extends Be{constructor(e){super(e),this.supportsMasking=!0,this.activation=Mo(e.activation)}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e);return this.activation.apply(s)})}getConfig(){const e={activation:Oo(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}gI.className="Activation";Q(gI);class bI extends Be{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return G(()=>(e=Ce(e),tO(e,this.n)))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}bI.className="RepeatVector";Q(bI);class xI extends Be{constructor(e){super(e),this.targetShape=e.targetShape;for(let t=0;t<this.targetShape.length;++t)this.isUnknown(this.targetShape[t])&&(this.targetShape[t]=null)}isUnknown(e){return e<0||e==null}fixUnknownDimension(e,t){const s="Total size of new array must be unchanged.",o=t.slice();let r=1,a=null;for(let c=0;c<o.length;++c){const u=o[c];if(this.isUnknown(u))if(a===null)a=c;else throw new A("Can only specifiy one unknown dimension.");else r*=u}const i=_o(e);if(a!==null){if(r===0||i%r!==0)throw new A(s);o[a]=i/r}else if(i!==r)throw new A(s);return o}computeOutputShape(e){let t=!1;for(let s=0;s<e.length;++s)if(this.isUnknown(e[s])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e),o=s.shape,r=o.slice(0,1).concat(this.fixUnknownDimension(o.slice(1),this.targetShape));return M(s,r)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}xI.className="Reshape";Q(xI);class yI extends Be{constructor(e){if(super(e),e.dims==null)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ns(1,e.dims.length+1);if(!Ke(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Pt({ndim:this.dims.length+1})]}computeOutputShape(e){e=je(e);const t=e.slice();return this.dims.forEach((s,o)=>{t[o+1]=e[s]}),t}call(e,t){return We(Ce(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}yI.className="Permute";Q(yI);class wI extends Be{constructor(e){super(e??{}),this.supportsMasking=!0,e!=null?this.maskValue=e.maskValue==null?0:e.maskValue:this.maskValue=0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const s=Ce(e),o=-1;return Dp(Ic(s,this.maskValue),o)}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e),o=-1,r=!0,a=Dp(Ic(s,this.maskValue),o,r);return R(s,he(a,s.dtype))})}}wI.className="Masking";Q(wI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class II extends Be{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",e.batchInputShape==null&&e.inputShape==null){let t=null;e.batchSize!=null&&(t=e.batchSize),e.inputLength==null?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ft(e.inputLength))}this.inputDim=e.inputDim,jt(this.inputDim,"inputDim"),this.outputDim=e.outputDim,jt(this.outputDim,"outputDim"),this.embeddingsInitializer=wt(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=It(e.embeddingsRegularizer),this.activityRegularizer=It(e.activityRegularizer),this.embeddingsConstraint=Vt(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return G(()=>this.maskZero?(e=Ce(e),Ic(e,Ge(e))):null)}computeOutputShape(e){if(e=je(e),this.inputLength==null)return[...e,this.outputDim];const t=ft(this.inputLength);if(t.length!==e.length-1)throw new A(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let s=0;for(let o=0;o<t.length;++o){const r=t[o],a=e[o+1];if(r!=null&&a!=null&&r!==a)throw new A(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);r==null&&(t[s]=a),s++}}return[e[0],...t,this.outputDim]}call(e,t){return G(()=>{this.invokeCallHook(e,t);let s=Ce(e);s.dtype!=="int32"&&(s=Gs(s,"int32"));const o=n1(this.embeddings.read(),M(s,[s.size]));return M(o,je(this.computeOutputShape(s.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:vt(this.embeddingsInitializer),embeddingsRegularizer:st(this.embeddingsRegularizer),activityRegularizer:st(this.activityRegularizer),embeddingsConstraint:zt(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}II.className="Embedding";Q(II);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class Kr extends Be{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new De}computeElementwiseOpOutputShape(e,t){if(e==null||t==null)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(t.length===0)return e;const s=e.slice(0,e.length-t.length);for(let o=0;o<t.length;++o){const r=e[e.length-t.length+o],a=t[o];if(r==null||a==null||r<0||a<0)s.push(null);else if(r===1)s.push(a);else if(a===1)s.push(r);else{if(r!==a)throw new A("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));s.push(r)}}return s}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[je(e)]),e=e,e.length<2)throw new A(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const r of e)r!=null&&r[0]!==null&&t.push(r[0]);if(t=Eo(t),t.length>1)throw new A(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let s=e[0]==null?null:e[0].slice(1);for(let r=1;r<e.length;++r){const a=e[r]==null?null:e[r].slice(1);s=this.computeElementwiseOpOutputShape(s,a)}const o=e.map(r=>r.length);e.indexOf(null)===-1&&Eo(o).length===1?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return G(()=>{if(e=e,this.reshapeRequired){const s=[],o=e.map(r=>r.rank);if(o.indexOf(null)===-1){const r=Fo(o);for(let a of e){const i=a.rank;for(let c=0;c<r-i;++c)a=jl(a,1);s.push(a)}return this.mergeFunction(s)}else{let r=!1;for(const c of e){const u=c.rank;if(u==null){const l=c.shape,d=l[0],h=l.slice(1).concat([d]);let p=M(c,[d].concat(_o(l.slice(1))));p=We(p,[1,0]),p=M(p,h),s.push(p),r=!0}else if(u>1){const l=Ns(1,u).concat([0]);s.push(We(c,l)),r=!0}else s.push(c)}let a=this.mergeFunction(s);const i=a.rank;if(r){if(i==null){const c=a.shape,u=c.length,l=c[u-1],d=[l].concat(c.slice(0,c.length-1));a=M(We(M(a,[-1,l]),[1,0]),d)}else if(i>1){const c=[i-1].concat(Ns(0,i-1));a=We(a,c)}}return a}}else return this.mergeFunction(e)})}computeOutputShape(e){e=e;let t;e[0]==null?t=null:t=e[0].slice(1);for(let o=1;o<e.length;++o){const r=e[o]==null?null:e[o].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let s=[];for(const o of e)o!=null&&o[0]!==null&&s.push(o[0]);return s=Eo(s),s.length===1?t=s.concat(t):t=[null].concat(t),t}computeMask(e,t){return G(()=>{if(t==null)return null;if(!Array.isArray(t))throw new A("`mask` should be an Array");if(!Array.isArray(e))throw new A("`inputs` should be an Array");if(t.length!==e.length)throw new A(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(o=>o==null))return null;t=t.map(o=>o==null?o:_n(o,0));let s=t[0];for(let o=1;o<t.length-1;++o)s=mo(s,t[o]);return s})}}class kI extends Kr{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ee(t,e[s]);return t})}}kI.className="Add";Q(kI);class vI extends Kr{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=R(t,e[s]);return t})}}vI.className="Multiply";Q(vI);class $I extends Kr{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0].clone();for(let s=1;s<e.length;++s)t=ee(t,e[s]);return R(1/e.length,t)})}}$I.className="Average";Q($I);class CI extends Kr{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=yo(t,e[s]);return t})}}CI.className="Maximum";Q(CI);class SI extends Kr{constructor(e){super(e)}mergeFunction(e){return G(()=>{let t=e[0];for(let s=1;s<e.length;++s)t=Wl(t,e[s]);return t})}}SI.className="Minimum";Q(SI);class NI extends Kr{constructor(e){super(e),this.DEFAULT_AXIS=-1,e==null&&(e={}),this.axis=e.axis==null?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!(Array.isArray(e)&&Array.isArray(e[0]))||e.length===1)throw new A("A `Concatenate` layer should be called on a list of at least 2 inputs");e=e;let t=!0;for(const o of e)if(o!=null){t=!1;break}if(t)return;const s=[];for(let o=0;o<e.length;++o){const r=e[o].slice();r.splice(this.axis,1);let a=!1;for(const i of s)if(Ke(i,r)){a=!0;break}a||s.push(r)}if(s.length>1)throw new A("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return G(()=>dg(e,this.axis))}computeOutputShape(e){if(!(Array.isArray(e)&&Array.isArray(e[0])))throw new A("A `Concatenate` layer should be called on a list of inputs.");const t=e,s=t[0].slice(),o=this.axis<0?s.length+this.axis:this.axis;for(const r of t.slice(1)){if(s[o]==null||r[o]==null){s[o]=null;break}s[o]+=r[o]}return s}computeMask(e,t){if(t==null)return null;if(!Array.isArray(t))throw new A("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new A("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new A(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return G(()=>{let s=!0;if(t.forEach(a=>{if(a!=null){s=!1;return}}),s)return null;const o=[];for(let a=0;a<e.length;++a)t[a]==null?o.push(he(ps(e[a]),"bool")):t[a].rank<e[a].rank?o.push(_n(t[a],-1)):o.push(t[a]);const r=on(o,this.axis);return K0(r,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}NI.className="Concatenate";Q(NI);function ic(n,e){for(;n<0;)n+=e;return n}function IM(n,e,t){if(n.shape.length>3||e.shape.length>3)throw new De("batchDot is not implemented for tensors of 4D or higher rank yet");if($(n.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${n.shape.length}`),$(n.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${e.shape.length}`),typeof t=="number"&&(t=[t,t]),n.dtype==="complex64"||e.dtype==="complex64")throw new De("batchDot is not implemented for complex64-type Tensors yet.");const s=n.shape.length,o=e.shape.length;t==null&&(t=[s-1,o-2]);const r=t;return G(()=>{let a;if(s>o){a=s-o;const c=[];for(let u=0;u<a;++u)c.push(1);e=M(e,e.shape.concat(c))}else if(o>s){a=o-s;const c=[];for(let u=0;u<a;++u)c.push(1);n=M(n,n.shape.concat(c))}else a=0;let i;if(n.shape.length===2&&e.shape.length===2)r[0]===r[1]?i=ye(R(n,e),r[0]):i=ye(R(We(n,[1,0]),e),r[1]);else{const c=r[0]!==n.shape.length-1,u=r[1]===e.shape.length-1;i=Xe(n,e,c,u)}if(a>0){let c;s>o?c=s+o-3:c=s-1;const u=[];for(let l=c;l<c+a;++l)u.push(l);i=Ul(i,u)}return i.shape.length===1&&(i=_n(i,1)),i})}class TI extends Kr{constructor(e){super(e),this.axes=e.axes,this.normalize=e.normalize==null?!1:e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){$(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],s=e[1];if(t.length>3||s.length>3)throw new De("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(t,s);if(t[o[0]]!==s[o[1]])throw new A(`Dimension incompatibility: ${t[o[0]]} !== ${s[o[1]]}`)}mergeFunction(e){if(e.length!==2)throw new A(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t=e[0],s=e[1],o;return Array.isArray(this.axes)?o=this.axes.map((r,a)=>ic(r,e[a].shape.length)):o=[ic(this.axes,t.shape.length),ic(this.axes,s.shape.length)],this.normalize&&(t=id(t,o[0]),s=id(s,o[1])),IM(t,s,o)}interpretAxes(e,t){let s;return Array.isArray(this.axes)?s=this.axes:s=[ic(this.axes,e.length),ic(this.axes,t.length)],s}computeOutputShape(e){$(Array.isArray(e)&&e.length===2&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),s=e[1].slice();if(t.length>3||s.length>3)throw new De("Dot layer does not support tensors of 4D or higher rank yet.");const o=this.interpretAxes(t,s);t.splice(o[0],1),s.splice(o[1],1),s.splice(0,1);const r=t.concat(s);return r.length===1&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}TI.className="Dot";Q(TI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class EI extends Be{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e);return Xl(()=>ee(xh(s.shape,0,this.stddev),s),()=>s,t.training||!1)})}}EI.className="GaussianNoise";Q(EI);class _I extends Be{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{this.invokeCallHook(e,t);const s=Ce(e);return this.rate>0&&this.rate<1?Xl(()=>{const r=Math.sqrt(this.rate/(1-this.rate));return R(s,xh(s.shape,1,r))},()=>s,t.training||!1):s})}}_I.className="GaussianDropout";Q(_I);class RI extends Be{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ce(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return G(()=>{if(this.rate<1&&this.rate>0){const s=this._getNoiseShape(e);return Xl(()=>{const r=Ce(e),a=1.6732632423543772,i=1.0507009873554805,c=-a*i;let u=Ur(ah(s),this.rate);u=Gs(u,"float32");const l=((1-this.rate)*(1+this.rate*c**2))**-.5,d=-l*c*this.rate,h=ee(R(r,u),R(ee(u,-1),c));return ee(R(h,l),d)},()=>Ce(e),t.training||!1)}return e})}}RI.className="AlphaDropout";Q(RI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Nc(n,e,t,s,o,r=.001){let a;if(n.rank===2)a=iT(n,e,t,s,o,r);else if(n.rank===3)a=lT(n,e,t,s,o,r);else if(n.rank===4)a=dT(n,e,t,s,o,r);else throw new De(`batchNormalization is not implemented for array of rank ${n.rank} yet`);return a}function kM(n,e,t,s,o=.001){return G(()=>{const r=pm(n,s),a=r.mean,i=r.variance;return[Nc(n,a,i,t,e,o),a,i]})}function vM(n,e,t,s,o=.001){return G(()=>{const r=pm(n,s),a=r.mean,i=r.variance,c=[];for(const f of Ns(0,n.rank))s.indexOf(f)!==-1?c.push(1):c.push(n.shape[f]);const u=M(a,c),l=M(i,c),d=e==null?null:M(e,c),h=t==null?null:M(t,c);return[Nc(n,u,l,h,d,o),a,i]})}function $M(n,e,t,s,o=.001){return Ke(s.slice().sort(),Ns(0,n.rank-1))?kM(n,e,t,s,o):vM(n,e,t,s,o)}class AI extends Be{constructor(e){e==null&&(e={}),super(e),this.supportsMasking=!0,this.axis=e.axis==null?-1:e.axis,this.momentum=e.momentum==null?.99:e.momentum,this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=wt(e.betaInitializer||"zeros"),this.gammaInitializer=wt(e.gammaInitializer||"ones"),this.movingMeanInitializer=wt(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=wt(e.movingVarianceInitializer||"ones"),this.betaConstraint=Vt(e.betaConstraint),this.gammaConstraint=Vt(e.gammaConstraint),this.betaRegularizer=It(e.betaRegularizer),this.gammaRegularizer=It(e.gammaRegularizer)}build(e){e=je(e);const t=this.axis>=0?this.axis:this.axis+e.length,s=e[t];if(s==null)throw new A(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Pt({ndim:e.length,axes:{[t]:s}})];const o=[s];this.scale&&(this.gamma=this.addWeight("gamma",o,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",o,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",o,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",o,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return G(()=>{const s=t.training==null?!1:t.training,o=Ce(e),r=o.shape,a=r.length,i=Ns(0,a),c=this.axis>=0?this.axis:this.axis+a;i.splice(c,1);const u=Ar(1,a);u[c]=r[c];const l=i.slice();l.sort();const d=!Ke(l,Ns(0,a).slice(0,a-1)),h=()=>{if(d){const x=M(this.movingMean.read(),u),y=M(this.movingVariance.read(),u),w=this.center?M(this.beta.read(),u):null,I=this.scale?M(this.gamma.read(),u):null;return Nc(o,x,y,w,I,this.epsilon)}else return Nc(o,this.movingMean.read(),this.movingVariance.read(),this.beta==null?null:this.beta.read(),this.gamma==null?null:this.gamma.read(),this.epsilon)};if(!s)return h();const[p,f,m]=$M(o,this.gamma.read(),this.beta.read(),i,this.epsilon),g=(x,y,w)=>{G(()=>{const I=1-w,k=x.read(),v=R(xe(k,y),I);x.write(xe(k,v))})};return(()=>{g(this.movingMean,f,this.momentum),g(this.movingVariance,m,this.momentum)})(),p})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vt(this.betaInitializer),gammaInitializer:vt(this.gammaInitializer),movingMeanInitializer:vt(this.movingMeanInitializer),movingVarianceInitializer:vt(this.movingVarianceInitializer),betaRegularizer:st(this.betaRegularizer),gammaRegularizer:st(this.gammaRegularizer),betaConstraint:zt(this.betaConstraint),gammaConstraint:zt(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}AI.className="BatchNormalization";Q(AI);class DI extends Be{constructor(e){if(e==null&&(e={}),super(e),this.axis=e.axis==null?-1:e.axis,typeof this.axis=="number"){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else if(Array.isArray(this.axis)){for(const t of this.axis)if(!Number.isInteger(t))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}else throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);this.epsilon=e.epsilon==null?.001:e.epsilon,this.center=e.center==null?!0:e.center,this.scale=e.scale==null?!0:e.scale,this.betaInitializer=wt(e.betaInitializer||"zeros"),this.gammaInitializer=wt(e.gammaInitializer||"ones"),this.betaRegularizer=It(e.betaRegularizer),this.gammaRegularizer=It(e.gammaRegularizer),this.supportsMasking=!0}build(e){e=je(e);const t=e.length;typeof this.axis=="number"&&(this.axis=[this.axis]);for(let r=0;r<this.axis.length;++r)this.axis[r]<0&&(this.axis[r]+=t);for(const r of this.axis)if(r<0||r>=t)throw new Error(`Invalid axis: ${r}`);if(this.axis.length!==Eo(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const s=this.axis.map(r=>e[r]),o=!0;this.scale?this.gamma=this.addWeight("gamma",s,"float32",this.gammaInitializer,this.gammaRegularizer,o):this.gamma=null,this.center?this.beta=this.addWeight("beta",s,"float32",this.betaInitializer,this.betaRegularizer,o):this.beta=null,this.built=!0}call(e,t){const s=Ce(e),o=s.shape,r=o.length;return G(()=>{let{mean:i,variance:c}=pm(s,this.axis,!0);const u=Ar(1,r);for(const m of this.axis)u[m]=o[m];const l=m=>m!=null&&m.shape.length!==r?M(m,u):m;let d=this.scale?l(this.gamma.read()):null,h=this.center?l(this.beta.read()):null;const p=[],f=[];for(let m=0;m<r;++m)this.axis.indexOf(m)!==-1?(p.push(o[m]),f.push(1)):(p.push(1),f.push(o[m]));return i=$s(i,p),c=$s(c,p),d!=null&&(d=$s(d,f)),h!=null&&(h=$s(h,f)),Nc(s,i,c,h,d,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:vt(this.betaInitializer),gammaInitializer:vt(this.gammaInitializer),betaRegularizer:st(this.betaRegularizer),gammaRegularizer:st(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}DI.className="LayerNormalization";Q(DI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function CM(n,e,t){return G(()=>{if(n.rank!==4)throw new A(`temporalPadding expects input tensor to be 4-D, but received a ${n.rank}-D tensor.`);if(e==null&&(e=[[1,1],[1,1]]),e.length!==2||e[0].length!==2||e[1].length!==2)throw new A("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(t==null&&(t=Ts()),t!=="channelsLast"&&t!=="channelsFirst")throw new A(`Unknown data format: ${t}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let s;return t==="channelsFirst"?s=[[0,0],[0,0],e[0],e[1]]:s=[[0,0],e[0],e[1],[0,0]],fm(n,s)})}class FI extends Be{constructor(e){if(e==null&&(e={}),super(e),this.dataFormat=e.dataFormat==null?Ts():e.dataFormat,e.padding==null)this.padding=[[1,1],[1,1]];else if(typeof e.padding=="number")this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,e.padding.length!==2)throw new A(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,s;if(typeof e.padding[0]=="number")t=[e.padding[0],e.padding[0]],s=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,e.padding[0].length!==2)throw new A(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],e.padding[1].length!==2)throw new A(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);s=e.padding[1]}this.padding=[t,s]}this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=je(e);let t,s;return this.dataFormat==="channelsFirst"?(e[2]!=null&&e[2]>=0?t=e[2]+this.padding[0][0]+this.padding[0][1]:t=null,e[3]!=null&&e[3]>=0?s=e[3]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],e[1],t,s]):(e[1]!=null&&e[1]>=0?t=e[1]+this.padding[0][0]+this.padding[0][1]:t=null,e[2]!=null&&e[2]>=0?s=e[2]+this.padding[1][0]+this.padding[1][1]:s=null,[e[0],t,s,e[3]])}call(e,t){return G(()=>CM(Ce(e),this.padding,this.dataFormat))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}FI.className="ZeroPadding2D";Q(FI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function Sh(n,e,t,s,o,r){return G(()=>{Et(o),Jw(r),Qn(s),t==null&&(t=[1,1]),s==null&&(s="valid"),o==null&&(o=Ts()),r==null&&(r="max"),n=$g(n,o);let a;const i=s==="same"?"same":"valid";return r==="max"?a=hm(n,e,t,i):a=tm(n,e,t,i),o==="channelsFirst"&&(a=We(a,[0,3,1,2])),a})}function OI(n,e,t,s,o,r){return G(()=>{Et(o),Jw(r),Qn(s),t==null&&(t=[1,1,1]),s==null&&(s="valid"),o==null&&(o=Ts()),r==null&&(r="max"),n=J1(n,o);let a;const i=s==="same"?"same":"valid";return r==="max"?a=XE(n,e,t,i):a=JN(n,e,t,i),o==="channelsFirst"&&(a=We(a,[0,4,1,2,3])),a})}class MI extends Be{constructor(e){if(e.poolSize==null&&(e.poolSize=2),super(e),typeof e.poolSize=="number")this.poolSize=[e.poolSize];else if(Array.isArray(e.poolSize)&&e.poolSize.length===1&&typeof e.poolSize[0]=="number")this.poolSize=e.poolSize;else throw new A(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);if(jt(this.poolSize,"poolSize"),e.strides==null)this.strides=this.poolSize;else if(typeof e.strides=="number")this.strides=[e.strides];else if(Array.isArray(e.strides)&&e.strides.length===1&&typeof e.strides[0]=="number")this.strides=e.strides;else throw new A(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,Qn(this.padding),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){e=je(e);const t=Ss(e[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return G(()=>{this.invokeCallHook(e,t),e=jl(Ce(e),2);const s=this.poolingFunction(Ce(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Ul(s,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class LI extends MI{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return Et(r),Qn(o),Sh(e,t,s,o,r,"max")}}LI.className="MaxPooling1D";Q(LI);class PI extends MI{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return Et(r),Qn(o),Sh(e,t,s,o,r,"avg")}}PI.className="AveragePooling1D";Q(PI);class BI extends Be{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==2)throw new A(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];jt(this.poolSize,"poolSize"),jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),Qn(this.padding),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){e=je(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2];return t=Ss(t,this.poolSize[0],this.padding,this.strides[0]),s=Ss(s,this.poolSize[1],this.padding,this.strides[1]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s]:[e[0],t,s,e[3]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class zI extends BI{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return Et(r),Qn(o),Sh(e,t,s,o,r,"max")}}zI.className="MaxPooling2D";Q(zI);class VI extends BI{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return Et(r),Qn(o),Sh(e,t,s,o,r,"avg")}}VI.className="AveragePooling2D";Q(VI);class WI extends Be{constructor(e){if(e.poolSize==null&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],e.strides==null)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(e.strides.length!==3)throw new A(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];jt(this.poolSize,"poolSize"),jt(this.strides,"strides"),this.padding=e.padding==null?"valid":e.padding,this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),Qn(this.padding),this.inputSpec=[new Pt({ndim:5})]}computeOutputShape(e){e=je(e);let t=this.dataFormat==="channelsFirst"?e[2]:e[1],s=this.dataFormat==="channelsFirst"?e[3]:e[2],o=this.dataFormat==="channelsFirst"?e[4]:e[3];return t=Ss(t,this.poolSize[0],this.padding,this.strides[0]),s=Ss(s,this.poolSize[1],this.padding,this.strides[1]),o=Ss(o,this.poolSize[2],this.padding,this.strides[2]),this.dataFormat==="channelsFirst"?[e[0],e[1],t,s,o]:[e[0],t,s,o,e[4]]}call(e,t){return G(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ce(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class UI extends WI{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return Et(r),Qn(o),OI(e,t,s,o,r,"max")}}UI.className="MaxPooling3D";Q(UI);class GI extends WI{constructor(e){super(e)}poolingFunction(e,t,s,o,r){return Et(r),Qn(o),OI(e,t,s,o,r,"avg")}}GI.className="AveragePooling3D";Q(GI);class HI extends Be{constructor(e){super(e),this.inputSpec=[new Pt({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new De}}class jI extends HI{constructor(e){super(e||{})}call(e,t){return G(()=>{const s=Ce(e);return St(s,1)})}}jI.className="GlobalAveragePooling1D";Q(jI);class qI extends HI{constructor(e){super(e||{})}call(e,t){return G(()=>{const s=Ce(e);return us(s,1)})}}qI.className="GlobalMaxPooling1D";Q(qI);class XI extends Be{constructor(e){super(e),this.dataFormat=e.dataFormat==null?"channelsLast":e.dataFormat,Et(this.dataFormat),this.inputSpec=[new Pt({ndim:4})]}computeOutputShape(e){return e=e,this.dataFormat==="channelsLast"?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new De}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class KI extends XI{call(e,t){return G(()=>{const s=Ce(e);return this.dataFormat==="channelsLast"?St(s,[1,2]):St(s,[2,3])})}}KI.className="GlobalAveragePooling2D";Q(KI);class YI extends XI{call(e,t){return G(()=>{const s=Ce(e);return this.dataFormat==="channelsLast"?us(s,[1,2]):us(s,[2,3])})}}YI.className="GlobalMaxPooling2D";Q(YI);/**
 * @license
 * Copyright 2018 Google LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ZI extends Be{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return this.layer!=null?this.layer.trainable:!1}set trainable(e){this.layer!=null&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.layer!=null&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,s={}){const o=t.layer,r=ho(o,s);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class JI extends ZI{constructor(e){super(e),this.supportsMasking=!0}build(e){if(e=je(e),e.length<3)throw new A(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){e=je(e);const t=[e[0]].concat(e.slice(2)),s=this.layer.computeOutputShape(t),o=e[1];return[s[0],o].concat(s.slice(1))}call(e,t){return G(()=>(e=Ce(e),iI((a,i)=>[Ce(this.layer.call(a,t)),[]],e,[],!1,null,null,!1,!0)[1]))}}JI.className="TimeDistributed";Q(JI);function SM(n){Xr(YF,"BidirectionalMergeMode",n)}const NM="concat";class QI extends ZI{constructor(e){super(e);const t=e.layer.getConfig(),s={};s.className=e.layer.getClassName(),s.config=t,this.forwardLayer=ho(s),t.goBackwards=t.goBackwards!==!0;const o={};if(o.className=e.layer.getClassName(),o.config=t,this.backwardLayer=ho(o),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=e.mergeMode===void 0?NM:e.mergeMode,SM(this.mergeMode),e.weights)throw new De("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,this.forwardLayer!=null&&(this.forwardLayer.trainable=e),this.backwardLayer!=null&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,s=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,s)),this.backwardLayer.setWeights(e.slice(s))}computeOutputShape(e){let t=this.forwardLayer.computeOutputShape(e);Array.isArray(t)&&Array.isArray(t[0])||(t=[t]),t=t;let s,o,r;return this.returnState&&(r=t.slice(1)),s=t[0],s=s,this.mergeMode==="concat"?(s[s.length-1]*=2,o=[s]):this.mergeMode==null?o=[s,s.slice()]:o=[s],this.returnState?this.mergeMode==null?o.concat(r).concat(r.slice()):[s].concat(r).concat(r.slice()):wn(o)}apply(e,t){let s=t==null?null:t.initialState,o=t==null?null:t.constants;t==null&&(t={});const r=aI(e,s,o,this.numConstants);if(e=r.inputs,s=r.initialState,o=r.constants,Array.isArray(e)&&(s=e.slice(1),e=e[0]),(s==null||s.length===0)&&o==null)return super.apply(e,t);const a=[],i=[];if(s!=null){const u=s.length;if(u%2>0)throw new A("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=s,a.push(...s);const l=s.map(d=>new Pt({shape:d.shape}));this.forwardLayer.stateSpec=l.slice(0,u/2),this.backwardLayer.stateSpec=l.slice(u/2),i.push(...l)}if(o!=null)throw new De("Support for constants in Bidirectional layers is not implemented yet.");const c=a[0]instanceof Bs;for(const u of a)if(u instanceof Bs!==c)throw new A("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(c){const u=[e].concat(a),l=this.inputSpec.concat(i),d=this.inputSpec;this.inputSpec=l;const h=super.apply(u,t);return this.inputSpec=d,h}else return super.apply(e,t)}call(e,t){return G(()=>{const s=t.initialState;let o,r;if(s==null)o=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const c=s.slice(0,s.length/2),u=s.slice(s.length/2);o=this.forwardLayer.call(e,Object.assign(t,{initialState:c})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:u}))}let a;this.returnState&&(Array.isArray(o)&&(a=o.slice(1).concat(r.slice(1))),o=o[0],r=r[0]),this.returnSequences&&(r=Er(r,1));let i;return this.mergeMode==="concat"?i=dg([o,r]):this.mergeMode==="sum"?i=ee(o,r):this.mergeMode==="ave"?i=R(.5,ee(o,r)):this.mergeMode==="mul"?i=R(o,r):this.mergeMode==null&&(i=[o,r]),this.returnState?this.mergeMode==null?i.concat(a):[i].concat(a):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){yr(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),yr(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){Array.isArray(t)&&(t=t[0]);let s;if(this.returnSequences?this.mergeMode==null?s=[t,t]:s=t:this.mergeMode==null?s=[null,null]:s=null,this.returnState){const r=this.forwardLayer.states.map(a=>null);return Array.isArray(s)?s.concat(r).concat(r):[s].concat(r).concat(r)}else return s}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),this.forwardLayer!=null&&this.forwardLayer.setFastWeightInitDuringBuild(e),this.backwardLayer!=null&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const s=ho(t.layer);if(delete t.layer,t.numConstants!=null)throw new De("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const o=t;return o.layer=s,new e(o)}}QI.className="Bidirectional";Q(QI);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class ek extends Be{constructor(e){super(e),this.scale=e.scale,e.offset?this.offset=e.offset:this.offset=0}getConfig(){const e={scale:this.scale,offset:this.offset},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return G(()=>(e=Ce(e),e.dtype!=="float32"&&(e=Gs(e,"float32")),ee(R(e,this.scale),this.offset)))}}ek.className="Rescaling";Q(ek);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const{resizeBilinear:TM,cropAndResize:EM}=fr;class tk extends Be{constructor(e){super(e),this.height=e.height,this.width=e.width}centerCrop(e,t,s,o,r,a,i,c){return G(()=>{let u,l=!1;const d=t/a,h=s/i,p=(o+t)/a,f=(r+s)/i,m=[d,h,p,f],g=[];e.rank===3?(l=!0,u=Do([e])):u=e;for(let I=0;I<u.shape[0];I++)g.push(m);const b=Xf(g,[g.length,4]),x=kc(0,g.length,1,"int32"),w=EM(u,b,x,[o,r],"nearest");return Gs(l?Ce(_r(w)):w,c)})}upsize(e,t,s,o){return G(()=>{const r=TM(e,[t,s]);return Gs(r,o)})}call(e,t){return G(()=>{const s=Ce(e),o=s.dtype,r=s.shape,a=r[r.length-3],i=r[r.length-2];let c=0;a!==this.height&&(c=Math.floor((a-this.height)/2));let u=0;return i!==this.width&&(u=Math.floor((i-this.width)/2),u===0&&(u=1)),c>=0&&u>=0?this.centerCrop(s,c,u,this.height,this.width,a,i,o):this.upsize(e,this.height,this.width,o)})}getConfig(){const e={height:this.height,width:this.width},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){e=je(e);const t=e.length-3,s=e.length-2;return e[t]=this.height,e[s]=this.width,e}}tk.className="CenterCrop";Q(tk);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */function _M(n,e,t,s){let o=Ce(n);if(o.dtype!=="int32"&&(o=Gs(o,"int32")),e==="int")return o;const r=o.shape;if(o.rank===0&&(o=_n(o,-1)),e==="oneHot"&&o.shape[o.shape.length-1]!==1&&(o=_n(o,-1)),o.rank>2)throw new A(`When outputMode is not int, maximum output rank is 2 Received outputMode ${e} and input shape ${r} which would result in output rank ${o.rank}.`);const a=["multiHot","oneHot"].includes(e),i=o;let c;if(typeof s<"u"&&e==="count"?c=Qb(i,s,t,a):c=Qb(i,[],t,a),e!=="tfIdf")return c;if(s)return R(c,s);throw new A("When outputMode is 'tfIdf', weights must be provided.")}/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */class nk extends Be{constructor(e){super(e),this.numTokens=e.numTokens,e.outputMode?this.outputMode=e.outputMode:this.outputMode="multiHot"}getConfig(){const e={numTokens:this.numTokens,outputMode:this.outputMode},t=super.getConfig();return Object.assign(e,t),e}computeOutputShape(e){return e=je(e),e==null?[this.numTokens]:this.outputMode==="oneHot"&&e[e.length-1]!==1?(e.push(this.numTokens),e):(e[e.length-1]=this.numTokens,e)}call(e,t){return G(()=>{e=Ce(e),e.dtype!=="int32"&&(e=Gs(e,"int32"));let s;if(typeof t.countWeights<"u"){if(this.outputMode!=="count")throw new A(`countWeights is not used when outputMode !== count.
              Received countWeights=${t.countWeights}`);s=Ce(t.countWeights)}const o=us(e),r=wc(e),a=Jn(this.numTokens,o).bufferSync().get(0),i=Ur(r,0).bufferSync().get(0);if(!(a&&i))throw new A(`Input values must be between 0 < values <= numTokens with numTokens=${this.numTokens}`);return _M(e,this.outputMode,this.numTokens,s)})}}nk.className="CategoryEncoding";Q(nk);/**
 * @license
 * Copyright 2022 CodeSmith LLC
 *
 * Use of this source code is governed by an MIT-style
 * license that can be found in the LICENSE file or at
 * https://opensource.org/licenses/MIT.
 * =============================================================================
 */const RM=["bilinear","nearest"],Rx=new Set(RM);class sk extends Be{constructor(e){if(super(e),this.height=e.height,this.width=e.width,e.interpolation)if(Rx.has(e.interpolation))this.interpolation=e.interpolation;else throw new A(`Invalid interpolation parameter: ${e.interpolation} is not implemented`);else this.interpolation="bilinear";this.cropToAspectRatio=Boolean(e.cropToAspectRatio)}computeOutputShape(e){e=je(e);const t=e[2];return[this.height,this.width,t]}getConfig(){const e={height:this.height,width:this.width,interpolation:this.interpolation,cropToAspectRatio:this.cropToAspectRatio},t=super.getConfig();return Object.assign(e,t),e}call(e,t){return G(()=>{const s=[this.height,this.width];if(this.interpolation==="bilinear")return fr.resizeBilinear(e,s,!this.cropToAspectRatio);if(this.interpolation==="nearest")return fr.resizeNearestNeighbor(e,s,!this.cropToAspectRatio);throw new Error(`Interpolation is ${this.interpolation} but only ${[...Rx]} are supported`)})}}sk.className="Resizing";Q(sk);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AM=H();AM.registerFlag("KEEP_INTERMEDIATE_TENSORS",()=>!1,n=>{n&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")});/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Ax;(function(n){n[n.DT_INVALID=0]="DT_INVALID",n[n.DT_FLOAT=1]="DT_FLOAT",n[n.DT_DOUBLE=2]="DT_DOUBLE",n[n.DT_INT32=3]="DT_INT32",n[n.DT_UINT8=4]="DT_UINT8",n[n.DT_INT16=5]="DT_INT16",n[n.DT_INT8=6]="DT_INT8",n[n.DT_STRING=7]="DT_STRING",n[n.DT_COMPLEX64=8]="DT_COMPLEX64",n[n.DT_INT64=9]="DT_INT64",n[n.DT_BOOL=10]="DT_BOOL",n[n.DT_QINT8=11]="DT_QINT8",n[n.DT_QUINT8=12]="DT_QUINT8",n[n.DT_QINT32=13]="DT_QINT32",n[n.DT_BFLOAT16=14]="DT_BFLOAT16",n[n.DT_QINT16=15]="DT_QINT16",n[n.DT_QUINT16=16]="DT_QUINT16",n[n.DT_UINT16=17]="DT_UINT16",n[n.DT_COMPLEX128=18]="DT_COMPLEX128",n[n.DT_HALF=19]="DT_HALF",n[n.DT_RESOURCE=20]="DT_RESOURCE",n[n.DT_VARIANT=21]="DT_VARIANT",n[n.DT_UINT32=22]="DT_UINT32",n[n.DT_UINT64=23]="DT_UINT64",n[n.DT_FLOAT_REF=101]="DT_FLOAT_REF",n[n.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",n[n.DT_INT32_REF=103]="DT_INT32_REF",n[n.DT_UINT8_REF=104]="DT_UINT8_REF",n[n.DT_INT16_REF=105]="DT_INT16_REF",n[n.DT_INT8_REF=106]="DT_INT8_REF",n[n.DT_STRING_REF=107]="DT_STRING_REF",n[n.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",n[n.DT_INT64_REF=109]="DT_INT64_REF",n[n.DT_BOOL_REF=110]="DT_BOOL_REF",n[n.DT_QINT8_REF=111]="DT_QINT8_REF",n[n.DT_QUINT8_REF=112]="DT_QUINT8_REF",n[n.DT_QINT32_REF=113]="DT_QINT32_REF",n[n.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",n[n.DT_QINT16_REF=115]="DT_QINT16_REF",n[n.DT_QUINT16_REF=116]="DT_QUINT16_REF",n[n.DT_UINT16_REF=117]="DT_UINT16_REF",n[n.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",n[n.DT_HALF_REF=119]="DT_HALF_REF",n[n.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",n[n.DT_VARIANT_REF=121]="DT_VARIANT_REF",n[n.DT_UINT32_REF=122]="DT_UINT32_REF",n[n.DT_UINT64_REF=123]="DT_UINT64_REF"})(Ax||(Ax={}));var Dx;(function(n){(function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"})(n.CheckpointFormatVersion||(n.CheckpointFormatVersion={}))})(Dx||(Dx={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * =============================================================================
 */var Fx;(function(n){n[n.FAIL=0]="FAIL",n[n.SHORTEST=1]="SHORTEST",n[n.LONGEST=2]="LONGEST"})(Fx||(Fx={}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function be(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&$(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the CPU backend.`)})}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const DM=Ew;class Nh extends Sd{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new xf(this,Is())}nextDataId(){return Nh.nextDataId++}write(e,t,s){this.firstUse&&(this.firstUse=!1,H().get("IS_NODE")&&Hn(`
============================
Hi, looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, visit https://github.com/tensorflow/tfjs-node for more details. 
============================`));const o={id:this.nextDataId()};return this.data.set(o,{values:e,dtype:s,refCount:1}),o}makeTensorInfo(e,t,s){let o;if(t==="string"&&s!=null&&s.length>0&&Oc(s[0])){const r=s.map(a=>To(a));o=this.write(r,e,t)}else o=this.write(s,e,t);return{dataId:o,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){const t=this.data.get(e);t.refCount++}decRef(e){if(this.data.has(e)){const t=this.data.get(e);t.refCount--}}move(e,t,s,o,r){this.data.set(e,{values:t,dtype:o,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:s}=this.data.get(e);if(t==="complex64"){const o=this.readSync(s.real.dataId),r=this.readSync(s.imag.dataId);return go(o,r)}return this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(o=>Ao(o));return Me(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(e.shape,e.dtype,t)}makeOutput(e,t,s){return Is().makeTensorFromTensorInfo(this.makeTensorInfo(t,s,e),this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:s}=this.data.get(e);s!=null&&(this.disposeData(s.real.dataId,!0),this.disposeData(s.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=nn();return e(),{kernelMs:nn()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){be([e],"where");const t=this.readSync(e.dataId);return DM(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}Nh.nextDataId=0;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ok(n){const e=new Float32Array(n.length);for(let t=0;t<n.length;++t)e[t]=Math.abs(n[t]);return e}const FM=n=>{const{x:e}=n.inputs,t=n.backend;be(e,"abs");let s=new Float32Array(L(e.shape));const o=t.data.get(e.dataId).values;return s=ok(o),t.makeOutput(s,e.shape,e.dtype)},OM={kernelName:Lc,backendName:"cpu",kernelFunc:FM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dt(n){return(e,t,s,o,r)=>{const a=Ee(e,t),i=a.length,c=me(a),u=L(a),l=Qt(r,u),d=e.length,h=t.length,p=me(e),f=me(t),m=Na(e,a),g=Na(t,a);if(m.length+g.length===0)for(let b=0;b<l.length;++b)l[b]=n(s[b%s.length],o[b%o.length]);else for(let b=0;b<l.length;++b){const x=Pa(b,i,c),y=x.slice(-d);m.forEach(v=>y[v]=0);const w=Ws(y,d,p),I=x.slice(-h);g.forEach(v=>I[v]=0);const k=Ws(I,h,f);l[b]=n(s[w],o[k])}return[l,a]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rn(n){const{inputs:e,backend:t}=n,{real:s,imag:o}=e,r=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,i=t.makeTensorInfo(s.shape,"complex64"),c=t.data.get(i.dataId);return c.complexTensorInfos={real:t.makeTensorInfo(s.shape,"float32",r),imag:t.makeTensorInfo(o.shape,"float32",a)},i}const MM={kernelName:Sf,backendName:"cpu",kernelFunc:Rn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hd(n,e,t="float32"){if(t==="complex64"){const o=hd(n,e,"float32"),r=hd(n,e,"float32");return Rn({inputs:{real:o,imag:r},backend:n})}const s=an(L(e),t);return n.makeTensorInfo(e,t,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ys(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const LM={kernelName:si,backendName:"cpu",kernelFunc:Ys};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dr(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.data.get(s.dataId).complexTensorInfos.real,r=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,r)}const PM={kernelName:Vf,backendName:"cpu",kernelFunc:Dr};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rk(n,e,t,s){if(s==="int32"){const o=Int32Array.from(n);return[e,"int32",o]}if(s==="bool"){const o=Wr([0],t),[r,a]=Dt((i,c)=>i!==c?1:0)(e,[],n,o,"bool");return[a,"bool",r]}throw new Error(`Error in Cast: failed to cast ${t} to ${s}`)}function Po(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dtype:r}=s;if(r==="complex64"){if(o.dtype==="complex64")return Ys({inputs:{x:o},backend:t});const l=hd(t,o.shape,o.dtype),d=Po({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),h=Rn({inputs:{real:d,imag:l},backend:t});return t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),h}if(o.dtype==="complex64"){const l=Dr({inputs:{input:o},backend:t}),d=Po({inputs:{x:l},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(l),d}if(!Jy(o.dtype,r)){const l=Ys({inputs:{x:o},backend:t});return{dataId:l.dataId,shape:l.shape,dtype:r}}const a=t.data.get(o.dataId).values,[i,c,u]=rk(a,o.shape,o.dtype,r);return t.makeTensorInfo(i,c,u)}const BM={kernelName:Wa,backendName:"cpu",kernelFunc:Po};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qt(n,e,t,s){return t==null?({inputs:o,backend:r})=>{const{a,b:i}=o,c=r;be([a,i],n);const u=c.data.get(a.dataId).values,l=c.data.get(i.dataId).values,d=a.dtype==="string"?Rr(u):u,h=a.dtype==="string"?Rr(l):l,p=s||a.dtype,[f,m]=e(a.shape,i.shape,d,h,p);return c.makeTensorInfo(m,p,f)}:({inputs:o,backend:r})=>{const{a,b:i}=o,c=r;if(a.dtype==="complex64"||i.dtype==="complex64"){const u=Po({inputs:{x:a},backend:c,attrs:{dtype:"complex64"}}),l=c.data.get(u.dataId),d=l.complexTensorInfos.real,h=l.complexTensorInfos.imag,p=c.data.get(d.dataId).values,f=c.data.get(h.dataId).values,m=Po({inputs:{x:i},backend:c,attrs:{dtype:"complex64"}}),g=c.data.get(m.dataId),b=g.complexTensorInfos.real,x=g.complexTensorInfos.imag,y=c.data.get(b.dataId).values,w=c.data.get(x.dataId).values,[I,k,v]=t(a.shape,i.shape,p,f,y,w),C=c.makeTensorInfo(v,"float32",I),N=c.makeTensorInfo(v,"float32",k),T=Rn({inputs:{real:C,imag:N},backend:c});return c.disposeIntermediateTensorInfo(u),c.disposeIntermediateTensorInfo(m),c.disposeIntermediateTensorInfo(C),c.disposeIntermediateTensorInfo(N),T}else{const u=c.data.get(a.dataId).values,l=c.data.get(i.dataId).values,d=s||a.dtype,[h,p]=e(a.shape,i.shape,u,l,d);return c.makeTensorInfo(p,d,h)}}}function _g(n){return(e,t,s,o,r,a)=>{const i=Ee(e,t),c=L(i),u=i.length,l=me(i),d=Qt("float32",c),h=Qt("float32",c),p=Na(e,i),f=Na(t,i),m=go(s,o),g=go(r,a),b=e.length,x=me(e),y=t.length,w=me(t);if(p.length+f.length===0)for(let I=0;I<d.length;I++){const k=I%m.length,v=I%g.length,C=n(m[k*2],m[k*2+1],g[v*2],g[v*2+1]);d[I]=C.real,h[I]=C.imag}else for(let I=0;I<d.length;I++){const k=Pa(I,u,l),v=k.slice(-b);p.forEach(O=>v[O]=0);const C=Ws(v,b,x),N=k.slice(-y);f.forEach(O=>N[O]=0);const T=Ws(N,y,w),_=n(m[C*2],m[C*2+1],g[T*2],g[T*2+1]);d[I]=_.real,h[I]=_.imag}return[d,h,i]}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ak=Dt((n,e)=>n+e),zM=_g((n,e,t,s)=>({real:n+t,imag:e+s})),Ea=qt(Lr,ak,zM),VM={kernelName:Lr,backendName:"cpu",kernelFunc:Ea};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rg(n,e,t,s,o){const r=L(s),a=an(o,t);for(let i=0;i<n.length;i++){const c=n[i];if(c<0)throw new Error("Input x must be non-negative!");c>=o||(r>0?a[c]+=e[i]:a[c]+=1)}return a}function ik(n,e,t,s=!1){const o=n.shape[0],r=n.shape[1],a=Me([o,t],e.dtype);for(let i=0;i<o;i++)for(let c=0;c<r;c++){const u=n.get(i,c);if(u<0)throw new Error("Input x must be non-negative!");u>=t||(s?a.set(1,i,u):e.size>0?a.set(a.get(i,u)+e.get(i,c),i,u):a.set(a.get(i,u)+1,i,u))}return a}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ko(n){return(e,t,s)=>{const o=Qt(t,e.length);for(let r=0;r<e.length;++r)o[r]=n(e[r],s);return o}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ze(n,e,t){return({inputs:s,attrs:o,backend:r})=>{const{x:a}=s;if(be(a,n),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const i=r,c=i.data.get(a.dataId).values,u=L(a.shape),l=t||a.dtype,d=At(l,u);for(let h=0;h<u;++h)d[h]=e(c[h],o);return i.makeTensorInfo(a.shape,l,d)}}function Ui(n,e,t){return({inputs:s,attrs:o,backend:r})=>{const{x:a}=s;if(be(a,n),a.dtype==="string"||t==="string")throw new Error("unaryKernelFunc does not support string input/output");const i=r,c=i.data.get(a.dataId).values,u=t||a.dtype,l=e(c,u,o);return i.makeTensorInfo(a.shape,u,l)}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ck=Ko(n=>Math.ceil(n)),WM=Ui(Ua,ck),UM={kernelName:Ua,backendName:"cpu",kernelFunc:WM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ag(n,e,t,s){const o=At(t,L(e));if(s&&t!=="string"){let r=0;n.forEach(a=>{const i=L(a.shape);o.set(a.vals,r),r+=i})}else{let r=0;n.forEach(a=>{const i=t==="string"?Rr(a.vals):a.vals;let c=0;for(let u=0;u<a.shape[0];++u){const l=u*e[1]+r;for(let d=0;d<a.shape[1];++d)o[l+d]=i[c++]}r+=a.shape[1]})}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lk=Dt((n,e)=>n===e?1:0),uk=qt(el,lk,null,"bool"),GM={kernelName:el,backendName:"cpu",kernelFunc:uk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dk=Ko(n=>Math.exp(n)),hk=Ui(Ja,dk,"float32"),HM={kernelName:Ja,backendName:"cpu",kernelFunc:hk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pk=Ko(n=>Math.expm1(n)),jM=Ui(nl,pk),qM={kernelName:nl,backendName:"cpu",kernelFunc:jM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fk=Ko(n=>Math.floor(n)),XM=Ui(Qa,fk),KM={kernelName:Qa,backendName:"cpu",kernelFunc:XM};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mk(n,e,t,s,o,r,a,i,c){const u=Me([s,r],t);for(let l=0;l<s;l++){const d=[];let h=0;for(let p=0;p<o;p++){const f=n[l*o+p];h+=f*a[p],d.push(f)}if(h<0||h>=c/r)throw new Error(`Invalid indices: ${d} does not index into ${i}`);for(let p=0;p<r;p++)u.values[l*r+p]=e.get(...e.indexToLoc(h*r+p))}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gk(n,e,t){const s=Me(t,n.dtype);for(let o=0;o<s.size;++o){const a=s.indexToLoc(o).slice(),i=a[0],c=a[2],u=e.locToIndex([i,c]);a[2]=e.values[u];const l=n.locToIndex(a);0<=l&&l<n.values.length&&(s.values[o]=n.values[l])}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bk=Dt((n,e)=>n>e?1:0),YM=qt(rl,bk,null,"bool"),ZM={kernelName:rl,backendName:"cpu",kernelFunc:YM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xk=Dt((n,e)=>n>=e?1:0),JM=qt(ni,xk,null,"bool"),QM={kernelName:ni,backendName:"cpu",kernelFunc:JM};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yk=Dt((n,e)=>n<e?1:0),e3=qt(cl,yk,null,"bool"),t3={kernelName:cl,backendName:"cpu",kernelFunc:e3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wk=Dt((n,e)=>n<=e?1:0),n3=qt(ll,wk,null,"bool"),s3={kernelName:ll,backendName:"cpu",kernelFunc:n3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ik(n,e,t){const s=(e-n)/(t-1),o=an(t,"float32");o[0]=n;for(let r=1;r<o.length;r++)o[r]=o[r-1]+s;return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kk=Ko(n=>Math.log(n)),o3=Ui(ai,kk),r3={kernelName:ai,backendName:"cpu",kernelFunc:o3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vk(n,e,t,s){const o=Qt(s,L(t));for(let r=0;r<o.length;++r){const a=r*e;let i=n[a];for(let c=0;c<e;++c){const u=n[a+c];(Number.isNaN(u)||u>i)&&(i=u)}o[r]=i}return o}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $k=Dt((n,e)=>Math.max(n,e)),a3=qt(ci,$k),i3={kernelName:ci,backendName:"cpu",kernelFunc:a3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ck=Dt((n,e)=>Math.min(n,e)),c3=qt(hi,Ck),l3={kernelName:hi,backendName:"cpu",kernelFunc:c3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Dg=Dt((n,e)=>n*e),u3=_g((n,e,t,s)=>({real:n*t-e*s,imag:n*s+e*t})),Th=qt(fi,Dg,u3),d3={kernelName:fi,backendName:"cpu",kernelFunc:Th};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sk(n,e,t){const s=Uo(-1,t);return Dg([],e,s,n,t)}function h3(n){const{inputs:e,backend:t}=n,{x:s}=e;be(s,"neg");const o=t.data.get(s.dataId).values,[r,a]=Sk(o,s.shape,s.dtype);return t.makeTensorInfo(a,s.dtype,r)}const p3={kernelName:ml,backendName:"cpu",kernelFunc:h3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nk=Dt((n,e)=>n!==e?1:0),f3=qt(gl,Nk,null,"bool"),m3={kernelName:gl,backendName:"cpu",kernelFunc:f3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fg(n,e,t,s,o){const r=e.length,a=L(e),i=me(e),c=me(o),u=Qt(t,L(o));for(let l=0;l<a;++l){const d=Pa(l,r,i),h=new Array(d.length);for(let f=0;f<h.length;f++)h[f]=d[s[f]];const p=Ws(h,r,c);u[p]=n[l]}return u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vn(n){const{inputs:e,attrs:t,backend:s}=n,{x:o}=e,{perm:r}=t;be(o,"transpose");const a=o.shape.length,i=new Array(a);for(let d=0;d<i.length;d++)i[d]=o.shape[r[d]];const c=s.data.get(o.dataId).values,u=Fg(c,o.shape,o.dtype,r,i);return{dataId:s.write(u,i,o.dtype),shape:i,dtype:o.dtype}}const g3={kernelName:So,backendName:"cpu",kernelFunc:vn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tk(n,e,t,s){const[o,r]=bt(n,s),a=Fn(e,"int32"),i=an(L(o),a),c=L(r);for(let u=0;u<i.length;++u){const l=u*c;let d=1;for(let h=0;h<c;++h)d*=t[l+h];i[u]=d}return{outVals:i,outShape:o,outDtype:a}}function b3(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s;be(o,"prod");const i=o.shape.length,c=Re(r,o.shape),u=pt(c,i);let l=c,d=o;const h=[];u!=null&&(d=vn({inputs:{x:o},backend:t,attrs:{perm:u}}),h.push(d),l=rt(l.length,i));const p=t.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=Tk(d.shape,d.dtype,p,l);let b=m;return a&&(b=et(m,c)),h.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.makeTensorInfo(b,g,f)}const x3={kernelName:yi,backendName:"cpu",kernelFunc:b3};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y3(n,e,t){n.forEach((s,o)=>{if(s<0||s>=t){const r=Pa(o,e.length,me(e)).join(",");throw new Error(`indices[${r}] = ${s} is not in [0, ${t})`)}})}function w3(n,e){for(let t=0;t<n.length;++t){const s=n[t],o=t===n.length-1?e:n[t+1].length;if(s.length===0)throw new Error("Ragged splits may not be empty");if(s[0]<0)throw new Error("Ragged splits must be non-negative");if(s[s.length-1]>o)throw new Error("Ragged splits must not point past values");for(let r=1;r<s.length;++r)if(s[r-1]>s[r])throw new Error("Ragged splits must be sorted in ascending order")}}function I3(n,e,t,s){const o=[];let r=0;const a=e.length-1+t.length,i=new Array(a).fill(null).map(()=>[0]);w3(t,s);let c=1;for(let u=0;u<e.length-1;++u){c*=e[u];const l=e[u+1];for(let d=1;d<c+1;++d)i[u].push(d*l)}for(let u=0;u<n.length;++u){let l=n[u],d=n[u]+1;for(let h=0;h<t.length;++h){const p=t[h],f=h+e.length-1;if(f>=0){const m=i[f],g=m[m.length-1]-p[l];for(let b=l;b<d;++b)i[f].push(p[b+1]+g)}l=p[l],d=p[d]}d!==l&&(o.push([l,d]),r+=d-l)}return{outSplits:i,valueSlices:o,numValues:r}}function k3(n){const e=[];for(let t=0;t<n.length;++t){const s=n[t].length,o=At("int32",s);e.push(o),n[t].forEach((r,a)=>o[a]=r)}return e}function Ox(n,e){const t=n.slice(0,e);for(;t.length<e;)t.push(1);for(let s=e;s<n.length;s++)t[e-1]*=n[s];return t}function v3(n,e,t,s,o,r){const a=Ox(e,2)[1],i=Ox(r,2)[1];let c=0;for(const u of t)for(let l=u[0];l<u[1];++l){for(let d=0;d<s;++d)o[c*i+d]=n[l*a+d];++c}}function $3(n,e,t,s,o){const r=e.slice();r[0]=o;const a=At(t,L(r)),i=n.length,c=i===0?0:i/e[0];return v3(n,e,s,c,a,r),[a,r]}function Ek(n,e,t,s,o,r,a,i){if(n.length===0)throw new Error("paramsNestedSplits must be non empty");if(e[0].length===0)throw new Error("Split tensors must not be scalars");const c=e[0][0]-1;if(y3(r,a,c),s.length===0)throw new Error("params.rank must be nonzero");const u=s[0],{outSplits:l,valueSlices:d,numValues:h}=I3(r,a,n,u),p=k3(l),f=$3(t,s,o,d,h);return[p,f[0],f[1]]}/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mx=2147483647;function _k(n,e,t,s,o,r,a){if(e.length>1)throw new Error("starts must be a scalar or vector");if(o.length>1)throw new Error("limits must be a scalar or vector");if(a.length>1)throw new Error("deltas must be a scalar or vector");const i=e.length===0,c=o.length===0,u=a.length===0,l=[];i||l.push(e[0]),c||l.push(o[0]),u||l.push(a[0]);for(let g=1;g<l.length;++g)if(l[g]!==l[g-1])throw new Error("starts, limits, and deltas must have the same shape");const d=l.length===0?1:l[0],h=At("int32",d+1);h[0]=0;for(let g=0;g<d;++g){const b=i?n[0]:n[g],x=c?s[0]:s[g],y=u?r[0]:r[g];if(y===0)throw new Error("Requires delta != 0");let w;if(y>0&&x<b||y<0&&x>b)w=0;else if(w=Math.ceil(Math.abs((x-b)/y)),w>Mx)throw new Error(`Requires ((limit - start) / delta) <= ${Mx}`);h[g+1]=h[g]+w}const p=h[d],f=At(t,p);let m=0;for(let g=0;g<d;++g){const b=h[g+1]-h[g];let x=i?n[0]:n[g];const y=u?r[0]:r[g];for(let w=0;w<b;++w)f[m++]=x,x+=y}return[h,f]}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var ns=vs;class pd{constructor(e,t,s,o,r,a,i,c,u,l){this.shape=e,this.shapeShape=t,this.values=s,this.valuesShape=o,this.valuesDType=r,this.defaultValue=a,this.defaultValueShape=i,this.rowPartitionValues=c,this.rowPartitionValuesShapes=u,this.rowPartitionTypes=Ow(l),this.raggedRank=Mw(this.rowPartitionTypes)}getRowPartitionTypeByDimension(e){return this.rowPartitionTypes[0]===ns.FIRST_DIM_SIZE?this.rowPartitionTypes[e+1]:this.rowPartitionTypes[e]}getRowPartitionTensor(e){return this.rowPartitionTypes[0]===ns.FIRST_DIM_SIZE?this.rowPartitionValues[e+1]:this.rowPartitionValues[e]}getMaxWidth(e){const t=this.getRowPartitionTensor(e-1);switch(this.getRowPartitionTypeByDimension(e-1)){case ns.VALUE_ROWIDS:return pd.getMaxWidthValueRowID(t);case ns.ROW_SPLITS:return pd.getMaxWidthRowSplit(t);default:throw new Error(`Cannot handle partition type ${ns[this.getRowPartitionTypeByDimension(e-1)]}`)}}static getMaxWidthRowSplit(e){const t=e.length;if(t===0||t===1)return 0;let s=0;for(let o=0;o<t-1;++o){const r=e[o+1]-e[o];r>s&&(s=r)}return s}static getMaxWidthValueRowID(e){const t=e.length;if(t===0)return 0;let s=0,o=e[0],r=0;for(let a=1;a<t;++a){const i=e[a];i!==o&&(o=i,r=Math.max(a-s,r),s=a)}return Math.max(t-s,r)}tensorShapeFromTensor(e,t,s=!0){if(t.length===0){if(e[0]===-1)return[];throw new Error("The only valid scalar shape tensor is the fully unknown shape specified as -1.")}return Px(e,s)}calculateOutputSize(e){const t=this.valuesShape,s=this.defaultValueShape;Lw(s,t);const o=this.tensorShapeFromTensor(this.shape,this.shapeShape),a=Fw(this.raggedRank,o,t);a[0]<0&&(a[0]=e);for(let i=1;i<=this.raggedRank;++i)a[i]<0&&(a[i]=this.getMaxWidth(i));return a}calculateFirstParentOutputIndex(e,t,s){const o=Math.min(e,s),r=[];let a=0;for(let i=0;i<o;++i,a+=t)r.push(a);for(let i=o;i<e;++i)r.push(-1);return $(r.length===e,()=>"Final length of result must be equal to firstDimension."),r}calculateOutputIndexRowSplit(e,t,s,o){const r=e.length,a=[];for(let i=0;i<r-1;++i){const c=e[i+1]-e[i];let u=Math.min(o,c),l=t[i];l===-1&&(u=0);for(let d=0;d<u;++d)a.push(l),l+=s;for(let d=0;d<c-u;++d)a.push(-1)}if(r>0&&a.length!==e[r-1])throw new Error("Invalid row split size.");return a}calculateOutputIndexValueRowID(e,t,s,o){const r=e.length,a=[];if(r===0)return[];let i=0,c=e[0];if(c>=t.length)throw new Error(`Got currentValueRowId=${c}, which is not less than ${t.length}`);let u=t[c];a.push(u);for(let l=1;l<r;++l){const d=e[l];if(d===c)u>=0&&(++i,i<o?u+=s:u=-1);else{if(i=0,c=d,d>=t.length)throw new Error(`Got nextValueRowId=${d} which is not less than ${t.length}`);u=t[d]}a.push(u)}if(a.length!==e.length)throw new Error("Invalid row ids.");return a}calculateOutputIndex(e,t,s,o){const r=this.getRowPartitionTensor(e),a=this.getRowPartitionTypeByDimension(e);switch(a){case ns.VALUE_ROWIDS:return this.calculateOutputIndexValueRowID(r,t,s,o);case ns.ROW_SPLITS:if(r.length-1>t.length)throw new Error(`Row partition size is greater than output size: ${r.length-1} > ${t.length}`);return this.calculateOutputIndexRowSplit(r,t,s,o);default:throw new Error(`Unsupported partition type: ${ns[a]}`)}}getFirstDimensionSize(){const e=this.rowPartitionValues[0];if(this.rowPartitionTypes.length===0)throw new Error("No row_partition_types given.");const t=this.rowPartitionTypes[0];switch(t){case ns.FIRST_DIM_SIZE:return e[0];case ns.VALUE_ROWIDS:throw new Error("Cannot handle VALUE_ROWIDS in first dimension.");case ns.ROW_SPLITS:return this.rowPartitionValuesShapes[0][0]-1;default:throw new Error(`Cannot handle type ${ns[t]}`)}}compute(){if(this.rowPartitionValues[0].length<=0)throw new Error("Invalid first partition input. Tensor requires at least one element.");const t=this.getFirstDimensionSize(),s=this.calculateOutputSize(t),o=new Array(this.raggedRank+1);o[o.length-1]=1;for(let c=o.length-2;c>=0;--c)o[c]=o[c+1]*s[c+1];const r=Px(s,!1),a=At(this.valuesDType,L(r));if(o[0]*s[0]>0){let c=this.calculateFirstParentOutputIndex(t,o[0],s[0]);for(let u=1;u<=this.raggedRank;++u)c=this.calculateOutputIndex(u-1,c,o[u],s[u]);this.setOutput(this.raggedRank,c,a,r)}return[r,a]}setOutput(e,t,s,o){if(s.length===0)return;const r=this.values,a=s;let i=o.slice();i=i.slice(e+1);const c=L(i),u=t.length;let l=this.defaultValue;if(l.length!==c&&l.length!==1){const f=this.defaultValueShape;G(()=>{const m=M(l,f);l=mc(m,i).dataSync()})}let d=0,h=0,p=0;for(let f=0;f<=u;++f){let m=f<u?t[f]:-1;if(m===p){++p;continue}if(h<p){const g=r.subarray(d*c),b=a.subarray(h*c),x=(p-h)*c;Lx(b,g,x)}if(f>=u){const g=s.length;m=Math.floor(g/c)}if(m>p)if(this.defaultValue.length===1)a.subarray(p*c,m*c).fill(this.defaultValue[0]),p=m;else for(;m>p;){const g=a.slice(p*c);Lx(g,l,c),++p}m<0?(d=f+1,h=p):(d=f,h=p,p=h+1)}}}function Lx(n,e,t){for(let s=0;s<t;s++)n[s]=e[s]}function Px(n,e){const t=[];for(let s of n){if(s<0){if(!e)throw new Error(`Dimension ${s} must be >= 0`);if(s<-1)throw new Error(`Dimension ${s} must be >= -1`);s=-1}t.push(s)}return t}function Rk(n,e,t,s,o,r,a,i,c,u){return new pd(n,e,t,s,o,r,a,i,c,u).compute()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Og(n,e,t,s){const o=n===e,r=n<e&&t<0,a=e<n&&t>1;if(o||r||a)return an(0,s);const i=Math.abs(Math.ceil((e-n)/t)),c=an(i,s);e<n&&t===1&&(t=-1),c[0]=n;for(let u=1;u<c.length;u++)c[u]=c[u-1]+t;return c}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ak=Ko(n=>1/Math.sqrt(n)),C3=Ui(Ni,Ak),S3={kernelName:Ni,backendName:"cpu",kernelFunc:C3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function da(n,e,t,s,o,r,a,i,c,u){const l=[s/o,o],d=n.values,h=e.values;if(s===0)return Me(t,e.dtype);const p=Me(l,e.dtype);typeof c=="string"||typeof c=="number"?p.values.fill(c):typeof c=="boolean"&&p.values.fill(+c);for(let f=0;f<r;f++){const m=[];let g=0;for(let b=0;b<a;b++){const x=d[f*a+b];m.push(x),g+=x*i[b]}if(g<0||g>=s/o)throw new Error(`Invalid indices: ${m} does not index into ${t}`);for(let b=0;b<o;b++)u?p.values[g*o+b]+=h[f*o+b]:p.values[g*o+b]=e.rank===0?h[0]:h[f*o+b]}return p}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N3=Ko(n=>1/(1+Math.exp(-n))),Dk=Ze(Ei,n=>1/(1+Math.exp(-n))),T3={kernelName:Ei,backendName:"cpu",kernelFunc:Dk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fd(n,e,t,s,o){const r=Qd(s,e,t),a=L(t),i=me(s);if(r){const d=eh(e,i);return o==="string"?n.slice(d,d+a):n.subarray(d,d+a)}const c=o==="string"?Rr(n):n,u=Me(s,o,c),l=Me(t,o);for(let d=0;d<l.size;++d){const h=l.indexToLoc(d),p=h.map((f,m)=>f+e[m]);l.set(u.get(...p),...h)}return o==="string"?ig(l.values):l.values}function Fr(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,size:a}=s;be(o,"slice");const[i,c]=Pl(o,r,a);Qf(o,i,c);const u=t.data.get(o.dataId).values,l=fd(u,i,c,o.shape,o.dtype);return t.makeTensorInfo(c,o.dtype,l)}const E3={kernelName:Cl,backendName:"cpu",kernelFunc:Fr};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fk(n,e,t,s,o,r,a){const i=e[0],c=r[0],u=new Array(c),l=new Array(i),d=e[1];if(c===0){if(i!==0)throw new Error(Ym(i));const g=At(t,0),b=At(o,0);return[g,[0,d],b,u,l]}let h=!0,p=0;const f=new Array(c).fill(0);for(let g=0;g<i;++g){const b=n[g*d];if(b<0)throw new Error(Zm(g,b));if(b>=c)throw new Error(Jm(g,b,c));++f[b],h=h&&b>=p,p=b}let m=!0;for(let g=0;g<c;++g){const b=f[g]===0;u[g]=b,m=m&&!b,f[g]=Math.max(f[g],1),g>0&&(f[g]+=f[g-1])}if(m&&h){const g=n,b=s;for(let x=0;x<i;++x)l[x]=x;return[g,[i,d],b,u,l]}else{const g=f[c-1],b=At(t,g*d),x=At(o,g),y=new Array(c).fill(0);for(let w=0;w<i;++w){const I=n[w*d],k=y[I],v=(I===0?0:f[I-1])+k;y[I]++;for(let C=0;C<d;++C)b[v*d+C]=n[w*d+C];x[v]=s[w],l[w]=v}for(let w=0;w<c;++w)if(y[w]===0){const k=w===0?0:f[w-1];b[k*d+0]=w;for(let v=1;v<d;++v)b[k*d+v]=0;x[k]=a}return[b,[g,d],x,u,l]}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ok(n,e,t,s,o){const r=L(s),a=e[0],i=o.length,c=[];let u=1,l=-1;for(let g=0;g<i;++g){const b=o[g];if(b===-1){if(l!==-1)throw new Error(Qm(l,g));l=g,c.push(1)}else{if(b<0)throw new Error(eg(g,b));u*=b,c.push(b)}}if(l!==-1){if(u<=0)throw new Error(tg());const g=Math.trunc(r/u);if(u*g!==r)throw new Error(ng(s,c));c[l]=g}if(L(c)!==r)throw new Error(sg(s,c));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let g=h-2;g>=0;--g)p[g]=p[g+1]*s[g+1]}const f=[];if(i>0){f[i-1]=1;for(let g=i-2;g>=0;--g)f[g]=f[g+1]*c[g+1]}const m=At(t,a*i);for(let g=0;g<a;++g){let b=0;for(let x=0;x<h;++x)b+=n[g*h+x]*p[x];for(let x=0;x<i;++x)m[g*i+x]=Math.trunc(b/f[x]),b%=f[x]}return[m,[a,i],c]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mg(n,e,t,s,o,r=!1,a=0){const i=s.length,c=[e[0],n.length/e[0]],u=c[1],d=i>0?o[i-1]+1:0;if(d<0)throw new Error(vc());const h=e.slice();h[0]=d;const p=h.reduce((y,w)=>y*w,1),f=At(t,p);if(i===0)return d>0&&f.fill(a),[f,h];if(d<=0)throw new Error(vc());let m=0,g=1,b=0,x=o[m];for(;;){let y=0;if(g<i){if(y=o[g],x===y){++g;continue}if(x>=y)throw new Error(og())}if(x<0||x>=d)throw new Error(rg(x,d));x>b&&f.fill(a,b*u,x*u);for(let w=m;w<g;++w){const I=s[w];if(I<0||I>=c[0])throw new Error(ag(w,s[w],c[0]));for(let k=0;k<u;k++)f[x*u+k]+=n[I*u+k]}if(r)for(let w=0;w<u;w++)f[x*u+w]/=g-m;if(m=g,++g,b=x+1,x=y,g>i)break}return b<d&&f.fill(a,b*u,d*u),[f,h]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _3=Ko(n=>Math.sqrt(n)),R3=Ze(_i,n=>Math.sqrt(n)),A3={kernelName:_i,backendName:"cpu",kernelFunc:R3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mk=Dt((n,e)=>{const t=n-e;return t*t}),D3=qt(Di,Mk),F3={kernelName:Di,backendName:"cpu",kernelFunc:D3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Lk(n,e,t,s){const o=Me(n,e.dtype);for(let r=0;r<o.size;r++){const a=o.indexToLoc(r),i=new Array(a.length);for(let c=0;c<i.length;c++)i[c]=a[c]*t[c]+s[c];o.set(e.get(...i),...a)}return o}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class O3{constructor(e,t,s,o,r,a){this.separator=To(e),this.nGramWidths=t,this.leftPad=To(s),this.rightPad=To(o),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const s=this.getPadWidth(t);return Math.max(0,e+2*s-t+1)}createNGrams(e,t,s,o,r,a){for(let i=0;i<r;++i){const c=this.getPadWidth(a),u=Math.max(0,c-i),l=Math.max(0,c-(r-(i+1))),d=a-(u+l),h=t+(u>0?0:i-c);let p=0;p+=u*this.leftPad.length;for(let x=0;x<d;++x)p+=e[h+x].length;p+=l*this.rightPad.length;const f=u+l+d-1;p+=f*this.separator.length,s[o+i]=new Uint8Array(p);const m=s[o+i];let g=0;const b=x=>x.forEach(y=>m[g++]=y);for(let x=0;x<u;++x)b(this.leftPad),b(this.separator);for(let x=0;x<d-1;++x)b(e[h+x]),b(this.separator);if(d>0){b(e[h+d-1]);for(let x=0;x<l;++x)b(this.separator),b(this.rightPad)}else{for(let x=0;x<l-1;++x)b(this.rightPad),b(this.separator);b(this.rightPad)}}}compute(e,t){const s=e.length,o=t.length;if(o>0){let c=t[0];if(c!==0)throw new Error(`First split value must be 0, got ${c}`);for(let u=1;u<o;++u){let l=t[u]>=c;if(l=l&&t[u]<=s,!l)throw new Error(`Invalid split value ${t[u]}, must be in [${c}, ${s}]`);c=t[u]}if(c!==s)throw new Error(`Last split value must be data size. Expected ${s}, got ${c}`)}const r=o-1,a=At("int32",o);if(s===0||o===0){const c=new Array(s);for(let u=0;u<=r;++u)a[u]=0;return[c,a]}a[0]=0;for(let c=1;c<=r;++c){const u=t[c]-t[c-1];let l=0;this.nGramWidths.forEach(d=>{l+=this.getNumNGrams(u,d)}),this.preserveShort&&u>0&&l===0&&(l=1),a[c]=a[c-1]+l}const i=new Array(a[r]);for(let c=0;c<r;++c){const u=t[c];let l=a[c];if(this.nGramWidths.forEach(d=>{const h=t[c+1]-t[c],p=this.getNumNGrams(h,d);this.createNGrams(e,u,i,l,p,d),l+=p}),this.preserveShort&&l===a[c]){const d=t[c+1]-t[c];if(d===0)continue;const h=d+2*this.padWidth,p=1;this.createNGrams(e,u,i,l,p,h)}}return[i,a]}}function Lg(n,e,t,s,o,r,a,i){return new O3(t,s,o,r,a,i).compute(n,e)}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function M3(n,e,t,s){if(!n.length)return;if(e.length===0){for(let r=0;r<n.length;++r)s.push(n.subarray(r,r+1));return}if(e.length===1){const r=e[0];let a=n.indexOf(r);for(;a!==-1;){const i=n.subarray(0,a);(!t||i.length!==0)&&s.push(i),n=n.subarray(a+1),a=n.indexOf(r)}(!t||n.length!==0)&&s.push(n);return}let o=0;for(let r=0;r<n.length+1;r++)if(r===n.length||e.indexOf(n[r])!==-1){const a=n.subarray(o,r);(!t||a.length!==0)&&s.push(a),o=r+1}}function Pg(n,e,t){const s=n.length,o=[];let r=0,a=0;const i=new Array(s);for(let h=0;h<s;++h){const p=o.length;M3(n[h],e,t,o);const f=o.length-p;i[h]=f,r+=f,a=Math.max(a,f)}const c=At("int32",r*2),u=new Array(r),l=[s,a];let d=0;for(let h=0;h<s;++h)for(let p=0;p<i[h];++p)c[d*2]=h,c[d*2+1]=p,u[d]=o[d],++d;return[c,u,l]}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bg(n,e){const t=At("int32",n.length);for(let s=0;s<n.length;++s)t[s]=c2(n[s]).modulo(e).getLowBitsUnsigned();return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Pk=Dt((n,e)=>n-e),L3=_g((n,e,t,s)=>({real:n-t,imag:e-s})),zg=qt(Fi,Pk,L3),P3={kernelName:Fi,backendName:"cpu",kernelFunc:zg};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bk(n,e){const t=new Array(n.rank);for(let o=0;o<t.length;o++)t[o]=n.shape[o]*e[o];const s=Me(t,n.dtype);for(let o=0;o<s.values.length;++o){const r=s.indexToLoc(o),a=new Array(n.rank);for(let c=0;c<a.length;c++)a[c]=r[c]%n.shape[c];const i=n.locToIndex(a);s.values[o]=n.values[i]}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hc=(n,e)=>{const t=e.value-n.value;return t===0?n.index-e.index:t};function zk(n,e,t=0,s=n.length-1){for(;s>t;){if(s-t>600){const i=s-t+1,c=e-t+1,u=Math.log(i),l=.5*Math.exp(2*u/3),d=.5*Math.sqrt(u*l*(i-l)/i)*Math.sign(c-i/2),h=Math.max(t,Math.floor(e-c*l/i+d)),p=Math.min(s,Math.floor(e+(i-c)*l/i+d));zk(n,e,h,p)}const o=n[e];let r=t,a=s;for(ia(n,t,e),hc(n[s],o)>0&&ia(n,t,s);r<a;){for(ia(n,r,a),r++,a--;hc(n[r],o)<0;)r=r+1;for(;hc(n[a],o)>0;)a=a-1}hc(n[t],o)===0?ia(n,t,a):(a=a+1,ia(n,a,s)),a<=e&&(t=a+1),e<=a&&(s=a-1)}}function Vk(n,e,t,s,o){const r=e[e.length-1],[a,i]=[n.length/r,r],c=Qt(t,a*s),u=Qt("int32",a*s);for(let d=0;d<a;d++){const h=d*i,p=n.subarray(h,h+i);let f=new Array(p.length);p.forEach((x,y)=>f[y]={value:x,index:y}),s<f.length&&(zk(f,s),f=f.slice(0,s)),o&&f.sort(hc);const m=d*s,g=c.subarray(m,m+s),b=u.subarray(m,m+s);for(let x=0;x<s;x++)g[x]=f[x].value,b[x]=f[x].index}const l=e.slice();return l[l.length-1]=s,[Me(l,t,c),Me(l,"int32",u)]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wk(n,e,t,s){const o=Re(e,t)[0],r=[1,t[0],1];for(let f=0;f<o;f++)r[0]*=t[f];r[1]=t[o];for(let f=o+1;f<t.length;f++)r[2]*=t[f];const a={},i=new Int32Array(t[o]),c=new sn(r,s,n),u=[],l=r[0]===1&&r[2]===1;for(let f=0;f<t[o];f++){let m;if(l)m=n[f].toString();else{const g=[];for(let b=0;b<r[0];b++)for(let x=0;x<r[2];x++)g.push(c.get(b,f,x));m=g.join(",")}if(a[m]!==void 0)i[f]=a[m];else{const g=Object.keys(a).length;a[m]=g,i[f]=g,u.push(f)}}const d=r.slice();d[1]=Object.keys(a).length;const h=new sn(d,s);u.forEach((f,m)=>{for(let g=0;g<r[0];g++)for(let b=0;b<r[2];b++)h.set(c.get(g,f,b),g,m,b)});const p=t.slice();return p[o]=d[1],{outputValues:h.values,outputShape:p,indices:i}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const B3=Object.freeze(Object.defineProperty({__proto__:null,simpleAbsImpl:ok,addImpl:ak,bincountImpl:Rg,bincountReduceImpl:ik,castImpl:rk,ceilImpl:ck,concatImpl:Ag,equalImpl:lk,expImpl:dk,expm1Impl:pk,floorImpl:fk,gatherNdImpl:mk,gatherV2Impl:gk,greaterImpl:bk,greaterEqualImpl:xk,lessImpl:yk,lessEqualImpl:wk,linSpaceImpl:Ik,logImpl:kk,maxImpl:vk,maximumImpl:$k,minimumImpl:Ck,multiplyImpl:Dg,negImpl:Sk,notEqualImpl:Nk,prodImpl:Tk,raggedGatherImpl:Ek,raggedRangeImpl:_k,raggedTensorToTensorImpl:Rk,rangeImpl:Og,rsqrtImpl:Ak,scatterImpl:da,sigmoidImpl:N3,sliceImpl:fd,sparseFillEmptyRowsImpl:Fk,sparseReshapeImpl:Ok,sparseSegmentReductionImpl:Mg,sqrtImpl:_3,squaredDifferenceImpl:Mk,stridedSliceImpl:Lk,stringNGramsImpl:Lg,stringSplitImpl:Pg,stringToHashBucketFastImpl:Bg,subImpl:Pk,tileImpl:Bk,topKImpl:Vk,transposeImpl:Fg,uniqueImpl:Wk},Symbol.toStringTag,{value:"Module"}));/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */Zf("cpu",()=>new Nh,1);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uk=Ze(Za,n=>n>=0?n:Math.exp(n)-1),z3={kernelName:Za,backendName:"cpu",kernelFunc:Uk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gk(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{alpha:r}=s;be([o],"leakyRelu");const a=L(o.shape),i=t.data.get(o.dataId).values,c=Qt("float32",a);for(let u=0;u<i.length;u++)c[u]=i[u]<0?r*i[u]:i[u];return t.makeTensorInfo(o.shape,"float32",c)}const V3={kernelName:ri,backendName:"cpu",kernelFunc:Gk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W3=Dt((n,e)=>n<0?e*n:n);function Hk(n){const{inputs:e,backend:t}=n,{x:s,alpha:o}=e;be([s,o],"prelu");const r=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,[i,c]=W3(s.shape,o.shape,r,a,"float32");return t.makeTensorInfo(c,"float32",i)}const U3={kernelName:xi,backendName:"cpu",kernelFunc:Hk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jk=Ze(Ii,n=>Math.max(0,n)),G3={kernelName:Ii,backendName:"cpu",kernelFunc:jk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qk=Ze($i,n=>Math.min(Math.max(0,n),6)),H3={kernelName:$i,backendName:"cpu",kernelFunc:qk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function md(n,e,t,s,o){if(t==="linear")return Ys({inputs:{x:e},backend:n});if(t==="relu")return jk({inputs:{x:e},backend:n});if(t==="elu")return Uk({inputs:{x:e},backend:n});if(t==="relu6")return qk({inputs:{x:e},backend:n});if(t==="prelu")return Hk({inputs:{x:e,alpha:s},backend:n});if(t==="leakyrelu")return Gk({inputs:{x:e},backend:n,attrs:{alpha:o}});if(t==="sigmoid")return Dk({inputs:{x:e},backend:n});throw new Error(`Activation ${t} has not been implemented for the CPU backend.`)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ut(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{shape:r}=s,a=L(o.shape),i=wf(r,a),c=L(i);$(a===c,()=>`The new shape (${i}) has ${c} elements and the old shape (${o.shape}) has ${a} elements. The new shape and old shape must have the same number of elements.`),t.incRef(o.dataId);const u=t.data.get(o.dataId);if(u.complexTensorInfos!=null){const l=u.complexTensorInfos.real,d=u.complexTensorInfos.imag;l.shape=i,d.shape=i}return{dataId:o.dataId,shape:i,dtype:o.dtype}}const j3={kernelName:kl,backendName:"cpu",kernelFunc:ut};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xk(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r}=e,{transposeA:a,transposeB:i}=s;be([o,r],"matMul");const c=o.shape.length,u=r.shape.length,l=a?o.shape[c-2]:o.shape[c-1],d=i?r.shape[u-1]:r.shape[u-2],h=a?o.shape[c-1]:o.shape[c-2],p=i?r.shape[u-2]:r.shape[u-1],f=o.shape.slice(0,-2),m=r.shape.slice(0,-2),g=L(f),b=L(m),y=Ee(o.shape.slice(0,-2),r.shape.slice(0,-2)).concat([h,p]);$(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${o.shape} and ${r.shape} and transposeA=${a} and transposeB=${i} must match.`);const w=a?[g,l,h]:[g,h,l],I=i?[b,p,d]:[b,d,p],k=ut({inputs:{x:o},backend:t,attrs:{shape:w}}),v=ut({inputs:{x:r},backend:t,attrs:{shape:I}}),C=a?k.shape[1]:k.shape[2],N=a?k.shape[2]:k.shape[1],T=i?v.shape[1]:v.shape[2],_=Math.max(g,b),O=t.data.get(k.dataId).values,P=t.data.get(v.dataId).values,V=me(k.shape),B=me(v.shape),[W,q,z]=a?[V[0],1,V[1]]:[V[0],V[1],1],[X,Y,Z]=i?[1,B[1],B[0]]:[B[1],1,B[0]],se=N*T,J=Me([_,N,T],k.dtype),ae=J.values,oe=t.blockSize;for(let ue=0;ue<_;ue++)for(let ge=0;ge<N;ge+=oe)for(let ce=0;ce<T;ce+=oe)for(let we=0;we<C;we+=oe){const Ne=Math.min(ge+oe,N),Fe=Math.min(ce+oe,T),ze=Math.min(we+oe,C);for(let qe=ge;qe<Ne;qe++)for(let Ve=ce;Ve<Fe;Ve++){let Ye=0;for(let Te=we;Te<ze;Te++){const Je=Math.min(ue,g-1)*W,at=Math.min(ue,b-1)*Z,Sn=O[Je+qe*q+Te*z],xt=P[Te*X+Ve*Y+at];Ye+=Sn*xt}ae[ue*se+(qe*T+Ve)]+=Ye}}return t.disposeIntermediateTensorInfo(k),t.disposeIntermediateTensorInfo(v),t.makeTensorInfo(y,J.dtype,J.values)}const q3={kernelName:Va,backendName:"cpu",kernelFunc:Xk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X3(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r,bias:a,preluActivationWeights:i}=e,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=s;let h,p,f;const m=[];h=Xk({inputs:{a:o,b:r},attrs:{transposeA:c,transposeB:u},backend:t}),a&&(p=Ea({inputs:{a:h,b:a},backend:t}),m.push(h),h=p),l&&(f=md(t,h,l,i,d),m.push(h),h=f);for(const b of m)t.disposeIntermediateTensorInfo(b);return h}const K3={kernelName:ka,backendName:"cpu",kernelFunc:X3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y3=Ze(Pc,n=>Math.acos(n)),Z3={kernelName:Pc,backendName:"cpu",kernelFunc:Y3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const J3=Ze(Bc,n=>Math.acosh(n)),Q3={kernelName:Bc,backendName:"cpu",kernelFunc:J3};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eL(n){const{inputs:e,backend:t}=n,s=e;be(e,"addN");const o=s.map(i=>t.data.get(i.dataId).values),r=Me(s[0].shape,s[0].dtype),a=r.values;for(let i=0;i<s.length;i++){const c=o[i];for(let u=0;u<a.length;u++)a[u]+=c[u]}return t.makeTensorInfo(r.shape,r.dtype,r.values)}const tL={kernelName:zc,backendName:"cpu",kernelFunc:eL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s;be(o,"all");const i=Re(r,o.shape);let c=i;const u=pt(c,o.shape.length);let l=o;u!=null&&(l=vn({inputs:{x:o},backend:t,attrs:{perm:u}}),c=rt(c.length,o.shape.length)),ht("all",c,l.shape.length);const[d,h]=bt(l.shape,c),p=L(h),f=an(L(d),l.dtype),m=t.data.get(l.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let y=m[x];for(let w=0;w<p;++w){const I=m[x+w];y=y&&I}f[b]=y}u!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(d,l.dtype,f);if(a){const b=et(d,i),x=ut({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}const sL={kernelName:Vc,backendName:"cpu",kernelFunc:nL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s;be(o,"any");const i=Re(r,o.shape);let c=i;const u=pt(c,o.shape.length);let l=o;u!=null&&(l=vn({inputs:{x:o},backend:t,attrs:{perm:u}}),c=rt(c.length,o.shape.length)),ht("any",c,l.shape.length);const[d,h]=bt(l.shape,c),p=L(h),f=an(L(d),l.dtype),m=t.data.get(l.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let y=m[x];for(let w=0;w<p;++w){const I=m[x+w];y=y||I}f[b]=y}u!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(d,l.dtype,f);if(a){const b=et(d,i),x=ut({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}const rL={kernelName:Wc,backendName:"cpu",kernelFunc:oL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function aL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;be(o,"argMax");let a=Re(r,o.shape);const i=pt(a,o.shape.length);let c=o;const u=[];i!=null&&(c=vn({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(c),a=rt(a.length,c.shape.length)),a=[a[0]],ht("argMax",a,c.shape.length);const[l,d]=bt(c.shape,a),h=L(l),p=an(h,"int32"),f=L(d),m=t.data.get(c.dataId).values;for(let g=0;g<p.length;++g){const b=g*f;let x=m[b],y=0;for(let w=0;w<f;++w){const I=m[b+w];I>x&&(x=I,y=w)}p[g]=y}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",p)}const iL={kernelName:Ba,backendName:"cpu",kernelFunc:aL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function cL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;be(o,"argMin");let a=Re(r,o.shape);const i=pt(a,o.shape.length);let c=o;const u=[];i!=null&&(c=vn({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(c),a=rt(a.length,c.shape.length)),a=[a[0]],ht("argMin",a,c.shape.length);const[l,d]=bt(c.shape,a),h=L(l),p=an(h,"int32"),f=L(d),m=t.data.get(c.dataId).values;for(let g=0;g<p.length;++g){const b=g*f;let x=m[b],y=0;for(let w=0;w<f;++w){const I=m[b+w];I<x&&(x=I,y=w)}p[g]=y}return u.forEach(g=>t.disposeIntermediateTensorInfo(g)),t.makeTensorInfo(l,"int32",p)}const lL={kernelName:Nd,backendName:"cpu",kernelFunc:cL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uL=Ze(Uc,n=>Math.asin(n)),dL={kernelName:Uc,backendName:"cpu",kernelFunc:uL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hL=Ze(Gc,n=>Math.asinh(n)),pL={kernelName:Gc,backendName:"cpu",kernelFunc:hL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fL=Ze(Hc,n=>Math.atan(n)),mL={kernelName:Hc,backendName:"cpu",kernelFunc:fL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gL=Dt((n,e)=>Math.atan2(n,e)),bL=qt(qc,gL),xL={kernelName:qc,backendName:"cpu",kernelFunc:bL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yL=Ze(jc,n=>Math.atanh(n)),wL={kernelName:jc,backendName:"cpu",kernelFunc:yL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vg(n,e,t,s,o,r){const a=o.strideHeight,i=o.strideWidth,c=o.dilationHeight,u=o.dilationWidth,l=o.effectiveFilterHeight,d=o.effectiveFilterWidth,h=o.padInfo.top,p=o.padInfo.left,f=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Me(o.outShape,t),g=m.values,b=o.outShape[1]*o.outShape[2]*o.outShape[3],x=o.outShape[2]*o.outShape[3],y=o.outShape[3];for(let w=0;w<o.batchSize;++w){const I=w*b,k=w*s[0];for(let v=0;v<o.inChannels;++v)for(let C=0;C<o.outHeight;++C){const N=C*a-h,T=Math.max(0,N),_=Math.min(o.inHeight,l+N),O=I+C*x;for(let P=0;P<o.outWidth;++P){const V=P*i-p,B=Math.max(0,V),W=Math.min(o.inWidth,d+V);let q=f,z=0,X=0;for(let Z=T;Z<_;Z+=c){const se=k+Z*s[1];for(let J=B;J<W;J+=u){const ae=se+J*s[2],oe=n[ae+v];r==="max"&&oe>q?q=oe:r==="avg"&&(z+=oe,X++)}if(isNaN(q))break}const Y=O+P*y+v;g[Y]=r==="avg"?z/X:q}}}return m}function Kk(n,e,t,s,o=!1,r=!1){const a=Me(s.outShape,"int32"),i=s.strideHeight,c=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,d=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,f=s.padInfo.left,m=Me(e,t,n);for(let g=0;g<s.batchSize;++g)for(let b=0;b<s.inChannels;++b)for(let x=0;x<s.outHeight;++x){const y=x*i-p;let w=y;for(;w<0;)w+=u;const I=Math.min(s.inHeight,d+y);for(let k=0;k<s.outWidth;++k){const v=k*c-f;let C=v;for(;C<0;)C+=l;const N=Math.min(s.inWidth,h+v);let T=Number.NEGATIVE_INFINITY,_=-1;for(let O=w;O<I;O+=u){const P=O-y;for(let V=C;V<N;V+=l){const B=V-v,W=m.get(g,O,V,b);W>T&&(T=W,o?_=r?((g*s.inHeight+O)*s.inWidth+V)*s.inChannels+b:(O*s.inWidth+V)*s.inChannels+b:_=P*h+B)}}a.set(_,g,x,k,b)}}return a}function Yk(n,e,t,s,o,r){const a=o.strideDepth,i=o.strideHeight,c=o.strideWidth,u=o.dilationDepth,l=o.dilationHeight,d=o.dilationWidth,h=o.effectiveFilterDepth,p=o.effectiveFilterHeight,f=o.effectiveFilterWidth,m=o.padInfo.front,g=o.padInfo.top,b=o.padInfo.left,x=r==="max"?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,y=Me(o.outShape,t),w=y.values,I=o.outShape[1]*o.outShape[2]*o.outShape[3]*o.outShape[4],k=o.outShape[2]*o.outShape[3]*o.outShape[4],v=o.outShape[3]*o.outShape[4],C=o.outShape[4];for(let N=0;N<o.batchSize;++N){const T=N*I,_=N*s[0];for(let O=0;O<o.inChannels;++O)for(let P=0;P<o.outDepth;++P){const V=P*a-m;let B=V;for(;B<0;)B+=u;const W=Math.min(o.inDepth,h+V),q=T+P*k;for(let z=0;z<o.outHeight;++z){const X=z*i-g;let Y=X;for(;Y<0;)Y+=l;const Z=Math.min(o.inHeight,p+X),se=q+z*v;for(let J=0;J<o.outWidth;++J){const ae=J*c-b;let oe=ae;for(;oe<0;)oe+=d;const ue=Math.min(o.inWidth,f+ae),ge=se+J*C;let ce=x,we=0,Ne=0;for(let ze=B;ze<W;ze+=u){const qe=_+ze*s[1];for(let Ve=Y;Ve<Z;Ve+=l){const Ye=qe+Ve*s[2];for(let Te=oe;Te<ue;Te+=d){const Je=Ye+Te*s[3],at=n[Je+O];if(r==="max"&&at>ce?ce=at:r==="avg"&&(we+=at,Ne++),isNaN(ce))break}if(isNaN(ce))break}if(isNaN(ce))break}const Fe=ge+O;w[Fe]=r==="avg"?we/Ne:ce}}}}return y}function IL(n,e){const t=Me(e.outShape,"int32"),s=e.strideDepth,o=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,i=e.dilationHeight,c=e.dilationWidth,u=e.effectiveFilterDepth,l=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.front,p=e.padInfo.top,f=e.padInfo.left;for(let m=0;m<e.batchSize;++m)for(let g=0;g<e.inChannels;++g)for(let b=0;b<e.outDepth;++b){const x=b*s-h;let y=x;for(;y<0;)y+=a;const w=Math.min(e.inDepth,u+x);for(let I=0;I<e.outHeight;++I){const k=I*o-p;let v=k;for(;v<0;)v+=i;const C=Math.min(e.inHeight,l+k);for(let N=0;N<e.outWidth;++N){const T=N*r-f;let _=T;for(;_<0;)_+=c;const O=Math.min(e.inWidth,d+T);let P=Number.NEGATIVE_INFINITY,V=-1;for(let B=y;B<w;B+=a){const W=B-x;for(let q=v;q<C;q+=i){const z=q-k;for(let X=_;X<O;X+=c){const Y=X-T,Z=n.get(m,B,q,X,g);Z>=P&&(P=Z,V=W*l*d+z*l+Y)}}}t.set(V,m,b,I,N,g)}}}return t}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;be(o,"avgPool");const{filterSize:r,strides:a,pad:i,dimRoundingMode:c}=s,u=1;$(cn(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const l=Bn(o.shape,r,a,u,i,c);let d;if(l.filterWidth===1&&l.filterHeight===1&&Ke(l.inShape,l.outShape))d=Ys({inputs:{x:o},backend:t});else{const h=t.data.get(o.dataId).values,p=me(o.shape),f=Vg(h,o.shape,o.dtype,p,l,"avg");d=t.makeTensorInfo(l.outShape,o.dtype,f.values)}return d}const vL={kernelName:za,backendName:"cpu",kernelFunc:kL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $L(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:a,pad:i,dimRoundingMode:c,dataFormat:u}=s;be(o,"avgPool3d");const l=xo(o.shape,r,a,1,i,c,u),d=t.data.get(o.dataId).values,h=Yk(d,o.shape,o.dtype,me(o.shape),l,"avg");return t.makeTensorInfo(h.shape,"float32",h.values)}const CL={kernelName:Td,backendName:"cpu",kernelFunc:$L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SL(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,{filterSize:a,strides:i,pad:c,dimRoundingMode:u}=s;be([o,r],"avgPool3DGrad");const l=xo(r.shape,a,i,1,c,u),d=l.strideDepth,h=l.strideHeight,p=l.strideWidth,f=l.filterDepth,m=l.filterHeight,g=l.filterWidth,b=l.dilationDepth,x=l.dilationHeight,y=l.dilationWidth,w=l.effectiveFilterDepth,I=l.effectiveFilterHeight,k=l.effectiveFilterWidth,v=w-1-l.padInfo.front,C=k-1-l.padInfo.left,N=I-1-l.padInfo.top,T=Me(r.shape,"float32"),_=1/(f*m*g),O=t.bufferSync(o);for(let P=0;P<l.batchSize;++P)for(let V=0;V<l.inChannels;++V)for(let B=0;B<l.inDepth;++B)for(let W=0;W<l.inHeight;++W)for(let q=0;q<l.inWidth;++q){const z=B-v,X=W-N,Y=q-C;let Z=0;for(let se=0;se<w;se+=b){const J=(z+se)/d;if(!(J<0||J>=l.outDepth||Math.floor(J)!==J))for(let ae=0;ae<I;ae+=x){const oe=(X+ae)/h;if(!(oe<0||oe>=l.outHeight||Math.floor(oe)!==oe))for(let ue=0;ue<k;ue+=y){const ge=(Y+ue)/p;if(ge<0||ge>=l.outWidth||Math.floor(ge)!==ge)continue;const ce=O.get(P,J,oe,ge,V);Z+=ce}}}T.set(Z*_,P,B,W,q,V)}return t.makeTensorInfo(T.shape,T.dtype,T.values)}const NL={kernelName:$f,backendName:"cpu",kernelFunc:SL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TL(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,a=r;be([o,r],"avgPoolGrad");const{filterSize:i,strides:c,pad:u}=s,l=Bn(a.shape,i,c,1,u),d=l.strideHeight,h=l.strideWidth,p=l.filterHeight,f=l.filterWidth,m=l.dilationHeight,g=l.dilationWidth,b=l.effectiveFilterHeight,x=l.effectiveFilterWidth,y=x-1-l.padInfo.left,w=b-1-l.padInfo.top,I=Me(a.shape,"float32"),k=1/(p*f),v=t.data.get(o.dataId).values,C=Me(o.shape,"float32",v);for(let N=0;N<l.batchSize;++N)for(let T=0;T<l.inChannels;++T)for(let _=0;_<l.inHeight;++_)for(let O=0;O<l.inWidth;++O){const P=_-w,V=O-y;let B=0;for(let W=0;W<b;W+=m){const q=(P+W)/d;if(!(q<0||q>=l.outHeight||Math.floor(q)!==q))for(let z=0;z<x;z+=g){const X=(V+z)/h;if(X<0||X>=l.outWidth||Math.floor(X)!==X)continue;const Y=C.get(N,q,X,T);B+=Y}}I.set(B*k,N,_,O,T)}return t.makeTensorInfo(I.shape,I.dtype,I.values)}const EL={kernelName:vf,backendName:"cpu",kernelFunc:TL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _L(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,scale:r,offset:a,mean:i,variance:c}=e;$(i.shape.length===c.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(a==null||i.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(r==null||i.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),be([o,i,c,r,a],"batchNorm");let{varianceEpsilon:u}=s;u==null&&(u=.001);const l=t.data.get(o.dataId).values,d=t.data.get(i.dataId).values,h=t.data.get(c.dataId).values,p=r?t.data.get(r.dataId).values:new Float32Array([1]),f=a?t.data.get(a.dataId).values:new Float32Array([0]),m=new Float32Array(l.length),g=f.length,b=p.length,x=h.length,y=d.length;let w=0,I=0,k=0,v=0;for(let C=0;C<l.length;++C)m[C]=f[w++]+(l[C]-d[I++])*p[k++]/Math.sqrt(h[v++]+u),w>=g&&(w=0),I>=y&&(I=0),k>=b&&(k=0),v>=x&&(v=0);return t.makeTensorInfo(o.shape,o.dtype,m)}const RL={kernelName:ti,backendName:"cpu",kernelFunc:_L};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,crops:a}=s;be([o],"batchToSpaceND");const i=r.reduce((b,x)=>b*x),c=Hr(o.shape,r,i),u=jr(c.length,r.length),l=qr(o.shape,r,i),d=dh(a,r.length),h=hh(l,a,r.length),p=ut({inputs:{x:o},backend:t,attrs:{shape:c}}),f=vn({inputs:{x:p},backend:t,attrs:{perm:u}}),m=ut({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Fr({inputs:{x:m},backend:t,attrs:{begin:d,size:h}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const DL={kernelName:Xc,backendName:"cpu",kernelFunc:AL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:a}=s,i=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,u=Rg(i,c,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,u)}const OL={kernelName:Cf,backendName:"cpu",kernelFunc:FL};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ML(n){const{inputs:e,backend:t}=n,{s0:s,s1:o}=e,r=t.data.get(s.dataId).values,a=t.data.get(o.dataId).values,i=Ee(Array.from(r),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const LL={kernelName:o0,backendName:"cpu",kernelFunc:ML};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const PL=Ze(Pr,(n,e)=>{const t=e;return n>t.clipValueMax?t.clipValueMax:n<t.clipValueMin?t.clipValueMin:n}),BL={kernelName:Pr,backendName:"cpu",kernelFunc:PL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zL=n=>{const{x:e}=n.inputs,t=n.backend,s=new Float32Array(L(e.shape)),o=t.data.get(e.dataId),r=o.complexTensorInfos.real,a=o.complexTensorInfos.imag,i=t.data.get(r.dataId).values,c=t.data.get(a.dataId).values;for(let u=0;u<i.length;u++){const l=i[u],d=c[u];s[u]=Math.hypot(l,d)}return t.makeOutput(s,e.shape,"float32")},VL={kernelName:Ed,backendName:"cpu",kernelFunc:zL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _a(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.data.get(s.dataId).complexTensorInfos.imag,r=t.data.get(o.dataId).values;return t.makeTensorInfo(o.shape,o.dtype,r)}const WL={kernelName:Mf,backendName:"cpu",kernelFunc:_a};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ra(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s,r=Re(o,e[0].shape)[0],a=e.map(m=>m.shape);ch(a,r);let i=Xn(e.map(m=>m.shape),r);if(L(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(m=>L(m.shape)>0);if(c.length===1)return Ys({inputs:{x:c[0]},backend:t});if(c[0].dtype==="complex64"){const m=c.map(w=>Dr({inputs:{input:w},backend:t})),g=c.map(w=>_a({inputs:{input:w},backend:t})),b=Ra({inputs:m,backend:t,attrs:{axis:r}}),x=Ra({inputs:g,backend:t,attrs:{axis:r}}),y=Rn({inputs:{real:b,imag:x},backend:t});return m.forEach(w=>t.disposeIntermediateTensorInfo(w)),g.forEach(w=>t.disposeIntermediateTensorInfo(w)),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),y}const u=c.map(m=>{const b=[-1,L(m.shape.slice(r))];return ut({inputs:{x:m},backend:t,attrs:{shape:b}})}),l=u.map(m=>({vals:t.data.get(m.dataId).values,shape:m.shape}));i=Xn(u.map(m=>m.shape),1);const d=u[0].shape[0]===1,h=Ag(l,i,e[0].dtype,d),p=Xn(c.map(m=>m.shape),r),f=t.makeTensorInfo(p,e[0].dtype,h);return u.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const UL={kernelName:Kc,backendName:"cpu",kernelFunc:Ra};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zk(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:a,pad:i,dataFormat:c,dilations:u,dimRoundingMode:l}=s;be([o,r],"conv2d");const d=As(c),h=Nt(o.shape,r.shape,a,u,i,l,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,b=h.padInfo.left,x=h.padInfo.top,y=h.dataFormat==="channelsLast",w=new sn(h.outShape,o.dtype),I=me(o.shape),k=me(r.shape),v=I[0],C=y?I[1]:I[2],N=y?I[2]:1,T=y?1:I[1],_=w.strides[0],O=y?w.strides[1]:w.strides[2],P=y?w.strides[2]:1,V=y?1:w.strides[1],B=t.data.get(o.dataId).values,W=t.data.get(r.dataId).values,q=w.values;for(let z=0;z<h.batchSize;++z){const X=z*v,Y=z*_;for(let Z=0;Z<h.outHeight;++Z){const se=Y+Z*O,J=Z*h.strideHeight-x;for(let ae=0;ae<p;++ae){const oe=J+ae*m;if(oe<0||oe>=h.inHeight)continue;const ue=ae*k[0],ge=X+oe*C;for(let ce=0;ce<h.outWidth;++ce){const we=se+ce*P,Ne=ce*h.strideWidth-b;for(let Fe=0;Fe<f;++Fe){const ze=Ne+Fe*g;if(ze<0||ze>=h.inWidth)continue;const qe=ue+Fe*k[1],Ve=ge+ze*N;let Ye=qe;for(let Te=0;Te<h.inChannels;++Te){const Je=B[Ve+Te*T];for(let at=0;at<h.outChannels;++at)q[we+at*V]+=Je*W[Ye+at];Ye+=h.outChannels}}}}}}return t.makeTensorInfo(w.shape,w.dtype,q)}const GL={kernelName:Ga,backendName:"cpu",kernelFunc:Zk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:a,pad:i,dataFormat:c,dimRoundingMode:u,filterShape:l}=s;be([o,r],"conv2dBackpropFilter");const d=As(c),h=Nt(o.shape,l,a,1,i,u,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,b=h.dataFormat==="channelsLast",x=new sn(h.filterShape,"float32"),y=h.padInfo.left,w=h.padInfo.top,I=t.data.get(o.dataId).values,k=t.data.get(r.dataId).values,v=new sn(o.shape,o.dtype,I),C=new sn(r.shape,r.dtype,k);for(let N=0;N<m;++N){const T=Math.max(0,Math.ceil((w-N)/p)),_=Math.min(h.outHeight,(h.inHeight+w-N)/p);for(let O=0;O<g;++O){const P=Math.max(0,Math.ceil((y-O)/f)),V=Math.min(h.outWidth,(h.inWidth+y-O)/f);for(let B=0;B<h.inChannels;++B)for(let W=0;W<h.outChannels;++W){let q=0;for(let z=0;z<h.batchSize;++z)for(let X=T;X<_;++X){const Y=N+X*p-w;for(let Z=P;Z<V;++Z){const se=O+Z*f-y;b?q+=v.get(z,Y,se,B)*C.get(z,X,Z,W):q+=v.get(z,B,Y,se)*C.get(z,W,X,Z)}}x.set(q,N,O,B,W)}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const jL={kernelName:Nf,backendName:"cpu",kernelFunc:HL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qL(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{inputShape:a,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=s;be([o,r],"conv2dBackpropInput");const d=me(r.shape),h=me(o.shape);let p=As(u);const f=Nt(a,r.shape,i,1,c,l,!1,p),m=new sn(f.inShape,"float32"),g=m.values,b=t.data.get(o.dataId).values,x=t.data.get(r.dataId).values,[y,w,I]=d,{batchSize:k,filterHeight:v,filterWidth:C,inChannels:N,inHeight:T,inWidth:_,outChannels:O,outHeight:P,outWidth:V,strideHeight:B,strideWidth:W}=f;p=f.dataFormat;const q=v-1-f.padInfo.top,z=C-1-f.padInfo.left,X=p==="channelsLast",Y=m.strides[0],Z=X?m.strides[1]:m.strides[2],se=X?m.strides[2]:1,J=X?1:m.strides[1],ae=h[0],oe=X?h[1]:h[2],ue=X?h[2]:1,ge=X?1:h[1];for(let ce=0;ce<k;++ce)for(let we=0;we<N;++we)for(let Ne=0;Ne<T;++Ne){const Fe=Ne-q,ze=Math.max(0,Math.ceil(Fe/B)),qe=Math.min(P,(v+Fe)/B);for(let Ve=0;Ve<_;++Ve){const Ye=Ve-z,Te=Math.max(0,Math.ceil(Ye/W)),Je=Math.min(V,(C+Ye)/W);let at=0;for(let xt=ze;xt<qe;++xt){const Nn=xt*B-Fe;for(let Xt=Te;Xt<Je;++Xt){const bs=Xt*W-Ye,ln=ae*ce+oe*xt+ue*Xt,Vn=y*(v-1-Nn)+w*(C-1-bs)+I*we;for(let es=0;es<O;++es){const Kt=b[ln+ge*es],un=x[Vn+es];at+=Kt*un}}}const Sn=Y*ce+Z*Ne+se*Ve+J*we;g[Sn]=at}}return t.makeTensorInfo(m.shape,m.dtype,m.values)}const XL={kernelName:Ha,backendName:"cpu",kernelFunc:qL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:a,pad:i,dilations:c}=s;be([o,r],"conv3d");const u=Go(o.shape,r.shape,a,c,i),{filterDepth:l,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=u,b=g.front,x=g.left,y=g.top,w=new sn(u.outShape,o.dtype),I=t.data.get(o.dataId).values,k=t.data.get(r.dataId).values,v=w.values,C=me(o.shape),N=me(r.shape);for(let T=0;T<u.batchSize;++T){const _=T*C[0],O=T*w.strides[0];for(let P=0;P<u.outDepth;++P){const V=O+P*w.strides[1],B=P*u.strideDepth-b;for(let W=0;W<l;++W){const q=B+W*p;if(q<0||q>=u.inDepth)continue;const z=W*N[0],X=_+q*C[1];for(let Y=0;Y<u.outHeight;++Y){const Z=V+Y*w.strides[2],se=Y*u.strideHeight-y;for(let J=0;J<d;++J){const ae=se+J*f;if(ae<0||ae>=u.inHeight)continue;const oe=z+J*N[1],ue=X+ae*C[2];for(let ge=0;ge<u.outWidth;++ge){const ce=Z+ge*u.outChannels,we=ge*u.strideWidth-x;for(let Ne=0;Ne<h;++Ne){const Fe=we+Ne*m;if(Fe<0||Fe>=u.inWidth)continue;const ze=oe+Ne*N[2],qe=ue+Fe*u.inChannels;let Ve=ze;for(let Ye=0;Ye<u.inChannels;++Ye){const Te=I[qe+Ye];for(let Je=0;Je<u.outChannels;++Je)v[ce+Je]+=Te*k[Ve+Je];Ve+=u.outChannels}}}}}}}}return t.makeTensorInfo(w.shape,w.dtype,w.values)}const YL={kernelName:_d,backendName:"cpu",kernelFunc:KL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZL(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:a,pad:i,filterShape:c}=s;be([o,r],"conv3dBackpropFilterV2");const u=me(o.shape),l=me(r.shape),d=Go(o.shape,c,a,1,i),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,b=d.filterWidth,x=new sn(d.filterShape,"float32"),y=x.values,[w,I,k,v]=x.strides,C=t.data.get(r.dataId).values,[N,T,_,O]=l,P=t.data.get(o.dataId).values,[V,B,W,q]=u,z=d.padInfo.front,X=d.padInfo.left,Y=d.padInfo.top;for(let Z=0;Z<m;++Z){const se=Math.max(0,Math.ceil((z-Z)/h)),J=Math.min(d.outDepth,(d.inDepth+z-Z)/h),ae=Z*w;for(let oe=0;oe<g;++oe){const ue=Math.max(0,Math.ceil((Y-oe)/p)),ge=Math.min(d.outHeight,(d.inHeight+Y-oe)/p),ce=oe*I+ae;for(let we=0;we<b;++we){const Ne=Math.max(0,Math.ceil((X-we)/f)),Fe=Math.min(d.outWidth,(d.inWidth+X-we)/f),ze=we*k+ce;for(let qe=0;qe<d.inChannels;++qe){const Ve=qe*v+ze;for(let Ye=0;Ye<d.outChannels;++Ye){let Te=0;for(let Je=0;Je<d.batchSize;++Je){const at=Je*V,Sn=Je*N;for(let xt=se;xt<J;++xt){const Xt=(Z+xt*h-z)*B+at,bs=xt*T+Sn;for(let ln=ue;ln<ge;++ln){const es=(oe+ln*p-Y)*W+Xt,Kt=ln*_+bs;for(let un=Ne;un<Fe;++un){const Qo=(we+un*f-X)*q+es,xs=un*O+Kt;Te+=P[Qo+qe]*C[xs+Ye]}}}}y[Ve+Ye]=Te}}}}}return t.makeTensorInfo(x.shape,x.dtype,x.values)}const JL={kernelName:Tf,backendName:"cpu",kernelFunc:ZL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QL(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{pad:a,strides:i,inputShape:c}=s;be([o],"conv3dBackpropInputV2");const u=me(o.shape),l=me(r.shape),d=Go(c,r.shape,i,1,a),h=new sn(d.inShape,"float32"),p=h.values,[f,m,g,b]=h.strides,x=t.data.get(o.dataId).values,[y,w,I,k]=u,v=t.data.get(r.dataId).values,[C,N,T,_]=l,{batchSize:O,filterDepth:P,filterHeight:V,filterWidth:B,inChannels:W,inDepth:q,inHeight:z,inWidth:X,outChannels:Y,outDepth:Z,outHeight:se,outWidth:J,strideDepth:ae,strideHeight:oe,strideWidth:ue}=d,ge=P-1-d.padInfo.front,ce=V-1-d.padInfo.top,we=B-1-d.padInfo.left;for(let Ne=0;Ne<O;++Ne)for(let Fe=0;Fe<W;++Fe)for(let ze=0;ze<q;++ze){const qe=ze-ge,Ve=Math.max(0,Math.ceil(qe/ae)),Ye=Math.min(Z,(P+qe)/ae);for(let Te=0;Te<z;++Te){const Je=Te-ce,at=Math.max(0,Math.ceil(Je/oe)),Sn=Math.min(se,(V+Je)/oe);for(let xt=0;xt<X;++xt){const Nn=xt-we,Xt=Math.max(0,Math.ceil(Nn/ue)),bs=Math.min(J,(B+Nn)/ue);let ln=0;for(let Vn=Ve;Vn<Ye;++Vn){const es=Vn*ae-qe;for(let Kt=at;Kt<Sn;++Kt){const un=Kt*oe-Je;for(let eo=Xt;eo<bs;++eo){const Qo=eo*ue-Nn,xs=y*Ne+w*Vn+I*Kt+k*eo,tc=C*(P-1-es)+N*(V-1-un)+T*(B-1-Qo)+_*Fe;for(let to=0;to<Y;++to){const er=x[xs+to],Yt=v[tc+to];ln+=er*Yt}}}}p[f*Ne+m*ze+g*Te+b*xt+Fe]=ln}}}return t.makeTensorInfo(h.shape,h.dtype,h.values)}const eP={kernelName:Ef,backendName:"cpu",kernelFunc:QL};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tP=Ze(ja,n=>Math.cos(n)),nP={kernelName:ja,backendName:"cpu",kernelFunc:tP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sP=Ze(qa,n=>Math.cosh(n)),oP={kernelName:qa,backendName:"cpu",kernelFunc:sP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rP(n){const{inputs:e,backend:t,attrs:s}=n,{image:o,boxes:r,boxInd:a}=e,{cropSize:i,method:c,extrapolationValue:u}=s,[l,d,h,p]=o.shape,f=r.shape[0],[m,g]=i,b=Me([f,m,g,p],"float32"),x=t.data.get(r.dataId).values,y=t.data.get(a.dataId).values,w=t.data.get(o.dataId).values,I=me(o.shape),k=me(b.shape);for(let v=0;v<f;v++){const C=v*4,N=x[C],T=x[C+1],_=x[C+2],O=x[C+3],P=y[v];if(P>=l)continue;const V=m>1?(_-N)*(d-1)/(m-1):0,B=g>1?(O-T)*(h-1)/(g-1):0;for(let W=0;W<m;W++){const q=m>1?N*(d-1)+W*V:.5*(N+_)*(d-1);if(q<0||q>d-1){for(let z=0;z<g;z++)for(let X=0;X<p;X++){const Y=X+z*k[2]+W*k[1]+v*k[0];b.values[Y]=u}continue}if(c==="bilinear"){const z=Math.floor(q),X=Math.ceil(q),Y=q-z;for(let Z=0;Z<g;Z++){const se=g>1?T*(h-1)+Z*B:.5*(T+O)*(h-1);if(se<0||se>h-1){for(let ue=0;ue<p;ue++){const ge=ue+Z*k[2]+W*k[1]+v*k[0];b.values[ge]=u}continue}const J=Math.floor(se),ae=Math.ceil(se),oe=se-J;for(let ue=0;ue<p;ue++){let ge=ue+J*I[2]+z*I[1]+P*I[0];const ce=w[ge];ge=ue+ae*I[2]+z*I[1]+P*I[0];const we=w[ge];ge=ue+J*I[2]+X*I[1]+P*I[0];const Ne=w[ge];ge=ue+ae*I[2]+X*I[1]+P*I[0];const Fe=w[ge],ze=ce+(we-ce)*oe,qe=Ne+(Fe-Ne)*oe;ge=ue+Z*k[2]+W*k[1]+v*k[0],b.values[ge]=ze+(qe-ze)*Y}}}else for(let z=0;z<g;++z){const X=g>1?T*(h-1)+z*B:.5*(T+O)*(h-1);if(X<0||X>h-1){for(let se=0;se<p;se++){const J=se+z*k[2]+W*k[1]+v*k[0];b.values[J]=u}continue}const Y=Math.round(X),Z=Math.round(q);for(let se=0;se<p;se++){const J=se+Y*I[2]+Z*I[1]+P*I[0],ae=se+z*k[2]+W*k[1]+v*k[0];b.values[ae]=w[J]}}}}return t.makeTensorInfo(b.shape,b.dtype,b.values)}const aP={kernelName:Zc,backendName:"cpu",kernelFunc:rP};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:a,reverse:i}=s;be(o,"cumprod");const c=pt([r],o.shape.length);let u=o;c!=null&&(u=vn({inputs:{x:o},backend:t,attrs:{perm:c}}));const l=rt(1,o.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumprod in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);const d=Fn(u.dtype,"int32"),h=If(L(u.shape),d),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<p.length;b+=f)for(let x=0;x<f;x++){const y=m(b,x);if(x===0)h[y]=a?1:p[y];else{const w=m(b,x-1);h[y]=a?p[w]*h[w]:p[y]*h[w]}}const g=t.makeTensorInfo(u.shape,d,h);if(c!=null){const b=Qs(c),x=vn({inputs:{x:g},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),x}return g}const cP={kernelName:Yc,backendName:"cpu",kernelFunc:iP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:a,reverse:i}=s;be(o,"cumsum");const c=pt([r],o.shape.length);let u=o;c!=null&&(u=vn({inputs:{x:o},backend:t,attrs:{perm:c}}));const l=rt(1,o.shape.length)[0];if(l!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${l}`);const d=Fn(u.dtype,"int32"),h=an(L(u.shape),d),p=t.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=i?(b,x)=>b+f-x-1:(b,x)=>b+x;for(let b=0;b<p.length;b+=f)for(let x=0;x<f;x++){const y=m(b,x);if(x===0)h[y]=a?0:p[y];else{const w=m(b,x-1);h[y]=a?p[w]+h[w]:p[y]+h[w]}}const g=t.makeTensorInfo(u.shape,d,h);if(c!=null){const b=Qs(c),x=vn({inputs:{x:g},backend:t,attrs:{perm:b}});return t.disposeIntermediateTensorInfo(g),t.disposeIntermediateTensorInfo(u),x}return g}const uP={kernelName:Xa,backendName:"cpu",kernelFunc:lP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:a,binaryOutput:i}=s;if(o.shape.length===1){const c=t.data.get(o.dataId).values,u=t.data.get(r.dataId).values,l=Rg(c,u,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,l)}else if(o.shape.length===2){const c=t.bufferSync(o),u=t.bufferSync(r),l=ik(c,u,a,i);return t.makeTensorInfo(l.shape,r.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const hP={kernelName:_f,backendName:"cpu",kernelFunc:dP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockSize:r,dataFormat:a}=s;$(a==="NHWC",()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${a}`);const i=o.shape[0],c=o.shape[1],u=o.shape[2],l=o.shape[3],d=c*r,h=u*r,p=l/(r*r),f=t.data.get(o.dataId).values,m=new Float32Array(i*d*h*p);let g=0;for(let b=0;b<i;++b)for(let x=0;x<d;++x){const y=Math.floor(x/r),w=x%r;for(let I=0;I<h;++I){const k=Math.floor(I/r),v=I%r,C=(w*r+v)*p;for(let N=0;N<p;++N){const _=N+C+l*(k+u*(y+c*b));m[g++]=f[_]}}}return t.makeTensorInfo([i,d,h,p],o.dtype,m)}const fP={kernelName:Jc,backendName:"cpu",kernelFunc:pP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jk(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:a,pad:i,dilations:c,dimRoundingMode:u}=s;be([o,r],"depthwiseConv2DNative");const l=me(o.shape),d=me(r.shape);let h=c;h==null&&(h=[1,1]),$(cn(a,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${h}'`);const p=Nt(o.shape,r.shape,a,h,i,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:b,padInfo:x}=p,y=x.left,w=x.top,I=p.outChannels/p.inChannels,k=new sn(p.outShape,o.dtype),v=t.data.get(o.dataId).values,C=t.data.get(r.dataId).values,N=k.values;for(let T=0;T<p.batchSize;++T){const _=T*l[0],O=T*k.strides[0];for(let P=0;P<p.outHeight;++P){const V=O+P*k.strides[1],B=P*p.strideHeight-w;for(let W=0;W<f;++W){const q=B+W*g;if(q<0||q>=p.inHeight)continue;const z=W*d[0],X=_+q*l[1];for(let Y=0;Y<p.outWidth;++Y){const Z=V+Y*k.strides[2],se=Y*p.strideWidth-y;for(let J=0;J<m;++J){const ae=se+J*b;if(ae<0||ae>=p.inWidth)continue;const oe=z+J*d[1],ue=X+ae*p.inChannels;let ge=Z,ce=oe;for(let we=0;we<p.inChannels;++we){const Ne=v[ue+we];for(let Fe=0;Fe<I;++Fe)N[ge+Fe]+=Ne*C[ce+Fe];ge+=I,ce+=I}}}}}}return t.makeTensorInfo(k.shape,k.dtype,k.values)}const mP={kernelName:Ka,backendName:"cpu",kernelFunc:Jk};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:u,filterShape:l}=s;be([o,r],"depthwiseConv2dNativeBackpropFilter");const d=Nt(o.shape,l,a,i,c,u,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new sn(d.filterShape,"float32"),b=d.padInfo.left,x=d.padInfo.top,y=d.outChannels/d.inChannels,w=t.data.get(o.dataId).values,I=new sn(o.shape,o.dtype,w),k=t.data.get(r.dataId).values,v=new sn(r.shape,r.dtype,k);for(let C=0;C<f;++C){const N=Math.max(0,Math.ceil((x-C)/h)),T=Math.min(d.outHeight,(d.inHeight+x-C)/h);for(let _=0;_<m;++_){const O=Math.max(0,Math.ceil((b-_)/p)),P=Math.min(d.outWidth,(d.inWidth+b-_)/p);for(let V=0;V<d.outChannels;++V){const B=Math.trunc(V/y),W=V%y;let q=0;for(let z=0;z<d.batchSize;++z)for(let X=N;X<T;++X){const Y=C+X*h-x;for(let Z=O;Z<P;++Z){const se=_+Z*p-b;q+=I.get(z,Y,se,B)*v.get(z,X,Z,V)}}g.set(q,C,_,B,W)}}}return t.makeTensorInfo(g.shape,g.dtype,g.values)}const bP={kernelName:Rf,backendName:"cpu",kernelFunc:gP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xP(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:u,inputShape:l}=s;be([o,r],"depthwiseConv2DNativeBackpropInput");const d=me(o.shape),h=me(r.shape),p=Nt(l,r.shape,a,i,c,u,!0),f=new sn(p.inShape,"float32"),m=f.values,[g,b,x]=f.strides,y=t.data.get(o.dataId).values,[w,I,k]=d,v=t.data.get(r.dataId).values,[C,N,T]=h,{batchSize:_,filterHeight:O,filterWidth:P,inChannels:V,inHeight:B,inWidth:W,outChannels:q,outHeight:z,outWidth:X,strideHeight:Y,strideWidth:Z}=p,se=O-1-p.padInfo.top,J=P-1-p.padInfo.left,ae=q/V;for(let oe=0;oe<_;++oe)for(let ue=0;ue<V;++ue)for(let ge=0;ge<B;++ge){const ce=ge-se,we=Math.max(0,Math.ceil(ce/Y)),Ne=Math.min(z,(O+ce)/Y);for(let Fe=0;Fe<W;++Fe){const ze=Fe-J,qe=Math.max(0,Math.ceil(ze/Z)),Ve=Math.min(X,(P+ze)/Z);let Ye=0;for(let Te=we;Te<Ne;++Te){const Je=Te*Y-ce;for(let at=qe;at<Ve;++at){const Sn=at*Z-ze,xt=w*oe+I*Te+k*at,Nn=C*(O-1-Je)+N*(P-1-Sn)+T*ue;for(let Xt=0;Xt<ae;++Xt){const bs=ue*ae+Xt,ln=y[xt+bs],Vn=v[Nn+Xt];Ye+=ln*Vn}}}m[g*oe+b*ge+x*Fe+ue]=Ye}}return t.makeTensorInfo(f.shape,f.dtype,f.values)}const yP={kernelName:Af,backendName:"cpu",kernelFunc:xP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wP(n){const{inputs:e,backend:t}=n,{x:s}=e,o=L(s.shape),r=t.data.get(s.dataId).values,a=Me([o,o],s.dtype),i=a.values;for(let u=0;u<r.length;u++)i[u*o+u]=r[u];const c=[...s.shape,...s.shape];return t.makeTensorInfo(c,a.dtype,a.values)}const IP={kernelName:r0,backendName:"cpu",kernelFunc:wP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kP={kernelName:Rd,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o}=n,{strides:r,pad:a,dilations:i}=t,c=e,u=c.data.get(s.dataId).values,l=s.shape.length,d=c.data.get(o.dataId).values,h=o.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:b,outWidth:x,padInfo:y,strideHeight:w,strideWidth:I,filterHeight:k,filterWidth:v,dilationHeight:C,dilationWidth:N,outShape:T}=Bl(s.shape,o.shape,r,a,"NHWC",i),_=L(T),O=T.length,P=At(s.dtype,_);for(let B=0;B<p;++B)for(let W=0;W<b;++W){const q=W*w-y.top;for(let z=0;z<x;++z){const X=z*I-y.left;for(let Y=0;Y<g;++Y){let Z=Number.MIN_SAFE_INTEGER;for(let J=0;J<k;++J){const ae=q+J*C;if(ae>=0&&ae<f)for(let oe=0;oe<v;++oe){const ue=X+oe*N;if(ue>=0&&ue<m){const ge=Ws([B,ae,ue,Y],l,me(s.shape)),ce=Ws([J,oe,Y],h,me(o.shape)),we=u[ge]+d[ce];we>Z&&(Z=we)}}}const se=Ws([B,W,z,Y],O,me(T));P[se]=Z}}}return{dataId:c.write(Wr(P,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vP={kernelName:yp,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o,dy:r}=n,{strides:a,pad:i,dilations:c}=t,u=e,l=Cs(s.shape,u.data.get(s.dataId).values),d=Cs(o.shape,u.data.get(o.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:y,strideWidth:w,filterHeight:I,filterWidth:k,dilationHeight:v,dilationWidth:C,outShape:N}=Bl(s.shape,o.shape,a,i,"NHWC",c);$(r.rank===N.length,()=>`Error in ${yp}, dy must have the same rank as output ${N.length}, but got ${r.rank}`);const T=Cs(N,u.data.get(r.dataId).values),_=e0(o.shape,o.dtype);for(let P=0;P<h;++P)for(let V=0;V<g;++V){const B=V*y-x.top;for(let W=0;W<b;++W){const q=W*w-x.left;for(let z=0;z<m;++z){let X=Number.MIN_SAFE_INTEGER,Y=0,Z=0;for(let se=0;se<I;++se){const J=B+se*v;if(J>=0&&J<p)for(let ae=0;ae<k;++ae){const oe=q+ae*C;if(oe>=0&&oe<f){const ue=l[P][J][oe][z]+d[se][ae][z];ue>X&&(X=ue,Y=se,Z=ae)}}}_[Y][Z][z]+=T[P][V][W][z]}}}return{dataId:u.write(Wr(_,s.dtype),o.shape,o.dtype),shape:o.shape,dtype:o.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $P={kernelName:xp,backendName:"cpu",kernelFunc:({inputs:n,backend:e,attrs:t})=>{const{x:s,filter:o,dy:r}=n,{strides:a,pad:i,dilations:c}=t,u=e,l=Cs(s.shape,u.data.get(s.dataId).values),d=Cs(o.shape,u.data.get(o.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:b,padInfo:x,strideHeight:y,strideWidth:w,filterHeight:I,filterWidth:k,dilationHeight:v,dilationWidth:C,outShape:N}=Bl(s.shape,o.shape,a,i,"NHWC",c);$(r.rank===N.length,()=>`Error in ${xp}, dy must have the same rank as output ${N.length}, but got ${r.rank}`);const T=Cs(N,u.data.get(r.dataId).values),_=e0(s.shape,s.dtype);for(let P=0;P<h;++P)for(let V=0;V<g;++V){const B=V*y-x.top;for(let W=0;W<b;++W){const q=W*w-x.left;for(let z=0;z<m;++z){let X=Number.MIN_SAFE_INTEGER,Y=B<0?0:B,Z=q<0?0:q;for(let se=0;se<I;++se){const J=B+se*v;if(J>=0&&J<p)for(let ae=0;ae<k;++ae){const oe=q+ae*C;if(oe>=0&&oe<f){const ue=l[P][J][oe][z]+d[se][ae][z];ue>X&&(X=ue,Y=J,Z=oe)}}}_[P][Y][Z][z]+=T[P][V][W][z]}}}return{dataId:u.write(Wr(_,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ql(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s;be(o,"sum");let i;o.dtype==="bool"?i=Po({inputs:{x:o},backend:t,attrs:{dtype:"int32"}}):i=Ys({inputs:{x:o},backend:t});const c=i.shape.length,u=Re(r,i.shape),l=pt(u,c);let d=u,h=i;l!=null&&(h=vn({inputs:{x:i},backend:t,attrs:{perm:l}}),d=rt(d.length,c)),ht("sum",d,h.shape.length);const[p,f]=bt(h.shape,d),m=Fn(h.dtype,"int32");let g=hd(t,p,m);const b=L(f),x=t.data.get(g.dataId).values,y=t.data.get(h.dataId).values;for(let w=0;w<x.length;++w){const I=w*b;let k=0;for(let v=0;v<b;++v)k+=y[I+v];x[w]=k}if(a){const w=et(g.shape,u),I=g;g=ut({inputs:{x:g},backend:t,attrs:{shape:w}}),t.disposeIntermediateTensorInfo(I)}return t.disposeIntermediateTensorInfo(i),l!=null&&t.disposeIntermediateTensorInfo(h),g}const CP={kernelName:Ri,backendName:"cpu",kernelFunc:Ql};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SP(n){const{inputs:e,backend:t,attrs:s}=n,{equation:o}=s,r=e,{allDims:a,summedDims:i,idDims:c}=Hm(o,r.length);qm(a.length,c,r);const{path:u,steps:l}=Xm(i,c),d=l.length;let h=null,p=a.length;const f=[];for(let m=0;m<d;++m){for(const g of l[m]){const{permutationIndices:b,expandDims:x}=jm(p,c[g]);let y;Km(b)?y=r[g]:(y=vn({inputs:{x:r[g]},backend:t,attrs:{perm:b}}),f.push(y));const w=y.shape.slice();for(let I=0;I<x.length;++I)w.splice(x[I],0,1);Ke(y.shape,w)||(y=ut({inputs:{x:y},backend:t,attrs:{shape:w}}),f.push(y)),h===null?h=y:(h=Th({inputs:{a:y,b:h},backend:t}),f.push(h))}m<d-1&&(u[m]>=0&&(h=Ql({inputs:{x:h},backend:t,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&t.disposeIntermediateTensorInfo(m);return h}const NP={kernelName:a0,backendName:"cpu",kernelFunc:SP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TP(n){const{inputs:e,backend:t}=n,{dy:s,y:o}=e;be([s,o],"eluGrad");const r=new Float32Array(L(o.shape)),a=t.data.get(o.dataId).values,i=t.data.get(s.dataId).values;for(let c=0;c<a.length;++c){const u=a[c];u>=1?r[c]=i[c]:r[c]=i[c]*(u+1)}return t.makeTensorInfo(o.shape,"float32",r)}const EP={kernelName:Df,backendName:"cpu",kernelFunc:TP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _P=Pm,RP=Bm,AP=zm,DP=Vm,FP=Wm,OP=Um,MP=Ze(Qc,n=>{const e=Math.sign(n),t=Math.abs(n),s=1/(1+_P*t);return e*(1-((((OP*s+FP)*s+DP)*s+AP)*s+RP)*s*Math.exp(-t*t))}),LP={kernelName:Qc,backendName:"cpu",kernelFunc:MP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gd(n){const{inputs:e,backend:t,attrs:s}=n,{input:o}=e,{dim:r}=s,a=o.shape.length,i=o.shape.slice();let c=r;return r<0&&($(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+r+1),i.splice(c,0,1),ut({inputs:{x:o},backend:t,attrs:{shape:i}})}const PP={kernelName:tl,backendName:"cpu",kernelFunc:gd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BP=Dt((n,e)=>n/e),Wg=qt(Ya,BP),qp={kernelName:Ya,backendName:"cpu",kernelFunc:Wg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Qk(n,e,t){const s=n.shape,o=s[0],r=s[1],a=t.data.get(n.dataId),i=a.complexTensorInfos.real,c=a.complexTensorInfos.imag,u=[o,r],l=L(u),d=Qt("float32",l),h=Qt("float32",l);for(let g=0;g<o;g++){const b=Fr({inputs:{x:i},backend:t,attrs:{begin:[g,0],size:[1,r]}}),x=Fr({inputs:{x:c},backend:t,attrs:{begin:[g,0],size:[1,r]}}),y=Rn({inputs:{real:b,imag:x},backend:t}),{real:w,imag:I}=zP(y,e,t),k=go(w,I);for(let v=0;v<r;v++){const C=Gm(k,v);d[g*r+v]=C.real,h[g*r+v]=C.imag}t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(x),t.disposeIntermediateTensorInfo(y)}const p=t.makeTensorInfo(u,"float32",d),f=t.makeTensorInfo(u,"float32",h),m=Rn({inputs:{real:p,imag:f},backend:t});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),m}function zP(n,e,t){const s=L(n.shape),o=t.data.get(n.dataId),r=t.data.get(o.complexTensorInfos.real.dataId).values,a=t.data.get(o.complexTensorInfos.imag.dataId).values;if(VP(s)){const i=Xp(r,a,s,e,t),c=[n.shape[0],n.shape[1]];if(e){const u=t.makeTensorInfo(c,"float32",i.real),l=t.makeTensorInfo(c,"float32",i.imag),d=t.makeTensorInfo([],"float32",Uo(s,"float32")),h=Ys({inputs:{x:d},backend:t}),p=qp.kernelFunc({inputs:{a:u,b:d},backend:t}),f=qp.kernelFunc({inputs:{a:l,b:h},backend:t}),m=t.data.get(p.dataId).values,g=t.data.get(f.dataId).values;return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),{real:m,imag:g}}return i}else{const i=go(r,a),c=WP(i,s,e);return Pw(c)}}function VP(n){return(n&n-1)===0}function Xp(n,e,t,s,o){if(t===1)return{real:n,imag:e};const r=go(n,e),a=t/2,i=Bw(r),c=i.real,u=i.imag,l=[c.length],d=o.makeTensorInfo(l,"float32",c),h=o.makeTensorInfo(l,"float32",u),p=Rn({inputs:{real:d,imag:h},backend:o}),f=zw(r),m=f.real,g=f.imag,b=[m.length],x=o.makeTensorInfo(b,"float32",m),y=o.makeTensorInfo(b,"float32",g),w=Rn({inputs:{real:x,imag:y},backend:o}),I=Xp(c,u,a,s,o),k=I.real,v=I.imag,C=[k.length],N=o.makeTensorInfo(C,"float32",k),T=o.makeTensorInfo(C,"float32",v),_=Rn({inputs:{real:N,imag:T},backend:o}),O=Xp(m,g,a,s,o),P=O.real,V=O.imag,B=[P.length],W=o.makeTensorInfo(B,"float32",P),q=o.makeTensorInfo(B,"float32",V),z=Rn({inputs:{real:W,imag:q},backend:o}),X=Ww(t,s),Y=[X.real.length],Z=o.makeTensorInfo(Y,"float32",X.real),se=o.makeTensorInfo(Y,"float32",X.imag),J=Rn({inputs:{real:Z,imag:se},backend:o}),ae=Th({inputs:{a:J,b:z},backend:o}),oe=Ea({inputs:{a:_,b:ae},backend:o}),ue=zg({inputs:{a:_,b:ae},backend:o}),ge=Dr({inputs:{input:oe},backend:o}),ce=Dr({inputs:{input:ue},backend:o}),we=_a({inputs:{input:oe},backend:o}),Ne=_a({inputs:{input:ue},backend:o}),Fe=Ra({inputs:[ge,ce],backend:o,attrs:{axis:0}}),ze=Ra({inputs:[we,Ne],backend:o,attrs:{axis:0}}),qe=o.data.get(Fe.dataId).values,Ve=o.data.get(ze.dataId).values;return o.disposeIntermediateTensorInfo(d),o.disposeIntermediateTensorInfo(h),o.disposeIntermediateTensorInfo(p),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(y),o.disposeIntermediateTensorInfo(w),o.disposeIntermediateTensorInfo(N),o.disposeIntermediateTensorInfo(T),o.disposeIntermediateTensorInfo(_),o.disposeIntermediateTensorInfo(W),o.disposeIntermediateTensorInfo(q),o.disposeIntermediateTensorInfo(z),o.disposeIntermediateTensorInfo(Z),o.disposeIntermediateTensorInfo(se),o.disposeIntermediateTensorInfo(J),o.disposeIntermediateTensorInfo(ae),o.disposeIntermediateTensorInfo(oe),o.disposeIntermediateTensorInfo(ue),o.disposeIntermediateTensorInfo(ge),o.disposeIntermediateTensorInfo(we),o.disposeIntermediateTensorInfo(ce),o.disposeIntermediateTensorInfo(Ne),o.disposeIntermediateTensorInfo(Fe),o.disposeIntermediateTensorInfo(ze),{real:qe,imag:Ve}}function WP(n,e,t){const s=new Float32Array(e*2);for(let o=0;o<e;o++){let r=0,a=0;for(let i=0;i<e;i++){const c=Uw(o*i,e,t),u=Gm(n,i);r+=u.real*c.real-u.imag*c.imag,a+=u.real*c.imag+u.imag*c.real}t&&(r/=e,a/=e),Vw(s,r,a,o)}return s}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function UP(n){const{inputs:e,backend:t}=n,{input:s}=e,o=L(s.shape),r=s.shape[s.shape.length-1],a=o/r,i=ut({inputs:{x:s},backend:t,attrs:{shape:[a,r]}}),c=Qk(i,!1,t),u=ut({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),u}const GP={kernelName:Ff,backendName:"cpu",kernelFunc:UP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ug(n){const{backend:e,attrs:t}=n,{shape:s,value:o,dtype:r}=t,a=r||Mc(o),i=At(a,L(s));return jP(i,o,a),e.makeTensorInfo(s,a,i)}const HP={kernelName:Ad,backendName:"cpu",kernelFunc:Ug};function jP(n,e,t){n.fill(e)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qP={kernelName:sl,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,o=t,r=Qt(s.dtype,L(s.shape)),[a,i,c,u]=s.shape,l=o.data.get(s.dataId).values;for(let h=0;h<a;h++){const p=h*c*i*u;for(let f=0;f<i;f++){const m=f*(c*u);for(let g=0;g<c;g++){const b=g*u;for(let x=0;x<u;x++){const y=Math.round(c-g-1),w=p+m+b+x;let I=l[w];if(y>=0&&y<c){const k=y*u,v=p+m+k+x;I=l[v]}r[w]=I}}}}return{dataId:o.write(r,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XP=Dt((n,e)=>Math.floor(n/e)),KP=qt(ei,XP,null,"int32"),YP={kernelName:ei,backendName:"cpu",kernelFunc:KP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ZP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=Zk({inputs:{x:o,filter:r},backend:t,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}});if(a){const g=m;if(l==="NCHW"&&a.shape.length===1&&a.shape[0]!==1){const b=ut({inputs:{x:a},backend:t,attrs:{shape:[a.shape[0],1,1]}});m=Ea({inputs:{a:m,b},backend:t}),t.disposeIntermediateTensorInfo(b)}else m=Ea({inputs:{a:m,b:a},backend:t});t.disposeIntermediateTensorInfo(g)}if(p){const g=m;if(l==="NCHW"&&p==="prelu"&&i.shape.length===1&&i.shape[0]!==1){const b=ut({inputs:{x:i},backend:t,attrs:{shape:[i.shape[0],1,1]}});m=md(t,m,p,b,f),t.disposeIntermediateTensorInfo(b)}else m=md(t,m,p,i,f);t.disposeIntermediateTensorInfo(g)}return m}const JP={kernelName:va,backendName:"cpu",kernelFunc:ZP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function QP(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s;let m=Jk({inputs:{x:o,filter:r},backend:t,attrs:{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h}});if(a){const g=m;m=Ea({inputs:{a:m,b:a},backend:t}),t.disposeIntermediateTensorInfo(g)}if(p){const g=m;m=md(t,m,p,i,f),t.disposeIntermediateTensorInfo(g)}return m}const eB={kernelName:jd,backendName:"cpu",kernelFunc:QP};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tB(n){const{inputs:e,backend:t}=n,{params:s,indices:o}=e,r=L(s.shape),a=o.shape,i=a[a.length-1],[c,u,l,d]=Zd(s,o);if(u===0)return t.makeTensorInfo(c,s.dtype,[]);const h=t.data.get(o.dataId).values,p=t.bufferSync(s),f=mk(h,p,s.dtype,u,i,l,d,s.shape,r);return t.makeTensorInfo(c,s.dtype,f.values)}const nB={kernelName:Dd,backendName:"cpu",kernelFunc:tB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,indices:r}=e,{axis:a,batchDims:i}=s;be([o,r],"gatherV2");const c=Re(a,o.shape)[0],u=t.data.get(r.dataId).values,l=o.shape[c];for(let w=0;w<u.length;++w){const I=u[w];$(I<=l-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${l-1}]`)}let d=i;i==null&&(d=0);const h=L(r.shape),p=gh(o,r,c,d),f=ut({inputs:{x:o},backend:t,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=ut({inputs:{x:r},backend:t,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],b=t.bufferSync(m),x=t.bufferSync(f),y=gk(x,b,g);return t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),t.makeTensorInfo(p.outputShape,y.dtype,y.values)}const oB={kernelName:ol,backendName:"cpu",kernelFunc:sB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rB(n){const{inputs:e,backend:t}=n,{input:s}=e,o=L(s.shape),r=s.shape[s.shape.length-1],a=o/r,i=ut({inputs:{x:s},backend:t,attrs:{shape:[a,r]}}),c=Qk(i,!0,t),u=ut({inputs:{x:c},backend:t,attrs:{shape:s.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(c),u}const aB={kernelName:Of,backendName:"cpu",kernelFunc:rB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iB=Ze(al,n=>Number.isFinite(n)?1:0,"bool"),cB={kernelName:al,backendName:"cpu",kernelFunc:iB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lB=Ze(il,n=>Math.abs(n)===1/0?1:0,"bool"),uB={kernelName:il,backendName:"cpu",kernelFunc:lB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dB=Ze(oi,n=>Number.isNaN(n)?1:0,"bool"),hB={kernelName:oi,backendName:"cpu",kernelFunc:dB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pB(n){const{backend:e,attrs:t}=n,{start:s,stop:o,num:r}=t,a=Ik(s,o,r);return e.makeTensorInfo([a.length],"float32",a)}const fB={kernelName:Lf,backendName:"cpu",kernelFunc:pB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const mB=Ze(ul,n=>Math.log1p(n)),gB={kernelName:ul,backendName:"cpu",kernelFunc:mB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bB=Dt((n,e)=>n&&e),xB=qt(dl,bB,null,"bool"),yB={kernelName:dl,backendName:"cpu",kernelFunc:xB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const wB=Ze(hl,n=>n?0:1,"bool"),IB={kernelName:hl,backendName:"cpu",kernelFunc:wB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kB=Dt((n,e)=>n||e),vB=qt(pl,kB,null,"bool"),$B={kernelName:pl,backendName:"cpu",kernelFunc:vB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function CB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{depthRadius:r,bias:a,alpha:i,beta:c}=s;be(o,"LRN");const u=o.shape[3],l=u-1,d=t.data.get(o.dataId).values,h=L(o.shape),p=new Float32Array(h);function f(m){const g=m%u;let b=m-g+Math.max(0,g-r);const x=m-g+Math.min(g+r,l);let y=0;for(;b<=x;b++){const w=d[b];y+=w*w}return y}for(let m=0;m<h;m++){const g=f(m),b=d[m]*Math.pow(a+i*g,-c);p[m]=b}return t.makeTensorInfo(o.shape,o.dtype,p)}const SB={kernelName:Fd,backendName:"cpu",kernelFunc:CB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function NB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,y:r,dy:a}=e,{depthRadius:i,bias:c,alpha:u,beta:l}=s;be(a,"LRNGrad");const d=L(a.shape),h=a.shape[3],p=t.data.get(a.dataId).values,f=t.data.get(o.dataId).values,m=t.data.get(r.dataId).values,g=new Float32Array(d),b=d;for(let x=0;x<b;x++){const y=x%h,w=x-y+Math.max(0,y-i),I=x-y+Math.min(h,y+i+1);let k=0;for(let v=w;v<I;v++)k+=Math.pow(f[v],2);k=u*k+c;for(let v=w;v<I;v++){let C=-2*u*l*f[v]*m[x]/k;x===v&&(C+=Math.pow(k,-l)),C*=p[x],g[v]+=C}}return t.makeTensorInfo(a.shape,o.dtype,g)}const TB={kernelName:Pf,backendName:"cpu",kernelFunc:NB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ev(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reductionIndices:r,keepDims:a}=s,i=t;let c=o.shape;const u=c.length,l=Re(r,c);let d=l;const h=pt(d,u);let p=i.data.get(o.dataId).values;if(h!=null){const w=new Array(u);for(let I=0;I<w.length;I++)w[I]=c[h[I]];p=Fg(p,c,o.dtype,h,w),d=rt(d.length,u),c=w}be(o,"max"),ht("max",d,u);const[f,m]=bt(c,d),g=L(m),b=vk(p,g,f,o.dtype),x=i.write(b,f,o.dtype);let y=f;return a&&(y=et(f,l)),{dataId:x,shape:y,dtype:o.dtype}}const EB={kernelName:ii,backendName:"cpu",kernelFunc:ev};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _B(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;be(o,"maxPool");const{filterSize:r,strides:a,pad:i,dimRoundingMode:c}=s,u=1;$(cn(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const l=Bn(o.shape,r,a,u,i,c);let d;if(l.filterWidth===1&&l.filterHeight===1&&Ke(l.inShape,l.outShape))d=Ys({inputs:{x:o},backend:t});else{const h=t.data.get(o.dataId).values,p=me(o.shape),f=Vg(h,o.shape,o.dtype,p,l,"max");d=t.makeTensorInfo(l.outShape,o.dtype,f.values)}return d}const RB={kernelName:li,backendName:"cpu",kernelFunc:_B};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:a,pad:i,dimRoundingMode:c,dataFormat:u}=s;be(o,"maxPool3d");const l=xo(o.shape,r,a,1,i,c,u),d=t.data.get(o.dataId).values,h=Yk(d,o.shape,o.dtype,me(o.shape),l,"max");return t.makeTensorInfo(h.shape,"float32",h.values)}const DB={kernelName:Od,backendName:"cpu",kernelFunc:AB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FB(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,{filterSize:a,strides:i,pad:c,dimRoundingMode:u}=s;be([o,r],"maxPool3DGrad");const l=xo(r.shape,a,i,1,c,u),d=t.bufferSync(r),h=IL(d,l),p=l.strideDepth,f=l.strideHeight,m=l.strideWidth,g=l.dilationDepth,b=l.dilationHeight,x=l.dilationWidth,y=l.effectiveFilterDepth,w=l.effectiveFilterHeight,I=l.effectiveFilterWidth,k=y-1-l.padInfo.front,v=I-1-l.padInfo.left,C=w-1-l.padInfo.top,N=Me(r.shape,"float32"),T=t.bufferSync(o);for(let _=0;_<l.batchSize;++_)for(let O=0;O<l.inChannels;++O)for(let P=0;P<l.inDepth;++P)for(let V=0;V<l.inHeight;++V)for(let B=0;B<l.inWidth;++B){const W=P-k,q=V-C,z=B-v;let X=0;for(let Y=0;Y<y;Y+=g){const Z=(W+Y)/p;if(!(Z<0||Z>=l.outDepth||Math.floor(Z)!==Z))for(let se=0;se<w;se+=b){const J=(q+se)/f;if(!(J<0||J>=l.outHeight||Math.floor(J)!==J))for(let ae=0;ae<I;ae+=x){const oe=(z+ae)/m;if(oe<0||oe>=l.outWidth||Math.floor(oe)!==oe)continue;const ue=y*w*I-1-h.get(_,Z,J,oe,O),ge=Y*w*I+se*I+ae,ce=ue===ge?1:0;if(ce===0)continue;const we=T.get(_,Z,J,oe,O);X+=we*ce}}}N.set(X,_,P,V,B,O)}return t.makeTensorInfo(N.shape,N.dtype,N.values)}const OB={kernelName:zf,backendName:"cpu",kernelFunc:FB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MB(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r,output:a}=e,i=r;be([r,a],"maxPoolGrad");const{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=s,h=Bn(i.shape,c,u,1,l,d),p=t.data.get(i.dataId).values,f=Me(h.outShape,i.dtype,Kk(p,i.shape,i.dtype,h).values),m=h.strideHeight,g=h.strideWidth,b=h.dilationHeight,x=h.dilationWidth,y=h.effectiveFilterHeight,w=h.effectiveFilterWidth,I=w-1-h.padInfo.left,k=y-1-h.padInfo.top,v=Me(i.shape,"float32"),C=t.data.get(o.dataId).values,N=Me(o.shape,"float32",C);for(let T=0;T<h.batchSize;++T)for(let _=0;_<h.inChannels;++_)for(let O=0;O<h.inHeight;++O)for(let P=0;P<h.inWidth;++P){const V=O-k,B=P-I;let W=0;for(let q=0;q<y;q+=b){const z=(V+q)/m;if(!(z<0||z>=h.outHeight||Math.floor(z)!==z))for(let X=0;X<w;X+=x){const Y=(B+X)/g;if(Y<0||Y>=h.outWidth||Math.floor(Y)!==Y)continue;const Z=y*w-1-f.get(T,z,Y,_),se=q*w+X,J=Z===se?1:0;if(J===0)continue;const ae=N.get(T,z,Y,_);W+=ae*J}}v.set(W,T,O,P,_)}return t.makeTensorInfo(v.shape,v.dtype,v.values)}const LB={kernelName:Bf,backendName:"cpu",kernelFunc:MB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PB(n,e,t,s,o){const r=me(e),a=Vg(n,e,t,r,o,"max"),i=Kk(n,e,t,o,!0,s);return[a.values,i.values]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const BB={kernelName:i0,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:o,strides:r,pad:a,includeBatchInIndex:i}=e,c=t;be(s,"MaxPoolWithArgmax");const u=c.data.get(s.dataId).values,l=Bn(s.shape,o,r,[1,1],a),[d,h]=PB(u,s.shape,s.dtype,i,l),p=c.write(d,l.outShape,s.dtype),f=c.write(h,l.outShape,s.dtype);return[{dataId:p,shape:l.outShape,dtype:s.dtype},{dataId:f,shape:l.outShape,dtype:"int32"}]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s,i=Re(r,o.shape),u=bt(o.shape,i)[1],l=L(u),d=[],h=t.makeTensorInfo([],"float32",new Float32Array([l]));d.push(h);const p=Po({inputs:{x:o},backend:t,attrs:{dtype:"float32"}});d.push(p);const f=Wg({inputs:{a:p,b:h},backend:t});d.push(f);const m=Ql({inputs:{x:f},backend:t,attrs:{axis:r,keepDims:a}});return d.forEach(g=>t.disposeIntermediateTensorInfo(g)),m}const VB={kernelName:ui,backendName:"cpu",kernelFunc:zB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function WB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s;be(o,"min");const i=Re(r,o.shape);let c=i;const u=pt(c,o.shape.length);let l=o;u!=null&&(l=vn({inputs:{x:o},backend:t,attrs:{perm:u}}),c=rt(c.length,o.shape.length)),ht("min",c,l.shape.length);const[d,h]=bt(l.shape,c),p=L(h),f=an(L(d),l.dtype),m=t.data.get(l.dataId).values;for(let b=0;b<f.length;++b){const x=b*p;let y=m[x];for(let w=0;w<p;++w){const I=m[x+w];(Number.isNaN(I)||I<y)&&(y=I)}f[b]=y}u!=null&&t.disposeIntermediateTensorInfo(l);const g=t.makeTensorInfo(d,l.dtype,f);if(a){const b=et(d,i),x=ut({inputs:{x:g},backend:t,attrs:{shape:b}});return t.disposeIntermediateTensorInfo(g),x}return g}const UB={kernelName:di,backendName:"cpu",kernelFunc:WB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GB(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:r,mode:a}=s;be(o,"mirrorPad");const i=r.map((y,w)=>y[0]+o.shape[w]+y[1]),c=r.map(y=>y[0]),u=r.map((y,w)=>y[0]+o.shape[w]),l=a==="reflect"?0:1,d=t.data.get(o.dataId).values,h=o.shape.length,p=me(o.shape),f=L(i),m=i.length,g=me(i),b=Qt(o.dtype,f);for(let y=0;y<f;y++){let w=Pa(y,m,g);for(let k=0;k<m;k++)w[k]<c[k]?w[k]=c[k]*2-w[k]-l:w[k]>=u[k]&&(w[k]=(u[k]-1)*2-w[k]+l);w=w.map((k,v)=>k-c[v]);const I=Ws(w,h,p);b[y]=d[I]}return{dataId:t.write(b,i,o.dtype),shape:i,dtype:o.dtype}}const HB={kernelName:pi,backendName:"cpu",kernelFunc:GB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jB=Dt((n,e)=>{const t=n%e;return n<0&&e<0||n>=0&&e>=0?t:(t+e)%e}),qB=qt(fl,jB),XB={kernelName:fl,backendName:"cpu",kernelFunc:qB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tv(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{dim:r}=s,a=o.shape.length;let i=r;if(i===-1&&(i=a-1),i!==a-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${a} and dim was ${i}`);const c=Re([i],o.shape),u=ev({inputs:{x:o},backend:t,attrs:{reductionIndices:c,keepDims:!1}}),l=et(u.shape,c),d=ut({inputs:{x:u},backend:t,attrs:{shape:l}}),h=zg({inputs:{a:o,b:d},backend:t}),p=hk({inputs:{x:h},backend:t}),f=Ql({inputs:{x:p},backend:t,attrs:{axis:c,keepDims:!1}}),m=ut({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Wg({inputs:{a:p,b:m},backend:t});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(m),g}const KB={kernelName:Ai,backendName:"cpu",kernelFunc:tv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YB(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{numSamples:r,seed:a,normalized:i}=s;be(o,"multinomial");const c=i?o:tv({inputs:{logits:o},backend:t,attrs:{dim:-1}}),u=c.shape[0],l=c.shape[1],d=t.data.get(c.dataId).values,h=[u,r],p=an(L(h),"int32");for(let f=0;f<u;++f){const m=f*l,g=new Float32Array(l-1);g[0]=d[m];for(let y=1;y<g.length;++y)g[y]=g[y-1]+d[m+y];const b=bm.alea(a.toString()),x=f*r;for(let y=0;y<r;++y){const w=b();p[x+y]=g.length;for(let I=0;I<g.length;I++)if(w<g[I]){p[x+y]=I;break}}}return i||t.disposeIntermediateTensorInfo(c),t.makeTensorInfo(h,"int32",p)}const ZB={kernelName:c0,backendName:"cpu",kernelFunc:YB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JB=Nm;function QB(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c}=s;be(o,"NonMaxSuppression");const u=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,{selectedIndices:d}=JB(u,l,a,i,c);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const ez={kernelName:bl,backendName:"cpu",kernelFunc:QB};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tz=Tm;function nz(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=s;be(o,"NonMaxSuppressionPadded");const l=t.data.get(o.dataId).values,d=t.data.get(r.dataId).values,{selectedIndices:h,validOutputs:p}=tz(l,d,a,i,c,u);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const sz={kernelName:xl,backendName:"cpu",kernelFunc:nz};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oz=Em;function rz(n){const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=s;be(o,"NonMaxSuppressionWithScore");const l=t.data.get(o.dataId).values,d=t.data.get(r.dataId).values,h=a,p=i,f=c,m=u,{selectedIndices:g,selectedScores:b}=oz(l,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const az={kernelName:yl,backendName:"cpu",kernelFunc:rz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iz(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o}=e,{dtype:r,depth:a,onValue:i,offValue:c}=s;be(o,"oneHot");const u=L(o.shape),l=new Float32Array(u*a);l.fill(c);const d=t.data.get(o.dataId).values;for(let h=0;h<u;++h)d[h]>=0&&d[h]<a&&(l[h*a+d[h]]=i);return t.makeTensorInfo([...o.shape,a],r,l)}const cz={kernelName:mi,backendName:"cpu",kernelFunc:iz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bd(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("zerosLike is not supported for string tensors");if(s.dtype==="complex64"){const o=Dr({inputs:{input:s},backend:t}),r=bd({inputs:{x:o},backend:t}),a=_a({inputs:{input:s},backend:t}),i=bd({inputs:{x:a},backend:t}),c=Rn({inputs:{real:r,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return Ug({backend:t,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const lz={kernelName:Ml,backendName:"cpu",kernelFunc:bd};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nv(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported for string tensors");if(s.dtype==="complex64"){const o=Dr({inputs:{input:s},backend:t}),r=nv({inputs:{x:o},backend:t}),a=_a({inputs:{input:s},backend:t}),i=bd({inputs:{x:a},backend:t}),c=Rn({inputs:{real:r,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return Ug({backend:t,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}const uz={kernelName:wl,backendName:"cpu",kernelFunc:nv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sv(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s;if(e.length===1)return gd({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const r=e[0].shape,a=e[0].dtype;e.forEach(l=>{Zn(r,l.shape,"All tensors passed to stack must have matching shapes"),$(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],c=e.map(l=>{const d=gd({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(d),d}),u=Ra({inputs:c,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),u}const dz={kernelName:Il,backendName:"cpu",kernelFunc:sv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:r,constantValue:a}=s;be(o,"pad");const i=r.map((x,y)=>x[0]+o.shape[y]+x[1]),c=r.map(x=>x[0]),u=t.data.get(o.dataId).values,l=L(o.shape),d=o.shape.length,h=me(o.shape),p=L(i),f=i.length,m=me(i),g=Qt(o.dtype,p);a!==0&&g.fill(a);for(let x=0;x<l;x++){const w=Pa(x,d,h).map((k,v)=>k+c[v]),I=Ws(w,f,m);g[I]=u[x]}return{dataId:t.write(g,i,o.dtype),shape:i,dtype:o.dtype}}const ov={kernelName:gi,backendName:"cpu",kernelFunc:hz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pz=Dt((n,e)=>Math.pow(n,e)),fz=qt(bi,pz),mz={kernelName:bi,backendName:"cpu",kernelFunc:fz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gz(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:o,paramsDenseValues:r,indices:a}=e,i=o.map(g=>t.data.get(g.dataId).values),c=o.map(g=>g.shape),u=t.data.get(r.dataId).values,l=t.data.get(a.dataId).values,[d,h,p]=Ek(i,c,u,r.shape,r.dtype,l,a.shape),f=d.map(g=>t.makeTensorInfo([g.length],"int32",g)),m=t.makeTensorInfo(p,r.dtype,h);return f.concat([m])}const bz={kernelName:l0,backendName:"cpu",kernelFunc:gz};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xz(n){const{inputs:e,backend:t}=n,{starts:s,limits:o,deltas:r}=e,a=t.data.get(s.dataId).values,i=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,[u,l]=_k(a,s.shape,s.dtype,i,o.shape,c,r.shape),d=t.makeTensorInfo([u.length],"int32",u),h=t.makeTensorInfo([l.length],s.dtype,l);return[d,h]}const yz={kernelName:u0,backendName:"cpu",kernelFunc:xz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wz(n){const{inputs:e,backend:t,attrs:s}=n,{shape:o,values:r,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=s,u=t.data.get(o.dataId).values,l=t.data.get(r.dataId).values,d=t.data.get(a.dataId).values,h=i.map(g=>t.data.get(g.dataId).values),p=i.map(g=>g.shape),[f,m]=Rk(u,o.shape,l,r.shape,r.dtype,d,a.shape,h,p,c);return t.makeTensorInfo(f,r.dtype,m)}const Iz={kernelName:d0,backendName:"cpu",kernelFunc:wz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kz(n){const{backend:e,attrs:t}=n,{start:s,stop:o,dtype:r,step:a}=t,i=Og(s,o,a,r);return e.makeTensorInfo([i.length],r,i)}const vz={kernelName:Md,backendName:"cpu",kernelFunc:kz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $z=Ze(wi,n=>1/n),Cz={kernelName:wi,backendName:"cpu",kernelFunc:$z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Sz(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:a,size:i}=s;be(o,"resizeBilinear");const c=me(o.shape),[u,l]=i,[d,h,p,f]=o.shape,m=t.data.get(o.dataId).values,g=new Float32Array(L([d,u,l,f])),b=[r&&u>1?h-1:h,r&&l>1?p-1:p],x=[r&&u>1?u-1:u,r&&l>1?l-1:l];let y=0;const w=b[0]/x[0],I=b[1]/x[1];for(let k=0;k<d;k++)for(let v=0;v<u;v++){let C;a?C=w*(v+.5)-.5:C=w*v;const N=Math.max(0,Math.floor(C)),T=C-N,_=Math.min(h-1,Math.ceil(C)),O=k*c[0]+N*c[1],P=k*c[0]+_*c[1];for(let V=0;V<l;V++){let B;a?B=I*(V+.5)-.5:B=I*V;const W=Math.max(0,Math.floor(B)),q=B-W,z=Math.min(p-1,Math.ceil(B)),X=O+W*c[2],Y=P+W*c[2],Z=O+z*c[2],se=P+z*c[2];for(let J=0;J<f;J++){const ae=m[X+J],oe=m[Y+J],ue=m[Z+J],ge=m[se+J],ce=ae+(ue-ae)*q,we=oe+(ge-oe)*q,Ne=ce+(we-ce)*T;g[y++]=Ne}}}return t.makeTensorInfo([d,u,l,f],"float32",g)}const Nz={kernelName:vi,backendName:"cpu",kernelFunc:Sz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Tz(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:a}=s;be([r,o],"resizeBilinearGrad");const i=me(o.shape),[c,u,l,d]=o.shape,[,h,p]=r.shape,f=new Float32Array(c*u*l*d),m=[a&&h>1?u-1:u,a&&p>1?l-1:l],g=[a&&h>1?h-1:h,a&&p>1?p-1:p],b=m[0]/g[0],x=m[1]/g[1],y=t.data.get(r.dataId).values;let w=0;for(let I=0;I<c;I++){const k=I*i[0];for(let v=0;v<h;v++){const C=v*b,N=Math.floor(C),T=Math.min(Math.ceil(C),u-1),_=k+N*i[1],O=k+T*i[1],P=C-N,V=1-P;for(let B=0;B<p;B++){const W=B*x,q=Math.floor(W),z=Math.min(Math.ceil(W),l-1),X=W-q,Y=1-X,Z=_+q*i[2],se=_+z*i[2],J=O+q*i[2],ae=O+z*i[2],oe=V*Y,ue=V*X,ge=P*Y,ce=P*X;for(let we=0;we<d;we++){const Ne=y[w++];f[Z+we]+=Ne*oe,f[se+we]+=Ne*ue,f[J+we]+=Ne*ge,f[ae+we]+=Ne*ce}}}}return t.makeTensorInfo([c,l,u,d],"float32",f)}const Ez={kernelName:Uf,backendName:"cpu",kernelFunc:Tz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _z(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:a,size:i}=s;be(o,"resizeNearestNeighbor");const c=me(o.shape),[u,l]=i,[d,h,p,f]=o.shape,m=t.data.get(o.dataId).values,g=new Float32Array(d*u*l*f),b=[r&&u>1?h-1:h,r&&l>1?p-1:p],x=[r&&u>1?u-1:u,r&&l>1?l-1:l],y=b[0]/x[0],w=b[1]/x[1];let I=0;for(let k=0;k<d;k++){const v=k*c[0];for(let C=0;C<u;C++){const N=a?y*(C+.5):y*C;let T=Math.min(h-1,r?Math.round(N):Math.floor(N));a&&(T=Math.max(0,T));const _=v+T*c[1];for(let O=0;O<l;O++){const P=a?w*(O+.5):w*O;let V=Math.min(p-1,r?Math.round(P):Math.floor(P));a&&(V=Math.max(0,V));const B=_+V*c[2];for(let W=0;W<f;W++){const q=m[B+W];g[I++]=q}}}}return t.makeTensorInfo([d,u,l,f],o.dtype,g)}const Rz={kernelName:ki,backendName:"cpu",kernelFunc:_z};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Az(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:a}=s;be([r,o],"resizeNearestNeighborGrad");const i=me(o.shape),c=me(r.shape),[u,l,d,h]=o.shape,[,p,f]=r.shape,m=new Float32Array(u*l*d*h),g=t.data.get(r.dataId).values,b=[a&&p>1?l-1:l,a&&f>1?d-1:d],x=[a&&p>1?p-1:p,a&&f>1?f-1:f],y=b[0]/x[0],w=b[1]/x[1],I=1/y,k=1/w,v=Math.ceil(I)*2+2,C=Math.ceil(k)*2+2;for(let N=0;N<u;N++){const T=N*i[0];for(let _=0;_<l;_++){const O=T+_*i[1],P=Math.floor(_*I),V=Math.floor(P-v/2);for(let B=0;B<d;B++){const W=O+B*i[2],q=Math.floor(B*k),z=Math.floor(q-C/2);for(let X=0;X<h;X++){let Y=0;for(let Z=0;Z<v;Z++){const se=Z+V;if(se<0||se>=p)continue;const J=T+se*c[1],ae=se*y,oe=Math.min(l-1,a?Math.round(ae):Math.floor(ae));if(_===oe)for(let ue=0;ue<C;ue++){const ge=ue+z;if(ge<0||ge>=f)continue;const ce=J+ge*c[2],we=ge*w,Ne=Math.min(d-1,a?Math.round(we):Math.floor(we));B===Ne&&(Y+=g[ce+X])}}m[W+X]=Y}}}}return t.makeTensorInfo(o.shape,o.dtype,m)}const Dz={kernelName:Wf,backendName:"cpu",kernelFunc:Az};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fz(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dims:r}=s;be(o,"reverse");const a=o.shape.length,i=Re(r,o.shape);if(a===0)return Ys({inputs:{x:o},backend:t});const c=new sn(o.shape,o.dtype),u=t.bufferSync(o);for(let l=0;l<c.size;l++){const d=c.indexToLoc(l),h=d.slice();i.forEach(p=>h[p]=o.shape[p]-1-h[p]),c.set(u.get(...h),...d)}return t.makeTensorInfo(c.shape,c.dtype,c.values)}const Oz={kernelName:Ci,backendName:"cpu",kernelFunc:Fz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mz={kernelName:Ll,backendName:"cpu",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:o,fillValue:r,center:a}=e,i=t,c=Qt(s.dtype,L(s.shape)),[u,l,d,h]=s.shape,[p,f]=uh(a,l,d),m=255,g=Math.sin(o),b=Math.cos(o),x=i.data.get(s.dataId).values;for(let w=0;w<u;w++){const I=w*d*l*h;for(let k=0;k<l;k++){const v=k*(d*h);for(let C=0;C<d;C++){const N=C*h;for(let T=0;T<h;T++){const _=[u,k,C,T],O=_[2],P=_[1];let V=(O-p)*b-(P-f)*g,B=(O-p)*g+(P-f)*b;V=Math.round(V+p),B=Math.round(B+f);let W=r;if(typeof r!="number"&&(T===3?W=m:W=r[T]),V>=0&&V<d&&B>=0&&B<l){const z=B*(d*h),X=V*h,Y=I+z+X+T;W=x[Y]}const q=I+v+N+T;c[q]=W}}}}return{dataId:i.write(c,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lz=Ze(Si,n=>{const e=Math.floor(n);return n-e<.5?Math.floor(n):n-e>.5?Math.ceil(n):e%2===0?e:e+1}),Pz={kernelName:Si,backendName:"cpu",kernelFunc:Lz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Bz(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o,updates:r}=e,{shape:a}=s,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=Li(r,o,a),h=!0,p=t.bufferSync(o),f=t.bufferSync(r),m=da(p,f,a,d,u,c,i,l,0,h);return t.makeTensorInfo(a,m.dtype,m.values)}const zz={kernelName:Ld,backendName:"cpu",kernelFunc:Bz};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vz(n,e){let t=0,s=n.length,o=0;for(;t<s;)o=Math.floor((t+s)/2),n[o]<e?t=o+1:s=o;return s}function Wz(n,e){let t=0,s=n.length,o=0;for(;t<s;)o=Math.floor((t+s)/2),n[o]<=e?t=o+1:s=o;return s}function Uz(n,e,t,s,o,r){const a=At("int32",t*o);for(let i=0;i<t;++i){const c=n.slice(i*s,(i+1)*s),u=i*o;for(let l=0;l<o;++l)a[u+l]=r==="left"?Vz(c,e[l+u]):Wz(c,e[l+u])}return a}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Gz(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:o,values:r}=e,{side:a}=s,i=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,u=Uz(i,c,o.shape[0],o.shape[1],r.shape[1],a);return t.makeTensorInfo(r.shape,"int32",u)}const Hz={kernelName:h0,backendName:"cpu",kernelFunc:Gz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jz(n){const{inputs:e,backend:t}=n,{condition:s,t:o,e:r}=e;be([s,o,r],"select");const a=s.shape.length,i=t.data.get(s.dataId).values,c=t.data.get(o.dataId).values,u=t.data.get(r.dataId).values,l=Fn(o.dtype,r.dtype),d=an(L(o.shape),l);let h=0;const p=a===0||a>1||o.shape.length===1?1:L(o.shape.slice(1));for(let f=0;f<i.length;f++)for(let m=0;m<p;m++)i[f]===1?d[h++]=c[f]:d[h++]=u[f];return t.makeTensorInfo(o.shape,l,d)}const qz={kernelName:vl,backendName:"cpu",kernelFunc:jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xz=ph,Kz=fh,Yz=Ze($l,n=>n>=0?Kz*n:Xz*(Math.exp(n)-1)),Zz={kernelName:$l,backendName:"cpu",kernelFunc:Yz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jz=Ze(Nl,n=>n<0?-1:n>0?1:0),Qz={kernelName:Nl,backendName:"cpu",kernelFunc:Jz};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eV=Ze(Ti,n=>Math.sin(n)),tV={kernelName:Ti,backendName:"cpu",kernelFunc:eV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nV=Ze(Sl,n=>Math.sinh(n)),sV={kernelName:Sl,backendName:"cpu",kernelFunc:nV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oV=11920928955078125e-23,Bx=Math.log(oV)+2,rV=Ze(Tl,n=>{const e=n>-Bx,t=n<Bx,s=Math.exp(n);let o;return t?o=s:e?o=n:o=Math.log(1+s),o}),aV={kernelName:Tl,backendName:"cpu",kernelFunc:rV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,paddings:a}=s;be([o],"spaceToBatchND");const i=L(r),c=[[0,0]];c.push(...a);for(let k=1+r.length;k<o.shape.length;++k)c.push([0,0]);const u=ov.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:c,constantValue:0}}),l=Hr(u.shape,r,i,!1),d=jr(l.length,r.length,!1),h=qr(u.shape,r,i,!1),m=ut({inputs:{x:u},backend:t,attrs:{shape:l}}),x=vn({inputs:{x:m},backend:t,attrs:{perm:d}}),I=ut({inputs:{x},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(x),I}const cV={kernelName:El,backendName:"cpu",kernelFunc:iV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lV(n){const{inputs:e,backend:t}=n,{indices:s,values:o,denseShape:r,defaultValue:a}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
        ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
        ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.data.get(s.dataId).values,c=t.data.get(o.dataId).values,u=t.data.get(r.dataId).values,l=t.data.get(a.dataId).values[0],[d,h,p,f,m]=Fk(i,s.shape,s.dtype,c,o.dtype,u,l);return[t.makeTensorInfo(h,s.dtype,d),t.makeTensorInfo([h[0]],o.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const uV={kernelName:Pd,backendName:"cpu",kernelFunc:lV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dV(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:o,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const a=Array.from(t.data.get(o.dataId).values),i=t.data.get(s.dataId).values,c=Array.from(t.data.get(r.dataId).values),[u,l,d]=Ok(i,s.shape,s.dtype,a,c);return[t.makeTensorInfo(l,s.dtype,u),t.makeTensorInfo([d.length],r.dtype,new Int32Array(d))]}const hV={kernelName:Rl,backendName:"cpu",kernelFunc:dV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pV(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
          ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
          ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,i=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,[u,l]=Mg(a,s.shape,s.dtype,i,c,!0);return t.makeTensorInfo(l,s.dtype,u)}const fV={kernelName:Bd,backendName:"cpu",kernelFunc:pV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mV(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
         ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
         ${r.shape}`);if(o.shape[0]!==r.shape[0])throw new Error("segmentIds and indices should have same size.");const a=t.data.get(s.dataId).values,i=t.data.get(o.dataId).values,c=t.data.get(r.dataId).values,[u,l]=Mg(a,s.shape,s.dtype,i,c);return t.makeTensorInfo(l,s.dtype,u)}const gV={kernelName:zd,backendName:"cpu",kernelFunc:mV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bV(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:o,sparseValues:r,defaultValue:a}=e,{outputShape:i}=s,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=Li(r,o,i),p=!1,f=t.bufferSync(o);let m;switch(r.dtype){case"bool":{const g=t.bufferSync(r),b=Boolean(t.data.get(a.dataId).values[0]);m=da(f,g,i,h,l,u,c,d,b,p);break}case"float32":{const g=t.bufferSync(r),b=t.data.get(a.dataId).values[0];m=da(f,g,i,h,l,u,c,d,b,p);break}case"int32":{const g=t.bufferSync(r),b=t.data.get(a.dataId).values[0];m=da(f,g,i,h,l,u,c,d,b,p);break}case"string":{const g=t.bufferSync(r),b=Ao(t.data.get(a.dataId).values[0]);m=da(f,g,i,h,l,u,c,d,b,p);break}default:throw new Error(`Unsupported type ${r.dtype}`)}return t.makeTensorInfo(i,m.dtype,m.values)}const xV={kernelName:p0,backendName:"cpu",kernelFunc:bV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{numOrSizeSplits:r,axis:a}=s,i=Re(a,o.shape)[0],c=mh(o,r,i),u=new Array(o.shape.length).fill(0),l=o.shape.slice();return c.map(d=>{const h=[...l];h[i]=d;const p=Fr({inputs:{x:o},backend:t,attrs:{begin:u,size:h}});return u[i]+=d,p})}const wV={kernelName:_l,backendName:"cpu",kernelFunc:yV};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IV={kernelName:Vd,backendName:"cpu",kernelFunc:({inputs:n,backend:e})=>{const{x:t}=n,s=e;be(t,"square");const o=s.data.get(t.dataId).values,r=new Float32Array(o.length);for(let i=0;i<o.length;++i){const c=o[i];r[i]=c*c}return{dataId:s.write(r,t.shape,t.dtype),shape:t.shape,dtype:t.dtype}}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kV=Ze(zr,(n,e)=>{const t=e;return isNaN(n)?NaN:n>0?1:t.alpha}),vV={kernelName:zr,backendName:"cpu",kernelFunc:kV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $V(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,end:a,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s;be(o,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:w}=th(o.shape,r,a,i,c,u,l,d,h);let I;if(m)I=ut({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){$(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const k=Jd(x,y,w),v=Fr({inputs:{x:o},backend:t,attrs:{begin:x,size:k}});I=ut({inputs:{x:v},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(v)}else{const k=t.bufferSync(o),v=Lk(p,k,w,x);I=t.makeTensorInfo(f,v.dtype,v.values)}return I}const CV={kernelName:Al,backendName:"cpu",kernelFunc:$V};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SV(n){const{inputs:e,backend:t,attrs:s}=n,{separator:o,nGramWidths:r,leftPad:a,rightPad:i,padWidth:c,preserveShortSequences:u}=s,{data:l,dataSplits:d}=e,h=t.data.get(l.dataId).values,p=t.data.get(d.dataId).values,[f,m]=Lg(h,p,o,r,a,i,c,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(d.shape,"int32",m)]}const NV={kernelName:Wd,backendName:"cpu",kernelFunc:SV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TV(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:o}=s,{input:r,delimiter:a}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.data.get(r.dataId).values,c=t.data.get(a.dataId).values[0],[u,l,d]=Pg(i,c,o),h=l.length;return[t.makeTensorInfo([h,2],"int32",u),t.makeTensorInfo([h],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const EV={kernelName:Ud,backendName:"cpu",kernelFunc:TV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _V(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:o}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const a=t.data.get(r.dataId).values,i=Bg(a,o);return t.makeTensorInfo(r.shape,"int32",i)}const RV={kernelName:Gd,backendName:"cpu",kernelFunc:_V};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AV=Ze(Oi,n=>Math.tan(n)),DV={kernelName:Oi,backendName:"cpu",kernelFunc:AV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const FV=Ze(Mi,n=>Math.tanh(n)),OV={kernelName:Mi,backendName:"cpu",kernelFunc:FV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reps:r}=s;be(o,"tile");const a=Bk(t.bufferSync(o),r);return t.makeTensorInfo(a.shape,a.dtype,a.values)}const LV={kernelName:Br,backendName:"cpu",kernelFunc:MV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{k:r,sorted:a}=s;be(o,"topk");const i=t.data.get(o.dataId).values,[c,u]=Vk(i,o.shape,o.dtype,r,a);return[t.makeTensorInfo(c.shape,c.dtype,c.values),t.makeTensorInfo(u.shape,u.dtype,u.values)]}const BV={kernelName:Dl,backendName:"cpu",kernelFunc:PV};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zV(n){const{inputs:e,attrs:t,backend:s}=n,{image:o,transforms:r}=e,{interpolation:a,fillMode:i,fillValue:c,outputShape:u}=t,[l,d,h,p]=o.shape,[f,m]=u??[d,h],g=[l,f,m,p],b=me(o.shape),x=b[0],y=b[1],w=b[2],I=me(g),k=I[0],v=I[1],C=I[2],N=Qt(o.dtype,L(g));N.fill(c);const T=s.data.get(o.dataId).values,_=s.data.get(r.dataId).values;for(let P=0;P<l;++P){const V=r.shape[0]===1?_:_.subarray(P*8,P*8+8);for(let B=0;B<f;++B)for(let W=0;W<m;++W)for(let q=0;q<p;++q){let z;const X=V[6]*W+V[7]*B+1;if(X===0)continue;const Y=(V[0]*W+V[1]*B+V[2])/X,Z=(V[3]*W+V[4]*B+V[5])/X,se=zx(Y,h,i),J=zx(Z,d,i);switch(a){case"nearest":z=jV(T,d,h,x,y,w,P,J,se,q,c);break;case"bilinear":z=qV(T,d,h,x,y,w,P,J,se,q,c);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${a}`)}const ae=P*k+B*v+W*C+q;N[ae]=z}return s.makeTensorInfo(g,o.dtype,N)}return{dataId:s.write(N,g,o.dtype),shape:o.shape,dtype:o.dtype}}const VV={kernelName:Fl,backendName:"cpu",kernelFunc:zV};function zx(n,e,t){switch(t){case"reflect":return WV(n,e);case"wrap":return UV(n,e);case"nearest":return HV(n,e);case"constant":default:return GV(n)}}function WV(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=2*e;t<s&&(t=s*Math.trunc(-t/s)+t),t=t<-e?t+s:-t-1}else if(t>e-1)if(e<=1)t=0;else{const s=2*e;t-=s*Math.trunc(t/s),t>=e&&(t=s-t-1)}return Ir(0,t,e-1)}function UV(n,e){let t=n;if(t<0)if(e<=1)t=0;else{const s=e-1;t+=e*(Math.trunc(-t/s)+1)}else if(t>e-1)if(e<=1)t=0;else{const s=e-1;t-=e*Math.trunc(t/s)}return Ir(0,t,e-1)}function GV(n,e){return n}function HV(n,e){return Ir(0,n,e-1)}function pc(n,e,t,s,o,r,a,i,c,u,l){const d=a*s+i*o+c*r+u;return 0<=i&&i<e&&0<=c&&c<t?n[d]:l}function jV(n,e,t,s,o,r,a,i,c,u,l){const d=Math.round(i),h=Math.round(c);return pc(n,e,t,s,o,r,a,d,h,u,l)}function qV(n,e,t,s,o,r,a,i,c,u,l){const d=Math.floor(i),h=Math.floor(c),p=d+1,f=h+1,m=(f-c)*pc(n,e,t,s,o,r,a,d,h,u,l)+(c-h)*pc(n,e,t,s,o,r,a,d,f,u,l),g=(f-c)*pc(n,e,t,s,o,r,a,p,h,u,l)+(c-h)*pc(n,e,t,s,o,r,a,p,f,u,l);return(p-i)*m+(i-d)*g}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function XV(n){const{inputs:e,attrs:t,backend:s}=n,{axis:o}=t,{x:r}=e;be(r,"unique");const a=s.data.get(r.dataId).values,{outputValues:i,outputShape:c,indices:u}=Wk(a,o,r.shape,r.dtype);return[s.makeTensorInfo(c,r.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}const KV={kernelName:Gf,backendName:"cpu",kernelFunc:XV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function YV(n){const{inputs:e,backend:t,attrs:s}=n,{value:o}=e;let{axis:r}=s;r<0&&(r+=o.shape.length);const a=o.shape.length,i=o.shape[r],c=new Array(a-1);let u=0;for(let p=0;p<a;p++)p!==r&&(c[u++]=o.shape[p]);const l=new Array(a).fill(0),d=o.shape.slice();d[r]=1;const h=new Array(i);for(let p=0;p<h.length;p++){l[r]=p;const f=Fr({inputs:{x:o},backend:t,attrs:{begin:l,size:d}});h[p]=ut({inputs:{x:f},backend:t,attrs:{shape:c}}),t.disposeIntermediateTensorInfo(f)}return h}const ZV={kernelName:Ol,backendName:"cpu",kernelFunc:YV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JV(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,segmentIds:r}=e,{numSegments:a}=s;be(o,"unsortedSegmentSum");const i=o.shape.length,c=r.shape.length,u=[],l=[],d=i-c;let h=r;for(let f=0;f<d;++f){const m=gd({inputs:{input:h},backend:t,attrs:{dim:f+1}});h=m,l.push(m)}for(let f=0;f<a;++f){const m=Uo(f,"int32"),g=t.makeTensorInfo([],"int32",m),b=uk({inputs:{a:g,b:h},backend:t}),x=Po({inputs:{x:b},backend:t,attrs:{dtype:"float32"}}),y=Th({inputs:{a:x,b:o},backend:t}),w=Ql({inputs:{x:y},backend:t,attrs:{axis:0,keepDims:!1}});u.push(w),l.push(g),l.push(b),l.push(x),l.push(y),l.push(w)}const p=sv({inputs:u,backend:t,attrs:{axis:0}});return l.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const QV={kernelName:Hd,backendName:"cpu",kernelFunc:JV};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eW=[K3,OM,Z3,Q3,VM,tL,sL,rL,iL,lL,dL,pL,mL,xL,wL,vL,CL,NL,EL,q3,RL,DL,OL,LL,BM,UM,BL,MM,VL,UL,GL,jL,XL,YL,JL,eP,nP,oP,aP,cP,uP,hP,fP,mP,bP,yP,IP,kP,vP,$P,NP,z3,EP,GM,LP,HM,PP,qM,GP,HP,qP,KM,YP,JP,eB,nB,oB,ZM,QM,LM,aB,WL,cB,uB,hB,V3,t3,s3,fB,r3,gB,yB,IB,$B,SB,TB,EB,i3,RB,DB,OB,LB,BB,VB,UB,l3,HB,XB,ZB,d3,p3,ez,sz,az,m3,cz,uz,dz,ov,mz,U3,x3,bz,yz,Iz,vz,PM,qp,Cz,G3,H3,j3,Nz,Ez,Rz,Dz,Oz,Mz,Pz,S3,zz,Hz,qz,Zz,T3,Qz,tV,sV,E3,KB,aV,cV,uV,hV,fV,gV,xV,wV,A3,IV,F3,vV,CV,NV,EV,RV,P3,CP,DV,OV,LV,BV,VV,g3,KV,ZV,QV,lz];for(const n of eW)Hf(n);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ur={},Nu={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function tW(n,e){ur[n]=e}function Es(n,e){if(!(n in ur)||e!=null){const s=sW(n,e);if(s!==null)ur[n]=s;else return console.log("Could not get context for WebGL version",n),null}const t=ur[n];return t==null||t.isContextLost()?(delete ur[n],Es(n)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),ur[n])}function nW(n){if(typeof OffscreenCanvas<"u"&&n===2)return new OffscreenCanvas(300,150);if(typeof document<"u")return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}function sW(n,e){if(n!==1&&n!==2)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=e??nW(n);return t.addEventListener("webglcontextlost",s=>{s.preventDefault(),delete ur[n]},!1),H().getBool("SOFTWARE_WEBGL_ENABLED")&&(Nu.failIfMajorPerformanceCaveat=!1),n===1?t.getContext("webgl",Nu)||t.getContext("experimental-webgl",Nu):t.getContext("webgl2",Nu)}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Tc;(function(n){n[n.DENSE=0]="DENSE",n[n.SHARED_BATCH=1]="SHARED_BATCH"})(Tc||(Tc={}));var jn;(function(n){n[n.RENDER=0]="RENDER",n[n.UPLOAD=1]="UPLOAD",n[n.PIXELS=2]="PIXELS",n[n.DOWNLOAD=3]="DOWNLOAD"})(jn||(jn={}));var Jt;(function(n){n[n.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",n[n.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",n[n.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",n[n.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",n[n.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"})(Jt||(Jt={}));function eu(n,e){return[e,n]}function oW(n,e){return n*e}function Tu(n){const e=L(n),t=Math.ceil(e/4);return fp(t)}function Gi(n,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(n/2))]}function rW(n,e){const[t,s]=Gi(n,e);return t*s*4}function Gg(n,e){const t=n;let s,o,r,a,i,c,u,l,d,h;return H().getNumber("WEBGL_VERSION")===2?(s=t.R32F,o=t.R16F,r=t.RGBA16F,a=t.RGBA32F,i=t.RED,u=4,l=1,d=t.HALF_FLOAT,h=t.FLOAT,c=t.RGBA8):(s=n.RGBA,o=n.RGBA,r=n.RGBA,a=t.RGBA,i=n.RGBA,u=4,l=4,d=e!=null?e.HALF_FLOAT_OES:null,h=n.FLOAT,c=n.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:r,internalFormatPackedFloat:a,textureFormatFloat:i,downloadTextureFormat:c,downloadUnpackNumChannels:u,defaultNumChannels:l,textureTypeHalfFloat:d,textureTypeFloat:h}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pe(n,e){const t=e();return H().getBool("DEBUG")&&aW(n),t}function aW(n){const e=n.getError();if(e!==n.NO_ERROR)throw new Error("WebGL Error: "+uW(n,e))}const iW=596e-10,cW=65504;function lW(n){return!!(H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||n===0||iW<Math.abs(n)&&Math.abs(n)<cW)}function uW(n,e){switch(e){case n.NO_ERROR:return"NO_ERROR";case n.INVALID_ENUM:return"INVALID_ENUM";case n.INVALID_VALUE:return"INVALID_VALUE";case n.INVALID_OPERATION:return"INVALID_OPERATION";case n.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case n.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case n.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}function Eu(n,e){return Io(n,()=>n.getExtension(e),'Extension "'+e+'" not supported on this browser.')}function dW(n,e){const t=Io(n,()=>n.createShader(n.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(pe(n,()=>n.shaderSource(t,e)),pe(n,()=>n.compileShader(t)),n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw console.log(n.getShaderInfoLog(t)),new Error("Failed to compile vertex shader.");return t}function hW(n,e){const t=Io(n,()=>n.createShader(n.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(pe(n,()=>n.shaderSource(t,e)),pe(n,()=>n.compileShader(t)),H().get("ENGINE_COMPILE_ONLY"))return t;if(n.getShaderParameter(t,n.COMPILE_STATUS)===!1)throw rv(e,n.getShaderInfoLog(t)),new Error("Failed to compile fragment shader.");return t}const pW=/ERROR: [0-9]+:([0-9]+):/g;function rv(n,e){const t=pW.exec(e);if(t==null){console.log(`Couldn't parse line number in error: ${e}`),console.log(n);return}const s=+t[1],o=n.split(`
`),r=o.length.toString().length+2,a=o.map((d,h)=>ha((h+1).toString(),r)+d);let i=0;for(let d=0;d<a.length;d++)i=Math.max(a[d].length,i);const c=a.slice(0,s-1),u=a.slice(s-1,s),l=a.slice(s);console.log(c.join(`
`)),console.log(e.split(`
`)[0]),console.log(`%c ${ha(u[0],i)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(l.join(`
`))}function fW(n){return Io(n,()=>n.createProgram(),"Unable to create WebGLProgram.")}function mW(n,e){if(pe(n,()=>n.linkProgram(e)),!H().get("ENGINE_COMPILE_ONLY")&&n.getProgramParameter(e,n.LINK_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}function Qh(n,e){if(pe(n,()=>n.validateProgram(e)),n.getProgramParameter(e,n.VALIDATE_STATUS)===!1)throw console.log(n.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function gW(n,e){const t=Io(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),pe(n,()=>n.bufferData(n.ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function bW(n,e){const t=Io(n,()=>n.createBuffer(),"Unable to create WebGLBuffer");return pe(n,()=>n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,t)),pe(n,()=>n.bufferData(n.ELEMENT_ARRAY_BUFFER,e,n.STATIC_DRAW)),t}function xW(n){return Io(n,()=>n.createTexture(),"Unable to create WebGLTexture.")}function yW(n,e){const t=H().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(n<=0||e<=0){const s=`[${n}x${e}]`;throw new Error("Requested texture size "+s+" is invalid.")}if(n>t||e>t){const s=`[${n}x${e}]`,o=`[${t}x${t}]`;throw new Error("Requested texture size "+s+" greater than WebGL maximum on this browser / GPU "+o+".")}}function wW(n){return Io(n,()=>n.createFramebuffer(),"Unable to create WebGLFramebuffer.")}function Vx(n,e,t,s,o,r,a){const i=n.getAttribLocation(e,t);return i===-1?!1:(pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,s)),pe(n,()=>n.vertexAttribPointer(i,o,n.FLOAT,!1,r,a)),pe(n,()=>n.enableVertexAttribArray(i)),!0)}function IW(n,e,t){SW(n,t),pe(n,()=>n.activeTexture(n.TEXTURE0+t)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,e))}function kW(n,e,t){return Io(n,()=>n.getUniformLocation(e,t),'uniform "'+t+'" not present in program.')}function vW(n,e,t){return n.getUniformLocation(e,t)}function $W(n,e,t,s){pe(n,()=>IW(n,e,s)),pe(n,()=>n.uniform1i(t,s))}function ep(n,e,t){pe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,t)),pe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,e,0))}function Wx(n,e){pe(n,()=>n.bindFramebuffer(n.FRAMEBUFFER,e)),pe(n,()=>n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,null,0))}function _u(n){const e=n.checkFramebufferStatus(n.FRAMEBUFFER);if(e!==n.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+CW(n,e))}function CW(n,e){switch(e){case n.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case n.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case n.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}function Io(n,e,t){const s=pe(n,()=>e());if(s==null)throw new Error(t);return s}function SW(n,e){const t=n.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=e+n.TEXTURE0;if(s<n.TEXTURE0||s>t){const o=`[gl.TEXTURE0, gl.TEXTURE${t}]`;throw new Error(`textureUnit must be in ${o}.`)}}function Aa(n,e=2){return L(n.slice(0,n.length-e))}function Da(n){if(n.length===0)throw Error("Cannot get rows and columns of an empty shape array.");return[n.length>1?n[n.length-2]:1,n[n.length-1]]}function Ru(n){let e=[1,1,1];return n.length===0||n.length===1&&n[0]===1||(e=[Aa(n),...Da(n)]),e}function NW(n,e=!1){let t=H().getNumber("WEBGL_MAX_TEXTURE_SIZE"),s=H().getNumber("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE");s===1/0&&H().getBool("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE")&&(s=t/2),e&&(t=t*2,s=s*2,n=n.map((i,c)=>c>=n.length-2?yf(n[c]):n[c]),n.length===1&&(n=[2,n[0]])),n.length!==2&&(n=Wo(n).newShape);let o=L(n),r=null;n.length<=1&&o<=t?r=[1,o]:n.length===2&&n[0]<=t&&n[1]<=t?r=n:n.length===3&&n[0]*n[1]<=t&&n[2]<=t?r=[n[0]*n[1],n[2]]:n.length===3&&n[0]<=t&&n[1]*n[2]<=t?r=[n[0],n[1]*n[2]]:n.length===4&&n[0]*n[1]*n[2]<=t&&n[3]<=t?r=[n[0]*n[1]*n[2],n[3]]:n.length===4&&n[0]<=t&&n[1]*n[2]*n[3]<=t&&(r=[n[0],n[1]*n[2]*n[3]]);const a=r!=null&&Math.max(...r)>s&&Math.min(...r)<=(e?2:1)&&Math.min(...r)>0;if(r==null||a)if(e){const i=Aa(n);let c=2,u=2;n.length&&([c,u]=Da(n)),o=i*(c/2)*(u/2),r=fp(o).map(l=>l*2)}else r=fp(o);return r}function Au(n){return n%2===0}function xd(n,e){if(n=n.slice(-2),e=e.slice(-2),Ke(n,e)||!n.length||!e.length||n[0]===0||n[1]===0||e[0]===0||e[1]===0)return!0;if(n.length!==e.length){const t=n.slice(-1)[0],s=e.slice(-1)[0];if(t===s||Au(t)&&Au(s)&&(n[0]===1||e[0]===1))return!0}return n[1]===e[1]&&Au(n[0])&&Au(e[0])}let tp,np;function TW(n){if(tp==null){const e=Es(n);tp=e.getParameter(e.MAX_TEXTURE_SIZE)}return tp}function EW(n){if(np==null){const e=Es(n);np=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,np)}function _W(n){if(n===0)return 0;let e;const t=Es(n);return ls(t,"EXT_disjoint_timer_query_webgl2")&&n===2?e=2:ls(t,"EXT_disjoint_timer_query")?e=1:e=0,e}function ls(n,e){return n.getExtension(e)!=null}function Ux(n){try{if(Es(n)!=null)return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function RW(n){if(n===0)return!1;const e=Es(n);if(n===1){if(!ls(e,"OES_texture_float"))return!1}else if(!ls(e,"EXT_color_buffer_float"))return!1;return Kp(e)}function AW(n){if(n===0)return!1;const e=Es(n);if(n===1){if(!ls(e,"OES_texture_float")||!ls(e,"WEBGL_color_buffer_float"))return!1}else{if(ls(e,"EXT_color_buffer_float"))return Kp(e);const s="EXT_color_buffer_half_float";if(ls(e,s)){const o=e.getExtension(s);return DW(e,o)}return!1}return Kp(e)}function Kp(n){const e=Gg(n),t=n.createTexture();n.bindTexture(n.TEXTURE_2D,t);const s=1,o=1;n.texImage2D(n.TEXTURE_2D,0,e.internalFormatFloat,s,o,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,r),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,t,0);const a=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(t),n.deleteFramebuffer(r),a}function DW(n,e){const t=Gg(n,e),s=n.createTexture();n.bindTexture(n.TEXTURE_2D,s);const o=1,r=1;n.texImage2D(n.TEXTURE_2D,0,t.internalFormatHalfFloat,o,r,0,t.textureFormatFloat,t.textureTypeHalfFloat,null);const a=n.createFramebuffer();n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,n.TEXTURE_2D,s,0);const i=n.checkFramebufferStatus(n.FRAMEBUFFER)===n.FRAMEBUFFER_COMPLETE;return n.bindTexture(n.TEXTURE_2D,null),n.bindFramebuffer(n.FRAMEBUFFER,null),n.deleteTexture(s),n.deleteFramebuffer(a),i}function FW(n){return n!==2?!1:Es(n).fenceSync!=null}function tu(n,e){Array.isArray(n)||(n=[n]),n.forEach(t=>{t!=null&&$(t.dtype!=="complex64",()=>`${e} does not support complex64 tensors in the WebGL backend.`)})}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ie=H();Ie.registerFlag("HAS_WEBGL",()=>Ie.getNumber("WEBGL_VERSION")>0);Ie.registerFlag("WEBGL_VERSION",()=>Ux(2)?2:Ux(1)?1:0);Ie.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1);Ie.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>Ie.get("WEBGL_VERSION")===2);Ie.registerFlag("WEBGL_CPU_FORWARD",()=>!0);Ie.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1);Ie.registerFlag("WEBGL_PACK",()=>Ie.getBool("HAS_WEBGL"));Ie.registerFlag("WEBGL_PACK_NORMALIZATION",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_CLIP",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_PACK_REDUCE",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_LAZILY_UNPACK",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_CONV_IM2COL",()=>Ie.getBool("WEBGL_PACK"));Ie.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>TW(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>EW(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const n=Ie.getNumber("WEBGL_VERSION");return n===0?0:_W(n)});Ie.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>Ie.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!C0());Ie.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>RW(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>Ie.getBool("WEBGL_FORCE_F16_TEXTURES")?!1:Ie.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"));Ie.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>AW(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_FENCE_API_ENABLED",()=>FW(Ie.getNumber("WEBGL_VERSION")));Ie.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>Ie.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0);Ie.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${n}.`)});Ie.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>C0()?1:-1,n=>{if(n<0&&n!==-1)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${n}.`)});Ie.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128);Ie.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1);Ie.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5);Ie.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);Ie.registerFlag("WEBGL_EXP_CONV",()=>!1);Ie.registerFlag("SOFTWARE_WEBGL_ENABLED",()=>Ie.getBool("IS_TEST"));Ie.registerFlag("WEBGL_MAX_SIZE_FOR_NARROW_TEXTURE",()=>1/0);Ie.registerFlag("WEBGL_AUTO_SQUARIFY_NARROW_TEXTURE_SHAPE",()=>!1);Ie.registerFlag("WEBGL2_ISNAN_CUSTOM",()=>!1);Ie.registerFlag("ENGINE_COMPILE_ONLY",()=>!1);/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xn(){let n,e,t,s,o,r,a,i,c,u;return H().getNumber("WEBGL_VERSION")===2?(n="#version 300 es",e="in",t="out",s="in",o="texture",r="outputColor",a="out vec4 outputColor;",i=H().getBool("WEBGL2_ISNAN_CUSTOM")?`
      bool isnan_custom(float val) {
        uint floatToUint = floatBitsToUint(val);
        return (floatToUint & 0x7fffffffu) > 0x7f800000u;
      }

      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan_custom(val.x),
          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));
      }

      #define isnan(value) isnan_custom(value)
    `:"",c="",u=`
      #define round(value) newRound(value)
      int newRound(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 newRound(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `):(n="",e="attribute",t="varying",s="varying",o="texture2D",r="gl_FragColor",a="",i=`
      #define isnan(value) isnan_custom(value)
      bool isnan_custom(float val) {
        return (val > 0. || val < 1. || val == 0.) ? false : true;
      }
      bvec4 isnan_custom(vec4 val) {
        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));
      }
    `,c=`
      uniform float INFINITY;

      bool isinf(float val) {
        return abs(val) == INFINITY;
      }
      bvec4 isinf(vec4 val) {
        return equal(abs(val), vec4(INFINITY));
      }
    `,u=`
      int round(float value) {
        return int(floor(value + 0.5));
      }

      ivec4 round(vec4 value) {
        return ivec4(floor(value + vec4(0.5)));
      }
    `),{version:n,attribute:e,varyingVs:t,varyingFs:s,texture2D:o,output:r,defineOutput:a,defineSpecialNaN:i,defineSpecialInf:c,defineRound:u}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yr(n,e,t="index"){const s=me(e);return s.map((o,r)=>{const a=`int ${n[r]} = ${t} / ${o}`,i=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * ${o}`:`index -= ${n[r]} * ${o}`;return`${a}; ${i};`}).join("")}function Eh(n,e,t="index"){const s=me(e);return s.map((o,r)=>{const a=`int ${n[r]} = ${t} / outShapeStrides[${r}]`,i=r===s.length-1?`int ${n[r+1]} = ${t} - ${n[r]} * outShapeStrides[${r}]`:`index -= ${n[r]} * outShapeStrides[${r}]`;return`${a}; ${i};`}).join("")}function OW(n,e){const t=n.length,s=n.map(r=>`${e}[${r}]`),o=new Array(t-1);o[t-2]=s[t-1];for(let r=t-3;r>=0;--r)o[r]=`(${o[r+1]} * ${s[r+1]})`;return o}function MW(n,e,t="index"){const s=n.map((r,a)=>a),o=OW(s,e);return o.map((r,a)=>{const i=`int ${n[a]} = ${t} / ${o[a]}`,c=a===o.length-1?`int ${n[a+1]} = ${t} - ${n[a]} * ${o[a]}`:`index -= ${n[a]} * ${o[a]}`;return`${i}; ${c};`}).join("")}function Hg(n){const e=me(n).map(t=>t.toString());return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;
  }
`}function jg(){return`
  int getFlatIndex(ivec3 coords) {
    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;
  }
`}const av=`
  const float FLOAT_MAX = 1.70141184e38;
  const float FLOAT_MIN = 1.17549435e-38;

  lowp vec4 encode_float(highp float v) {
    if (isnan(v)) {
      return vec4(255, 255, 255, 255);
    }

    highp float av = abs(v);

    if(av < FLOAT_MIN) {
      return vec4(0.0, 0.0, 0.0, 0.0);
    } else if(v > FLOAT_MAX) {
      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;
    } else if(v < -FLOAT_MAX) {
      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;
    }

    highp vec4 c = vec4(0,0,0,0);

    highp float e = floor(log2(av));
    highp float m = exp2(fract(log2(av))) - 1.0;

    c[2] = floor(128.0 * m);
    m -= c[2] / 128.0;
    c[1] = floor(32768.0 * m);
    m -= c[1] / 32768.0;
    c[0] = floor(8388608.0 * m);

    highp float ebias = e + 127.0;
    c[3] = floor(ebias / 2.0);
    ebias -= c[3] * 2.0;
    c[2] += floor(ebias) * 128.0;

    c[3] += 128.0 * step(0.0, -v);

    return c / 255.0;
  }
`;/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{getBroadcastDims:iv}=LA;function LW(n,e,t){const s=[];if(n.forEach(p=>{const f=L(p.shapeInfo.logicalShape);if(p.shapeInfo.isUniform?s.push(`uniform float ${p.name}${f>1?`[${f}]`:""};`):(s.push(`uniform sampler2D ${p.name};`),s.push(`uniform int offset${p.name};`)),t.enableShapeUniforms){const{uniformShape:m}=qg(t.packedInputs,p.shapeInfo.logicalShape,p.shapeInfo.texShape);switch(m.length){case 1:s.push(`uniform int ${p.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${p.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${p.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${p.name}Shape;`);break}s.push(`uniform ivec2 ${p.name}TexShape;`)}}),t.enableShapeUniforms){switch(e.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;");break}s.push("uniform ivec2 outTexShape;")}t.customUniforms&&t.customUniforms.forEach(p=>{s.push(`uniform ${p.type} ${p.name}${p.arrayIndex?`[${p.arrayIndex}]`:""};`)});const o=s.join(`
`),r=n.map(p=>PW(p,e,t.packedInputs,t.enableShapeUniforms)).join(`
`),a=e.texShape,i=xn(),c=VW(i);let u,l,d=GW(i);return e.isPacked?(u=BW(e.logicalShape,a,t.enableShapeUniforms),l=UW(i)):(u=zW(e.logicalShape,a,t.enableShapeUniforms),l=WW(i)),t.packedInputs&&(d+=XW),[d,c,l,o,u,r,t.userCode].join(`
`)}function Hi(n,e=!1){const t=n.shapeInfo.logicalShape;switch(t.length){case 0:return a4(n,e);case 1:return c4(n,e);case 2:return u4(n,e);case 3:return h4(n,e);case 4:return f4(n,e);case 5:return m4(n);case 6:return g4(n);default:throw new Error(`${t.length}-D input sampling is not yet supported`)}}function cv(n,e){switch(n.shapeInfo.logicalShape.length){case 0:return r4(n);case 1:return i4(n,e);case 2:return l4(n,e);case 3:return d4(n,e);default:return p4(n,e)}}function PW(n,e,t=!1,s){let o="";t?o+=cv(n,s):o+=Hi(n,s);const r=n.shapeInfo.logicalShape,a=e.logicalShape;return r.length<=a.length&&(t?o+=b4(n,e):o+=x4(n,e)),o}function BW(n,e,t){switch(n.length){case 0:return lv();case 1:return KW(n,e,t);case 2:return s4(n,e,t);case 3:return ZW(n,e,t);default:return QW(n,e,t)}}function zW(n,e,t){switch(n.length){case 0:return lv();case 1:return YW(n,e,t);case 2:return o4(n,e,t);case 3:return JW(n,e,t);case 4:return e4(n,e,t);case 5:return t4(n,e);case 6:return n4(n,e);default:throw new Error(`${n.length}-D output sampling is not yet supported`)}}function VW(n){return`
    float sampleTexture(sampler2D textureSampler, vec2 uv) {
      return ${n.texture2D}(textureSampler, uv).r;
    }
  `}function WW(n){return`
    void setOutput(float val) {
      ${n.output} = vec4(val, 0, 0, 0);
    }
  `}function UW(n){return`
    void setOutput(vec4 val) {
      ${n.output} = val;
    }
  `}function GW(n){return`${n.version}
    precision highp float;
    precision highp int;
    precision highp sampler2D;
    ${n.varyingFs} vec2 resultUV;
    ${n.defineOutput}
    const vec2 halfCR = vec2(0.5, 0.5);

    struct ivec5
    {
      int x;
      int y;
      int z;
      int w;
      int u;
    };

    struct ivec6
    {
      int x;
      int y;
      int z;
      int w;
      int u;
      int v;
    };

    uniform float NAN;
    ${n.defineSpecialNaN}
    ${n.defineSpecialInf}
    ${n.defineRound}

    int imod(int x, int y) {
      return x - y * (x / y);
    }

    int idiv(int a, int b, float sign) {
      int res = a / b;
      int mod = imod(a, b);
      if (sign < 0. && mod != 0) {
        res -= 1;
      }
      return res;
    }

    //Based on the work of Dave Hoskins
    //https://www.shadertoy.com/view/4djSRW
    #define HASHSCALE1 443.8975
    float random(float seed){
      vec2 p = resultUV * seed;
      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);
      p3 += dot(p3, p3.yzx + 19.19);
      return fract((p3.x + p3.y) * p3.z);
    }

    ${HW}
    ${jW}
    ${qW}
  `}const HW=`
vec2 uvFromFlat(int texNumR, int texNumC, int index) {
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {
  int texelIndex = index / 2;
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,jW=`
vec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,
  int texNumC, int row, int col) {
  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = texelIndex / texNumC;
  int texC = texelIndex - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,qW=`
vec2 packedUVfrom3D(int texNumR, int texNumC,
    int texelsInBatch, int texelsInLogicalRow, int b,
    int row, int col) {
  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);
  int texR = index / texNumC;
  int texC = index - texR * texNumC;
  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);
}
`,XW=`
  float getChannel(vec4 frag, vec2 innerDims) {
    vec2 modCoord = mod(innerDims, 2.);
    return modCoord.x == 0. ?
      (modCoord.y == 0. ? frag.r : frag.g) :
      (modCoord.y == 0. ? frag.b : frag.a);
  }
  float getChannel(vec4 frag, int dim) {
    float modCoord = mod(float(dim), 2.);
    return modCoord == 0. ? frag.r : frag.g;
  }
`;function lv(){return`
    int getOutputCoords() {
      return 0;
    }
  `}function KW(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return s[0]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.x * ${s[1]}.0);
      }
    `:s[1]===1?t?`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));
      }
    `:`
      int getOutputCoords() {
        return 2 * int(resultUV.y * ${s[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);
    }
  `}function YW(n,e,t){return e[0]===1?t?`
      int getOutputCoords() {
        return int(resultUV.x * float(outTexShape[1]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.x * ${e[1]}.0);
      }
    `:e[1]===1?t?`
      int getOutputCoords() {
        return int(resultUV.y * float(outTexShape[0]));
      }
    `:`
      int getOutputCoords() {
        return int(resultUV.y * ${e[0]}.0);
      }
    `:t?`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      return resTexRC.x * outTexShape[1] + resTexRC.y;
    }
  `:`
    int getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      return resTexRC.x * ${e[1]} + resTexRC.y;
    }
  `}function ZW(n,e,t){if(t)return`
    ivec3 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec3(b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(n[2]/2),r=o*Math.ceil(n[1]/2);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec3(b, r, c);
    }
  `}function JW(n,e,t){if(t)return`
  ivec3 getOutputCoords() {
    ivec2 resTexRC = ivec2(resultUV.yx *
                           vec2(outTexShape[0], outTexShape[1]));
    int index = resTexRC.x * outTexShape[1] + resTexRC.y;
    ${Eh(["r","c","d"],n)}
    return ivec3(r, c, d);
  }
`;const s=Yr(["r","c","d"],n);return`
    ivec3 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec3(r, c, d);
    }
  `}function QW(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));
      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;

      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));
      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));
      int texelsInBatchN = texelsInBatch * outShape[1];

      int b2 = index / texelsInBatchN;
      index -= b2 * texelsInBatchN;

      int b = index / texelsInBatch;
      index -= b * texelsInBatch;

      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec4(b2, b, r, c);
    }
  `;const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],o=Math.ceil(n[n.length-1]/2),r=o*Math.ceil(n[n.length-2]/2);let a=r,i="",c="b, r, c";for(let u=2;u<n.length-1;u++)a*=n[n.length-u-1],i=`
      int b${u} = index / ${a};
      index -= b${u} * ${a};
    `+i,c=`b${u}, `+c;return`
    ivec${n.length} getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));
      int index = resTexRC.x * ${s[1]} + resTexRC.y;

      ${i}

      int b = index / ${r};
      index -= b * ${r};

      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec${n.length}(${c});
    }
  `}function e4(n,e,t){if(t)return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      ${Eh(["r","c","d","d2"],n)}
      return ivec4(r, c, d, d2);
    }
  `;const s=Yr(["r","c","d","d2"],n);return`
    ivec4 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      ${s}
      return ivec4(r, c, d, d2);
    }
  `}function t4(n,e){const t=Yr(["r","c","d","d2","d3"],n);return`
    ivec5 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},
                             ${e[1]}));

      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec5 outShape = ivec5(r, c, d, d2, d3);
      return outShape;
    }
  `}function n4(n,e){const t=Yr(["r","c","d","d2","d3","d4"],n);return`
    ivec6 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
        vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;

      ${t}

      ivec6 result = ivec6(r, c, d, d2, d3, d4);
      return result;
    }
  `}function s4(n,e,t){const s=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(Ke(n,e))return t?`
      ivec2 getOutputCoords() {
        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));
      }
    `;const o=Math.ceil(n[1]/2);return t?`
    ivec2 getOutputCoords() {
      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));
      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(packedTexShape[0], packedTexShape[1]));

      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;
      int r = 2 * (index / texelsInLogicalRow);
      int c = imod(index, texelsInLogicalRow) * 2;

      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${s[0]}, ${s[1]}));

      int index = resTexRC.x * ${s[1]} + resTexRC.y;
      int r = 2 * (index / ${o});
      int c = imod(index, ${o}) * 2;

      return ivec2(r, c);
    }
  `}function o4(n,e,t){return Ke(n,e)?t?`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));
      }
    `:`
      ivec2 getOutputCoords() {
        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));
      }
    `:n[1]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(index, 0);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(index, 0);
      }
    `:n[0]===1?t?`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(outTexShape[0], outTexShape[1]));
        int index = resTexRC.x * outTexShape[1] + resTexRC.y;
        return ivec2(0, index);
      }
    `:`
      ivec2 getOutputCoords() {
        ivec2 resTexRC = ivec2(resultUV.yx *
                               vec2(${e[0]}, ${e[1]}));
        int index = resTexRC.x * ${e[1]} + resTexRC.y;
        return ivec2(0, index);
      }
    `:t?`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(outTexShape[0], outTexShape[1]));
      int index = resTexRC.x * outTexShape[1] + resTexRC.y;
      int r = index / outShape[1];
      int c = index - r * outShape[1];
      return ivec2(r, c);
    }
  `:`
    ivec2 getOutputCoords() {
      ivec2 resTexRC = ivec2(resultUV.yx *
                             vec2(${e[0]}, ${e[1]}));
      int index = resTexRC.x * ${e[1]} + resTexRC.y;
      int r = index / ${n[1]};
      int c = index - r * ${n[1]};
      return ivec2(r, c);
    }
  `}function Zr(n){return`offset${n}`}function r4(n){const e=n.name,t="get"+e.charAt(0).toUpperCase()+e.slice(1),s=xn();return`
    vec4 ${t}() {
      return ${s.texture2D}(${e}, halfCR);
    }
  `}function a4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`float ${s}() {return ${t};}`;const[o,r]=n.shapeInfo.texShape;if(o===1&&r===1)return`
      float ${s}() {
        return sampleTexture(${t}, halfCR);
      }
    `;const a=Zr(t);if(e)return`
    float ${s}() {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], ${a});
      return sampleTexture(${t}, uv);
    }
  `;const[i,c]=n.shapeInfo.texShape;return`
    float ${s}() {
      vec2 uv = uvFromFlat(${i}, ${c}, ${a});
      return sampleTexture(${t}, uv);
    }
  `}function i4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=n.shapeInfo.texShape,r=xn();if(e)return`
    vec4 ${s}(int index) {
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      vec2 uv = packedUVfrom1D(
        packedTexShape[0], packedTexShape[1], index);
      return ${r.texture2D}(${t}, uv);
    }
  `;const a=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`
    vec4 ${s}(int index) {
      vec2 uv = packedUVfrom1D(
        ${a[0]}, ${a[1]}, index);
      return ${r.texture2D}(${t}, uv);
    }
  `}function c4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1);if(n.shapeInfo.isUniform)return`
      float ${s}(int index) {
        ${ji(n)}
      }
    `;const o=n.shapeInfo.texShape,r=o[0],a=o[1];if(a===1&&r===1)return`
      float ${s}(int index) {
        return sampleTexture(${t}, halfCR);
      }
    `;const i=Zr(t);return a===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / float(${t}TexShape[0]));
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2(0.5, (float(index + ${i}) + 0.5) / ${r}.0);
        return sampleTexture(${t}, uv);
      }
    `:r===1?e?`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / float(${t}TexShape[1]), 0.5);
        return sampleTexture(${t}, uv);
      }
    `:`
      float ${s}(int index) {
        vec2 uv = vec2((float(index + ${i}) + 0.5) / ${a}.0, 0.5);
        return sampleTexture(${t}, uv);
      }
    `:e?`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${t}TexShape[0], ${t}TexShape[1], index + ${i});
      return sampleTexture(${t}, uv);
    }
  `:`
    float ${s}(int index) {
      vec2 uv = uvFromFlat(${r}, ${a}, index + ${i});
      return sampleTexture(${t}, uv);
    }
  `}function l4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,a=r[0],i=r[1],c=xn();if(r!=null&&Ke(t,r))return e?`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);

        return ${c.texture2D}(${s}, uv);
      }
    `:`
      vec4 ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${i}.0, ${a}.0);

        return ${c.texture2D}(${s}, uv);
      }
    `;if(e)return`
    vec4 ${o}(int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `;const u=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],l=Math.ceil(t[1]/2);return`
    vec4 ${o}(int row, int col) {
      vec2 uv = packedUVfrom2D(${l}, ${u[0]}, ${u[1]}, row, col);
      return ${c.texture2D}(${s}, uv);
    }
  `}function u4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape;if(r!=null&&Ke(t,r)){if(e)return`
      float ${o}(int row, int col) {
        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `;const h=r[0],p=r[1];return`
    float ${o}(int row, int col) {
      vec2 uv = (vec2(col, row) + halfCR) / vec2(${p}.0, ${h}.0);
      return sampleTexture(${s}, uv);
    }
  `}const{newShape:a,keptDims:i}=Wo(t),c=a;if(c.length<t.length){const h=qi(n,c),p=["row","col"];return`
      ${Hi(h,e)}
      float ${o}(int row, int col) {
        return ${o}(${Xi(p,i)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col) {
        int index = round(dot(vec2(row, col), vec2(${t[1]}, 1)));
        ${ji(n)}
      }
    `;const u=r[0],l=r[1],d=Zr(s);return l===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);
      return sampleTexture(${s}, uv);
    }
  `:u===1?e?`
      float ${o}(int row, int col) {
        float index = dot(vec3(row, col, ${d}), vec3(${s}Shape[1], 1, 1));
        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col) {
      float index = dot(vec3(row, col, ${d}), vec3(${t[1]}, 1, 1));
      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);
      return sampleTexture(${s}, uv);
    }
  `:e?`
      float ${o}(int row, int col) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${s}Shape[1] + col + ${d};
        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
        return sampleTexture(${s}, uv);
      }
    `:`
  float ${o}(int row, int col) {
    // Explicitly use integer operations as dot() only works on floats.
    int index = row * ${t[1]} + col + ${d};
    vec2 uv = uvFromFlat(${u}, ${l}, index);
    return sampleTexture(${s}, uv);
  }
`}function d4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=n.shapeInfo.texShape,a=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];if(t[0]===1){const h=t.slice(1),p=[1,2],f=qi(n,h),m=["b","row","col"];return`
        ${cv(f,e)}
        vec4 ${o}(int b, int row, int col) {
          return ${o}(${Xi(m,p)});
        }
      `}const i=xn();if(e)return`
    vec4 ${o}(int b, int row, int col) {
      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));
      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));
      vec2 uv = packedUVfrom3D(
        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `;const c=a[0],u=a[1],l=Math.ceil(t[2]/2),d=l*Math.ceil(t[1]/2);return`
    vec4 ${o}(int b, int row, int col) {
      vec2 uv = packedUVfrom3D(
        ${c}, ${u}, ${d}, ${l}, b, row, col);
      return ${i.texture2D}(${s}, uv);
    }
  `}function h4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[1]*t[2],a=t[2],{newShape:i,keptDims:c}=Wo(t),u=i;if(u.length<t.length){const m=qi(n,u),g=["row","col","depth"];return`
        ${Hi(m,e)}
        float ${o}(int row, int col, int depth) {
          return ${o}(${Xi(g,c)});
        }
      `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth) {
        int index = round(dot(vec3(row, col, depth),
                          vec3(${r}, ${a}, 1)));
        ${ji(n)}
      }
    `;const l=n.shapeInfo.texShape,d=l[0],h=l[1],p=n.shapeInfo.flatOffset;if(h===r&&p==null)return e?`
      float ${o}(int row, int col, int depth) {
        int stride1 = ${s}Shape[2];
        float texR = float(row);
        float texC = dot(vec2(col, depth), vec2(stride1, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
        float ${o}(int row, int col, int depth) {
          float texR = float(row);
          float texC = dot(vec2(col, depth), vec2(${a}, 1));
          vec2 uv = (vec2(texC, texR) + halfCR) /
                     vec2(${h}.0, ${d}.0);
          return sampleTexture(${s}, uv);
        }
      `;if(h===a&&p==null)return e?`
      float ${o}(int row, int col, int depth) {
        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));
        float texC = float(depth);
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
    float ${o}(int row, int col, int depth) {
      float texR = dot(vec2(row, col), vec2(${t[1]}, 1));
      float texC = float(depth);
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);
      return sampleTexture(${s}, uv);
    }
  `;const f=Zr(s);return e?`
    float ${o}(int row, int col, int depth) {
      // Explicitly use integer operations as dot() only works on floats.
      int stride0 = ${s}Shape[1] * ${s}Shape[2];
      int stride1 = ${s}Shape[2];
      int index = row * stride0 + col * stride1 + depth + ${f};
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);
      return sampleTexture(${s}, uv);
    }
    `:`
      float ${o}(int row, int col, int depth) {
        // Explicitly use integer operations as dot() only works on floats.
        int index = row * ${r} + col * ${a} + depth + ${f};
        vec2 uv = uvFromFlat(${d}, ${h}, index);
        return sampleTexture(${s}, uv);
      }
  `}function p4(n,e){const t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=xn();if(e)return`
    vec4 ${s}(int b2, int b, int row, int col) {
      int valuesPerRow = int(ceil(float(${t}Shape[3]) / 2.0));
      int texelsInBatch = valuesPerRow * int(ceil(float(${t}Shape[2]) / 2.0));
      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);
      texelsInBatch *= ${t}Shape[1];
      index = b2 * texelsInBatch + index;
      ivec2 packedTexShape = ivec2(ceil(float(${t}TexShape[0]) / 2.0), ceil(float(${t}TexShape[1]) / 2.0));
      int texR = index / packedTexShape[1];
      int texC = index - texR * packedTexShape[1];
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${o.texture2D}(${t}, uv);
    }
  `;const r=n.shapeInfo.logicalShape,a=r.length,i=n.shapeInfo.texShape,c=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)],u=c[0],l=c[1],d=Math.ceil(r[a-1]/2);let h=d*Math.ceil(r[a-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let m=2;m<a-1;m++)p=`int b${m}, `+p,h*=r[a-m-1],f=`b${m} * ${h} + `+f;return`
    vec4 ${s}(${p}) {
      int index = ${f};
      int texR = index / ${l};
      int texC = index - texR * ${l};
      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${l}, ${u});
      return ${o.texture2D}(${t}, uv);
    }
  `}function f4(n,e){const t=n.shapeInfo.logicalShape,s=n.name,o="get"+s.charAt(0).toUpperCase()+s.slice(1),r=t[3],a=t[2]*r,i=t[1]*a,{newShape:c,keptDims:u}=Wo(t);if(c.length<t.length){const x=qi(n,c),y=["row","col","depth","depth2"];return`
      ${Hi(x,e)}
      float ${o}(int row, int col, int depth, int depth2) {
        return ${o}(${Xi(y,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${o}(int row, int col, int depth, int depth2) {
        int index = round(dot(vec4(row, col, depth, depth2),
                          vec4(${i}, ${a}, ${r}, 1)));
        ${ji(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(p===i&&l==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        ${f}
        ${m}
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(stride1, stride2, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = float(row);
        float texC =
            dot(vec3(col, depth, depth2),
                vec3(${a}, ${r}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;if(p===r&&l==null)return e?`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${s}TexShape[1], ${s}TexShape[0]);
        return sampleTexture(${s}, uv);
      }
    `:`
      float ${o}(int row, int col, int depth, int depth2) {
        float texR = dot(vec3(row, col, depth),
                         vec3(${t[1]*t[2]}, ${t[2]}, 1));
        float texC = float(depth2);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${s}, uv);
      }
    `;const b=Zr(s);return e?`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      ${f}
      ${m}
      ${g}
      int index = row * stride0 + col * stride1 +
          depth * stride2 + depth2;
      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${b});
      return sampleTexture(${s}, uv);
    }
  `:`
    float ${o}(int row, int col, int depth, int depth2) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} +
          depth * ${r} + depth2;
      vec2 uv = uvFromFlat(${h}, ${p}, index + ${b});
      return sampleTexture(${s}, uv);
    }
  `}function m4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),o=e[4],r=e[3]*o,a=e[2]*r,i=e[1]*a,{newShape:c,keptDims:u}=Wo(e);if(c.length<e.length){const m=qi(n,c),g=["row","col","depth","depth2","depth3"];return`
      ${Hi(m)}
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        return ${s}(${Xi(g,u)});
      }
    `}if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float index = dot(
          vec4(row, col, depth, depth2),
          vec4(${i}, ${a}, ${r}, ${o})) +
          depth3;
        ${ji(n)}
      }
    `;const l=n.shapeInfo.flatOffset,d=n.shapeInfo.texShape,h=d[0],p=d[1];if(p===i&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
                         vec4(${a}, ${r}, ${o}, 1));
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(p===o&&l==null)return`
      float ${s}(int row, int col, int depth, int depth2, int depth3) {
        float texR = dot(
          vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]},
               ${e[2]*e[3]}, ${e[3]}, 1));
        int texC = depth3;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${p}.0, ${h}.0);
        return sampleTexture(${t}, uv);
      }
    `;const f=Zr(t);return`
    float ${s}(int row, int col, int depth, int depth2, int depth3) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${i} + col * ${a} + depth * ${r} +
          depth2 * ${o} + depth3 + ${f};
      vec2 uv = uvFromFlat(${h}, ${p}, index);
      return sampleTexture(${t}, uv);
    }
  `}function g4(n){const e=n.shapeInfo.logicalShape,t=n.name,s="get"+t.charAt(0).toUpperCase()+t.slice(1),{newShape:o,keptDims:r}=Wo(e);if(o.length<e.length){const g=qi(n,o),b=["row","col","depth","depth2","depth3","depth4"];return`
      ${Hi(g)}
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        return ${s}(${Xi(b,r)});
      }
    `}const a=e[5],i=e[4]*a,c=e[3]*i,u=e[2]*c,l=e[1]*u;if(n.shapeInfo.isUniform)return`
      float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
        int index = round(dot(
          vec4(row, col, depth, depth2),
          vec4(${l}, ${u}, ${c}, ${i})) +
          dot(
            vec2(depth3, depth4),
            vec2(${a}, 1)));
        ${ji(n)}
      }
    `;const d=n.shapeInfo.flatOffset,h=n.shapeInfo.texShape,p=h[0],f=h[1];if(f===l&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        int texR = row;
        float texC = dot(vec4(col, depth, depth2, depth3),
          vec4(${u}, ${c}, ${i}, ${a})) +
               float(depth4);
        vec2 uv = (vec2(texC, texR) + halfCR) /
                   vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;if(f===a&&d==null)return`
      float ${s}(int row, int col, int depth,
                    int depth2, int depth3, int depth4) {
        float texR = dot(vec4(row, col, depth, depth2),
          vec4(${e[1]*e[2]*e[3]*e[4]},
               ${e[2]*e[3]*e[4]},
               ${e[3]*e[4]},
               ${e[4]})) + float(depth3);
        int texC = depth4;
        vec2 uv = (vec2(texC, texR) + halfCR) /
                  vec2(${f}.0, ${p}.0);
        return sampleTexture(${t}, uv);
      }
    `;const m=Zr(t);return`
    float ${s}(int row, int col, int depth,
                  int depth2, int depth3, int depth4) {
      // Explicitly use integer operations as dot() only works on floats.
      int index = row * ${l} + col * ${u} + depth * ${c} +
          depth2 * ${i} + depth3 * ${a} + depth4 + ${m};
      vec2 uv = uvFromFlat(${p}, ${f}, index);
      return sampleTexture(${t}, uv);
    }
  `}function ji(n){const e=n.name,t=L(n.shapeInfo.logicalShape);return t<2?`return ${e};`:`
    for (int i = 0; i < ${t}; i++) {
      if (i == index) {
        return ${e}[i];
      }
    }
  `}function b4(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),o="get"+s+"AtOutCoords",r=n.shapeInfo.logicalShape.length,a=e.logicalShape.length,i=iv(n.shapeInfo.logicalShape,e.logicalShape),c=dt(a),u=a-r;let l;const d=["x","y","z","w","u","v"];r===0?l="":a<2&&i.length>=1?l="coords = 0;":l=i.map(x=>`coords.${d[x+u]} = 0;`).join(`
`);let h="";a<2&&r>0?h="coords":h=n.shapeInfo.logicalShape.map((x,y)=>`coords.${d[y+u]}`).join(", ");let p="return outputValue;";const m=L(n.shapeInfo.logicalShape)===1,b=L(e.logicalShape)===1;if(r===1&&!m&&!b)p=`
      return vec4(outputValue.xy, outputValue.xy);
    `;else if(m&&!b)a===1?p=`
        return vec4(outputValue.x, outputValue.x, 0., 0.);
      `:p=`
        return vec4(outputValue.x);
      `;else if(i.length){const x=r-2,y=r-1;i.indexOf(x)>-1&&i.indexOf(y)>-1?p="return vec4(outputValue.x);":i.indexOf(x)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":i.indexOf(y)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}return`
    vec4 ${o}() {
      ${c} coords = getOutputCoords();
      ${l}
      vec4 outputValue = get${s}(${h});
      ${p}
    }
  `}function x4(n,e){const t=n.name,s=t.charAt(0).toUpperCase()+t.slice(1),o="get"+s+"AtOutCoords",r=e.texShape,a=n.shapeInfo.texShape,i=n.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!n.shapeInfo.isUniform&&i===c&&n.shapeInfo.flatOffset==null&&Ke(a,r))return`
      float ${o}() {
        return sampleTexture(${t}, resultUV);
      }
    `;const u=dt(c),l=iv(n.shapeInfo.logicalShape,e.logicalShape),d=c-i;let h;const p=["x","y","z","w","u","v"];i===0?h="":c<2&&l.length>=1?h="coords = 0;":h=l.map(m=>`coords.${p[m+d]} = 0;`).join(`
`);let f="";return c<2&&i>0?f="coords":f=n.shapeInfo.logicalShape.map((m,g)=>`coords.${p[g+d]}`).join(", "),`
    float ${o}() {
      ${u} coords = getOutputCoords();
      ${h}
      return get${s}(${f});
    }
  `}function dt(n){if(n<=1)return"int";if(n===2)return"ivec2";if(n===3)return"ivec3";if(n===4)return"ivec4";if(n===5)return"ivec5";if(n===6)return"ivec6";throw Error(`GPU for rank ${n} is not yet supported`)}function qg(n,e,t){const{newShape:s,keptDims:o}=Wo(e),r=e.length,a=n&&r===3&&e[0]===1,i=a?e.slice(1):s,c=!n&&r>1&&!Ke(e,t)&&s.length<r||a;return{useSqueezeShape:c,uniformShape:c?i:e,keptDims:o}}function qi(n,e){const t=JSON.parse(JSON.stringify(n));return t.shapeInfo.logicalShape=e,t}function Xi(n,e){return e.map(t=>n[t]).join(", ")}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y4(n,e,t,s){const o=t.map((l,d)=>{const h={logicalShape:l.shape,texShape:l.isUniform?null:l.texData.texShape,isUniform:l.isUniform,isPacked:l.isUniform?!1:l.texData.isPacked,flatOffset:null};return l.texData!=null&&l.texData.slice!=null&&l.texData.slice.flatOffset>0&&(h.flatOffset=l.texData.slice.flatOffset),{name:e.variableNames[d],shapeInfo:h}}),r=o.map(l=>l.shapeInfo),a={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},i=LW(o,a,e),c=hW(n.gl,i),u=n.createProgram(c);return H().get("ENGINE_COMPILE_ONLY")?{program:e,fragmentShader:c,source:i,webGLProgram:u,inShapeInfos:r,outShapeInfo:a,uniformLocations:null,customUniformLocations:null,infLoc:null,nanLoc:null,inShapesLocations:null,inTexShapesLocations:null,outShapeLocation:null,outShapeStridesLocation:null,outTexShapeLocation:null}:Object.assign({program:e,fragmentShader:c,source:i,webGLProgram:u,inShapeInfos:r,outShapeInfo:a},uv(n,e,u))}function uv(n,e,t){const s={},o={},r={},a=[];let i,c,u,l=null,d=null;d=n.getUniformLocation(t,"NAN",!1),H().getNumber("WEBGL_VERSION")===1&&(l=n.getUniformLocation(t,"INFINITY",!1));const h=!1;for(let p=0;p<e.variableNames.length;p++){const f=e.variableNames[p];s[f]=n.getUniformLocation(t,f,h),s[`offset${f}`]=n.getUniformLocation(t,`offset${f}`,h),e.enableShapeUniforms&&(o[`${f}Shape`]=n.getUniformLocation(t,`${f}Shape`,h),r[`${f}TexShape`]=n.getUniformLocation(t,`${f}TexShape`,h))}return e.enableShapeUniforms&&(i=n.getUniformLocation(t,"outShape",h),u=n.getUniformLocation(t,"outShapeStrides",h),c=n.getUniformLocation(t,"outTexShape",h)),e.customUniforms&&e.customUniforms.forEach((p,f)=>{a[f]=n.getUniformLocation(t,p.name,h)}),{uniformLocations:s,customUniformLocations:a,infLoc:l,nanLoc:d,inShapesLocations:o,inTexShapesLocations:r,outShapeLocation:i,outShapeStridesLocation:u,outTexShapeLocation:c}}function Gx(n,e){if(n.length!==e.length)throw Error(`Binary was compiled with ${n.length} inputs, but was executed with ${e.length} inputs`);n.forEach((t,s)=>{const o=t.logicalShape,r=e[s],a=r.shape;if(!Ke(o,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${o} and ${a} must match`);if(t.isUniform&&r.isUniform)return;const i=t.texShape,c=r.isUniform?null:r.texData.texShape;if(!Ke(i,c))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${c} must match`)})}function w4(n,e,t,s,o){e.program.enableShapeUniforms||(Gx(e.inShapeInfos,t),Gx([e.outShapeInfo],[s]));const r=s.texData.texture,a=s.texData.texShape;s.texData.isPacked?n.setOutputPackedMatrixTexture(r.texture,a[0],a[1]):n.setOutputMatrixTexture(r.texture,a[0],a[1]),n.setProgram(e.webGLProgram),H().getNumber("WEBGL_VERSION")===1&&e.infLoc!==null&&n.gl.uniform1f(e.infLoc,1/0),e.nanLoc!==null&&n.gl.uniform1f(e.nanLoc,NaN),t.forEach((c,u)=>{const l=e.program.variableNames[u],d=e.uniformLocations[l],h=e.uniformLocations[`offset${l}`],p=e.inShapesLocations[`${l}Shape`],f=e.inTexShapesLocations[`${l}TexShape`];if(p){const{uniformShape:m}=qg(e.program.packedInputs,c.shape,c.texData.texShape);switch(m.length){case 1:n.gl.uniform1iv(p,new Int32Array(m));break;case 2:n.gl.uniform2iv(p,new Int32Array(m));break;case 3:n.gl.uniform3iv(p,new Int32Array(m));break;case 4:n.gl.uniform4iv(p,new Int32Array(m));break}}if(f&&n.gl.uniform2i(f,c.texData.texShape[0],c.texData.texShape[1]),d!=null){if(c.isUniform){if(L(c.shape)<2)n.gl.uniform1f(d,c.uniformValues[0]);else{let m=c.uniformValues;m instanceof Float32Array||(m=new Float32Array(m)),n.gl.uniform1fv(d,m)}return}c.texData.slice!=null&&h!=null&&n.gl.uniform1i(h,c.texData.slice.flatOffset),n.setInputMatrixTexture(c.texData.texture.texture,d,u)}});const i=e.outShapeLocation;if(i)switch(s.shape.length){case 1:n.gl.uniform1iv(i,new Int32Array(s.shape));break;case 2:n.gl.uniform2iv(i,new Int32Array(s.shape));break;case 3:n.gl.uniform3iv(i,new Int32Array(s.shape));break;case 4:n.gl.uniform4iv(i,new Int32Array(s.shape));break}if(e.outShapeStridesLocation){const c=me(s.shape);switch(s.shape.length){case 2:n.gl.uniform1iv(e.outShapeStridesLocation,new Int32Array(c));break;case 3:n.gl.uniform2iv(e.outShapeStridesLocation,new Int32Array(c));break;case 4:n.gl.uniform3iv(e.outShapeStridesLocation,new Int32Array(c));break}}e.outTexShapeLocation&&n.gl.uniform2i(e.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),e.program.customUniforms&&o&&e.program.customUniforms.forEach((c,u)=>{const l=e.customUniformLocations[u],d=o[u];if(c.type==="float")n.gl.uniform1fv(l,d);else if(c.type==="vec2")n.gl.uniform2fv(l,d);else if(c.type==="vec3")n.gl.uniform3fv(l,d);else if(c.type==="vec4")n.gl.uniform4fv(l,d);else if(c.type==="int")n.gl.uniform1iv(l,d);else if(c.type==="ivec2")n.gl.uniform2iv(l,d);else if(c.type==="ivec3")n.gl.uniform3iv(l,d);else if(c.type==="ivec4")n.gl.uniform4iv(l,d);else throw Error(`uniform type ${c.type} is not supported yet.`)}),n.executeProgram()}function I4(n,e,t){let s="";e.concat(t).forEach(a=>{const i=a.texData!=null&&a.texData.slice!=null&&a.texData.slice.flatOffset>0;if(n.enableShapeUniforms&&!a.isUniform){const c=a.texData.texShape,{useSqueezeShape:u,uniformShape:l,keptDims:d}=qg(n.packedInputs,a.shape,c);let h="",p="",f="";if(l.length===1&&n.packedInputs){const I=[Math.ceil(c[0]/2),Math.ceil(c[1]/2)];h=`${I[0]>1}_${I[1]>1}`}else if(l.length===2&&!n.packedInputs)p=`${l[0]>1}_${l[1]>1}`;else if(l.length>2&&!n.packedInputs){const I=me(l);f=`${I[0]===c[1]}_${I[I.length-1]===c[1]}`}const m=a.shape.length,g=l.length===2&&Ke(a.shape,c),b=L(a.shape)===1,x=Na(a.shape,t.shape),y=!n.packedInputs&&m===t.shape.length&&Ke(c,t.texData.texShape),w=n.packedInputs||l.length>2?"":`${c[0]>1}_${c[1]>1}`;s+=`${m}_${y}_${u?d:""}_${l.length}_${b}_${x}_${g}_${h}_${p}_${f}_${w}_${i}`}else{const c=a.isUniform?"uniform":a.texData.texShape;s+=`${a.shape}_${c}_${i}`}});const o=n.userCode;let r=n.constructor.name;return r+="_"+s+"_"+o+`${H().getNumber("WEBGL_VERSION")}`,r}function yn(n){return H().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&n<=4}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class k4{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=Tc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=xn();this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Eh(["r","c","d"],e):Yr(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getA(rc.x, rc.y, rc.z);
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class v4{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=Tc.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=xn();this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length),this.userCode=`
      ivec3 outCoordsFromFlatIndex(int index) {
        ${this.enableShapeUniforms?Eh(["r","c","d"],e):Yr(["r","c","d"],e)}
        return ivec3(r, c, d);
      }

      void main() {
        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));
        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);

        vec4 result = vec4(0.);

        for (int i=0; i<4; i++) {
          int flatIndex = index + i;
          ivec3 rc = outCoordsFromFlatIndex(flatIndex);
          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $4{constructor(e){this.variableNames=["A"],this.outTexUsage=jn.DOWNLOAD;const t=xn();this.outputShape=e,this.userCode=`
      ${av}

      void main() {
        float x = getAAtOutCoords();
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class C4{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=jn.DOWNLOAD;const t=xn();this.outputShape=e,this.userCode=`
      ${av}

      void main() {
        ivec3 coords = getOutputCoords();
        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));
        ${t.output} = encode_float(x);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S4={R:0,G:1,B:2,A:3};class Hx{constructor(e,t=!1,s="RGBA"){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const o=xn();this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)");let a="";for(let i=0;i<s.length;i++){const c=s[i];a+=`
          if(offset == ${i}) {
            result = values[${S4[c]}];
          }`}this.userCode=`
      ${this.enableShapeUniforms?jg():Hg(e)}

      void main() {
        ivec3 coords = getOutputCoords();
        int flatIndex = getFlatIndex(coords);
        float result = 0.;
        int offset = imod(flatIndex, ${s.length});

        flatIndex = idiv(flatIndex, ${s.length}, 1.);

        int r = flatIndex / texShape[1];
        if (r < texShape[0]) {
          int c = imod(flatIndex, texShape[1]);
          vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
          vec4 values = ${o.texture2D}(A, uv);
          ${a}
        }
        ${o.output} = vec4(${r}, 0., 0., 0.);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N4{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const s=xn();this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length);let o="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let a=0;a<=1;a++)for(let i=0;i<=1;i++){const c=a*2+i;o+=`
          localCoords = coords;
          if(localCoords[2] + ${i} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {
          localCoords[2] += ${i};
          if (localCoords[1] + ${a} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {
            localCoords[1] += ${a};

            flatIndex = getFlatIndex(localCoords);
            offset = imod(flatIndex, 4);

            flatIndex = idiv(flatIndex, 4, 1.);

            int r = flatIndex / texShape[1];
            int c = imod(flatIndex, texShape[1]);
            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);
            values = ${s.texture2D}(A, uv);

            if (offset == 0) {
              result[${c}] = values[0];
            } else if (offset == 1) {
              result[${c}] = values[1];
            } else if (offset == 2) {
              result[${c}] = values[2];
            } else {
              result[${c}] = values[3];
            }
          }
        }
        `}this.userCode=`
        ${this.enableShapeUniforms?jg():Hg(e)}

        void main() {
          ivec3 coords = getOutputCoords();

          vec4 result = vec4(0.);
          int flatIndex, r, c, offset;
          ivec3 localCoords;
          vec2 uv;
          vec4 values;

          ${o}

          ${s.output} = ${r};
        }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function T4(n){const e=xn(),t=`${e.version}
    precision highp float;
    ${e.attribute} vec3 clipSpacePos;
    ${e.attribute} vec2 uv;
    ${e.varyingVs} vec2 resultUV;

    void main() {
      gl_Position = vec4(clipSpacePos, 1);
      resultUV = uv;
    }`;return dW(n,t)}function E4(n){const e=new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]);return gW(n,e)}function _4(n){const e=new Uint16Array([0,1,2,2,1,3]);return bW(n,e)}function nu(n,e,t,s,o,r){yW(e,t);const a=xW(n),i=n.TEXTURE_2D;return pe(n,()=>n.bindTexture(i,a)),pe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE)),pe(n,()=>n.texParameteri(i,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE)),pe(n,()=>n.texParameteri(i,n.TEXTURE_MIN_FILTER,n.NEAREST)),pe(n,()=>n.texParameteri(i,n.TEXTURE_MAG_FILTER,n.NEAREST)),H().getNumber("WEBGL_VERSION")===1?pe(n,()=>n.texImage2D(i,0,s,e,t,0,o,r,null)):pe(n,()=>n.texStorage2D(i,1,s,e,t)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null)),{texture:a,texShape:[t,e]}}function dv(n){return n.internalFormatFloat}function R4(n,e,t,s){const[o,r]=eu(e,t);return nu(n,o,r,dv(s),s.textureFormatFloat,n.FLOAT)}function hv(n){return n.internalFormatHalfFloat}function A4(n,e,t,s){const[o,r]=eu(e,t);return nu(n,o,r,hv(s),s.textureFormatFloat,s.textureTypeHalfFloat)}function pv(n){return n.downloadTextureFormat}function D4(n,e,t,s){const[o,r]=eu(e,t);return nu(n,o,r,pv(s),n.RGBA,n.UNSIGNED_BYTE)}function fv(n){return n.internalFormatPackedFloat}function F4(n,e,t,s){const[o,r]=Gi(e,t);return nu(n,o,r,fv(s),n.RGBA,n.FLOAT)}function mv(n){return n.internalFormatPackedHalfFloat}function O4(n,e,t,s){const[o,r]=Gi(e,t);return nu(n,o,r,mv(s),n.RGBA,s.textureTypeHalfFloat)}function M4(n,e,t){return pe(n,()=>n.bindBuffer(n.ARRAY_BUFFER,t)),Vx(n,e,"clipSpacePos",t,3,20,0)&&Vx(n,e,"uv",t,2,20,12)}function L4(n,e,t,s,o,r){pe(n,()=>n.bindTexture(n.TEXTURE_2D,e));let a,i,c;o instanceof Uint8Array?(a=new Uint8Array(t*s*4),i=n.UNSIGNED_BYTE,c=n.RGBA):(a=new Float32Array(t*s*4),i=n.FLOAT,c=r.internalFormatPackedFloat),a.set(o),H().getNumber("WEBGL_VERSION")===2?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t,s,n.RGBA,i,a)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,c,t,s,0,n.RGBA,i,a)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function P4(n,e,t){pe(n,()=>n.bindTexture(n.TEXTURE_2D,e)),t.data instanceof Uint8Array?H().getNumber("WEBGL_VERSION")===2?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,t.width,t.height,n.RGBA,n.UNSIGNED_BYTE,t.data)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,t.width,t.height,0,n.RGBA,n.UNSIGNED_BYTE,t.data)):H().getNumber("WEBGL_VERSION")===2?pe(n,()=>n.texSubImage2D(n.TEXTURE_2D,0,0,0,n.RGBA,n.UNSIGNED_BYTE,t)):pe(n,()=>n.texImage2D(n.TEXTURE_2D,0,n.RGBA,n.RGBA,n.UNSIGNED_BYTE,t)),pe(n,()=>n.bindTexture(n.TEXTURE_2D,null))}function B4(n,e,t,s){const o=n.createBuffer();pe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,o));const i=4*4*e*t;return pe(n,()=>n.bufferData(n.PIXEL_PACK_BUFFER,i,n.STREAM_READ)),pe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,0)),pe(n,()=>n.bindBuffer(n.PIXEL_PACK_BUFFER,null)),o}function z4(n,e,t){const s=n,o=new Float32Array(t);return s.bindBuffer(s.PIXEL_PACK_BUFFER,e),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,o),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),o}function V4(n,e,t,s){const[o,r]=eu(e,t),a=4,i=new Uint8Array(oW(e*t,a));return pe(n,()=>n.readPixels(0,0,o,r,s.downloadTextureFormat,n.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}function W4(n,e,t,s,o,r,a,i){const c=n,u=new Float32Array(rW(r,a));return c.bindBuffer(c.PIXEL_PACK_BUFFER,e),c.getBufferSubData(c.PIXEL_PACK_BUFFER,0,u),c.bindBuffer(c.PIXEL_PACK_BUFFER,null),u}function U4(n,e,t){const s=new Float32Array(e*t*4);return pe(n,()=>n.readPixels(0,0,t,e,n.RGBA,n.FLOAT,s)),s}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sp{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.itemsToPoll=[];const t=H().getNumber("WEBGL_VERSION");if(e!=null?(this.gl=e,tW(t,e)):this.gl=Es(t),e=this.gl,H().getNumber("WEBGL_VERSION")===2){const r=e;this.createVertexArray=()=>pe(r,()=>r.createVertexArray()),this.bindVertexArray=a=>pe(r,()=>r.bindVertexArray(a)),this.deleteVertexArray=a=>pe(r,()=>r.deleteVertexArray(a)),this.getVertexArray=()=>pe(r,()=>r.getParameter(r.VERTEX_ARRAY_BINDING))}else if(e!=null){const r=e.getExtension("OES_vertex_array_object");if(r==null)throw new Error("All WebGL1 implementations are expected to offer OES_vertex_array_object.");this.createVertexArray=()=>pe(e,()=>r.createVertexArrayOES()),this.bindVertexArray=a=>pe(e,()=>r.bindVertexArrayOES(a)),this.deleteVertexArray=a=>pe(e,()=>r.deleteVertexArrayOES(a)),this.getVertexArray=()=>pe(e,()=>e.getParameter(r.VERTEX_ARRAY_BINDING_OES))}let s="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(this.parallelCompilationExtension=this.gl.getExtension("KHR_parallel_shader_compile"),H().getNumber("WEBGL_VERSION")===1){const r="OES_texture_float",a="OES_texture_half_float";if(this.textureFloatExtension=Eu(this.gl,r),ls(this.gl,a))this.textureHalfFloatExtension=Eu(this.gl,a);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(s),ls(this.gl,o))this.colorBufferHalfFloatExtension=Eu(this.gl,o);else if(H().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(s="EXT_color_buffer_float",ls(this.gl,s))this.colorBufferFloatExtension=this.gl.getExtension(s);else if(ls(this.gl,o))this.colorBufferHalfFloatExtension=this.gl.getExtension(o);else throw new Error("GL context does not support color renderable floats");this.vertexBuffer=E4(this.gl),this.indexBuffer=_4(this.gl),this.framebuffer=wW(this.gl),this.textureConfig=Gg(this.gl,this.textureHalfFloatExtension)}get debug(){return H().getBool("DEBUG")}dispose(){if(this.disposed)return;this.program!=null&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),this.outputTexture!=null&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;pe(e,()=>e.finish()),pe(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),pe(e,()=>e.deleteFramebuffer(this.framebuffer)),pe(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),pe(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),pe(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),R4(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),A4(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),D4(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),P4(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,s,o){this.throwIfDisposed(),L4(this.gl,e,t,s,o,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),O4(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),F4(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(Wx(this.gl,this.framebuffer),this.outputTexture=null),pe(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,s){return this.downloadMatrixDriver(e,()=>V4(this.gl,t,s,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,s,o,r,a){return W4(this.gl,e,t,s,o,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return z4(this.gl,e,t)}createBufferFromTexture(e,t,s){this.bindTextureToFrameBuffer(e);const o=B4(this.gl,t,s,this.textureConfig);return this.unbindTextureToFrameBuffer(),o}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,s;if(H().getBool("WEBGL_FENCE_API_ENABLED")){const o=e,r=o.fenceSync(o.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),s=()=>{const a=o.clientWaitSync(r,0,0);return a===o.ALREADY_SIGNALED||a===o.CONDITION_SATISFIED},t=r}else H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),s=()=>this.isQueryAvailable(t,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):s=()=>!0;return{query:t,isFencePassed:s}}downloadMatrixFromPackedTexture(e,t,s){return this.downloadMatrixDriver(e,()=>U4(this.gl,t,s))}createProgram(e){this.throwIfDisposed();const t=this.gl;this.vertexShader==null&&(this.vertexShader=T4(t));const s=fW(t);pe(t,()=>t.attachShader(s,this.vertexShader)),pe(t,()=>t.attachShader(s,e)),mW(t,s);let o;return o=Object.assign(s,{vao:this.createVertexArray()}),this.bindVertexArray(o.vao),pe(t,()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,this.indexBuffer)),console.assert(M4(t,o,this.vertexBuffer),"gpgpu_util.bindVertexProgramAttributeStreams not fully successful."),this.debug&&Qh(t,o),this.setProgram(o),o}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),e!=null&&(pe(this.gl,()=>this.gl.deleteProgram(e)),this.deleteVertexArray(e.vao))}setProgram(e){this.throwIfDisposed(),this.program=e,this.program!=null&&(this.bindVertexArray(this.program.vao),this.debug&&Qh(this.gl,this.program)),pe(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,s=!0){return this.throwIfDisposed(),s?kW(this.gl,e,t):vW(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),pe(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,s){this.throwIfDisposed(),this.throwIfNoProgram(),$W(this.gl,e,t,s)}setOutputMatrixTexture(e,t,s){this.setOutputMatrixTextureDriver(e,s,t)}setOutputPackedMatrixTexture(e,t,s){this.throwIfDisposed();const[o,r]=Gi(t,s);this.setOutputMatrixTextureDriver(e,o,r)}setOutputMatrixWriteRegion(e,t,s,o){this.setOutputMatrixWriteRegionDriver(s,e,o,t)}setOutputPackedMatrixWriteRegion(e,t,s,o){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){this.program!=null&&Qh(this.gl,this.program),_u(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;if(this.debug){const t=this.getVertexArray();console.assert(t===this.program.vao,"VAO changed between setProgram and executeProgram!"),this.debugValidate()}pe(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),pe(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return this.disjointQueryTimerExtension==null&&(this.disjointQueryTimerExtension=Eu(this.gl,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=s.createQuery();return s.beginQuery(o.TIME_ELAPSED_EXT,r),r}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")===2){const t=this.gl,s=this.getQueryTimerExtensionWebGL2();t.endQuery(s.TIME_ELAPSED_EXT);return}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await _b(()=>this.disposed||this.isQueryAvailable(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(t===0)return null;if(t===2){const s=this.gl;return s.getQueryParameter(e,s.QUERY_RESULT)/1e6}else{const s=this.getQueryTimerExtensionWebGL1();return s.getQueryObjectEXT(e,s.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(t===0)return!0;if(t===2){const s=this.gl,o=this.getQueryTimerExtensionWebGL2(),r=s.getQueryParameter(e,s.QUERY_RESULT_AVAILABLE);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(o.GPU_DISJOINT_EXT)),r&&!this.disjoint}else{const s=this.getQueryTimerExtensionWebGL1(),o=s.getQueryObjectEXT(e,s.QUERY_RESULT_AVAILABLE_EXT);return this.disjoint==null&&(this.disjoint=this.gl.getParameter(s.GPU_DISJOINT_EXT)),o&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=G4(this.itemsToPoll.map(t=>t.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:s}=this.itemsToPoll[t];s()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){if(this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1)return;let s;"setTimeoutCustom"in H().platform&&(s=H().platform.setTimeoutCustom.bind(H().platform)),_b(()=>(this.pollItems(),this.itemsToPoll.length===0),()=>0,null,s)}bindTextureToFrameBuffer(e){this.throwIfDisposed(),ep(this.gl,e,this.framebuffer),this.debug&&_u(this.gl)}unbindTextureToFrameBuffer(){this.outputTexture!=null?(ep(this.gl,this.outputTexture,this.framebuffer),this.debug&&_u(this.gl)):Wx(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const s=t();return this.unbindTextureToFrameBuffer(),s}setOutputMatrixTextureDriver(e,t,s){this.throwIfDisposed();const o=this.gl;ep(o,e,this.framebuffer),this.debug&&_u(o),this.outputTexture=e,pe(o,()=>o.viewport(0,0,t,s)),pe(o,()=>o.scissor(0,0,t,s))}setOutputMatrixWriteRegionDriver(e,t,s,o){this.throwIfDisposed(),pe(this.gl,()=>this.gl.scissor(e,t,s,o))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(this.program==null)throw new Error("No GPU program is currently set.")}}function G4(n){let e=0;for(;e<n.length&&n[e]();++e);return e-1}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const{addImpl:H4,bincountImpl:gv,bincountReduceImpl:j4,castImpl:q4,ceilImpl:X4,concatImpl:K4,equalImpl:Y4,expImpl:Z4,expm1Impl:J4,floorImpl:Q4,gatherNdImpl:eU,gatherV2Impl:tU,greaterImpl:nU,greaterEqualImpl:sU,lessImpl:oU,lessEqualImpl:rU,linSpaceImpl:aU,logImpl:iU,maxImpl:cU,maximumImpl:lU,minimumImpl:uU,multiplyImpl:dU,negImpl:hU,notEqualImpl:pU,prodImpl:fU,raggedGatherImpl:mU,raggedRangeImpl:gU,raggedTensorToTensorImpl:bU,rangeImpl:xU,rsqrtImpl:yU,scatterImpl:wU,sigmoidImpl:IU,simpleAbsImpl:bv,sliceImpl:kU,sparseFillEmptyRowsImpl:vU,sparseReshapeImpl:$U,sparseSegmentReductionImpl:xv,sqrtImpl:CU,stridedSliceImpl:SU,stringNGramsImpl:NU,stringSplitImpl:TU,stringToHashBucketFastImpl:EU,subImpl:_U,tileImpl:RU,topKImpl:AU,transposeImpl:Xg,uniqueImpl:DU}=B3;/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function yv(n,e){return["x","y","z","w","u","v"].slice(0,e).map(t=>`${n}.${t}`)}function pn(n,e){return e===1?[n]:yv(n,e)}function FU(n,e){if(n===1)return"rc";let t="";for(let s=0;s<n;s++)t+=e[s],s<n-1&&(t+=",");return t}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OU{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=yn(this.outputShape.length),this.rank===0)this.userCode=`
        void main() {
          setOutput(vec4(getA(), 0., 0., 0.));
        }
      `;else{const t=pn("rc",this.rank),s=dt(this.rank),o=this.getOutOfBoundsCondition(t),r=this.getSetup(t),a=this.getOutput(t);this.userCode=`
        void main() {
          ${s} rc = getOutputCoords();

          if(${o}) {
            setOutput(vec4(0));
          } else {
            ${r}

            setOutput(vec4(${a}));
          }
        }
      `}}getSourceCoordsArr(e){const t=[];for(let s=0;s<=1;s++)for(let o=0;o<=1;o++){let r=`${s===0?"r":"rp1"}, ${o===0?"c":"cp1"}`;for(let a=2;a<this.rank;a++)r=`${e[e.length-1-a]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(this.rank===1)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let s=this.rank-2;s<this.rank;s++)t+=`${e[s]} >= ${this.enableShapeUniforms?`outShape[${s}]`:this.outputShape[s]}`,s<this.rank-1&&(t+="||");return t}getSetup(e){if(this.rank===1)return"";const t=e.slice(-2),s=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],o=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`
      int r = ${t[0]};
      int c = ${t[1]};
      int rp1 = r + 1;
      int cp1 = c + 1;

      bool cEdge = cp1 >= ${s};
      bool rEdge = rp1 >= ${o};
    `}getOutput(e){const t=this.getSourceCoordsArr(e);return this.rank===1?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),
            cEdge ? 0. : getA(${t[1]}),
            rEdge ? 0. : getA(${t[2]}),
            rEdge || cEdge ? 0. : getA(${t[3]})`}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class wv{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length);let s="";for(let o=0;o<4;o++){let r="thisRC = rc;";o%2===1&&(r+="thisRC.z += 1;"),o>1&&(r+="thisRC.y += 1;"),s+=`
        ${r}
        ${o>0?"if(thisRC.y < rows && thisRC.z < cols){":""}
          int flatIndex = getFlatIndex(thisRC);

          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);
          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));

          result[${o}] =
            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);
        ${o>0?"}":""}
      `}this.userCode=`
      ${MU(t,this.enableShapeUniforms)}
      ${this.enableShapeUniforms?jg():Hg(e)}

      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0.);

        ivec3 thisRC;
        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};
        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};

        ${s}

        setOutput(result);
      }
    `}}function MU(n,e){return`
    ivec3 inputCoordsFromReshapedOutCoords(int index) {
      ${e?MW(["r","c","d"],"inputShape"):Yr(["r","c","d"],n)}
      return ivec3(r, c, d);
    }
  `}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LU{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,s){const o=qx(t,s),r=Xx(e,o,s);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=jx(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,s);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const c=this.freeTextures[r].shift();return this.usedTextures[r].push(c),c}let i;return o===Jt.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):o===Jt.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):o===Jt.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):o===Jt.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):o===Jt.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,s,o){if(this.freeTextures==null)return;const r=qx(s,o),a=Xx(t,r,o);a in this.freeTextures||(this.freeTextures[a]=[]);const i=jx(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,o),c=H().get("WEBGL_DELETE_TEXTURE_THRESHOLD");c!==-1&&this._numBytesAllocated>c?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(this.freeTextures!=null){for(const e in this.freeTextures)this.freeTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});for(const e in this.usedTextures)this.usedTextures[e].forEach(t=>{this.gpgpu.deleteMatrixTexture(t.texture)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function PU(n,e){const t=n;if(e===t.R32F)return 4;if(e===t.R16F)return 2;if(e===t.RGBA32F)return 16;if(e===n.RGBA)return 16;if(e===t.RGBA16F)return 8;if(e===t.RGBA8)return 4;throw new Error(`Unknown internal format ${e}`)}function jx(n,e,t,s,o){const r=BU(e,s);let a;if(o){const[c,u]=Gi(n[0],n[1]);a=c*u}else{const[c,u]=eu(n[0],n[1]);a=c*u}const i=PU(t,r);return a*i}function BU(n,e){switch(n){case Jt.PACKED_2X2_FLOAT32:return fv(e);case Jt.PACKED_2X2_FLOAT16:return mv(e);case Jt.UNPACKED_FLOAT32:return dv(e);case Jt.UNPACKED_FLOAT16:return hv(e);case Jt.PACKED_4X1_UNSIGNED_BYTE:return pv(e);default:throw new Error(`Unknown physical texture type ${n}`)}}function zU(n){return H().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?n?Jt.PACKED_2X2_FLOAT32:Jt.UNPACKED_FLOAT32:n?Jt.PACKED_2X2_FLOAT16:Jt.UNPACKED_FLOAT16}function qx(n,e){if(n===jn.UPLOAD)return Jt.PACKED_2X2_FLOAT32;if(n===jn.RENDER||n==null)return zU(e);if(n===jn.DOWNLOAD||n===jn.PIXELS)return Jt.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${n}`)}function Xx(n,e,t){return`${n[0]}_${n[1]}_${e}_${t}`}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zs{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length),this.userCode=`
      float unaryOperation(float x) {
        ${t}
      }

      void main() {
        float x = getAAtOutCoords();
        float y = unaryOperation(x);

        setOutput(y);
      }
    `}}const gs="if (isnan(x)) return x;",VU="return x;",Kx="return abs(x);",WU="return (x >= 0.0) ? x : (exp(x) - 1.0);",UU=gs+`
  return (x < 0.0) ? 0.0 : x;
`,GU=gs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,ko="return x;",HU="return 1.0 / (1.0 + exp(-1.0 * x));";/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jU="return x;",qU=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,XU=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,KU=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,YU="return 1.0 / (1.0 + exp(-1.0 * x));";class Co{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length),this.userCode=`
      vec4 unaryOperation(vec4 x) {
        ${t}
      }

      void main() {
        vec4 x = getAAtOutCoords();
        vec4 y = unaryOperation(x);

        setOutput(y);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZU{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length);const t=e.length,s=pn("rc",t),o=dt(t),r=FU(t,s),a=s.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`
      void main() {
        ${o} rc = getOutputCoords();
        vec4 packedInput = getA(${r});

        setOutput(getChannel(packedInput, ${i}));
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JU=Ew,QU=1e-7,eG=1e-4,Du={};function tG(n){return n in Du||(Du[n]={}),Du[n]}const nG=H().getNumber("CPU_HANDOFF_SIZE_THRESHOLD"),sG=600;function oG(){return H().global.screen==null?1024:H().global.screen.height*H().global.screen.width*window.devicePixelRatio*sG/1024/1024}class _h extends Sd{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!H().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(e!=null){if(e instanceof sp)t=e;else{const s=Es(H().getNumber("WEBGL_VERSION"),e);t=new sp(s)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const s=Es(H().getNumber("WEBGL_VERSION"));t=new sp(s),this.binaryCache=tG(H().getNumber("WEBGL_VERSION")),this.gpgpuCreatedLocally=!0}this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new LU(this.gpgpu),this.numMBBeforeWarning=oG(),this.texData=new xf(this,Is())}nextDataId(){return _h.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}writeTexture(e,t,s,o,r,a){const i=this.makeTensorInfo(t,s),c=this.texData.get(i.dataId);c.isPacked=!1,c.texture={texture:e,texShape:[o,r]},c.texShape=[o,r];const u=Ru(t),l=new Hx(u,!1,a),d=this.runWebGLProgram(l,[i],s,[[o,r]]);return d.shape=t,c.texture=null,this.disposeIntermediateTensorInfo(i),d.dataId}write(e,t,s){if((H().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||H().getBool("DEBUG"))&&this.checkNumericalProblems(e),s==="complex64"&&e!=null)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const o={id:this.nextDataId()};return this.texData.set(o,{shape:t,dtype:s,values:e,usage:jn.UPLOAD,refCount:1}),o}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){const t=this.texData.get(e);t.refCount++}decRef(e){if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--}}move(e,t,s,o,r){if(H().getBool("DEBUG")&&this.checkNumericalProblems(t),o==="complex64")throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:s,dtype:o,values:t,usage:jn.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:s,dtype:o,complexTensorInfos:r,slice:a,shape:i,isPacked:c}=t;if(a!=null){let h;c?h=new Co(i,ko):h=new zs(i,ko);const p=this.runWebGLProgram(h,[{dataId:e,shape:i,dtype:o}],o),f=this.readSync(p.dataId);return this.disposeIntermediateTensorInfo(p),f}if(s!=null)return this.convertAndCacheOnCPU(e);if(o==="string")return s;const u=this.activeTimers!=null;let l;u&&(l=nn());let d;if(o==="complex64"){const h=this.readSync(r.real.dataId),p=this.readSync(r.imag.dataId);d=go(h,p)}else d=this.getValuesFromTexture(e);return u&&(this.downloadWaitMs+=nn()-l),this.convertAndCacheOnCPU(e,d)}async read(e){if(this.pendingRead.has(e)){const f=this.pendingRead.get(e);return new Promise(m=>f.push(m))}const t=this.texData.get(e),{values:s,shape:o,slice:r,dtype:a,complexTensorInfos:i,isPacked:c}=t;if(r!=null){let f;c?f=new Co(o,ko):f=new zs(o,ko);const m=this.runWebGLProgram(f,[{dataId:e,shape:o,dtype:a}],a),g=this.read(m.dataId);return this.disposeIntermediateTensorInfo(m),g}if(s!=null)return this.convertAndCacheOnCPU(e);if(H().getBool("DEBUG")&&!H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&H().getNumber("WEBGL_VERSION")===2)throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u=null,l;if(a!=="complex64"&&H().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const f=this.texData.get(l.dataId);u=this.gpgpu.createBufferFromTexture(f.texture.texture,...Tu(o))}this.pendingRead.set(e,[]),a!=="complex64"&&await this.gpgpu.createAndWaitForFence();let d;if(a==="complex64"){const f=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]),m=f[0],g=f[1];d=go(m,g)}else if(u==null)d=this.getValuesFromTexture(e);else{const f=L(o);d=this.gpgpu.downloadFloat32MatrixFromBuffer(u,f)}if(l!=null&&this.disposeIntermediateTensorInfo(l),u!=null){const f=this.gpgpu.gl;pe(f,()=>f.deleteBuffer(u))}const h=this.convertAndCacheOnCPU(e,d),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach(f=>f(h)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Is().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const s=this.texData.get(e),{values:o,shape:r,slice:a,dtype:i,isPacked:c,texture:u}=s;if(i==="complex64")throw new Error("Does not support reading texture for complex64 dtype.");if(a!=null){let p;c?p=new Co(r,ko):p=new zs(r,ko);const f=this.runWebGLProgram(p,[{dataId:e,shape:r,dtype:i}],i),m=this.readToGPU(f,t);return this.disposeIntermediateTensorInfo(f),m}if(u==null)throw o!=null?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),d=Is().makeTensorFromTensorInfo(l),h=this.texData.get(l.dataId);return Object.assign({tensorRef:d},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);if(e.dtype==="string")try{const s=t.map(o=>Ao(o));return Me(e.shape,e.dtype,s)}catch{throw new Error("Failed to decode encoded string bytes into utf-8")}return Me(e.shape,e.dtype,t)}checkNumericalProblems(e){if(e!=null)for(let t=0;t<e.length;t++){const s=e[t];if(!lW(s))throw H().getBool("WEBGL_RENDER_FLOAT32_CAPABLE")?Error(`The value ${s} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`):Error(`The value ${s} cannot be represented on this device.`)}}getValuesFromTexture(e){const{shape:t,dtype:s,isPacked:o}=this.texData.get(e),r=L(t);if(H().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const h=this.decode(e),p=this.texData.get(h.dataId),f=this.gpgpu.downloadMatrixFromPackedTexture(p.texture.texture,...Tu(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(h),f}const a=H().getBool("WEBGL_PACK")&&o===!0,i=a?Ru(t):t,c=a?new C4(i):new $4(i),u=this.runWebGLProgram(c,[{shape:i,dtype:s,dataId:e}],"float32"),l=this.texData.get(u.dataId),d=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(u),d}timerAvailable(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,s=[];let o=!1;this.programTimersStack==null?(this.programTimersStack=s,o=!0):this.activeTimers.push(s),this.activeTimers=s,e();const r=wa(this.activeTimers.map(c=>c.query)).filter(c=>c!=null),a=wa(this.activeTimers.map(c=>c.name)).filter(c=>c!=null);this.activeTimers=t,o&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const c=await Promise.all(r);i.kernelMs=PS(c),i.getExtraProfileInfo=()=>c.map((u,l)=>({name:a[l],ms:u})).map(u=>`${u.name}: ${u.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:nn(),endMs:null}}endTimer(e){return H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=nn(),e)}async getQueryTime(e){if(H().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:s}=this.texData.get(e);return s!=null&&(this.disposeData(s.real.dataId,t),this.disposeData(s.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:s,texShape:o,usage:r,isPacked:a,slice:i}=this.texData.get(e),c=i&&i.origDataId||e,u=this.dataRefCount.get(c);u>1?this.dataRefCount.set(c,u-1):(this.dataRefCount.delete(c),t!=null&&(this.numBytesInGPU-=this.computeBytes(o,s),this.textureManager.releaseTexture(t,o,r,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=nG){return H().getBool("WEBGL_CPU_FORWARD")&&e.every(s=>this.texData.get(s.dataId).texture==null&&L(s.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){Hn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return JU(e.shape,t)}packedUnaryOp(e,t,s){const o=new Co(e.shape,t),r=this.compileAndRun(o,[e],s);return Is().makeTensorFromTensorInfo(r)}abs(e){if(this.shouldExecuteOnCPU([e])&&e.dtype!=="complex64"){const o=bv(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,o)}if(H().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,Kx,e.dtype);const t=new zs(e.shape,Kx),s=this.compileAndRun(t,[e]);return Is().makeTensorFromTensorInfo(s)}makeTensorInfo(e,t,s){let o;if(t==="string"&&s!=null&&s.length>0&&Oc(s[0])){const r=s.map(a=>To(a));o=this.write(r,e,t)}else o=this.write(s,e,t);return this.texData.get(o).usage=null,{dataId:o,shape:e,dtype:t}}makeOutput(e,t,s){return Is().makeTensorFromTensorInfo(this.makeTensorInfo(e,t,s),this)}unpackTensor(e){const t=new ZU(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new OU(e.shape),s=!0;return this.runWebGLProgram(t,[e],e.dtype,null,s)}packedReshape(e,t){const s=[Aa(e.shape),...Da(e.shape)],o={dtype:e.dtype,shape:s,dataId:e.dataId},r=[Aa(t),...Da(t)],a=new wv(r,s),i=!0,c=[s],u=this.runWebGLProgram(a,[o],e.dtype,c,i);return{dataId:u.dataId,shape:t,dtype:u.dtype}}decode(e,t){const s=this.texData.get(e),{isPacked:o,shape:r,dtype:a}=s;if(t!=null){const h=L(r),p=t[0]*t[1]*4;$(h<=p,()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data.")}const i=Ru(r);let c;o?c=new v4(i):c=new k4(i);const u=!0,l=[t??Tu(i)],d=this.runWebGLProgram(c,[{shape:i,dtype:a,dataId:e}],a,l,u,t);return{dtype:a,shape:r,dataId:d.dataId}}runWebGLProgram(e,t,s,o,r=!1,a){const i=this.makeTensorInfo(e.outputShape,s),c=this.texData.get(i.dataId);if(e.packedOutput&&(c.isPacked=!0),e.outPackingScheme===Tc.DENSE){const b=a??Tu(e.outputShape);c.texShape=b.map(x=>x*2)}if(e.outTexUsage!=null&&(c.usage=e.outTexUsage),L(i.shape)===0)return c.values=Qt(i.dtype,0),i;const u=[],l=t.map(b=>{if(b.dtype==="complex64")throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let x=this.texData.get(b.dataId);if(x.texture==null){if(!e.packedInputs&&L(b.shape)<=H().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:b.shape,texData:null,isUniform:!0,uniformValues:x.values};e.packedInputs&&(x.isPacked=!0,x.shape=b.shape)}if(this.uploadToGPU(b.dataId),!!x.isPacked!=!!e.packedInputs)b=x.isPacked?this.unpackTensor(b):this.packTensor(b),u.push(b),x=this.texData.get(b.dataId);else if(x.isPacked&&!xd(x.shape,b.shape)){const y=b,w=b.shape;b.shape=x.shape,b=this.packedReshape(b,w),u.push(b),x=this.texData.get(b.dataId),y.shape=w}return{shape:b.shape,texData:x,isUniform:!1}});this.uploadToGPU(i.dataId);const d={shape:i.shape,texData:c,isUniform:!1},h=I4(e,l,d),p=this.getAndSaveBinary(h,()=>y4(this.gpgpu,e,l,d)),f=this.activeTimers!=null;let m;f&&(m=this.startTimer()),H().get("ENGINE_COMPILE_ONLY")||w4(this.gpgpu,p,l,d,o),u.forEach(b=>this.disposeIntermediateTensorInfo(b)),f&&(m=this.endTimer(m),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(m)}));const g=H().get("WEBGL_FLUSH_THRESHOLD");if(g>0){const b=nn();b-this.lastGlFlushTime>g&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=b)}if(!H().getBool("WEBGL_LAZILY_UNPACK")&&c.isPacked&&r===!1){const b=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),b}return i}compileAndRun(e,t,s,o,r=!1){return s=s||t[0].dtype,this.runWebGLProgram(e,t,s,o,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(H().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]}),this.textureManager.dispose(),this.canvas!=null&&typeof HTMLCanvasElement<"u"&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return this.floatPrecisionValue==null&&(this.floatPrecisionValue=G(()=>{if(!H().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=H().getBool("DEBUG");H().set("DEBUG",!1);const t=this.abs(Se(1e-8)).dataSync()[0];if(H().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return this.floatPrecision()===32?QU:eG}uploadToGPU(e){const t=this.texData.get(e),{shape:s,dtype:o,values:r,texture:a,usage:i,isPacked:c}=t;if(a!=null)return;const u=this.activeTimers!=null;let l;u&&(l=nn());let d=t.texShape;if(d==null&&(d=NW(s,c),t.texShape=d),r!=null){const h=Ru(s);let p,f=d[1],m=d[0];const g=r instanceof Uint8Array||r instanceof Uint8ClampedArray;(c||!g)&&([f,m]=Gi(d[0],d[1])),c?p=new N4(h,g):p=new Hx(h,g);const b=g?[m,f]:d,x=this.makeTensorInfo(b,o),y=this.texData.get(x.dataId);g?y.usage=jn.PIXELS:y.usage=jn.UPLOAD,y.texShape=b,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(x.dataId),f,m,r);const w=[[m,f]],I=!0,k=this.runWebGLProgram(p,[x],o,w,I),v=this.texData.get(k.dataId);t.texShape=v.texShape,t.isPacked=v.isPacked,t.usage=v.usage,H().get("ENGINE_COMPILE_ONLY")?this.disposeData(k.dataId):(t.texture=v.texture,t.values=null,this.texData.delete(k.dataId)),this.disposeIntermediateTensorInfo(x),u&&(this.uploadWaitMs+=nn()-l)}else{const h=this.acquireTexture(d,i,o,c);t.texture=h}}convertAndCacheOnCPU(e,t){const s=this.texData.get(e),{dtype:o}=s;return t!=null&&(s.values=rG(t,o)),s.values}acquireTexture(e,t,s,o){if(this.numBytesInGPU+=this.computeBytes(e,s),!this.warnedAboutMemory&&this.numBytesInGPU>this.numMBBeforeWarning*1024*1024){const r=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${r} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,o)}computeBytes(e,t){return e[0]*e[1]*xc(t)}checkCompileCompletion(){for(const[,e]of Object.entries(this.binaryCache))this.checkCompletion_(e)}async checkCompileCompletionAsync(){const e=[];if(this.gpgpu.parallelCompilationExtension){for(const[,t]of Object.entries(this.binaryCache))e.push(this.checkCompletionAsync_(t));return Promise.all(e)}else{for(const[,t]of Object.entries(this.binaryCache)){const s=new Promise(o=>{try{this.checkCompletion_(t),o(!0)}catch(r){throw r}});e.push(s)}return Promise.all(e)}}async checkCompletionAsync_(e){return this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.parallelCompilationExtension.COMPLETION_STATUS_KHR)?this.checkCompletion_(e):(await Dw(),this.checkCompletionAsync_(e))}checkCompletion_(e){if(this.gpgpu.gl.getProgramParameter(e.webGLProgram,this.gpgpu.gl.LINK_STATUS)===!1)throw console.log(this.gpgpu.gl.getProgramInfoLog(e.webGLProgram)),this.gpgpu.gl.getShaderParameter(e.fragmentShader,this.gpgpu.gl.COMPILE_STATUS)===!1?(rv(e.source,this.gpgpu.gl.getShaderInfoLog(e.fragmentShader)),new Error("Failed to compile fragment shader.")):new Error("Failed to link vertex and fragment shaders.");return!0}getUniformLocations(){for(const[,e]of Object.entries(this.binaryCache)){const{uniformLocations:t,customUniformLocations:s,infLoc:o,nanLoc:r,inShapesLocations:a,inTexShapesLocations:i,outShapeLocation:c,outShapeStridesLocation:u,outTexShapeLocation:l}=uv(this.gpgpu,e.program,e.webGLProgram);e.uniformLocations=t,e.customUniformLocations=s,e.infLoc=o,e.nanLoc=r,e.inShapesLocations=a,e.inTexShapesLocations=i,e.outShapeLocation=c,e.outShapeStridesLocation=u,e.outTexShapeLocation=l}}createTensorFromTexture(e,t,s){const{texture:o,height:r,width:a,channels:i}=e,c=Is().backend;if(!c.gpgpu.gl.isTexture(o))throw new Error("The texture is invalid. Also, please make sure the texture and the TFJS WebGL backend are using the same canvas. If you want to use your own custom canvas, you have to create and use the custom TFJS WebGL backend created from the canvas through 'new tf.MathBackendWebGL(customCanvas)'.");const u=c.writeTexture(o,t,s,r,a,i);return Is().makeTensorFromDataId(u,t,s,c)}}_h.nextDataId=0;function rG(n,e){if(e==="float32"||e==="complex64")return n;if(e==="int32"||e==="bool"){const t=e==="int32"?new Int32Array(n.length):new Uint8Array(n.length);for(let s=0;s<t.length;++s)t[s]=Math.round(n[s]);return t}else throw new Error(`Unknown dtype ${e}`)}/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */S0()&&Zf("webgl",()=>new _h,2);/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Kg=`
  if (isnan(a)) return a;
  if (isnan(b)) return b;
`;class Fa{constructor(e,t,s){this.variableNames=["A","B"],this.outputShape=Ee(t,s),this.enableShapeUniforms=yn(this.outputShape.length),this.userCode=`
      float binaryOperation(float a, float b) {
        ${e}
      }

      void main() {
        float a = getAAtOutCoords();
        float b = getBAtOutCoords();
        setOutput(binaryOperation(a, b));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const su=`
  result.r = isNaN.r ? NAN : result.r;
  result.g = isNaN.g ? NAN : result.g;
  result.b = isNaN.b ? NAN : result.b;
  result.a = isNaN.a ? NAN : result.a;
`;class ou{constructor(e,t,s,o=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ee(t,s);const r=this.outputShape.length;this.enableShapeUniforms=yn(r);let a="";if(o)if(r===0||L(this.outputShape)===1)a=`
          result.y = 0.;
          result.z = 0.;
          result.w = 0.;
        `;else if(a=`
          ${dt(r)} coords = getOutputCoords();
        `,r===1)this.enableShapeUniforms?a+=`
            result.y = (coords + 1) >= outShape ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `:a+=`
            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;
            result.z = 0.;
            result.w = 0.;
          `;else{const c=pn("coords",r);this.enableShapeUniforms?a+=`
            bool nextRowOutOfBounds =
              (${c[r-2]} + 1) >= outShape[${r} - 2];
            bool nextColOutOfBounds =
              (${c[r-1]} + 1) >= outShape[${r} - 1];
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `:a+=`
            bool nextRowOutOfBounds =
              (${c[r-2]} + 1) >= ${this.outputShape[r-2]};
            bool nextColOutOfBounds =
              (${c[r-1]} + 1) >= ${this.outputShape[r-1]};
            result.y = nextColOutOfBounds ? 0. : result.y;
            result.z = nextRowOutOfBounds ? 0. : result.z;
            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;
          `}this.userCode=`
      vec4 binaryOperation(vec4 a, vec4 b) {
        ${e}
      }

      void main() {
        vec4 a = getAAtOutCoords();
        vec4 b = getBAtOutCoords();

        vec4 result = binaryOperation(a, b);
        ${a}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ln(n){const{inputs:e,backend:t}=n,{x:s}=e;return t.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const aG={kernelName:si,backendName:"webgl",kernelFunc:Ln};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yo(n){const{inputs:e,backend:t}=n,{real:s,imag:o}=e,r=t.makeTensorInfo(s.shape,"complex64"),a=t.texData.get(r.dataId),i=Ln({inputs:{x:s},backend:t}),c=Ln({inputs:{x:o},backend:t});return a.complexTensorInfos={real:i,imag:c},r}const iG={kernelName:Sf,backendName:"webgl",kernelFunc:Yo};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Iv="return (a < 0.) ? b * a : a;",kv=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function cG(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{alpha:r}=s,a=t.makeTensorInfo([],"float32",Uo(r,"float32")),i=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ou(kv,o.shape,a.shape):new Fa(Iv,o.shape,a.shape),c=t.runWebGLProgram(i,[o,a],"float32");return t.disposeIntermediateTensorInfo(a),c}const lG={kernelName:ri,backendName:"webgl",kernelFunc:cG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vv="return (a < 0.) ? b * a : a;",$v=`
  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));
  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);
`;function uG(n){const{inputs:e,backend:t}=n,{x:s,alpha:o}=e,r=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ou($v,s.shape,o.shape):new Fa(vv,s.shape,o.shape);return t.runWebGLProgram(r,[s,o],"float32")}const dG={kernelName:xi,backendName:"webgl",kernelFunc:uG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Ki="if (isnan(x)) return x;";function He({opSnippet:n,packedOpSnippet:e,cpuKernelImpl:t,dtype:s}){return({inputs:o,backend:r})=>{const{x:a}=o,i=r,c=s||a.dtype;if(i.shouldExecuteOnCPU([a])&&t!=null){const d=i.texData.get(a.dataId),h=t(d.values,c);return i.makeTensorInfo(a.shape,c,h)}const u=H().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&e!=null;let l;return u?l=new Co(a.shape,e):l=new zs(a.shape,n),i.runWebGLProgram(l,[a],c)}}function en({opSnippet:n,packedOpSnippet:e,checkOutOfBounds:t=!1,supportsComplex:s=!1,cpuKernelImpl:o,dtype:r}){return({inputs:a,backend:i})=>{const{a:c,b:u}=a,l=i;if(s&&c.dtype==="complex64"){const f=l.texData.get(c.dataId),m=l.texData.get(u.dataId),[g,b]=[[f.complexTensorInfos.real,m.complexTensorInfos.real],[f.complexTensorInfos.imag,m.complexTensorInfos.imag]].map(y=>{const[w,I]=y,k={dataId:w.dataId,dtype:w.dtype,shape:c.shape},v={dataId:I.dataId,dtype:I.dtype,shape:u.shape},C=new Fa(n,c.shape,u.shape);return l.runWebGLProgram(C,[k,v],Fn(w.dtype,I.dtype))}),x=Yo({inputs:{real:g,imag:b},backend:l});return l.disposeIntermediateTensorInfo(g),l.disposeIntermediateTensorInfo(b),x}const d=r||Fn(c.dtype,u.dtype);if((c.dtype==="string"||u.dtype==="string"||l.shouldExecuteOnCPU([c,u]))&&o!=null){const f=l.texData.get(c.dataId).values,m=l.texData.get(u.dataId).values,g=c.dtype==="string"?Rr(f):f,b=c.dtype==="string"?Rr(m):m,[x,y]=o(c.shape,u.shape,g,b,d),w=l.makeTensorInfo(y,d),I=l.texData.get(w.dataId);return I.values=x,w}const h=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&e!=null;let p;return h?p=new ou(e,c.shape,u.shape,t):p=new Fa(n,c.shape,u.shape),l.runWebGLProgram(p,[c,u],d)}}function Ec(n,e=!1){if(n==="linear")return e?jU:VU;if(n==="relu")return e?XU:UU;if(n==="elu")return e?qU:WU;if(n==="relu6")return e?KU:GU;if(n==="prelu")return e?$v:vv;if(n==="leakyrelu")return e?kv:Iv;if(n==="sigmoid")return e?YU:HU;throw new Error(`Activation ${n} has not been implemented for the WebGL backend.`)}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Cv{constructor(e,t,s,o=!1,r=!1,a=!1,i=null,c=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=s,this.enableShapeUniforms=yn(this.outputShape.length);const l=o?e[1]:e[2],d=Math.ceil(l/2),h=o?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",f=o?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],m=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let g="",b="";i&&(c?g=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${i}
        }`:u?g=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${i}
        }`:g=`vec4 activation(vec4 x) {
          ${i}
        }`,b="result = activation(result);");const x=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),c&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let y="rc.x",w="rc.x";e[0]<t[0]?y=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(w=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`
      ${g}
      // Don't use uniform for sharedDimensionPacked for performance.
      const float sharedDimension = ${d}.0;

      vec4 dot2x2ARowBCol(ivec3 rc) {
        vec4 result = vec4(0);
        for (int i = 0; i < ${d}; i++) {
          int batchA = ${y};
          int batchB = ${w};
          vec4 a = getMatrixA(batchA, ${h});
          vec4 b = getMatrixB(batchB, ${p});

          // These swizzled products need to be separately added.
          // See: https://github.com/tensorflow/tfjs/issues/1735
          result += (${f[0]} * ${m[0]});
          result += (${f[1]} * ${m[1]});
        }
        return result;
      }

      void main() {
        ivec3 rc = getOutputCoords();
        vec4 result = dot2x2ARowBCol(rc);

        ${x}

        ${b}

        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yx={REAL:"return areal * breal - aimag * bimag;",IMAG:"return areal * bimag + aimag * breal;"};class Zx{constructor(e,t,s){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ee(t,s),this.userCode=`
      float binaryOpComplex(
          float areal, float aimag, float breal, float bimag) {
        ${e}
      }

      void main() {
        float areal = getARealAtOutCoords();
        float aimag = getAImagAtOutCoords();
        float breal = getBRealAtOutCoords();
        float bimag = getBImagAtOutCoords();
        setOutput(binaryOpComplex(areal, aimag, breal, bimag));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jx="return a * b;";function Yg(n){const{inputs:e,backend:t}=n,{a:s,b:o}=e,r=Fn(s.dtype,o.dtype);if(s.dtype==="complex64"){const i=t.texData.get(s.dataId),c=t.texData.get(o.dataId),u=new Zx(Yx.REAL,s.shape,o.shape),l=new Zx(Yx.IMAG,s.shape,o.shape),d=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:s.shape},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:c.complexTensorInfos.real.dataId,dtype:c.complexTensorInfos.real.dtype,shape:o.shape},{dataId:c.complexTensorInfos.imag.dataId,dtype:c.complexTensorInfos.imag.dtype,shape:o.shape}],h=t.runWebGLProgram(u,d,"float32"),p=t.runWebGLProgram(l,d,"float32"),f=Yo({inputs:{real:h,imag:p},backend:t});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}if(t.shouldExecuteOnCPU([s,o])){const i=t.texData.get(s.dataId),c=t.texData.get(o.dataId),[u,l]=dU(s.shape,o.shape,i.values,c.values,r),d=t.makeTensorInfo(l,r),h=t.texData.get(d.dataId);return h.values=u,d}let a;return H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?a=new ou(Jx,s.shape,o.shape):a=new Fa(Jx,s.shape,o.shape),t.runWebGLProgram(a,[s,o],r)}const hG={kernelName:fi,backendName:"webgl",kernelFunc:Yg};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pG(n,e,t){const s=[Aa(n.shape),...Da(n.shape)],o={dtype:n.dtype,shape:s,dataId:n.dataId},r=[Aa(e),...Da(e)],a=new wv(r,s),i=!0,c=[s],u=t.runWebGLProgram(a,[o],n.dtype,c,i);return{dataId:u.dataId,shape:e,dtype:u.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function le(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{shape:r}=s,a=t,i=L(o.shape),c=wf(r,i),u=L(c);$(i===u,()=>`The new shape (${c}) has ${u} elements and the old shape (${o.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`);const l=a.texData.get(o.dataId);return l.isPacked&&!xd(o.shape,c)&&!(l.texture!==null&&xd(l.shape,c))?pG(o,c,a):(a.incRef(o.dataId),{dataId:o.dataId,shape:c,dtype:o.dtype})}const fG={kernelName:kl,backendName:"webgl",kernelFunc:le};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Qx{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:r,outSize:a}=e;this.outputShape=[o,a];const i=Math.floor(s/4)*4,c=s%4;let u="sumValue += dot(values, ones);";if(t!=null){const d=1/t;u=`sumValue += dot(values * ${Ia(d)?d.toPrecision(2):d}, ones);`}let l="";r%s>0&&(l=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return 0.0;
        }
      `),this.userCode=`
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${l}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        float sumValue = 0.0;

        for (int i = 0; i < ${i}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${u}
        }

        int inIdx = inOffset + ${i};
        if (${c===1}) {
          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);

          ${u}
        } else if (${c===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1), 0.0, 0.0);

          ${u}
        } else if (${c===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2), 0.0);

          ${u}
        }
        setOutput(sumValue);
      }
    `}}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class mG{constructor(e,t){this.variableNames=["x"];const{windowSize:s,batchSize:o,inSize:r,outSize:a}=e;this.outputShape=[o,a];let i="0.0",c="";t==="prod"?i="1.0":t==="min"?(i="1.0 / 1e-20",c="min"):t==="max"&&(i="-1.0 / 1e-20",c="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="sum"?u="sumValue":t==="prod"?u="prodValue":t==="all"?u="allValue":t==="any"&&(u="anyValue");const l=Math.floor(s/4)*4,d=s%4;let h=`
      if (${t==="sum"}) {
        sumValue += dot(values, ones);
      } else if (${t==="prod"}) {
        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);
        prodValue *= tmp[0] * tmp[1];
      } else {
        minMaxValue = ${c}(values, minMaxValue);
        if (${t==="min"} || ${t==="max"}) {
          minMaxValue = ${c}(values, minMaxValue);
          bvec4 isNaN = isnan(values);
          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {
            minMaxValue = vec4(NAN);
          }
        }
      }
    `,p="vec4";t==="all"?(i="1.0",h=`
        bool reducedAllValue = all(values);
        float floatedReducedAllValue = float(reducedAllValue);
        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);
      `,p="bvec4"):t==="any"&&(i="0.0",h=`
        bool reducedAnyValue = any(values);
        float floatedReducedAnyValue = float(reducedAnyValue);
        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);
      `,p="bvec4");let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `),this.userCode=`
      const float initializationValue = ${i};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float getValue(int batch, int inIdx) {
        ${f}
        return getX(batch, inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${s};

        vec4 minMaxValue = vec4(${i});
        float prodValue = 1.0;
        float sumValue = 0.0;
        float allValue = 1.0;
        float anyValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===2}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          ${h}
        } else if (${d===3}) {
          ${p} values = ${p}(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gG(n){const e=[];for(;e.length===0||e[e.length-1].outSize!==1;){const t=e.length?e[e.length-1].outSize:n[1],s=lh(t);e.push({inSize:t,windowSize:s,outSize:Math.ceil(t/s)})}return e}function Jr(n,e,t,s){const o=gG(n.shape);let r=n;for(let a=0;a<o.length;a++){const{inSize:i,windowSize:c,outSize:u}=o[a];let l,d;t==="mean"?l=a===0?new Qx({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:u},i):new Qx({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:u}):l=new mG({windowSize:c,inSize:i,batchSize:n.shape[0],outSize:u},t),d=r,r=s.runWebGLProgram(l,[r],e),d.dataId!==n.dataId&&s.disposeIntermediateTensorInfo(d)}return r}/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class bG{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[t[a]];this.outputShape=s,this.rank=s.length;const o=dt(this.rank),r=xG(t);this.userCode=`
    void main() {
      ${o} resRC = getOutputCoords();
      setOutput(getA(${r}));
    }
    `}}function xG(n){const e=n.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(e);for(let o=0;o<n.length;o++)s[n[o]]=t[o];return s.join()}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class yG{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const s=new Array(e.length);for(let l=0;l<s.length;l++)s[l]=e[t[l]];if(this.outputShape=s,this.rank=s.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const o=dt(this.rank),r=yv("rc",this.rank),a=new Array(this.rank);for(let l=0;l<t.length;l++)a[t[l]]=r[l];const i=`vec2(${a.slice(-2).join()})`,c=`++${r[this.rank-1]} < ${s[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`
    void main() {
      ${o} rc = getOutputCoords();
      vec4 result = vec4(0.);
      result[0] = ${u};
      if(${c}) {
        result[1] = ${u};
      }
      --${r[this.rank-1]};
      if(++${r[this.rank-2]} < ${s[this.rank-2]}) {
        result[2] = ${u};
        if(${c}) {
          result[3] = ${u};
        }
      }
      setOutput(result);
    }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rh(n,e,t){const s=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new yG(n.shape,e):new bG(n.shape,e);return t.runWebGLProgram(s,[n],n.dtype)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wG(n,e,t,s){const o=e,r=n.shape.length,a=Re(o,n.shape);let i=a;const c=pt(i,r),u=c!=null;let l=n;u&&(l=Rh(n,c,s),i=rt(i.length,r)),ht("sum",i,r);const[d,h]=bt(l.shape,i);let p=d;t&&(p=et(d,a));const f=L(h),g=L(n.shape)/f,b=le({inputs:{x:l},attrs:{shape:[g,f]},backend:s}),x=qf(n.dtype),y=Jr(b,x,"sum",s),w=le({inputs:{x:y},attrs:{shape:p},backend:s});return s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(y),u&&s.disposeIntermediateTensorInfo(l),w}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ah(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s;return wG(o,r,a,t)}const IG={kernelName:Ri,backendName:"webgl",kernelFunc:Ah};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function bn(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{perm:r}=s,a=t,i=o.shape.length,c=new Array(i);for(let l=0;l<c.length;l++)c[l]=o.shape[r[l]];let u;if(a.shouldExecuteOnCPU([o])){const d=a.texData.get(o.dataId).values,h=Xg(d,o.shape,o.dtype,r,c);u=a.makeTensorInfo(c,o.dtype);const p=a.texData.get(u.dataId);p.values=h}else u=Rh(o,r,a);return u}const kG={kernelName:So,backendName:"webgl",kernelFunc:bn};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Sv=1e3;function yd({a:n,b:e,transposeA:t,transposeB:s,backend:o,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:c=null}){const u=n.shape.length,l=e.shape.length,d=t?n.shape[u-2]:n.shape[u-1],h=s?e.shape[l-1]:e.shape[l-2],p=t?n.shape[u-1]:n.shape[u-2],f=s?e.shape[l-2]:e.shape[l-1],m=n.shape.slice(0,-2),g=e.shape.slice(0,-2),b=L(m),x=L(g),w=Ee(n.shape.slice(0,-2),e.shape.slice(0,-2)).concat([p,f]);$(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${n.shape} and ${e.shape} and transposeA=${t} and transposeB=${s} must match.`);const I=t?[b,d,p]:[b,p,d],k=s?[x,f,h]:[x,h,f],v=le({inputs:{x:n},backend:o,attrs:{shape:I}}),C=le({inputs:{x:e},backend:o,attrs:{shape:k}}),N=[v,C],T=Math.max(b,x),_=t?v.shape[1]:v.shape[2],O=r!=null,P=a!=null,V=c==="leakyrelu",B=c!=null?Ec(c,!0):null,W=O||P||V||B!=null;let q;if((p===1||f===1)&&_>Sv&&W===!1){let X=v,Y=C;t&&(X=bn({inputs:{x:v},backend:o,attrs:{perm:[0,2,1]}}),N.push(X)),s&&(Y=bn({inputs:{x:C},backend:o,attrs:{perm:[0,2,1]}}),N.push(Y));const Z=f!==1,se=f===1;let J=X;Z&&(J=le({inputs:{x:X},backend:o,attrs:{shape:[T,_,1]}}),N.push(J));const ae=f===1?2:1;let oe=Y;se&&(oe=le({inputs:{x:Y},backend:o,attrs:{shape:[T,1,_]}}),N.push(oe));const ue=Yg({inputs:{a:J,b:oe},backend:o});q=Ah({inputs:{x:ue},backend:o,attrs:{axis:ae,keepDims:!0}}),N.push(ue)}else{const X=Fn(n.dtype,e.dtype),Y=new Cv(I,k,[T,p,f],t,s,O,B,P,V),Z=[v,C];if(r!=null&&Z.push(r),P&&Z.push(a),V){const se=o.makeTensorInfo([],"float32",Uo(i,"float32"));Z.push(se),N.push(se)}q=o.runWebGLProgram(Y,Z,X)}const z=le({inputs:{x:q},backend:o,attrs:{shape:w}});N.push(q);for(const X of N)o.disposeIntermediateTensorInfo(X);return z}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function vG(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r,bias:a,preluActivationWeights:i}=e,{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=s;return yd({a:o,b:r,transposeA:c,transposeB:u,backend:t,bias:a,preluActivationWeights:i,leakyreluAlpha:d,activation:l})}const $G={kernelName:ka,backendName:"webgl",kernelFunc:vG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ey="return abs(x);";function CG(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])&&s.dtype!=="complex64"){const r=t.texData.get(s.dataId),a=bv(r.values);return t.makeTensorInfo(s.shape,s.dtype,a)}let o;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Co(s.shape,ey):o=new zs(s.shape,ey),t.runWebGLProgram(o,[s],s.dtype)}const SG={kernelName:Lc,backendName:"webgl",kernelFunc:CG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const NG=gs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return acos(x);
`,TG=He({opSnippet:NG}),EG={kernelName:Pc,backendName:"webgl",kernelFunc:TG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _G=gs+`
  if (x < 1.0) return NAN;
return log(x + sqrt(x * x - 1.0));`,RG=He({opSnippet:_G}),AG={kernelName:Bc,backendName:"webgl",kernelFunc:RG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ty="return a + b;",DG=en({opSnippet:ty,packedOpSnippet:ty,supportsComplex:!0,cpuKernelImpl:H4}),FG={kernelName:Lr,backendName:"webgl",kernelFunc:DG};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class OG{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);const s=[];this.variableNames.forEach(r=>{s.push(`float v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        float result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MG{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((r,a)=>`T${a}`);const s=[];this.variableNames.forEach(r=>{s.push(`vec4 v${r} = get${r}AtOutCoords();`)});const o=this.variableNames.map(r=>`v${r}`).join(" + ");this.userCode=`
      void main() {
        ${s.join(`
        `)}

        vec4 result = ${o};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vu(n){const{inputs:e,backend:t}=n,s=e;if(s.length===1)return Ln({inputs:{x:s[0]},backend:t});if(s.length>H().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const c=Math.floor(s.length/2),u=Vu({inputs:s.slice(0,c),backend:t}),l=Vu({inputs:s.slice(c),backend:t});return Vu({inputs:[u,l],backend:t})}const o=s.map(c=>c.dtype).reduce((c,u)=>Fn(c,u)),r=s.map(c=>c.shape),i=H().getBool("WEBGL_PACK")?new MG(s[0].shape,r):new OG(s[0].shape,r);return t.runWebGLProgram(i,s,o)}const LG={kernelName:zc,backendName:"webgl",kernelFunc:Vu};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PG(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s,i=o.shape.length,c=Re(r,o.shape);let u=c;const l=pt(u,i);let d=o;l!=null&&(d=bn({inputs:{x:o},backend:t,attrs:{perm:l}}),u=rt(u.length,i)),ht("all",u,i);const[h,p]=bt(d.shape,u),f=L(p),m=le({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Jr(m,m.dtype,"all",t);let b;if(a){const x=et(h,c);b=le({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=le({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(d),b}const BG={kernelName:Vc,backendName:"webgl",kernelFunc:PG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zG(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s,i=o.shape.length,c=Re(r,o.shape);let u=c;const l=pt(u,i);let d=o;l!=null&&(d=bn({inputs:{x:o},backend:t,attrs:{perm:l}}),u=rt(u.length,i)),ht("any",u,i);const[h,p]=bt(d.shape,u),f=L(p),m=le({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Jr(m,m.dtype,"any",t);let b;if(a){const x=et(h,c);b=le({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=le({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(d),b}const VG={kernelName:Wc,backendName:"webgl",kernelFunc:zG};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class WG{constructor(e,t,s){this.variableNames=["A"];const{windowSize:o,batchSize:r,outSize:a}=e;s||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i=t==="max"?">":"<",c=s?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = outIdx * ${o};

        int bestIndex = inOffset;
        float bestValue = getA(batch, bestIndex);

        for (int i = 0; i < ${o}; i++) {
          int inIdx = ${c};
          float candidate = getA(batch, inIdx);
          if (candidate ${i} bestValue) {
            bestValue = candidate;
            bestIndex = inIdx;
          }
        }
        setOutput(float(bestIndex));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UG{constructor(e,t,s,o){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,$(e.length>2,()=>`Packed arg${s.charAt(0).toUpperCase()+s.slice(1)} supports only inputs with rank above 2.`);const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),o||this.variableNames.push("bestIndicesA");const i=this.outputShape,c=i.length,u=dt(c),l=pn("coords",c);let d,h;if(a===1){h=c+1;const C=dt(h);d=`
        ${C} sourceLocR = ${C}(${l.join()}, 0);
        ++${l[c-1]};
        ${C} sourceLocG = ${C}(${l.join()}, 0);
        ++${l[c-2]};
        ${C} sourceLocA = ${C}(${l.join()}, 0);
        --${l[c-1]};
        ${C} sourceLocB = ${C}(${l.join()}, 0);
        --${l[c-2]};`}else h=c,d=`
        ${u} sourceLocR = coords;
        ++${l[c-1]};
        ${u} sourceLocG = coords;
        ++${l[c-2]};
        ${u} sourceLocA = coords;
        --${l[c-1]};
        ${u} sourceLocB = coords;
        --${l[c-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),f="."+p[h-1],m=p.map(C=>"int "+C),g=pn("sourceLocR",h-1).concat("inIdx.r"),b=pn("sourceLocG",h-1).concat("inIdx.g"),x=pn("sourceLocB",h-1).concat("inIdx.b"),y=pn("sourceLocA",h-1).concat("inIdx.a"),w=s==="max"?"greaterThan":"lessThan",I=o?"":`
          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),
                             getBestIndicesAChannel(${b.join()}),
                             getBestIndicesAChannel(${x.join()}),
                             getBestIndicesAChannel(${y.join()})));`,k=`vec4(
            getAChannel(${g.join()}),
            hasNextCol ? getAChannel(${b.join()}) : 0.,
            hasNextRow ? getAChannel(${x.join()}) : 0.,
            hasNextRow && hasNextCol ? getAChannel(${y.join()}) : 0.)`,v=o?"":`
      float getBestIndicesAChannel(${m.join()}) {
        return getChannel(getBestIndicesA(${p.join()}),
                                          vec2(${p.slice(-2).join()}));
      }`;this.userCode=`
      float getAChannel(${m.join()}) {
        return getChannel(getA(${p.join()}),
                               vec2(${p.slice(-2).join()}));
      }
      ${v}
      void main() {
        ${u} coords = getOutputCoords();
        bool hasNextCol = ${l[c-1]} < ${i[c-1]-1};
        bool hasNextRow = ${l[c-2]} < ${i[c-2]-1};
        ${d}
        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},
          sourceLocB${f}, sourceLocA${f}) * ${t};
        ivec4 inIdx = srcIdx;
        vec4 bestIndex = vec4(inIdx);
        vec4 bestValue = ${k};

        for (int i = 0; i < ${t}; i++) {
          inIdx = srcIdx;
          ${I}
          vec4 candidate = ${k};
          bvec4 nan = isnan(candidate);
          bvec4 replace = bvec4(
            vec4(${w}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));

          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,
                           replace.y  ? candidate.y : bestValue.y,
                           replace.z  ? candidate.z : bestValue.z,
                           replace.w  ? candidate.w : bestValue.w);
          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));
          srcIdx++;
        }
        setOutput(bestIndex);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Nv(n,e,t,s=null){let o=e.shape[0],r=e.shape[1];s!=null&&(o=s.shape[0],r=s.shape[1]);const a=lh(r),i={windowSize:a,inSize:r,batchSize:o,outSize:Math.ceil(r/a)},c=new WG(i,t,s==null),u=[e];s!=null&&u.push(s);const l=n.runWebGLProgram(c,u,"int32");if(l.shape[1]===1)return l;const d=Nv(n,e,t,l);return n.disposeIntermediateTensorInfo(l),d}function Tv(n,e,t,s=null){const o=s!=null?s.shape:e.shape,r=o[o.length-1],a=lh(r),i=new UG(o,a,t,s==null),c=s==null?[e]:[e,s],u=n.runWebGLProgram(i,c,"int32");if(u.shape.length===e.shape.length){const l=Tv(n,e,t,u);return n.disposeIntermediateTensorInfo(u),l}return u}function Ev(n,e,t,s){const o=[t];if(ht("arg"+s.charAt(0).toUpperCase()+s.slice(1),o,e.shape.length),!H().getBool("WEBGL_PACK_REDUCE")||e.shape.length<=2){const r=[],a=n.texData.get(e.dataId),i=a!==null&&a.isPacked;let c=e;i&&(c=n.unpackTensor(e),r.push(c));const[u,l]=bt(c.shape,o),d=L(l),h=le({inputs:{x:c},backend:n,attrs:{shape:[-1,d]}});r.push(h);const p=Nv(n,h,s);r.push(p);const f=le({inputs:{x:p},backend:n,attrs:{shape:u}});return r.forEach(m=>n.disposeIntermediateTensorInfo(m)),f}return Tv(n,e,s)}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function GG(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;let a=Re(r,o.shape);const i=pt(a,o.shape.length);let c=o;const u=[];i!=null&&(c=bn({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(c),a=rt(a.length,c.shape.length)),ht("argMax",[a[0]],c.shape.length);const l=Ev(t,c,a[0],"max");return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const HG={kernelName:Ba,backendName:"webgl",kernelFunc:GG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jG(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r}=s;let a=Re(r,o.shape);const i=pt(a,o.shape.length);let c=o;const u=[];i!=null&&(c=bn({inputs:{x:o},backend:t,attrs:{perm:i}}),u.push(c),a=rt(a.length,c.shape.length)),ht("argMin",[a[0]],c.shape.length);const l=Ev(t,c,a[0],"min");return u.forEach(d=>t.disposeIntermediateTensorInfo(d)),l}const qG={kernelName:Nd,backendName:"webgl",kernelFunc:jG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XG=gs+`
  if (abs(x) > 1.) {
    return NAN;
  }
  return asin(x);
`,KG=He({opSnippet:XG}),YG={kernelName:Uc,backendName:"webgl",kernelFunc:KG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZG=gs+"return log(x + sqrt(x * x + 1.0));",JG=He({opSnippet:ZG}),QG={kernelName:Gc,backendName:"webgl",kernelFunc:JG};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const eH=gs+`
  return atan(x);
`,tH=He({opSnippet:eH}),nH={kernelName:Hc,backendName:"webgl",kernelFunc:tH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const sH=Kg+`
  return atan(a, b);
`,oH=`
  vec4 result = atan(a, b);
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+su+`
  return result;
`,rH=en({opSnippet:sH,packedOpSnippet:oH}),aH={kernelName:qc,backendName:"webgl",kernelFunc:rH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iH=gs+`
  if ((x < -1.0) || (x > 1.0)) return NAN;
return (log(1.0 + x) - log(1.0 - x)) / 2.0;`,cH=He({opSnippet:iH}),lH={kernelName:jc,backendName:"webgl",kernelFunc:cH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _c{constructor(e,t,s,o=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,c=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,f=e.padInfo.left;this.outputShape=e.outShape;const m=t==="avg",g=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,b=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let x="0.0";if(m||(x="-1.0 / 1e-20"),s){const C=">=";this.userCode=`
        const ivec2 strides = ivec2(${i}, ${c});
        const ivec2 pads = ivec2(${p}, ${f});

        void main() {
          ivec4 coords = getOutputCoords();
          int batch = coords[0];
          int d = coords[3];

          ivec2 xRCCorner = coords.yz * strides - pads;
          int xRCorner = xRCCorner.x;
          int xCCorner = xRCCorner.y;

          // max/min x(?, ?, d) to get y(yR, yC, d).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;
          float avgValue = 0.0;

          for (int wR = 0; wR < ${d};
              wR += ${u}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${h};
                wC += ${l}) {
              int xC = xCCorner + wC;

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float value = getX(batch, xR, xC, d);

              // If a min / max value has already been found, use it. If not,
              // use the current value.
              float currMinMaxValue = mix(
                  value, minMaxValue, minMaxValueFound);
              if (value ${C} currMinMaxValue) {
                minMaxValue = value;
                minMaxValueFound = 1.0;
                minMaxPosition = ${o?r?g:b:`wR * ${h} + wC`};
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const y="max";let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(w="avgValue / count");const I=Math.floor(a/4)*4,k=a%4,v=`
      if (${m}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${y}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec2 strides = ivec2(${i}, ${c});
      const ivec2 pads = ivec2(${p}, ${f});
      const float initializationValue = ${x};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xR, int xC, int d) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xR, xC, d);
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d = coords[3];

        ivec2 xRCCorner = coords.yz * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // max/min x(?, ?, d) to get y(yR, yC, d).
        // ? = to be determined
        vec4 minMaxValue = vec4(${x});
        float avgValue = 0.0;
        count = 0.0;

        for (int wR = 0; wR < ${d};
            wR += ${u}) {
          int xR = xRCorner + wR;

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${I}; wC += 4) {
            int xC = xCCorner + wC * ${l};

            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              getValue(batch, xR, xC + 3 * ${l}, d)
            );

            ${v}
          }

          int xC = xCCorner + ${I};
          if (${k===1}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              initializationValue,
              initializationValue,
              initializationValue
            );

            ${v}
          } else if (${k===2}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              initializationValue,
              initializationValue
            );

            ${v}
          } else if (${k===3}) {
            vec4 values = vec4(
              getValue(batch, xR, xC, d),
              getValue(batch, xR, xC + ${l}, d),
              getValue(batch, xR, xC + 2 * ${l}, d),
              initializationValue
            );

            ${v}
          }
        }
        setOutput(${w});
      }
    `}}class Zg{constructor(e,t,s,o=!1,r=!1){if(this.variableNames=["x"],t==="avg"&&s)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,c=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,d=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,f=e.effectiveFilterHeight,m=e.effectiveFilterWidth,g=e.padInfo.front,b=e.padInfo.top,x=e.padInfo.left;this.outputShape=e.outShape;const y=t==="avg";let w="0.0";if(y||(w="-1.0 / 1e-20"),s){const T=">=";this.userCode=`
        const ivec3 strides =
            ivec3(${i}, ${c}, ${u});
        const ivec3 pads = ivec3(${g}, ${b}, ${x});

        void main() {
          ivec5 coords = getOutputCoords();
          int batch = coords.x;
          int ch = coords.u;

          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
          int xDCorner = xCorner.x;
          int xRCorner = xCorner.y;
          int xCCorner = xCorner.z;

          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).
          // ? = to be determined
          float minMaxValue = 0.0;
          float minMaxValueFound = 0.0;
          int minMaxPosition = 0;

          for (int wD = 0; wD < ${p};
              wD += ${l}) {
            int xD = xDCorner + wD;

            if (xD < 0 || xD >= ${e.inDepth}) {
              continue;
            }

            for (int wR = 0; wR < ${f};
                wR += ${d}) {
              int xR = xRCorner + wR;

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int wC = 0; wC < ${m};
                  wC += ${h}) {
                int xC = xCCorner + wC;

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float value = getX(batch, xD, xR, xC, ch);

                // If a min / max value has already been found, use it. If not,
                // use the current value.
                float currMinMaxValue = mix(
                    value, minMaxValue, minMaxValueFound);
                if (value ${T} currMinMaxValue) {
                  minMaxValue = value;
                  minMaxValueFound = 1.0;
                  minMaxPosition = ${o?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${f} * ${m} +
                      wR * ${m} + wC`};
                }
              }
            }
          }
          setOutput(float(minMaxPosition));
        }
      `;return}const I="max";let k=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;t==="avg"&&(k="avgValue / count");const v=Math.floor(a/4)*4,C=a%4,N=`
      if (${y}) {
        avgValue += dot(values, ones);
      } else {
        minMaxValue = ${I}(values, minMaxValue);
      }
    `;this.userCode=`
      const ivec3 strides =
        ivec3(${i}, ${c}, ${u});
      const ivec3 pads = ivec3(${g}, ${b}, ${x});
      const float initializationValue = ${w};
      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);

      float count = 0.0;

      float getValue(int batch, int xD, int xR, int xC, int ch) {
        if (xC < 0 || xC >= ${e.inWidth}) {
          return initializationValue;
        }
        count += 1.0;
        return getX(batch, xD, xR, xC, ch);
      }

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xDCorner = xCorner.x;
        int xRCorner = xCorner.y;
        int xCCorner = xCorner.z;

        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).
        // ? = to be determined
        vec4 minMaxValue = vec4(${w});
        float avgValue = 0.0;
        count = 0.0;

        for (int wD = 0; wD < ${p};
            wD += ${l}) {
          int xD = xDCorner + wD;

          if (xD < 0 || xD >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${f};
            wR += ${d}) {
            int xR = xRCorner + wR;

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${v}; wC += 4) {
              int xC = xCCorner + wC * ${h};

              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                getValue(batch, xD, xR, xC + 3 * ${h}, ch)
              );

              ${N}
            }

            int xC = xCCorner + ${v};
            if (${C===1}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                initializationValue,
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${C===2}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                initializationValue,
                initializationValue
              );

              ${N}
            } else if (${C===3}) {
              vec4 values = vec4(
                getValue(batch, xD, xR, xC, ch),
                getValue(batch, xD, xR, xC + ${h}, ch),
                getValue(batch, xD, xR, xC + 2 * ${h}, ch),
                initializationValue
              );

              ${N}
            }
          }
          setOutput(${k});
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function uH(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;tu(o,"avgPool");const{filterSize:r,strides:a,pad:i,dimRoundingMode:c}=s,u=1;$(cn(a,u),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const l=Bn(o.shape,r,a,u,i,c);if(l.filterWidth===1&&l.filterHeight===1&&Ke(l.inShape,l.outShape))return Ln({inputs:{x:o},backend:t});const d=new _c(l,"avg",!1);return t.runWebGLProgram(d,[o],"float32")}const dH={kernelName:za,backendName:"webgl",kernelFunc:uH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function hH(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:a,pad:i,dimRoundingMode:c,dataFormat:u}=s,l=[1,1,1],d=xo(o.shape,r,a,l,i,c,u),h=new Zg(d,"avg",!1);return t.runWebGLProgram(h,[o],"float32")}const pH={kernelName:Td,backendName:"webgl",kernelFunc:hH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class fH{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,c=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=c-1-e.padInfo.top,d=u-1-e.padInfo.left,h=1/(t*s);this.userCode=`
      const ivec2 pads = ivec2(${l}, ${d});
      const float avgMultiplier = float(${h});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${c};
            wR += ${a}) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${u};
            wC+= ${i}) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);

            dotProd += dyValue * avgMultiplier;
          }
        }
        setOutput(dotProd);
      }
    `}}class mH{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,o=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,d=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,f=d-1-e.padInfo.front,m=h-1-e.padInfo.top,g=p-1-e.padInfo.left,b=1/(t*s*o);this.userCode=`
      const ivec3 pads = ivec3(${f}, ${m}, ${g});
      const float avgMultiplier = float(${b});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${d};
            wD += ${c}) {
          float dyD = float(dyDCorner + wD) / ${r}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${h};
              wR += ${u}) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${p};
                wC += ${l}) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);

              dotProd += dyValue * avgMultiplier;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function gH(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,a=r,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=s,d=[1,1,1],h=xo(a.shape,i,c,d,u,l),p=new mH(h);return t.runWebGLProgram(p,[o],a.dtype)}const bH={kernelName:$f,backendName:"webgl",kernelFunc:gH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function xH(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,a=r;tu([o,r],"avgPoolGrad");const{filterSize:i,strides:c,pad:u}=s,l=Bn(a.shape,i,c,1,u),d=new fH(l);return t.runWebGLProgram(d,[o],a.dtype)}const yH={kernelName:vf,backendName:"webgl",kernelFunc:xH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wH(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r}=e,{transposeA:a,transposeB:i}=s;return yd({a:o,b:r,transposeA:a,transposeB:i,backend:t})}const IH={kernelName:Va,backendName:"webgl",kernelFunc:wH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class kH{constructor(e,t,s,o,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ee(e,t),Ee(e,s);let i="0.0";o!=null&&(Ee(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="1.0";r!=null&&(Ee(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        float x = getXAtOutCoords();
        float mean = getMeanAtOutCoords();
        float variance = getVarianceAtOutCoords();
        float offset = ${i};
        float scale = ${c};
        float inv = scale * inversesqrt(variance + float(${a}));
        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class vH{constructor(e,t,s,o,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ee(e,t),Ee(e,s);let i="vec4(0.0)";o!=null&&(Ee(e,o),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let c="vec4(1.0)";r!=null&&(Ee(e,r),this.variableNames.push("scale"),c="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`
      void main() {
        vec4 offset = ${i};
        vec4 scale = ${c};

        vec4 x = getXAtOutCoords();
        vec4 mean = getMeanAtOutCoords();
        vec4 variance = getVarianceAtOutCoords();

        vec4 inv = scale * inversesqrt(variance + vec4(${a}));

        setOutput((x - mean) * inv + offset);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $H=({inputs:n,backend:e,attrs:t})=>{const{x:s,mean:o,variance:r,offset:a,scale:i}=n;$(o.shape.length===r.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),$(a==null||o.shape.length===a.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),$(i==null||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:c}=t;c==null&&(c=.001);const u=[s,o,r];let l=null;a!=null&&(l=a.shape,u.push(a));let d=null;i!=null&&(d=i.shape,u.push(i));const h=H().getBool("WEBGL_PACK_NORMALIZATION")?new vH(s.shape,o.shape,r.shape,l,d,c):new kH(s.shape,o.shape,r.shape,l,d,c);return e.runWebGLProgram(h,u,u[0].dtype)},CH={kernelName:ti,backendName:"webgl",kernelFunc:$H};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class SH{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=dt(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const s=NH(this.rank);let o;const r=e.map((a,i)=>`sourceLoc.${Yp[i]} = start[${i}] + coords.${Yp[i]};`);o=`
        ${t} sourceLoc;
        ${t} coords = getOutputCoords();
        ${r.join(`
`)}
      `,this.userCode=`
      void main() {
        ${o}
        setOutput(getSource(${s}));
      }
    `}}const Yp=["x","y","z","w","u","v"];function NH(n){if(n===1)return"sourceLoc";if(n<=6)return Yp.slice(0,n).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class TH{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=dt(this.rank),s=pn("coords",this.rank),o=pn("sourceLoc",this.rank),r=this.rank===1?"sourceLoc":`vec2(${o.slice(-2).join()})`,a=`getChannel(getSource(${o.join()}), ${r})`,i=`
      result.x = ${a};
      if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
        ++${o[this.rank-1]};
        result.y = ${a};
        --${o[this.rank-1]};
      }
    `,c=this.rank===1?"":`
      --${s[this.rank-1]};
      if (++${s[this.rank-2]} < ${e[this.rank-2]}) {
        ++${o[this.rank-2]};
        result.z = ${a};
        if (++${s[this.rank-1]} < ${e[this.rank-1]}) {
          ++${o[this.rank-1]};
          result.w = ${a};
        }
      }
    `,u=this.rank<=4?`sourceLoc = coords +
            ${t}(${e.map((l,d)=>`start[${d}]`).join()});`:e.map((l,d)=>`${o[d]} = ${s[d]} + start[${d}];`).join(`
`);this.userCode=`
      void main() {
        ${t} coords = getOutputCoords();
        ${t} sourceLoc;
        ${u}
        vec4 result = vec4(0.);
        ${i}
        ${c}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function EH(n,e,t,s){const o=s.texData.get(n.dataId),r=s.makeTensorInfo(t,n.dtype),a=s.texData.get(r.dataId);Object.assign(a,o),a.refCount=1,a.shape=t,a.dtype=n.dtype;let i=eh(e,me(n.shape));o.slice&&(i+=o.slice.flatOffset),a.slice={flatOffset:i,origDataId:o.slice&&o.slice.origDataId||n.dataId};const c=s.dataRefCount.get(a.slice.origDataId)||1;return s.dataRefCount.set(a.slice.origDataId,c+1),r}function Yi(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,size:a}=s,[i,c]=Pl(o,r,a);if(Qf(o,i,c),L(c)===0)return t.makeTensorInfo(c,o.dtype,[]);if(t.shouldExecuteOnCPU([o])||o.dtype==="string"){const d=t.texData.get(o.dataId),h=kU(d.values,i,c,o.shape,o.dtype);return t.makeTensorInfo(c,o.dtype,h)}const{isPacked:u}=t.texData.get(o.dataId),l=Qd(o.shape,i,c);if(u||!l){const d=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new TH(c):new SH(c),h=[i];return t.runWebGLProgram(d,[o],o.dtype,h)}return t.uploadToGPU(o.dataId),EH(o,i,c,t)}const _H={kernelName:Cl,backendName:"webgl",kernelFunc:Yi};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const RH=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,crops:a}=s;$(o.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const i=r.reduce((x,y)=>x*y),c=Hr(o.shape,r,i),u=jr(c.length,r.length),l=qr(o.shape,r,i),d=dh(a,r.length),h=hh(l,a,r.length),p=[],f=le({inputs:{x:o},backend:t,attrs:{shape:c}}),m=bn({inputs:{x:f},backend:t,attrs:{perm:u}}),g=le({inputs:{x:m},backend:t,attrs:{shape:l}}),b=Yi({inputs:{x:g},backend:t,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(x=>t.disposeIntermediateTensorInfo(x)),b},AH={kernelName:Xc,backendName:"webgl",kernelFunc:RH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function DH(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:a}=s,i=t.readSync(o.dataId),c=t.readSync(r.dataId),u=gv(i,c,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,u)}const FH={kernelName:Cf,backendName:"webgl",kernelFunc:DH};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function OH(n){const{inputs:e,backend:t}=n,{s0:s,s1:o}=e,r=t.readSync(s.dataId),a=t.readSync(o.dataId),i=Ee(Array.from(r),Array.from(a));return t.makeTensorInfo([i.length],"int32",Int32Array.from(i))}const MH={kernelName:o0,backendName:"webgl",kernelFunc:OH};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LH="return float(a != b);",_v=en({opSnippet:LH,cpuKernelImpl:pU,dtype:"bool"}),PH={kernelName:gl,backendName:"webgl",kernelFunc:_v};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ru(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.texData.get(s.dataId);return Ln({inputs:{x:o.complexTensorInfos.real},backend:t})}const BH={kernelName:Vf,backendName:"webgl",kernelFunc:ru};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zH="return float(int(x));";function VH(n,e){const t=new zs(n.shape,zH),s=e.runWebGLProgram(t,[n],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zp(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dtype:r}=s;if(r==="complex64"){if(o.dtype==="complex64")return Ln({inputs:{x:o},backend:t});const a=Ht(o.shape),i=Zp({inputs:{x:o},backend:t,attrs:{dtype:"float32"}}),c=Yo({inputs:{real:i,imag:a},backend:t});return a.dispose(),t.disposeIntermediateTensorInfo(i),c}if(o.dtype==="complex64"){const a=ru({inputs:{input:o},backend:t}),i=Zp({inputs:{x:a},backend:t,attrs:{dtype:r}});return t.disposeIntermediateTensorInfo(a),i}if(!Jy(o.dtype,r)){const a=Ln({inputs:{x:o},backend:t});return{dataId:a.dataId,shape:a.shape,dtype:r}}if(t.shouldExecuteOnCPU([o])){const a=t.texData.get(o.dataId).values,[i,c,u]=q4(a,o.shape,o.dtype,r);return t.makeTensorInfo(i,c,u)}if(r==="int32")return VH(o,t);if(r==="bool"){const a=t.makeTensorInfo([],"bool",Qt("bool",1)),c=_v({inputs:{a:o,b:a},backend:t});return t.disposeIntermediateTensorInfo(a),c}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${r}`)}const WH={kernelName:Wa,backendName:"webgl",kernelFunc:Zp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ny="return ceil(x);",UH=He({opSnippet:ny,packedOpSnippet:ny,cpuKernelImpl:X4}),GH={kernelName:Ua,backendName:"webgl",kernelFunc:UH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class HH{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`

      void main() {
        float value = getAAtOutCoords();
        if (isnan(value)) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, minVal, maxVal));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class jH{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode=`
      void main() {
        vec4 value = getAAtOutCoords();

        if (any(isnan(value))) {
          setOutput(value);
          return;
        }

        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qH(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{clipValueMin:r,clipValueMax:a}=s;let i;H().getBool("WEBGL_PACK_CLIP")?i=new jH(o.shape):i=new HH(o.shape);const c=[[r],[a]];return t.runWebGLProgram(i,[o],o.dtype,c)}const XH={kernelName:Pr,backendName:"webgl",kernelFunc:qH};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class KH{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode=`
      void main() {
        float re = abs(getRealAtOutCoords());
        float im = abs(getImagAtOutCoords());
        float mx = max(re, im);

        // sadly the length function in glsl is not underflow-safe
        // (at least not on Intel GPUs). So the safe solution is
        // to ensure underflow-safety in all cases.
        setOutput(
          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))
        );
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sy(n,e){return{dataId:e.dataId,dtype:e.dtype,shape:n.shape}}function YH(n){const{inputs:e,backend:t}=n,{x:s}=e,o=t.texData.get(s.dataId),r=new KH(s.shape),a=[sy(s,o.complexTensorInfos.real),sy(s,o.complexTensorInfos.imag)];return t.runWebGLProgram(r,a,a[0].dtype)}const ZH={kernelName:Ed,backendName:"webgl",kernelFunc:YH};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class JH{constructor(e){this.outputShape=[],this.outputShape=Xn(e,1),this.variableNames=e.map((a,i)=>`T${i}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let a=1;a<t.length;a++)t[a]=t[a-1]+e[a][1];const s=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let a=1;a<t.length;a++){const i=t[a-1];s.push(`else if (yC < ${t[a]}) setOutput(getT${a}(yR, yC-${i}));`)}const o=t.length,r=t[t.length-1];s.push(`else setOutput(getT${o}(yR, yC-${r}));`),this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int yR = coords.x;
        int yC = coords.y;

        ${s.join(`
        `)}
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class QH{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Xn(e,t);const s=this.outputShape,o=s.length,r=dt(o),a=pn("coords",o),i=["x","y","z","w","u","v"].slice(0,o);this.variableNames=e.map((m,g)=>`T${g}`);const c=new Array(e.length-1);c[0]=e[0][t];for(let m=1;m<c.length;m++)c[m]=c[m-1]+e[m][t];const u=i[t],l=i.slice(-2),d=i.join();let h=`if (${u} < ${c[0]}) {
        return getChannel(
            getT0(${d}), vec2(${l.join()}));
        }`;for(let m=1;m<c.length;m++){const g=c[m-1];h+=`
        if (${u} < ${c[m]}  && ${u} >= ${c[m-1]}) {
          return getChannel(
            getT${m}(${Fu(i,u,g)}),
            vec2(${Fu(l,u,g)}));
        }`}const p=c.length,f=c[c.length-1];h+=`
        return getChannel(
          getT${p}(${Fu(i,u,f)}),
          vec2(${Fu(l,u,f)}));`,this.userCode=`
      float getValue(${i.map(m=>"int "+m)}) {
        ${h}
      }

      void main() {
        ${r} coords = getOutputCoords();
        vec4 result = vec4(getValue(${a}), 0., 0., 0.);

        ${a[o-1]} = ${a[o-1]} + 1;
        if (${a[o-1]} < ${s[o-1]}) {
          result.g = getValue(${a});
        }

        ${a[o-2]} = ${a[o-2]} + 1;
        if (${a[o-2]} < ${s[o-2]}) {
          result.a = getValue(${a});
        }

        ${a[o-1]} = ${a[o-1]} - 1;
        if (${a[o-2]} < ${s[o-2]} &&
            ${a[o-1]} < ${s[o-1]}) {
          result.b = getValue(${a});
        }
        setOutput(result);
      }
    `}}function Fu(n,e,t){const s=n.indexOf(e);return n.map((r,a)=>a===s?`${r} - ${t}`:r).join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Dh(n){const{inputs:e,backend:t}=n,{input:s}=e,o=t.texData.get(s.dataId);return Ln({inputs:{x:o.complexTensorInfos.imag},backend:t})}const e6={kernelName:Mf,backendName:"webgl",kernelFunc:Dh};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function fc(n,e,t){const s=n[0].dtype;if(s==="complex64"){const p=n.map(x=>ru({inputs:{input:x},backend:t})),f=n.map(x=>Dh({inputs:{input:x},backend:t})),m=fc(p,e,t),g=fc(f,e,t),b=Yo({inputs:{real:m,imag:g},backend:t});return p.forEach(x=>t.disposeIntermediateTensorInfo(x)),f.forEach(x=>t.disposeIntermediateTensorInfo(x)),t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),b}let o=t.shouldExecuteOnCPU(n);if(s==="string"&&(o=!0),o){const p=n.map(w=>{const k=[-1,L(w.shape.slice(e))];return le({inputs:{x:w},backend:t,attrs:{shape:k}})}),f=p.map(w=>({vals:t.readSync(w.dataId),shape:w.shape})),m=Xn(p.map(w=>w.shape),1),g=p[0].shape[0]===1,b=K4(f,m,s,g),x=Xn(n.map(w=>w.shape),e),y=t.makeTensorInfo(x,s,b);return p.forEach(w=>t.disposeIntermediateTensorInfo(w)),y}const r=n.filter(p=>L(p.shape)>0),a=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&r[0].shape.length>1;if(r.length===1){const p=a?new zs(n[0].shape,ko):new Co(n[0].shape,ko);return t.runWebGLProgram(p,n,s)}const i=H().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER");if(r.length>i){const p=[];for(let m=0;m<r.length;m+=i){const g=r.slice(m,m+i);p.push(fc(g,e,t))}const f=fc(p,e,t);for(const m of p)t.disposeIntermediateTensorInfo(m);return f}if(a){const p=new QH(r.map(f=>f.shape),e);return t.runWebGLProgram(p,r,s)}const{tensors2D:c,outShape:u}=t6(r,e,t),l=new JH(c.map(p=>p.shape)),d=t.runWebGLProgram(l,c,s);c.forEach(p=>t.disposeIntermediateTensorInfo(p));const h=le({inputs:{x:d},attrs:{shape:u},backend:t});return t.disposeIntermediateTensorInfo(d),h}function t6(n,e,t){const s=Xn(n.map(r=>r.shape),e);return{tensors2D:n.map(r=>le({inputs:{x:r},attrs:{shape:[-1,L(r.shape.slice(e))]},backend:t})),outShape:s}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Rv(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s,r=Re(o,e[0].shape)[0],a=e.map(u=>u.shape);ch(a,r);const i=Xn(e.map(u=>u.shape),r);if(L(i)===0)return t.makeTensorInfo(i,e[0].dtype,[]);const c=e.filter(u=>L(u.shape)>0);return c.length===1?Ln({inputs:{x:c[0]},backend:t}):fc(c,r,t)}const n6={kernelName:Kc,backendName:"webgl",kernelFunc:Rv};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Av{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,c=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,d=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4,g=e.dataFormat==="channelsLast",b=g?1:2,x=g?2:3,y=g?3:1;let w="",I="";s&&(o?w=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?w=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:w=`
          float activation(float x) {
            ${s}
          }
        `,I="result = activation(result);");const k=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${w}

      const ivec2 strides = ivec2(${c}, ${u});
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d2 = coords[${y}];

        ivec2 xRCCorner =
            ivec2(coords[${b}], coords[${x}]) * strides - pads;
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${h}; wR++) {
          int xR = xRCorner + wR * ${l};

          if (xR < 0 || xR >= ${e.inHeight}) {
            continue;
          }

          for (int wC = 0; wC < ${p}; wC++) {
            int xC = xCCorner + wC * ${d};

            if (xC < 0 || xC >= ${e.inWidth}) {
              continue;
            }

            for (int d1 = 0; d1 < ${f}; d1 += 4) {
              vec4 wValues = vec4(
                getW(wR, wC, d1, d2),
                getW(wR, wC, d1 + 1, d2),
                getW(wR, wC, d1 + 2, d2),
                getW(wR, wC, d1 + 3, d2)
              );

              if (${g}) {
                vec4 xValues = vec4(
                  getX(batch, xR, xC, d1),
                  getX(batch, xR, xC, d1 + 1),
                  getX(batch, xR, xC, d1 + 2),
                  getX(batch, xR, xC, d1 + 3)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec4 xValues = vec4(
                  getX(batch, d1, xR, xC),
                  getX(batch, d1 + 1, xR, xC),
                  getX(batch, d1 + 2, xR, xC),
                  getX(batch, d1 + 3, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }
            }

            if (${m===1}) {

              if (${g}) {
                dotProd +=
                    getX(batch, xR, xC, ${f}) *
                    getW(wR, wC, ${f}, d2);
              } else {
                dotProd +=
                    getX(batch, ${f}, xR, xC) *
                    getW(wR, wC, ${f}, d2);
              }

            } else if (${m===2}) {
              vec2 wValues = vec2(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2)
              );

              if (${g}) {
                vec2 xValues = vec2(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec2 xValues = vec2(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            } else if (${m===3}) {
              vec3 wValues = vec3(
                getW(wR, wC, ${f}, d2),
                getW(wR, wC, ${f} + 1, d2),
                getW(wR, wC, ${f} + 2, d2)
              );

              if (${g}) {
                vec3 xValues = vec3(
                  getX(batch, xR, xC, ${f}),
                  getX(batch, xR, xC, ${f} + 1),
                  getX(batch, xR, xC, ${f} + 2)
                );
                dotProd += dot(xValues, wValues);
              } else {
                vec3 xValues = vec3(
                  getX(batch, ${f}, xR, xC),
                  getX(batch, ${f} + 1, xR, xC),
                  getX(batch, ${f} + 2, xR, xC)
                );
                dotProd += dot(xValues, wValues);
              }

            }
          }
        }

        float result = dotProd;
        ${k}
        ${I}
        setOutput(result);
      }
    `}}class s6{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,s=e.padInfo.top,o=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,d=e.filterDepth,h=e.filterHeight,p=e.filterWidth,f=Math.floor(e.inChannels/4)*4,m=e.inChannels%4;this.userCode=`
      const ivec3 strides = ivec3(${r}, ${a}, ${i});
      const ivec3 pads = ivec3(${t}, ${s}, ${o});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d2 = coords.u;

        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;
        int xFCorner = xFRCCorner.x;
        int xRCorner = xFRCCorner.y;
        int xCCorner = xFRCCorner.z;

        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get
        // y(yF, yR, yC, d2). ? = to be determined. : = across all
        // values in that axis.
        float dotProd = 0.0;
        for (int wF = 0; wF < ${d}; wF++) {
          int xF = xFCorner + wF * ${c};

          if (xF < 0 || xF >= ${e.inDepth}) {
            continue;
          }

          for (int wR = 0; wR < ${h}; wR++) {
            int xR = xRCorner + wR * ${u};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int wC = 0; wC < ${p}; wC++) {
              int xC = xCCorner + wC * ${l};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              for (int d1 = 0; d1 < ${f}; d1 += 4) {
                vec4 xValues = vec4(
                  getX(batch, xF, xR, xC, d1),
                  getX(batch, xF, xR, xC, d1 + 1),
                  getX(batch, xF, xR, xC, d1 + 2),
                  getX(batch, xF, xR, xC, d1 + 3)
                );
                vec4 wValues = vec4(
                  getW(wF, wR, wC, d1, d2),
                  getW(wF, wR, wC, d1 + 1, d2),
                  getW(wF, wR, wC, d1 + 2, d2),
                  getW(wF, wR, wC, d1 + 3, d2)
                );

                dotProd += dot(xValues, wValues);
              }

              if (${m===1}) {
                dotProd +=
                  getX(batch, xF, xR, xC, ${f}) *
                  getW(wF, wR, wC, ${f}, d2);
              } else if (${m===2}) {
                vec2 xValues = vec2(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1)
                );
                vec2 wValues = vec2(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2)
                );
                dotProd += dot(xValues, wValues);
              } else if (${m===3}) {
                vec3 xValues = vec3(
                  getX(batch, xF, xR, xC, ${f}),
                  getX(batch, xF, xR, xC, ${f} + 1),
                  getX(batch, xF, xR, xC, ${f} + 2)
                );
                vec3 wValues = vec3(
                  getW(wF, wR, wC, ${f}, d2),
                  getW(wF, wR, wC, ${f} + 1, d2),
                  getW(wF, wR, wC, ${f} + 2, d2)
                );
                dotProd += dot(xValues, wValues);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Dv{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yn(this.outputShape.length);const a=e.padInfo.left,i=e.strideWidth,c=e.dilationWidth,u=e.filterHeight,l=e.filterWidth,d=l;let h=`
       int xR; int xC; int xCOffset;
       vec4 wTexel; vec4 previous; vec4 final;`;for(let g=0;g<l;g++)h+=`
           vec4 xTexelC${g*2};
           int xTexelC${g*2}Ready;
           vec4 xTexelC${g*2+1};
           int xTexelC${g*2+1}Ready;
           vec4 xC${g};`;h+=`
     for (int r = 0; r < ${u}; r++) {
      for (int d1 = 0; d1 < ${e.inChannels}; d1 += 2) {
       `;for(let g=0;g<l;g++)h+=`
           xTexelC${g*2} = vec4(0.0);
           xTexelC${g*2}Ready = 0;
           xTexelC${g*2+1} = vec4(0.0);
           xTexelC${g*2+1}Ready = 0;
           xC${g} = vec4(0.0);`;h+=`
         xR = xRCorner + r * dilations[0];
         if (xR >=0 && xR < inDims[0]) {
       `;for(let g=0;g<(d+1)/2;g++){const b=g*2;if(h+=`
           xC = xCCorner + ${b*c};
           `,i===1){if(b<l&&(a%2===1?(h+=`
                 xCOffset = xC + 1;
                 if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);

                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }
               `,c===1&&b>0?h+=`
                 xC${b} = vec4(xTexelC${b-2}.zw, xTexelC${b}.xy);
                 `:h+=`
                   xCOffset = xC + 1 - 2;

                   if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       previous.zw = vec2(0.0);
                     }

                     xC${b} = vec4(previous.zw, xTexelC${b}.xy);
                   } else {
                     xC${b} = vec4(0.0, 0.0, xTexelC${b}.xy);
                   }
                   `):h+=`
                 if (xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xC${b} = xTexelC${b};
                 `,b+1<l)){const x=a%2===0?yf(c):c;c%2===0&&a%2===1||c%2!==0&&a%2!==1?(h+=`
                   xCOffset = xC + imod(pads[1], 2) + ${x};

                   if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                     xTexelC${b+1} = getX(batch, xR, xCOffset, d1);

                     // Need to manually clear unused channels in case
                     // we're reading from recycled texture.
                     if (xCOffset + 1 >= inDims[1]) {
                       xTexelC${b+1}.zw = vec2(0.0);
                     }
                     xTexelC${b+1}Ready = 1;
                   }
                   `,c>1?h+=`
                     xCOffset -= 2;
                     if (xCOffset >= 0 && xCOffset < inDims[1]) {
                      previous = getX(batch, xR, xCOffset, d1);
                      xC${b+1} = vec4(previous.zw, xTexelC${b+1}.xy);
                     } else {
                      xC${b+1} = vec4(0.0, 0.0, xTexelC${b+1}.xy);
                     }
                     `:h+=`
                     xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.xy);
                     `):x===1?h+=`
                     xC${b+1} = xTexelC${b};
                     `:h+=`
                     xCOffset = xC + ${x};

                     if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                       xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                       if (xCOffset + 1 >= inDims[1]) {
                         xTexelC${b+1}.zw = vec2(0.0);
                       }
                       xTexelC${b+1}Ready = 1;
                     }

                     xC${b+1} = xTexelC${b+1};
                     `}}else b<l&&(a%2===1?(h+=`
                 xCOffset = xC + 1 - strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xCOffset, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xC + 1, d1);
                   // Need to manually clear unused channels in case
                   // we're reading from recycled texture.
                   if (xC + 2 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.0);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
               `,b+1<l&&(h+=`
                   final = vec4(0.0);
                   xCOffset = xC + 1 + strides[1];
                   if(xCOffset >= 0 && xCOffset < inDims[1]) {
                     final = getX(batch, xR, xCOffset, d1);
                   }
                   xC${b+1} = vec4(xTexelC${b+1}.xy, final.xy);
                 `)):(h+=`
                 if(xC >= 0 && xC < inDims[1] && xTexelC${b}Ready == 0) {
                   xTexelC${b} = getX(batch, xR, xC, d1);
                   if (xC + 1 >= inDims[1]) {
                     xTexelC${b}.zw = vec2(0.0);
                   }
                   xTexelC${b}Ready = 1;
                 }

                 xCOffset = xC + strides[1];
                 if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${b+1}Ready == 0) {
                   xTexelC${b+1} = getX(batch, xR, xCOffset, d1);
                   if (xCOffset + 1 >= inDims[1]) {
                     xTexelC${b+1}.zw = vec2(0.);
                   }
                   xTexelC${b+1}Ready = 1;
                 }

                 xC${b} = vec4(
                   xTexelC${b}.xy, xTexelC${b+1}.xy);
               `,b+1<l&&(h+=`
                   xC${b+1} = vec4(xTexelC${b}.zw, xTexelC${b+1}.zw);
                 `)));b<l&&(h+=`
             wTexel = getW(r, ${b}, d1, d2);
             dotProd += xC${b}.xxzz * vec4(wTexel.xy, wTexel.xy);
             if(d1 + 1 < ${e.inChannels}) {
               dotProd += xC${b}.yyww * vec4(wTexel.zw, wTexel.zw);
             }
           `,b+1<l&&(h+=`
               wTexel = getW(r, ${b+1}, d1, d2);
               dotProd += xC${b+1}.xxzz * vec4(wTexel.xy, wTexel.xy);
               if(d1 + 1 < ${e.inChannels}) {
                 dotProd += xC${b+1}.yyww * vec4(wTexel.zw, wTexel.zw);
               }
             `))}h+=`
     }
   `,h+=`
     }
   `,h+=`
     }
   `;let p="",f="";s&&(o?p=`vec4 activation(vec4 a) {
           vec4 b = getPreluActivationWeightsAtOutCoords();
           ${s}
         }`:r?p=`vec4 activation(vec4 a) {
           vec4 b = getLeakyreluAlphaAtOutCoords();
           ${s}
         }`:p=`vec4 activation(vec4 x) {
           ${s}
         }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
       ${p}

       void main() {
         ivec4 coords = getOutputCoords();
         int batch = coords.x;
         ivec2 xRCCorner = coords.yz * strides - pads;
         int d2 = coords.w;
         int xRCorner = xRCCorner.x;
         int xCCorner = xRCCorner.y;

         //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
         vec4 dotProd = vec4(0.000000000000001);

         ${h}

         vec4 result = dotProd - vec4(0.000000000000001);
         ${m}
         ${f}
         setOutput(result);
       }
     `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o6{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec4"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=yn(this.outputShape.length);const{dataFormat:s}=t,o=xn(),r=s==="channelsLast",a=r?1:2,i=r?2:3,c=this.enableShapeUniforms?"if(blockIndex < outShape[2] && pos < outShape[1]) {":`if(blockIndex < ${e[2]} && pos < ${e[1]}) {`;let u="";for(let l=0;l<=1;l++)for(let d=0;d<=1;d++)u+=`
          blockIndex = rc.z + ${d};
          pos = rc.y + ${l};

          ${c}
            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];
            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);

            if(d0 < inputShape[${a}] && d0 >= 0) {
              // Use custom imod instead mod. On Intel GPU, mod may generate
              // unexpected value.
              // https://github.com/tensorflow/tfjs/issues/5447
              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];
              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /
                  inChannels);

              if(d1 < inputShape[${i}] && d1 >= 0) {

                ch = imod(pos, inChannels);

                if (${r}) {
                  innerDims = vec2(d1, ch);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, d0, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                } else {
                  innerDims = vec2(d0, d1);
                  result[${l*2+d}] = getChannel(
                    getA(rc.x, ch, int(innerDims.x),
                    int(innerDims.y)), innerDims);
                }
              }
            }
          }
        `;this.userCode=`
      void main() {
        ivec3 rc = getOutputCoords();

        vec4 result = vec4(0);

        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;
        vec2 innerDims;

        ${u}

        ${o.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function wd(n,e){const t=n.length;return t>=3?e?[...n.slice(0,-3),n[t-3]*n[t-2],n[t-1]]:[...n.slice(0,-3),n[t-3],n[t-2]*n[t-1]]:!e&&t===1&&n[0]>1?[n[0],1]:null}function Fv({x:n,filter:e,convInfo:t,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:a=0,activation:i=null}){const c=n.shape,u=s.texData.get(n.dataId),l=t.inChannels,d=c[0]*c[1]*c[2],h=t.outChannels,p=t.dataFormat==="channelsLast",f=!1,m=!1;let g;const b=[];if(r!=null){const w=wd(r.shape,p);w!=null&&(r=le({inputs:{x:r},backend:s,attrs:{shape:w}}),b.push(r))}if(o!=null){const w=wd(o.shape,p);w!=null&&(o=le({inputs:{x:o},backend:s,attrs:{shape:w}}),b.push(o))}if(!((d===1||h===1)&&l>Sv)&&u.isPacked&&p&&u.texture!=null&&c[2]%2!==0&&Ke(u.shape.slice(-3),c.slice(-3))){const w=c[0]*c[1]*(c[2]+1),I={dataId:n.dataId,shape:[1,w,t.inChannels],dtype:n.dtype},k=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,$(xd(u.shape,I.shape),()=>`packed reshape ${u.shape} to ${I.shape} isn't free`);const v=le({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}});b.push(v);const C=yd({a:I,b:v,backend:s,transposeA:f,transposeB:m,bias:o,activation:i,preluActivationWeights:r,leakyreluAlpha:a}),N=s.texData.get(C.dataId);$(N.isPacked,()=>"batchMatMul result is expected to be packed"),u.shape=k,N.shape=t.outShape,g=Ln({inputs:{x:C},backend:s}),g.shape=t.outShape,b.push(C)}else{const w=t.outHeight*t.outWidth,I=le({inputs:{x:n},backend:s,attrs:{shape:p?[t.batchSize,w,t.inChannels]:[t.batchSize,t.inChannels,w]}}),k=le({inputs:{x:e},backend:s,attrs:{shape:[1,t.inChannels,t.outChannels]}}),v=yd({a:p?I:k,b:p?k:I,transposeA:!p,transposeB:m,backend:s,bias:o,activation:i,preluActivationWeights:r,leakyreluAlpha:a});g=le({inputs:{x:v},backend:s,attrs:{shape:t.outShape}}),b.push(I),b.push(k),b.push(v)}for(const w of b)s.disposeIntermediateTensorInfo(w);return g}function Ov({x:n,filter:e,convInfo:t,backend:s,bias:o=null,preluActivationWeights:r=null,leakyreluAlpha:a=0,activation:i=null}){const{filterWidth:c,filterHeight:u,inChannels:l,outWidth:d,outHeight:h,dataFormat:p}=t,f=p==="channelsLast",m=c*u*l,g=h*d,b=[t.batchSize,m,g],x=!0,y=!1,w=[];if(r!=null){const z=wd(r.shape,f);z!=null&&(r=le({inputs:{x:r},backend:s,attrs:{shape:z}}),w.push(r))}if(o!=null){const z=wd(o.shape,f);z!=null&&(o=le({inputs:{x:o},backend:s,attrs:{shape:z}}),w.push(o))}const I=le({inputs:{x:e},backend:s,attrs:{shape:[1,m,L(e.shape)/m]}});w.push(I);const k=new o6(b,t),v=[n.shape,[t.padInfo.top,t.padInfo.left],[t.strideHeight,t.strideWidth],[t.dilationHeight,t.dilationWidth],[t.inChannels],[t.filterWidth*t.inChannels],[t.outWidth]],C=s.runWebGLProgram(k,[n],"float32",v),N=le({inputs:{x:C},backend:s,attrs:{shape:b}});w.push(C),w.push(N);const T=o!=null,_=r!=null,O=i==="leakyrelu",P=i?Ec(i,!0):null,V=new Cv(f?N.shape:I.shape,f?I.shape:N.shape,f?[t.batchSize,g,t.outChannels]:[t.batchSize,t.outChannels,g],x,y,T,P,_,O),B=f?[N,I]:[I,N];if(o&&B.push(o),_&&B.push(r),O){const z=s.makeTensorInfo([],"float32",Uo(a,"float32"));B.push(z),w.push(z)}const W=s.runWebGLProgram(V,B,"float32"),q=le({inputs:{x:W},backend:s,attrs:{shape:t.outShape}});w.push(W);for(const z of w)s.disposeIntermediateTensorInfo(z);return q}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function r6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:a,pad:i,dataFormat:c,dilations:u,dimRoundingMode:l}=s,d=As(c),h=Nt(o.shape,r.shape,a,u,i,l,!1,d);let p;if(h.filterHeight===1&&h.filterWidth===1&&h.dilationHeight===1&&h.dilationWidth===1&&h.strideHeight===1&&h.strideWidth===1&&(h.padInfo.type==="SAME"||h.padInfo.type==="VALID"))p=Fv({x:o,filter:r,convInfo:h,backend:t});else if(h.strideWidth<=2&&d==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){const m=new Dv(h),g=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];p=t.runWebGLProgram(m,[o,r],"float32",g)}else if(H().getBool("WEBGL_CONV_IM2COL"))p=Ov({x:o,filter:r,convInfo:h,backend:t});else{const m=new Av(h);p=t.runWebGLProgram(m,[o,r],"float32")}const f=le({inputs:{x:p},backend:t,attrs:{shape:h.outShape}});return t.disposeIntermediateTensorInfo(p),f}const a6={kernelName:Ga,backendName:"webgl",kernelFunc:r6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class i6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,o=e.padInfo.top,r=e.padInfo.left,a=e.dataFormat==="channelsLast";this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int d2 = coords.w;

        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              if (${a}) {
                float dyValue = getDy(b, yR, yC, d2);
                float xValue = getX(b, xR, xC, d1);
                dotProd += (xValue * dyValue);
              } else {
                float dyValue = getDy(b, d2, yR, yC);
                float xValue = getX(b, d1, xR, xC);
                dotProd += (xValue * dyValue);
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class c6{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,a=e.dataFormat==="channelsLast",i=t-1-e.padInfo.top,c=s-1-e.padInfo.left,u=a?1:2,l=a?2:3,d=a?3:1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[${d}];

        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {

              if (${a}) {
                float xValue = getDy(batch, idyR, idyC, d2);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              } else {
                float xValue = getDy(batch, d2, idyR, idyC);
                float wValue = getW(wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }

            }
          }
        }
        setOutput(dotProd);
      }
    `}}class l6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,s=e.strideHeight,o=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`
      void main() {
        ivec5 coords = getOutputCoords();
        int wF = coords.x;
        int wR = coords.y;
        int wC = coords.z;
        int d1 = coords.w;
        int d2 = coords.u;

        float dotProd = 0.0;

        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yF = 0; yF < ${e.outDepth}; yF++) {
            int xF = wF + yF * ${t} - ${r};

            if (xF < 0 || xF >= ${e.inDepth}) {
              continue;
            }

            for (int yR = 0; yR < ${e.outHeight}; yR++) {
              int xR = wR + yR * ${s} - ${a};

              if (xR < 0 || xR >= ${e.inHeight}) {
                continue;
              }

              for (int yC = 0; yC < ${e.outWidth}; yC++) {
                int xC = wC + yC * ${o} - ${i};

                if (xC < 0 || xC >= ${e.inWidth}) {
                  continue;
                }

                float dyValue = getDy(b, yF, yR, yC, d2);
                float xValue = getX(b, xF, xR, xC, d1);
                dotProd += (xValue * dyValue);
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class u6{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,s=e.filterHeight,o=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,c=t-1-e.padInfo.front,u=s-1-e.padInfo.top,l=o-1-e.padInfo.left;this.userCode=`
      const ivec3 pads = ivec3(${c}, ${u}, ${l});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.u;


        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyFCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        float dotProd = 0.0;
        for (int wF = 0; wF < ${t}; wF++) {
          float dyF = float(dyFCorner + wF) / ${r}.0;

          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {
            continue;
          }
          int idyF = int(dyF);

          int wFPerm = ${t} - 1 - wF;

          for (int wR = 0; wR < ${s}; wR++) {
            float dyR = float(dyRCorner + wR) / ${a}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
              fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            int wRPerm = ${s} - 1 - wR;

            for (int wC = 0; wC < ${o}; wC++) {
              float dyC = float(dyCCorner + wC) / ${i}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              int wCPerm = ${o} - 1 - wC;

              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {
                float xValue = getDy(batch, idyF, idyR, idyC, d2);
                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);
                dotProd += xValue * wValue;
              }
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:a,pad:i,dataFormat:c,dimRoundingMode:u,filterShape:l}=s,d=As(c),h=Nt(o.shape,l,a,1,i,u,!1,d),p=new i6(h);return t.runWebGLProgram(p,[o,r],"float32")}const h6={kernelName:Nf,backendName:"webgl",kernelFunc:d6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p6(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{inputShape:a,strides:i,pad:c,dataFormat:u,dimRoundingMode:l}=s,d=As(u),h=Nt(a,r.shape,i,1,c,l,!1,d),p=new c6(h);return t.runWebGLProgram(p,[o,r],"float32")}const f6={kernelName:Ha,backendName:"webgl",kernelFunc:p6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function m6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:a,pad:i,dilations:c}=s,u=Go(o.shape,r.shape,a,c,i),l=new s6(u);return t.runWebGLProgram(l,[o,r],"float32")}const g6={kernelName:_d,backendName:"webgl",kernelFunc:m6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function b6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:a,pad:i,filterShape:c}=s,u=Go(o.shape,c,a,1,i),l=new l6(u);return t.runWebGLProgram(l,[o,r],"float32")}const x6={kernelName:Tf,backendName:"webgl",kernelFunc:b6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function y6(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{pad:a,strides:i,inputShape:c}=s,u=Go(c,r.shape,i,1,a),l=new u6(u);return t.runWebGLProgram(l,[o,r],"float32")}const w6={kernelName:Ef,backendName:"webgl",kernelFunc:y6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const I6=Ki+`
  return cos(x);
`,k6=He({opSnippet:I6}),v6={kernelName:ja,backendName:"webgl",kernelFunc:k6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $6=`
  float e2x = exp(-x);
  return (e2x + 1.0 / e2x) / 2.0;
`,C6=He({opSnippet:$6}),S6={kernelName:qa,backendName:"webgl",kernelFunc:C6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class N6{constructor(e,t,s,o,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,c,u]=e,[l]=t,[d,h]=s;this.outputShape=[l,d,h,u];const p=o==="bilinear"?1:0,[f,m]=[`${i-1}.0`,`${c-1}.0`],[g,b,x]=d>1?[`${(i-1)/(d-1)}`,"(y2-y1) * height_ratio",`y1*${f} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${f}`],[y,w,I]=h>1?[`${(c-1)/(h-1)}`,"(x2-x1) * width_ratio",`x1*${m} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${m}`];this.userCode=`
      const float height_ratio = float(${g});
      const float width_ratio = float(${y});
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int y = coords[1];
        int x = coords[2];
        int d = coords[3];

        // get box vals
        float y1 = getBoxes(b,0);
        float x1 = getBoxes(b,1);
        float y2 = getBoxes(b,2);
        float x2 = getBoxes(b,3);

        // get image in batch index
        int bInd = round(getBoxInd(b));
        if(bInd < 0 || bInd >= ${a}) {
          return;
        }

        float height_scale = ${b};
        float width_scale = ${w};

        float in_y = ${x};
        if( in_y < 0.0 || in_y > ${f} ) {
          setOutput(float(${r}));
          return;
        }
        float in_x = ${I};
        if( in_x < 0.0 || in_x > ${m} ) {
          setOutput(float(${r}));
          return;
        }

        vec2 sourceFracIndexCR = vec2(in_x,in_y);
        if(${p} == 1) {
          // Compute the four integer indices.
          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);
          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));

          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);
          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);
          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);
          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);

          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);

          float top = topLeft + (topRight - topLeft) * fracCR.x;
          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;
          float newValue = top + (bottom - top) * fracCR.y;
          setOutput(newValue);
        } else {
          // Compute the coordinators of nearest neighbor point.
          ivec2 sourceNearestCR = ivec2(floor(
            sourceFracIndexCR + vec2(0.5,0.5)));
          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);
          setOutput(newValue);
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T6=n=>{const{inputs:e,backend:t,attrs:s}=n,{image:o,boxes:r,boxInd:a}=e,{cropSize:i,method:c,extrapolationValue:u}=s,l=new N6(o.shape,r.shape,i,c,u);return t.runWebGLProgram(l,[o,r,a],"float32")},E6={kernelName:Zc,backendName:"webgl",kernelFunc:T6};var Rc;(function(n){n.Prod="*",n.Sum="+"})(Rc||(Rc={}));class oy{constructor(e,t,s,o){this.op=e,this.outputShape=t,this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}];const r=this.outputShape.length,a=this.op===Rc.Prod?"1.0":"0.0",i=s?a:`getX(${ry(r,"coords",this.op)})`,c=this.outputShape[this.outputShape.length-1];let u="",l="";s?(u=o?`end != ${c-1}`:"end != 0",l=o?"end + 1":"end - 1"):(u=o?`end + pow2 < ${c}`:"end >= pow2",l=o?"end + pow2":"end - pow2"),this.userCode=`
      void main() {
        ${dt(r)} coords = getOutputCoords();
        int end = ${ay(r,"coords",this.op)};
        float val = ${i};
        int pow2 = int(pow(2.0, index));
        if (${u}) {
          int idx = ${l};
          ${ay(r,"coords",this.op)} = idx;
          val ${this.op}= getX(${ry(r,"coords",this.op)});
        }
        setOutput(val);
      }
    `}}function ry(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.x, ${e}.y`;if(n===3)return`${e}.x, ${e}.y, ${e}.z`;if(n===4)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}function ay(n,e,t){if(n===1)return`${e}`;if(n===2)return`${e}.y`;if(n===3)return`${e}.z`;if(n===4)return`${e}.w`;throw new Error(`Cumulative ${t} for rank ${n} is not yet supported`)}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Mv(n,e,t,s,o,r){const a=e.shape.length,i=pt([s],a);let c=e;i!=null&&(c=bn({inputs:{x:e},backend:t,attrs:{perm:i}}));const u=rt(1,a)[0];if(u!==a-1)throw new Error(`WebGL cumprod shader expects an inner-most axis=${e.shape.length-1} but got axis=${s}`);const l=c.shape[u];let d=Ln({inputs:{x:c},backend:t});for(let h=0;h<=Math.ceil(Math.log2(l))-1;h++){const p=new oy(n,c.shape,!1,r),f=[[h]],m=d;d=t.runWebGLProgram(p,[d],d.dtype,f),t.disposeIntermediateTensorInfo(m)}if(o){const h=new oy(n,c.shape,o,r),p=d;d=t.runWebGLProgram(h,[d],d.dtype),t.disposeIntermediateTensorInfo(p)}if(i!=null){const h=Qs(i),p=bn({inputs:{x:d},backend:t,attrs:{perm:h}});return t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(c),p}return d}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:a,reverse:i}=s;return Mv(Rc.Prod,o,t,r,a,i)}const R6={kernelName:Yc,backendName:"webgl",kernelFunc:_6};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function A6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:a,reverse:i}=s;return Mv(Rc.Sum,o,t,r,a,i)}const D6={kernelName:Xa,backendName:"webgl",kernelFunc:A6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,weights:r}=e,{size:a,binaryOutput:i}=s;if(o.shape.length===1){const c=t.readSync(o.dataId),u=t.readSync(r.dataId),l=gv(c,u,r.dtype,r.shape,a);return t.makeTensorInfo([a],r.dtype,l)}else if(o.shape.length===2){const c=t.bufferSync(o),u=t.bufferSync(r),l=j4(c,u,a,i);return t.makeTensorInfo(l.shape,r.dtype,l.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${o.shape.length}.`)}const O6={kernelName:_f,backendName:"webgl",kernelFunc:F6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class M6{constructor(e,t,s){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=s,this.userCode=`
    void main() {
      ivec4 coords = getOutputCoords();
      int b = coords[0];
      int h = ${this.getHeightCoordString()};
      int w = ${this.getWidthCoordString()};
      int d = ${this.getDepthCoordString()};

      int in_h = h / ${t};
      int offset_h = imod(h, ${t});
      int in_w = w / ${t};
      int offset_w = imod(w, ${t});
      int offset_d = (offset_h * ${t} + offset_w) *
        ${this.getOutputDepthSize()};
      int in_d = d + offset_d;

      float result = ${this.getInputSamplingString()};
      setOutput(result);
    }
  `}getHeightCoordString(){return this.dataFormat==="NHWC"?"coords[1]":"coords[2]"}getWidthCoordString(){return this.dataFormat==="NHWC"?"coords[2]":"coords[3]"}getDepthCoordString(){return this.dataFormat==="NHWC"?"coords[3]":"coords[1]"}getOutputDepthSize(){return this.dataFormat==="NHWC"?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return this.dataFormat==="NHWC"?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function L6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockSize:r,dataFormat:a}=s,i=o.shape[0],c=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],d=c*r,h=u*r,p=l/(r*r),f=a==="NHWC"?[i,d,h,p]:[i,p,d,h],m=new M6(f,r,a);return t.runWebGLProgram(m,[o],o.dtype)}const P6={kernelName:Jc,backendName:"webgl",kernelFunc:L6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Lv{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yn(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,c=e.outChannels/e.inChannels;let u="",l="";s&&(o?u=`float activation(float a) {
          float b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?u=`float activation(float a) {
          float b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:u=`
          float activation(float x) {
            ${s}
          }
        `,l="result = activation(result);");const d=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${u}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${c};
        int q = d2 - d1 * ${c};

        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.
        for (int wR = 0; wR < ${a}; wR++) {
          int xR = xRCorner + wR * dilations[0];

          if (xR < 0 || xR >= inDims[0]) {
            continue;
          }

          for (int wC = 0; wC < ${i}; wC++) {
            int xC = xCCorner + wC * dilations[1];

            if (xC < 0 || xC >= inDims[1]) {
              continue;
            }

            float xVal = getX(batch, xR, xC, d1);
            float wVal = getW(wR, wC, d1, q);
            dotProd += xVal * wVal;
          }
        }

        float result = dotProd;
        ${d}
        ${l}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Pv{constructor(e,t=!1,s=null,o=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=yn(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,c=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,d=e.filterWidth,h=d;let p=`
      int xR; int xC; int xCOffset;
      vec4 wTexel; vec4 previous; vec4 final;`;for(let b=0;b<d;b++)p+=`
          vec4 xTexelC${b*2};
          int xTexelC${b*2}Ready;
          vec4 xTexelC${b*2+1};
          int xTexelC${b*2+1}Ready;
          vec4 xC${b};`;p+=`
    for (int r = 0; r < ${l}; r++) {
      `;for(let b=0;b<d;b++)p+=`
          xTexelC${b*2} = vec4(0.0);
          xTexelC${b*2}Ready = 0;
          xTexelC${b*2+1} = vec4(0.0);
          xTexelC${b*2+1}Ready = 0;
          xC${b} = vec4(0.0);`;p+=`
        xR = xRCorner + r * dilations[0];
        if (xR >=0 && xR < inDims[0]) {
      `;for(let b=0;b<(h+1)/2;b++){const x=b*2;if(p+=`
          xC = xCCorner + ${x*u};
          `,c===1){if(x<d&&(i%2===1?(p+=`
                xCOffset = xC + 1;
                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);

                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }
              `,u===1&&x>0?p+=`
                xC${x} = vec4(xTexelC${x-2}.zw, xTexelC${x}.xy);
                `:p+=`
                  xCOffset = xC + 1 - 2;

                  if (xCOffset >= 0 && xCOffset < inDims[1]) {
                    previous = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      previous.zw = vec2(0.0);
                    }

                    xC${x} = vec4(previous.zw, xTexelC${x}.xy);
                  } else {
                    xC${x} = vec4(0.0, 0.0, xTexelC${x}.xy);
                  }
                  `):p+=`
                if (xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xC${x} = xTexelC${x};
                `,x+1<d)){const y=i%2===0?yf(u):u;u%2===0&&i%2===1||u%2!==0&&i%2!==1?(p+=`
                  xCOffset = xC + imod(pads[1], 2) + ${y};

                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                    xTexelC${x+1} = getX(batch, xR, xCOffset, d1);

                    // Need to manually clear unused channels in case
                    // we're reading from recycled texture.
                    if (xCOffset + 1 >= inDims[1]) {
                      xTexelC${x+1}.zw = vec2(0.0);
                    }
                    xTexelC${x+1}Ready = 1;
                  }
                  `,u>1?p+=`
                    xCOffset -= 2;
                    if (xCOffset >= 0 && xCOffset < inDims[1]) {
                     previous = getX(batch, xR, xCOffset, d1);
                     xC${x+1} = vec4(previous.zw, xTexelC${x+1}.xy);
                    } else {
                     xC${x+1} = vec4(0.0, 0.0, xTexelC${x+1}.xy);
                    }
                    `:p+=`
                    xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.xy);
                    `):y===1?p+=`
                    xC${x+1} = xTexelC${x};
                    `:p+=`
                    xCOffset = xC + ${y};

                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                      xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                      if (xCOffset + 1 >= inDims[1]) {
                        xTexelC${x+1}.zw = vec2(0.0);
                      }
                      xTexelC${x+1}Ready = 1;
                    }

                    xC${x+1} = xTexelC${x+1};
                    `}}else x<d&&(i%2===1?(p+=`
                xCOffset = xC + 1 - strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xCOffset, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xC + 1, d1);
                  // Need to manually clear unused channels in case
                  // we're reading from recycled texture.
                  if (xC + 2 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.0);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
              `,x+1<d&&(p+=`
                  final = vec4(0.0);
                  xCOffset = xC + 1 + strides[1];
                  if(xCOffset >= 0 && xCOffset < inDims[1]) {
                    final = getX(batch, xR, xCOffset, d1);
                  }
                  xC${x+1} = vec4(xTexelC${x+1}.xy, final.xy);
                `)):(p+=`
                if(xC >= 0 && xC < inDims[1] && xTexelC${x}Ready == 0) {
                  xTexelC${x} = getX(batch, xR, xC, d1);
                  if (xC + 1 >= inDims[1]) {
                    xTexelC${x}.zw = vec2(0.0);
                  }
                  xTexelC${x}Ready = 1;
                }

                xCOffset = xC + strides[1];
                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${x+1}Ready == 0) {
                  xTexelC${x+1} = getX(batch, xR, xCOffset, d1);
                  if (xCOffset + 1 >= inDims[1]) {
                    xTexelC${x+1}.zw = vec2(0.);
                  }
                  xTexelC${x+1}Ready = 1;
                }

                xC${x} = vec4(
                  xTexelC${x}.xy, xTexelC${x+1}.xy);
              `,x+1<d&&(p+=`
                  xC${x+1} = vec4(xTexelC${x}.zw, xTexelC${x+1}.zw);
                `)));x<d&&(p+=`
            wTexel = getW(r, ${x}, d1, q);
            dotProd += xC${x} * vec4(wTexel.xz, wTexel.xz);
          `,x+1<d&&(p+=`
              wTexel = getW(r, ${x+1}, d1, q);
              dotProd += xC${x+1} * vec4(wTexel.xz, wTexel.xz);
            `))}p+=`
    }
  `,p+=`
      }
    `;let f="",m="";s&&(o?f=`vec4 activation(vec4 a) {
          vec4 b = getPreluActivationWeightsAtOutCoords();
          ${s}
        }`:r?f=`vec4 activation(vec4 a) {
          vec4 b = getLeakyreluAlphaAtOutCoords();
          ${s}
        }`:f=`vec4 activation(vec4 x) {
          ${s}
        }`,m="result = activation(result);");const g=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`
      ${f}

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        ivec2 xRCCorner = coords.yz * strides - pads;
        int d2 = coords.w;
        int d1 = d2 / ${a};
        int q = d2 - d1 * ${a};
        int xRCorner = xRCCorner.x;
        int xCCorner = xRCCorner.y;

        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.
        vec4 dotProd = vec4(0.000000000000001);

        ${p}

        vec4 result = dotProd - vec4(0.000000000000001);
        ${g}
        ${m}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function B6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:a,pad:i,dilations:c,dimRoundingMode:u}=s;let l=c;l==null&&(l=[1,1]),$(cn(a,l),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`);const d=Nt(o.shape,r.shape,a,l,i,u,!0);let h;H().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?h=new Pv(d):h=new Lv(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return t.runWebGLProgram(h,[o,r],"float32",p)}const z6={kernelName:Ka,backendName:"webgl",kernelFunc:B6};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class V6{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,s=e.strideWidth,o=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int wR = coords.x;
        int wC = coords.y;
        int d1 = coords.z;
        int dm = coords.w;
        int d2 = d1 * ${a} + dm;

        float dotProd = 0.0;

        // TO DO: Vec4 over the batch size
        for (int b = 0; b < ${e.batchSize}; b++) {
          for (int yR = 0; yR < ${e.outHeight}; yR++) {
            int xR = wR + yR * ${t} - ${o};

            if (xR < 0 || xR >= ${e.inHeight}) {
              continue;
            }

            for (int yC = 0; yC < ${e.outWidth}; yC++) {
              int xC = wC + yC * ${s} - ${r};

              if (xC < 0 || xC >= ${e.inWidth}) {
                continue;
              }

              float dyValue = getDy(b, yR, yC, d2);
              float xValue = getX(b, xR, xC, d1);
              dotProd += (xValue * dyValue);
            }
          }
        }
        setOutput(dotProd);
      }
    `}}class W6{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,s=e.filterWidth,o=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=s-1-e.padInfo.left,c=e.outChannels/e.inChannels;this.userCode=`
      const ivec2 pads = ivec2(${a}, ${i});

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords[0];
        int d1 = coords[3];
        ivec2 dyCorner = coords.yz - pads;
        int dyRCorner = dyCorner.x;
        int dyCCorner = dyCorner.y;

        float dotProd = 0.0;

        for (int wR = 0; wR < ${t}; wR++) {
          float dyR = float(dyRCorner + wR) / ${o}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          int wRPerm = ${t} - 1 - wR;

          for (int wC = 0; wC < ${s}; wC++) {
            float dyC = float(dyCCorner + wC) / ${r}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            int wCPerm = ${s} - 1 - wC;

            // TO DO: Vec4 over the channelMul
            for (int dm = 0; dm < ${c}; dm++) {
              int d2 = d1 * ${c} + dm;
              float xValue = getDy(batch, idyR, idyC, d2);
              float wValue = getW(wRPerm, wCPerm, d1, dm);
              dotProd += xValue * wValue;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function U6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,dy:r}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:u,filterShape:l}=s,d=Nt(o.shape,l,a,i,c,u,!0),h=new V6(d);return t.runWebGLProgram(h,[o,r],"float32")}const G6={kernelName:Rf,backendName:"webgl",kernelFunc:U6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function H6(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,filter:r}=e,{strides:a,dilations:i,pad:c,dimRoundingMode:u,inputShape:l}=s,d=Nt(l,r.shape,a,i,c,u,!0),h=new W6(d);return t.runWebGLProgram(h,[o,r],"float32")}const j6={kernelName:Af,backendName:"webgl",kernelFunc:H6};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class q6{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode=`
      void main() {
          ivec2 coords = getOutputCoords();
          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;
          setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function X6(n){const{inputs:e,backend:t}=n,{x:s}=e,o=[...s.shape,...s.shape],r=L(s.shape),a=le({inputs:{x:s},backend:t,attrs:{shape:[r]}}),i=new q6(r),c=t.runWebGLProgram(i,[a],a.dtype),u=le({inputs:{x:c},backend:t,attrs:{shape:o}});return t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(c),u}const K6={kernelName:r0,backendName:"webgl",kernelFunc:X6};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Y6{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:s,padInfo:o,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:c,dilationHeight:u,dilationWidth:l}=e,{top:d,left:h}=o;this.userCode=`
      const ivec2 strides = ivec2(${r}, ${a});
      const ivec2 pads = ivec2(${d}, ${h});
      const float neg_infinity = -3.4e38;

      void main() {
        ivec4 coords = getOutputCoords();
        int batch = coords.x;
        int d1 = coords.w;
        ivec2 outTopLeftCorner =
            coords.yz * strides - pads;
        int hBeg = outTopLeftCorner.x;
        int wBeg = outTopLeftCorner.y;

        float curVal = neg_infinity;
        for (int h = 0; h < ${i}; h++) {
          int hIn = hBeg + h * ${u};

          if (hIn >= 0 && hIn < ${t}) {
            for (int w = 0; w < ${c}; w++) {
              int wIn = wBeg + w * ${l};

              if (wIn >= 0 && wIn < ${s}) {
                float xVal = getX(batch, hIn, wIn, d1);
                float wVal = getW(h, w, d1);

                float val = xVal + wVal;
                if (val > curVal) {
                  curVal = val;
                }
              }
            }
          }
        }

        float result = curVal;
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Z6(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r}=e,{strides:a,pad:i,dilations:c}=s,u=Bl(o.shape,r.shape,a,i,"NHWC",c);let l;const d=new Y6(u);l=t.runWebGLProgram(d,[o,r],"float32");const h=le({inputs:{x:l},backend:t,attrs:{shape:u.outShape}});return t.disposeIntermediateTensorInfo(l),h}const J6={kernelName:Rd,backendName:"webgl",kernelFunc:Z6};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Q6(n){const{inputs:e,backend:t,attrs:s}=n,{equation:o}=s,r=e,{allDims:a,summedDims:i,idDims:c}=Hm(o,r.length);qm(a.length,c,r);const{path:u,steps:l}=Xm(i,c),d=l.length;let h=null,p=a.length;const f=[];for(let m=0;m<d;++m){for(const g of l[m]){const{permutationIndices:b,expandDims:x}=jm(p,c[g]);let y;Km(b)?y=r[g]:(y=bn({inputs:{x:r[g]},backend:t,attrs:{perm:b}}),f.push(y));const w=y.shape.slice();for(let I=0;I<x.length;++I)w.splice(x[I],0,1);Ke(y.shape,w)||(y=le({inputs:{x:y},backend:t,attrs:{shape:w}}),f.push(y)),h===null?h=y:(h=Yg({inputs:{a:y,b:h},backend:t}),f.push(h))}m<d-1&&(u[m]>=0&&(h=Ah({inputs:{x:h},backend:t,attrs:{axis:u[m]-(a.length-p),keepDims:!1}}),f.push(h)),p--)}for(const m of f)m!==h&&t.disposeIntermediateTensorInfo(m);return h}const ej={kernelName:a0,backendName:"webgl",kernelFunc:Q6};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const tj="return (x >= 0.0) ? x : (exp(x) - 1.0);",nj=`
  vec4 result;

  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);
  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);
  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);
  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);

  return result;
`,sj=He({opSnippet:tj,packedOpSnippet:nj}),oj={kernelName:Za,backendName:"webgl",kernelFunc:sj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rj="return (b >= 1.0) ? a : a * (b + 1.0);",aj=`
  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));
  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));
`,ij=n=>{const{inputs:e,backend:t}=n,{dy:s,y:o}=e,r=H().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new ou(aj,s.shape,o.shape):new Fa(rj,s.shape,o.shape);return t.runWebGLProgram(r,[s,o],s.dtype)},cj={kernelName:Df,backendName:"webgl",kernelFunc:ij};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lj=`
  return vec4(equal(a, b));
`,uj="return float(a == b);",dj=en({opSnippet:uj,packedOpSnippet:lj,dtype:"bool",cpuKernelImpl:Y4}),hj={kernelName:el,backendName:"webgl",kernelFunc:dj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pj=`
  // Error function is calculated approximately with elementary function.
  // See "Handbook of Mathematical Functions with Formulas,
  // Graphs, and Mathematical Tables", Abramowitz and Stegun.
  float p = ${Pm};
  float a1 = ${Bm};
  float a2 = ${zm};
  float a3 = ${Vm};
  float a4 = ${Wm};
  float a5 = ${Um};

  float sign = sign(x);
  x = abs(x);
  float t = 1.0 / (1.0 + p * x);
  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));
`,fj=He({opSnippet:pj}),mj={kernelName:Qc,backendName:"webgl",kernelFunc:fj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gj=Ki+`
  return exp(x);
`,bj=`
  vec4 result = exp(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,Bv=He({opSnippet:gj,packedOpSnippet:bj,cpuKernelImpl:Z4,dtype:"float32"}),xj={kernelName:Ja,backendName:"webgl",kernelFunc:Bv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jp(n){const{inputs:e,attrs:t,backend:s}=n,{dim:o}=t,{input:r}=e,a=r.shape.length,i=r.shape.slice();let c=o;return o<0&&($(-(a+1)<=o,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+o+1),i.splice(c,0,1),le({inputs:{x:r},backend:s,attrs:{shape:i}})}const yj={kernelName:tl,backendName:"webgl",kernelFunc:Jp};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iy="return exp(x) - 1.0;",wj=He({opSnippet:iy,packedOpSnippet:iy,cpuKernelImpl:J4}),Ij={kernelName:nl,backendName:"webgl",kernelFunc:wj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class cy{constructor(e,t,s){this.variableNames=["real","imag"];const o=t[1];this.outputShape=t;const r=s?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=s?`${o}.0`:"1.0";let i;if(e==="real")i="return real * expR - imag * expI;";else if(e==="imag")i="return real * expI + imag * expR;";else throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);this.userCode=`
      const float exponentMultiplier = ${r};

      float unaryOpComplex(float real, float expR, float imag, float expI) {
        ${i}
      }

      float mulMatDFT(int batch, int index) {
        float indexRatio = float(index) / float(${o});
        float exponentMultiplierTimesIndexRatio =
            exponentMultiplier * indexRatio;

        float result = 0.0;

        for (int i = 0; i < ${o}; i++) {
          // x = (-2|2 * PI / N) * index * i;
          float x = exponentMultiplierTimesIndexRatio * float(i);
          float expR = cos(x);
          float expI = sin(x);
          float real = getReal(batch, i);
          float imag = getImag(batch, i);

          result +=
              unaryOpComplex(real, expR, imag, expI) / ${a};
        }

        return result;
      }

      void main() {
        ivec2 coords = getOutputCoords();
        setOutput(mulMatDFT(coords[0], coords[1]));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zv(n,e,t){const s=t.texData.get(n.dataId),o=L(n.shape),r=n.shape[n.shape.length-1],a=o/r,i=le({inputs:{x:n},backend:t,attrs:{shape:[a,r]}}),c=i.shape,u=new cy("real",c,e),l=new cy("imag",c,e),d=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:c},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:c}],h=t.runWebGLProgram(u,d,"float32"),p=t.runWebGLProgram(l,d,"float32"),f=Yo({inputs:{real:h,imag:p},backend:t});t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p);const m=le({inputs:{x:f},backend:t,attrs:{shape:n.shape}});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(f),m}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kj(n){const{inputs:e,backend:t}=n,{input:s}=e;return zv(s,!1,t)}const vj={kernelName:Ff,backendName:"webgl",kernelFunc:kj};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class $j{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode=`
      void main() {
        // Input can be obtained from uniform value.
        setOutput(value);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function au(n){const{backend:e,attrs:t}=n,{shape:s,value:o}=t;let{dtype:r}=t;if(r=r||Mc(o),r==="string"){const a=At(r,L(s));return a.fill(o),e.makeTensorInfo(s,r,a)}else{const a=new $j(s,o),i=[[o]];return e.runWebGLProgram(a,[],r,i)}}const Cj={kernelName:Ad,backendName:"webgl",kernelFunc:au};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Sj{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];

          int coordX = ${t} - x - 1;
          float outputValue;
          if(coordX >= 0 && coordX < ${t}) {
            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);
          } else {
            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nj={kernelName:sl,backendName:"webgl",kernelFunc:({inputs:n,backend:e})=>{const{image:t}=n,s=e,o=new Sj(t.shape);return s.runWebGLProgram(o,[t],t.dtype)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ly="return floor(x);",Tj=He({opSnippet:ly,packedOpSnippet:ly,cpuKernelImpl:Q4}),Ej={kernelName:Qa,backendName:"webgl",kernelFunc:Tj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _j=`
  float s = sign(a) * sign(b);
  int ia = round(a);
  int ib = round(b);
  if (ib != 0) {
    // Windows (D3D) wants guaranteed non-zero int division at compile-time.
    return float(idiv(ia, ib, s));
  } else {
    return NAN;
  }
`,Rj=`
  ivec4 ia = round(a);
  ivec4 ib = round(b);
  bvec4 cond = notEqual(ib, ivec4(0));
  ivec4 result = ivec4(0);
  vec4 s = sign(a) * sign(b);

  // Windows (D3D) wants guaranteed non-zero int division at compile-time.
  if (cond[0]) {
    result[0] = idiv(ia[0], ib[0], s[0]);
  }
  if (cond[1]) {
    result[1] = idiv(ia[1], ib[1], s[1]);
  }
  if (cond[2]) {
    result[2] = idiv(ia[2], ib[2], s[2]);
  }
  if (cond[3]) {
    result[3] = idiv(ia[3], ib[3], s[3]);
  }
  return vec4(result);
`,Aj=en({opSnippet:_j,packedOpSnippet:Rj,dtype:"int32"}),Dj={kernelName:ei,backendName:"webgl",kernelFunc:Aj};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Fj{constructor(e){this.variableNames=["A"];const t=xn(),[s,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];
        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${o}.0, ${s}.0);

        vec4 values = ${t.texture2D}(A, uv);
        float value;
        if (depth == 0) {
          value = values.r;
        } else if (depth == 1) {
          value = values.g;
        } else if (depth == 2) {
          value = values.b;
        } else if (depth == 3) {
          value = values.a;
        }

        setOutput(floor(value * 255.0 + 0.5));
      }
    `}}/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Oj{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=xn(),[s,o]=e;this.outputShape=e,this.userCode=`
      void main() {
        ivec3 coords = getOutputCoords();
        int texR = coords[0];
        int texC = coords[1];
        int depth = coords[2];

        vec4 result = vec4(0.);

        for(int row=0; row<=1; row++) {
          for(int col=0; col<=1; col++) {
            texC = coords[1] + row;
            depth = coords[2] + col;

            vec2 uv = (vec2(texC, texR) + halfCR) /
                       vec2(${o}.0, ${s}.0);
            vec4 values = ${t.texture2D}(A, uv);
            float value;
            if (depth == 0) {
              value = values.r;
            } else if (depth == 1) {
              value = values.g;
            } else if (depth == 2) {
              value = values.b;
            } else if (depth == 3) {
              value = values.a;
            }

            result[row * 2 + col] = floor(value * 255.0 + 0.5);
          }
        }

        ${t.output} = result;
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Mj={kernelName:JS,backendName:"webgl",kernelFunc:Lj};let aa,op=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");function Lj(n){const{inputs:e,backend:t,attrs:s}=n;let{pixels:o}=e;const{numChannels:r}=s,a=typeof HTMLVideoElement<"u"&&o instanceof HTMLVideoElement,i=typeof HTMLImageElement<"u"&&o instanceof HTMLImageElement,[c,u]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],l=[u,c],d=[u,c,r];if(i||a){const m=H().getBool("CANVAS2D_WILL_READ_FREQUENTLY_FOR_GPU");(aa==null||m!==op)&&(op=m,aa=document.createElement("canvas").getContext("2d",{willReadFrequently:op})),aa.canvas.width=c,aa.canvas.height=u,aa.drawImage(o,0,0,c,u),o=aa.canvas}const h=t.makeTensorInfo(l,"int32");t.texData.get(h.dataId).usage=jn.PIXELS,t.gpgpu.uploadPixelDataToTexture(t.getTexture(h.dataId),o);const p=H().getBool("WEBGL_PACK")?new Oj(d):new Fj(d),f=t.runWebGLProgram(p,[h],"int32");return t.disposeData(h.dataId),f}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Pj(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dataFormat:l,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=s,m=As(l),g=Nt(o.shape,r.shape,c,d,u,h,!1,m);let b;const x=[],y=a!=null,w=i!=null,I=p==="leakyrelu",k=()=>{const C=[o,r],N=(T,_)=>{if(_==="NCHW"&&T.shape.length===1&&T.shape[0]!==1){const O=le({inputs:{x:T},backend:t,attrs:{shape:[T.shape[0],1,1]}});return x.push(O),O}return T};if(y&&C.push(N(a,l)),w&&C.push(N(i,l)),I){const T=t.makeTensorInfo([],"float32",Uo(f,"float32"));C.push(T),x.push(T)}return C};if(g.filterHeight===1&&g.filterWidth===1&&g.dilationHeight===1&&g.dilationWidth===1&&g.strideHeight===1&&g.strideWidth===1&&(g.padInfo.type==="SAME"||g.padInfo.type==="VALID"))b=Fv({x:o,filter:r,convInfo:g,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else if(g.strideWidth<=2&&m==="channelsLast"&&H().getBool("WEBGL_EXP_CONV")){const C=p?Ec(p,!0):null,N=new Dv(g,y,C,w,I),T=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],_=k();b=t.runWebGLProgram(N,_,"float32",T)}else if(H().getBool("WEBGL_CONV_IM2COL"))b=Ov({x:o,filter:r,convInfo:g,backend:t,bias:a,activation:p,preluActivationWeights:i,leakyreluAlpha:f});else{const C=p?Ec(p,!1):null,N=new Av(g,y,C,w,I),T=k();b=t.runWebGLProgram(N,T,"float32")}const v=le({inputs:{x:b},backend:t,attrs:{shape:g.outShape}});return x.push(b),x.forEach(C=>t.disposeIntermediateTensorInfo(C)),v}const Bj={kernelName:va,backendName:"webgl",kernelFunc:Pj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zj(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,filter:r,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dilations:l,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=s,f=[];let m=l;m==null&&(m=[1,1]),$(cn(c,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${c} and dilations '${m}'`);const g=Nt(o.shape,r.shape,c,m,u,d,!0),b=H().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,x=h?Ec(h,b):null,y=[o,r],w=a!=null,I=i!=null,k=h==="leakyrelu";if(w&&y.push(a),I&&y.push(i),k){const T=t.makeTensorInfo([],"float32",Uo(p,"float32"));y.push(T),f.push(T)}let v;b?v=new Pv(g,w,x,I,k):v=new Lv(g,w,x,I,k);const C=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=t.runWebGLProgram(v,y,"float32",C);return f.forEach(T=>t.disposeIntermediateTensorInfo(T)),N}const Vj={kernelName:jd,backendName:"webgl",kernelFunc:zj};class Wj{constructor(e,t,s,o){this.sliceDim=e,this.strides=t,this.paramsShape=o,this.variableNames=["x","indices"],this.outputShape=s;const r=dt(s.length);let a=`
    int index;`;for(let i=0;i<this.sliceDim;i++)a+=`
          index = round(getIndices(coords[0], ${i}));
          out_of_bounds = out_of_bounds || index < 0;
          out_of_bounds = out_of_bounds || index >= ${this.paramsShape[i]};
          flattenIndex += index * ${this.strides[i]};`;this.userCode=`
         void main() {
          ${r} coords = getOutputCoords();
          int flattenIndex = 0;
          bool out_of_bounds = false;

          ${a}

          setOutput(out_of_bounds ? 0.0 : getX(flattenIndex, coords[1]));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Uj(n){const{inputs:e,backend:t}=n,{params:s,indices:o}=e,r=o.shape,a=r[r.length-1],i=L(s.shape),[c,u,l,d]=Zd(s,o),h=le({inputs:{x:o},backend:t,attrs:{shape:[u,a]}}),p=le({inputs:{x:s},backend:t,attrs:{shape:[L(s.shape)/l,l]}});if(t.shouldExecuteOnCPU([s,o])||s.dtype==="string"){const b=t.readSync(o.dataId),x=t.bufferSync(s),y=eU(b,x,s.dtype,u,a,l,d,s.shape,i);return t.makeTensorInfo(c,s.dtype,y.values)}const f=new Wj(a,d,[u,l],s.shape),m=t.runWebGLProgram(f,[p,h],p.dtype),g=le({inputs:{x:m},backend:t,attrs:{shape:c}});return t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(m),g}const Gj={kernelName:Dd,backendName:"webgl",kernelFunc:Uj};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hj{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const s=dt(this.rank),o=jj(e);this.userCode=`
      void main() {
        ${s} resRC = getOutputCoords();
        int index = int(getIndices(resRC.x, resRC.z));
        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;
        setOutput(inBounds * getA(${o}));
      }
    `}}function jj(n,e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let o=0;o<n.length;o++)o===2?s.push("index"):s.push(`${t[o]}`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Vv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,indices:r}=e,{axis:a,batchDims:i}=s,c=Re(a,o.shape)[0];if(H().get("DEBUG")){const x=t.readSync(r.dataId),y=o.shape[c];for(let w=0;w<x.length;++w){const I=x[w];$(I<=y-1&&I>=0,()=>`GatherV2: the index value ${I} is not in [0, ${y-1}]`)}}const u=gh(o,r,c,i),l=L(r.shape),d=[],h=le({inputs:{x:o},backend:t,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),p=le({inputs:{x:r},backend:t,attrs:{shape:[u.batchSize,l/u.batchSize]}});d.push(h),d.push(p);const f=[u.batchSize,u.outerSize,l/u.batchSize,u.sliceSize];if(t.shouldExecuteOnCPU([o,r])||o.dtype==="string"){const x=t.bufferSync(p),y=t.bufferSync(h),w=tU(y,x,f);return d.forEach(I=>t.disposeIntermediateTensorInfo(I)),t.makeTensorInfo(u.outputShape,w.dtype,w.values)}const m=new Hj(h.shape,f),g=t.runWebGLProgram(m,[h,p],h.dtype);d.push(g);const b=le({inputs:{x:g},backend:t,attrs:{shape:u.outputShape}});return d.forEach(x=>t.disposeIntermediateTensorInfo(x)),b}const qj={kernelName:ol,backendName:"webgl",kernelFunc:Vv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xj="return float(a > b);",Kj=`
  return vec4(greaterThan(a, b));
`,Yj=en({opSnippet:Xj,packedOpSnippet:Kj,cpuKernelImpl:nU,dtype:"bool"}),Zj={kernelName:rl,backendName:"webgl",kernelFunc:Yj};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Jj="return float(a >= b);",Qj=`
  return vec4(greaterThanEqual(a, b));
`,eq=en({opSnippet:Jj,packedOpSnippet:Qj,dtype:"bool",cpuKernelImpl:sU}),tq={kernelName:ni,backendName:"webgl",kernelFunc:eq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function nq(n){const{inputs:e,backend:t}=n,{input:s}=e;return zv(s,!0,t)}const sq={kernelName:Of,backendName:"webgl",kernelFunc:nq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const oq="return float(!isnan(x) && !isinf(x));",rq=He({opSnippet:oq,dtype:"bool"}),aq={kernelName:al,backendName:"webgl",kernelFunc:rq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const iq="return float(isinf(x));",cq=He({opSnippet:iq,dtype:"bool"}),lq={kernelName:il,backendName:"webgl",kernelFunc:cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uq="return float(isnan(x));",dq=He({opSnippet:uq,dtype:"bool"}),hq={kernelName:oi,backendName:"webgl",kernelFunc:dq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const pq="return float(a < b);",fq=`
  return vec4(lessThan(a, b));
`,mq=en({opSnippet:pq,packedOpSnippet:fq,cpuKernelImpl:oU,dtype:"bool"}),gq={kernelName:cl,backendName:"webgl",kernelFunc:mq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bq="return float(a <= b);",xq=`
  return vec4(lessThanEqual(a, b));
`,yq=en({opSnippet:bq,packedOpSnippet:xq,cpuKernelImpl:rU,dtype:"bool"}),wq={kernelName:ll,backendName:"webgl",kernelFunc:yq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Iq(n){const{backend:e,attrs:t}=n,{start:s,stop:o,num:r}=t,a=aU(s,o,r);return e.makeTensorInfo([a.length],"float32",a)}const kq={kernelName:Lf,backendName:"webgl",kernelFunc:Iq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vq=Ki+`
  return x < 0.0 ? 0./0. : log(x);
`,$q=`
  vec4 result = log(x);
  bvec4 isNaN = isnan(x);
  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);
  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);
  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);
  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);
  return result;
`,Cq=He({opSnippet:vq,packedOpSnippet:$q,cpuKernelImpl:iU}),Sq={kernelName:ai,backendName:"webgl",kernelFunc:Cq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Nq=Ki+`
  return log(1.0 + x);
`,Tq=He({opSnippet:Nq}),Eq={kernelName:ul,backendName:"webgl",kernelFunc:Tq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _q="return float(a >= 1.0 && b >= 1.0);",Rq=`
  return vec4(
    vec4(greaterThanEqual(a, vec4(1.0))) *
    vec4(greaterThanEqual(b, vec4(1.0))));
`,Aq=en({opSnippet:_q,packedOpSnippet:Rq,dtype:"bool"}),Dq={kernelName:dl,backendName:"webgl",kernelFunc:Aq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Fq="return float(!(x >= 1.0));",Oq=He({opSnippet:Fq}),Mq={kernelName:hl,backendName:"webgl",kernelFunc:Oq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Lq="return float(a >= 1.0 || b >= 1.0);",Pq=`
  return min(
    vec4(greaterThanEqual(a, vec4(1.0))) +
    vec4(greaterThanEqual(b, vec4(1.0))),
    vec4(1.0));
`,Bq=en({opSnippet:Lq,packedOpSnippet:Pq,dtype:"bool"}),zq={kernelName:pl,backendName:"webgl",kernelFunc:Bq};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Vq{constructor(e,t,s,o,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;this.outputShape=e;let c;const u=`float(${s}) + float(${o}) * sum`;r===.5?c=`inversesqrt(${u})`:r===1?c=`1.0/(${u})`:c=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];
        int d = coords[3];
        float x = getX(b, r, c, d);
        float sum = 0.0;
        for (int j = -${a}; j <= ${a}; j++) {
          int idx = d + j;
          if (idx >= 0 && idx <=  ${i}) {
            float z = getX(b, r, c, idx);
            sum += z * z;
          }
        }
        float val = x * ${c};
        setOutput(val);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Wq{constructor(e,t,s,o,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;this.outputShape=e;let c;const u=`float(${s}) + float(${o}) * sum`;r===.5?c=`inversesqrt(${u})`:r===1?c=`1.0/(${u})`:c=`exp(log(${u}) * float(-${r}));`,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords.x;
        int r = coords.y;
        int c = coords.z;
        int d = coords.w;

        bool hasNextCol = d < ${this.outputShape[3]};
        bool hasNextRow = c < ${this.outputShape[2]};

        vec4 sum = vec4(0.);
        vec4 xFragAtOutputCoords = getX(b, r, c, d);

        vec4 xAtOutputCoords = vec4(
          getChannel(xFragAtOutputCoords, vec2(c, d)),
          hasNextCol ?
            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,
          hasNextRow ?
            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,
          (hasNextRow && hasNextCol) ?
            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0
        );

        int firstChannel = d - ${a};
        vec2 cache = vec2(0.);
        if(firstChannel >= 0){
          vec4 firstChannelFrag = getX(b, r, c, firstChannel);
          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));
            if(hasNextRow){
              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));
            }
        }

        ivec2 depth = ivec2(d, d + 1);
        for (int j = - ${a}; j <= ${a}; j++) {
          ivec2 idx = depth + j;
          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));
          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));

          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;
          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;

          if(depthInRange || depthPlusOneInRange){
            vec4 z = vec4(0.);
            vec4 xFragAtCurrentDepth;
            z.xz = cache.xy;
            if(depthPlusOneInRange && hasNextCol){
              xFragAtCurrentDepth = idx.y != d ?
                getX(b, r, c, idx.y) : xFragAtOutputCoords;
              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));
              if(hasNextRow){
                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));
              }
            }
            cache.xy = z.yw;
            sum += z * z;
          }
        }
        vec4 result = xAtOutputCoords * ${c};
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Uq=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{depthRadius:r,bias:a,alpha:i,beta:c}=s,u=H().getBool("WEBGL_PACK_NORMALIZATION")?new Wq(o.shape,r,a,i,c):new Vq(o.shape,r,a,i,c);return t.runWebGLProgram(u,[o],o.dtype)},Gq={kernelName:Fd,backendName:"webgl",kernelFunc:Uq};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Hq{constructor(e,t,s,o,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=s,this.alpha=o,this.beta=r,this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int r = coords[1];
        int c = coords[2];

        float result = 0.0;
        for (int d = 0; d < ${this.depth}; ++d) {
          int depthBegin = int(max(0.0, float(d - ${t})));
          int depthEnd = int(min(float(${this.depth}),
              float(d + ${t} + 1)));

          const int MIN_DEPTH_BEGIN = 0;
          const int MAX_DEPTH_END = ${this.depth};

          float norm = 0.0;
          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd) {
              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);
            }
            else {
              break;
            }
          }

          norm = float(${o}) * norm + float(${s});

          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){
            if (k < depthBegin){
              continue;
            }
            else if (k >= depthBegin && k < depthEnd){
              float dyi = -2.0 * float(${o})
                * float(${r})
                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)
                / norm;
              if (k == d) {
                dyi += pow(norm, -1.0 * ${r});
              }
              if (k == coords[3]) {
                dyi *= getDy(b, r, c, d);
                result += dyi;
              }
            }
            else {
              break;
            }
          }
      }
      setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const jq=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o,y:r,dy:a}=e,{depthRadius:i,bias:c,alpha:u,beta:l}=s,d=new Hq(o.shape,i,c,u,l);return t.runWebGLProgram(d,[o,r,a],o.dtype)},qq={kernelName:Pf,backendName:"webgl",kernelFunc:jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Xq(n,e,t,s){const o=L(e),a=L(n.shape)/o,i=le({inputs:{x:n},attrs:{shape:[a,o]},backend:s}),c=Jr(i,n.dtype,"max",s),u=le({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(c),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Wv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reductionIndices:r,keepDims:a}=s,i=o.shape.length,c=Re(r,o.shape);let u=c;const l=pt(u,i),d=l!=null,h=t.shouldExecuteOnCPU([o]);let p=o;if(d){if(h){const y=t.texData.get(p.dataId).values,w=new Array(i);for(let v=0;v<w.length;v++)w[v]=o.shape[l[v]];const I=Xg(y,o.shape,o.dtype,l,w);p=t.makeTensorInfo(w,o.dtype);const k=t.texData.get(p.dataId);k.values=I}else p=Rh(o,l,t);u=rt(u.length,i)}ht("max",u,i);const[f,m]=bt(p.shape,u);let g=f;a&&(g=et(f,c));let b;if(h){const y=t.texData.get(p.dataId).values,w=cU(y,L(m),g,o.dtype);b=t.makeTensorInfo(g,o.dtype);const I=t.texData.get(b.dataId);I.values=w}else b=Xq(p,m,g,t);return d&&t.disposeIntermediateTensorInfo(p),b}const Kq={kernelName:ii,backendName:"webgl",kernelFunc:Wv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Yq=Kg+`
  return max(a, b);
`,Zq=`
  vec4 result = vec4(max(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+su+`
  return result;
`,Jq=en({opSnippet:Yq,packedOpSnippet:Zq,cpuKernelImpl:lU}),Qq={kernelName:ci,backendName:"webgl",kernelFunc:Jq};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e5(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e;tu(o,"maxPool");const{filterSize:r,strides:a,pad:i,dimRoundingMode:c}=s,u=1;$(cn(a,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`);const l=Bn(o.shape,r,a,u,i,c);if(l.filterWidth===1&&l.filterHeight===1&&Ke(l.inShape,l.outShape))return Ln({inputs:{x:o},backend:t});const d=new _c(l,"max",!1);return t.runWebGLProgram(d,[o],o.dtype)}const t5={kernelName:li,backendName:"webgl",kernelFunc:e5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n5(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{filterSize:r,strides:a,pad:i,dataFormat:c,dimRoundingMode:u}=s,l=[1,1,1],d=xo(o.shape,r,a,l,i,u,c),h=new Zg(d,"max",!1);return t.runWebGLProgram(h,[o],o.dtype)}const s5={kernelName:Od,backendName:"webgl",kernelFunc:n5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class o5{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,s=e.strideWidth,o=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,c=a-1-e.padInfo.left,u=r*a-1;this.userCode=`
      const ivec2 pads = ivec2(${i}, ${c});

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];

        ivec2 dyRCCorner = coords.yz - pads;
        int dyRCorner = dyRCCorner.x;
        int dyCCorner = dyRCCorner.y;

        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;
        for (int wR = 0; wR < ${r};
          wR += ${o}) {
          float dyR = float(dyRCorner + wR) / ${t}.0;

          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {
            continue;
          }
          int idyR = int(dyR);

          for (int wC = 0; wC < ${a}; wC++) {
            float dyC = float(dyCCorner + wC) / ${s}.0;

            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                fract(dyC) > 0.0) {
              continue;
            }
            int idyC = int(dyC);

            float dyValue = getDy(b, idyR, idyC, d);
            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));

            // Get the current value, check it against the value from the
            // position matrix.
            int curPosValue = wR * ${a} + wC;
            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

            dotProd += dyValue * mask;
          }
        }
        setOutput(dotProd);
      }
    `}}class r5{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,s=e.strideHeight,o=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,c=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,d=c-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,f=c*u*l-1;this.userCode=`
      const ivec3 pads = ivec3(${d}, ${h}, ${p});

      void main() {
        ivec5 coords = getOutputCoords();
        int batch = coords.x;
        int ch = coords.u;

        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;
        int dyDCorner = dyCorner.x;
        int dyRCorner = dyCorner.y;
        int dyCCorner = dyCorner.z;

        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get
        // dx(xD, xR, xC, ch).
        // ? = to be determined. : = across all values in that axis.
        float dotProd = 0.0;

        for (int wD = 0; wD < ${c};
           wD += ${r}) {
          float dyD = float(dyDCorner + wD) / ${t}.0;

          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {
            continue;
          }
          int idyD = int(dyD);

          for (int wR = 0; wR < ${u};
              wR += ${a}) {
            float dyR = float(dyRCorner + wR) / ${s}.0;

            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||
                fract(dyR) > 0.0) {
              continue;
            }
            int idyR = int(dyR);

            for (int wC = 0; wC < ${l};
                wC += ${i}) {
              float dyC = float(dyCCorner + wC) / ${o}.0;

              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||
                  fract(dyC) > 0.0) {
                continue;
              }
              int idyC = int(dyC);

              float dyValue = getDy(batch, idyD, idyR, idyC, ch);
              int maxPosValue = ${f} -
                  int(getMaxPos(batch, idyD, idyR, idyC, ch));

              // Get the current value, check it against the value from the
              // position matrix.
              int curPosValue =
                  wD * ${u} * ${l} +
                  wR * ${l} + wC;
              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);

              dotProd += dyValue * mask;
            }
          }
        }
        setOutput(dotProd);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a5(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r}=e,a=r,{filterSize:i,strides:c,pad:u,dimRoundingMode:l}=s,d=[1,1,1],h=xo(a.shape,i,c,d,u,l),p=new Zg(h,"max",!0),f=t.runWebGLProgram(p,[a],a.dtype),m=new r5(h),g=t.runWebGLProgram(m,[o,f],a.dtype);return t.disposeIntermediateTensorInfo(f),g}const i5={kernelName:zf,backendName:"webgl",kernelFunc:a5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function c5(n){const{inputs:e,backend:t,attrs:s}=n,{dy:o,input:r,output:a}=e,i=r;tu([r,a],"maxPoolGrad");const{filterSize:c,strides:u,pad:l,dimRoundingMode:d}=s,h=Bn(i.shape,c,u,1,l,d),p=!0,f=new _c(h,"max",p),m=t.runWebGLProgram(f,[i],i.dtype),g=new o5(h),b=t.runWebGLProgram(g,[o,m],i.dtype);return t.disposeIntermediateTensorInfo(m),b}const l5={kernelName:Bf,backendName:"webgl",kernelFunc:c5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function u5(n,e,t,s){let o=new _c(t,"max",!1);const r=s.runWebGLProgram(o,[n],"float32");o=new _c(t,"max",!0,!0,e);const a=s.runWebGLProgram(o,[n],"float32");return[r,a]}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const d5={kernelName:i0,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{filterSize:o,strides:r,pad:a,includeBatchInIndex:i}=e,c=t;$(s.shape.length===4,()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`);const u=[1,1];$(cn(r,u),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${r} and dilations '${u}'`);const l=Bn(s.shape,o,r,u,a),[d,h]=u5(s,i,l,c);return[d,h]}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function h5(n,e,t,s){const o=L(e),a=L(n.shape)/o,i=le({inputs:{x:n},attrs:{shape:[a,o]},backend:s}),c=Jr(i,"float32","mean",s),u=le({inputs:{x:c},attrs:{shape:t},backend:s});return s.disposeIntermediateTensorInfo(i),s.disposeIntermediateTensorInfo(c),u}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const p5={kernelName:ui,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{x:s}=n,{keepDims:o,axis:r}=e,a=t,i=s.shape.length,c=Re(r,s.shape);let u=c;const l=pt(u,i),d=l!=null,h=a.shouldExecuteOnCPU([s]),p=[];let f=s;if(d){if(h){const w=a.texData.get(f.dataId).values,I=new Array(i);for(let C=0;C<I.length;C++)I[C]=s.shape[l[C]];const k=Xg(w,s.shape,s.dtype,l,I);f=a.makeTensorInfo(I,s.dtype);const v=a.texData.get(f.dataId);v.values=k}else f=Rh(s,l,a);p.push(f),u=rt(u.length,i)}ht("sum",u,i);const[m,g]=bt(f.shape,u);let b=m;o&&(b=et(m,c));const x=h5(f,g,b,a);for(const y of p)a.disposeIntermediateTensorInfo(y);return x}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f5(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s,i=o.shape.length,c=Re(r,o.shape);let u=c;const l=pt(u,i);let d=o;l!=null&&(d=bn({inputs:{x:o},backend:t,attrs:{perm:l}}),u=rt(u.length,o.shape.length)),ht("min",u,i);const[h,p]=bt(d.shape,u),f=L(p),m=le({inputs:{x:d},backend:t,attrs:{shape:[-1,f]}}),g=Jr(m,m.dtype,"min",t);let b;if(a){const x=et(h,c);b=le({inputs:{x:g},backend:t,attrs:{shape:x}})}else b=le({inputs:{x:g},backend:t,attrs:{shape:h}});return t.disposeIntermediateTensorInfo(m),t.disposeIntermediateTensorInfo(g),l!=null&&t.disposeIntermediateTensorInfo(d),b}const m5={kernelName:di,backendName:"webgl",kernelFunc:f5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g5=Kg+`
  return min(a, b);
`,b5=`
  vec4 result = vec4(min(a, b));
  bvec4 isNaNA = isnan(a);
  bvec4 isNaNB = isnan(b);
  bvec4 isNaN = bvec4(isNaNA.x || isNaNB.x, isNaNA.y || isNaNB.y, isNaNA.z || isNaNB.z, isNaNA.w || isNaNB.w);
  `+su+`
  return result;
`,x5=en({opSnippet:g5,packedOpSnippet:b5,cpuKernelImpl:uU}),y5={kernelName:hi,backendName:"webgl",kernelFunc:x5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class w5{constructor(e,t,s){this.variableNames=["x"],this.outputShape=t.map((l,d)=>l[0]+e[d]+l[1]);const o=e.length,r=dt(o),a=t.map(l=>l[0]).join(","),i=t.map((l,d)=>l[0]+e[d]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o),u=s==="reflect"?0:1;if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start) {
            outC = start * 2 - outC - ${u};
          } else if(outC >= end) {
            outC = (end - 1) * 2 - outC + ${u};
          }
          setOutput(getX(outC - start));
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        for (int i = 0; i < ${o}; i++) {
          if (outC[i] < start[i]) {
            outC[i] = start[i] * 2 - outC[i] - ${u};
          } else if(outC[i] >= end[i]) {
            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};
          }
        }
        ${r} coords = outC - start;
        setOutput(getX(${c}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class I5{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((f,m)=>f[0]+e[m]+f[1]);const o=e.length,r=dt(o),a=t.map(f=>f[0]).join(","),i=t.map((f,m)=>f[0]+e[m]).join(","),c=pn("rc",o),u=pn("source",o),l=`${c[o-1]} < ${this.outputShape[o-1]}`,d=o===1?"source":`vec2(${u.slice(-2).join()})`,h=s==="reflect"?0:1;let p="";if(o===1){const f=`
        ${r} source = rc;
        if (source < start) {
          source = start * 2 - source - ${h};
        } else if (source >= end) {
          source = (end - 1) * 2 - source + ${h};
        }
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${c[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
      `}else{const f=`
        ${r} source = rc;
        ${r} lt = ${r}(lessThan(source, start));
        ${r} gte = ${r}(greaterThanEqual(source, end));
        ${r} orig = 1 - (lt + gte);
        source = orig * source +
                lt * (start * 2 - source - ${h}) +
                gte * ((end - 1) * 2 - source + ${h});
        source -= start;
      `;p=`
        ${r} rc = outputLoc;
        ${f}
        result[0] = getChannel(getX(${u.join()}), ${d});
        ${c[o-1]} += 1;
        if(${l}) {
          ${f}
          result[1] = getChannel(getX(${u.join()}), ${d});
        }
        rc = outputLoc;
        ${c[o-2]} += 1;
        if(${c[o-2]} < ${this.outputShape[o-2]}) {
          ${f}
          result[2] = getChannel(getX(${u.join()}), ${d});
          ${c[o-1]} += 1;
          if(${l}) {
            ${f}
            result[3] = getChannel(getX(${u.join()}), ${d});
          }
        }
      `}this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${p}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k5=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{paddings:o,mode:r}=t,a=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new I5(s.shape,o,r):new w5(s.shape,o,r);return e.runWebGLProgram(a,[s],s.dtype)},v5={kernelName:pi,backendName:"webgl",kernelFunc:k5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $5=`if (b == 0.0) return NAN;
  return mod(a, b);`,C5=`
  vec4 result = mod(a, b);
  bvec4 isNaN = equal(b, vec4(0.0));
  `+su+`
  return result;
`,S5=en({opSnippet:$5,packedOpSnippet:C5}),N5={kernelName:fl,backendName:"webgl",kernelFunc:S5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class T5{constructor(e,t,s){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,s],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];

        float r = random(seed);
        float cdf = 0.0;

        for (int i = 0; i < ${t-1}; i++) {
          cdf += getProbs(batch, i);

          if (r < cdf) {
            setOutput(float(i));
            return;
          }
        }

        // If no other event happened, last event happened.
        setOutput(float(${t-1}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E5=`
if (a == b) {
  return 1.0;
};
return a / b;`,_5=`
  // vec4 one = vec4(equal(a, b));
  // return one + (vec4(1.0) - one) * a / b;
  vec4 result = a / b;
  if(a.x == b.x) {
    result.x = 1.;
  }
  if(a.y == b.y) {
    result.y = 1.;
  }
  if(a.z == b.z) {
    result.z = 1.;
  }
  if(a.w == b.w) {
    result.w = 1.;
  }

  return result;
`,Uv=en({opSnippet:E5,packedOpSnippet:_5,checkOutOfBounds:!0}),R5={kernelName:Ya,backendName:"webgl",kernelFunc:Uv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const uy="return a - b;",Gv=en({opSnippet:uy,packedOpSnippet:uy,supportsComplex:!0,cpuKernelImpl:_U}),A5={kernelName:Fi,backendName:"webgl",kernelFunc:Gv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Hv(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{dim:r}=s,a=Re([r],o.shape),i=Wv({inputs:{x:o},backend:t,attrs:{reductionIndices:a,keepDims:!1}}),c=et(i.shape,a),u=le({inputs:{x:i},backend:t,attrs:{shape:c}}),l=Gv({inputs:{a:o,b:u},backend:t}),d=Bv({inputs:{x:l},backend:t}),h=Ah({inputs:{x:d},backend:t,attrs:{axis:a,keepDims:!1}}),p=le({inputs:{x:h},backend:t,attrs:{shape:c}}),f=Uv({inputs:{a:d,b:p},backend:t});return t.disposeIntermediateTensorInfo(i),t.disposeIntermediateTensorInfo(u),t.disposeIntermediateTensorInfo(l),t.disposeIntermediateTensorInfo(d),t.disposeIntermediateTensorInfo(h),t.disposeIntermediateTensorInfo(p),f}const D5={kernelName:Ai,backendName:"webgl",kernelFunc:Hv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function F5(n){const{inputs:e,backend:t,attrs:s}=n,{logits:o}=e,{numSamples:r,seed:a,normalized:i}=s,c=i?o:Hv({inputs:{logits:o},backend:t,attrs:{dim:o.shape.length-1}}),u=c.shape[0],l=c.shape[1],d=new T5(u,l,r),h=[[a]],p=t.runWebGLProgram(d,[c],"int32",h);return i||t.disposeIntermediateTensorInfo(c),p}const O5={kernelName:c0,backendName:"webgl",kernelFunc:F5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const M5=gs+`
  return -x;
`,L5=`
  vec4 result = -x;
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`;function P5(n){const{inputs:e,backend:t}=n,{x:s}=e;if(t.shouldExecuteOnCPU([s])){const r=t.texData.get(s.dataId),[a,i]=hU(r.values,s.shape,s.dtype);return t.makeTensorInfo(i,s.dtype,a)}let o;return H().getBool("WEBGL_PACK_UNARY_OPERATIONS")?o=new Co(s.shape,L5):o=new zs(s.shape,M5),t.runWebGLProgram(o,[s],s.dtype)}const B5={kernelName:ml,backendName:"webgl",kernelFunc:P5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const z5=Nm;function V5(n){Hn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c}=s,u=t.readSync(o.dataId),l=t.readSync(r.dataId),{selectedIndices:d}=z5(u,l,a,i,c);return t.makeTensorInfo([d.length],"int32",new Int32Array(d))}const W5={kernelName:bl,backendName:"webgl",kernelFunc:V5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U5=Tm;function G5(n){Hn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,padToMaxOutputSize:u}=s,l=t.readSync(o.dataId),d=t.readSync(r.dataId),{selectedIndices:h,validOutputs:p}=U5(l,d,a,i,c,u);return[t.makeTensorInfo([h.length],"int32",new Int32Array(h)),t.makeTensorInfo([],"int32",new Int32Array([p]))]}const H5={kernelName:xl,backendName:"webgl",kernelFunc:G5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const j5=Em;function q5(n){Hn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:e,backend:t,attrs:s}=n,{boxes:o,scores:r}=e,{maxOutputSize:a,iouThreshold:i,scoreThreshold:c,softNmsSigma:u}=s,l=t.readSync(o.dataId),d=t.readSync(r.dataId),h=a,p=i,f=c,m=u,{selectedIndices:g,selectedScores:b}=j5(l,d,h,p,f,m);return[t.makeTensorInfo([g.length],"int32",new Int32Array(g)),t.makeTensorInfo([b.length],"float32",new Float32Array(b))]}const X5={kernelName:yl,backendName:"webgl",kernelFunc:q5};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class K5{constructor(e,t,s,o){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`
      void main() {
        ivec2 coords = getOutputCoords();
        int index = round(getIndices(coords.x));
        setOutput(mix(float(${o}), float(${s}),
                      float(index == coords.y)));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y5=n=>{const{inputs:e,backend:t,attrs:s}=n,{indices:o}=e,{dtype:r,depth:a,onValue:i,offValue:c}=s,u=L(o.shape),l=new K5(u,a,i,c),d=le({inputs:{x:o},backend:t,attrs:{shape:[u]}}),h=t.runWebGLProgram(l,[d],r);t.disposeIntermediateTensorInfo(d);const p=[...o.shape,a],f=le({inputs:{x:h},backend:t,attrs:{shape:p}});return t.disposeIntermediateTensorInfo(h),f},Z5={kernelName:mi,backendName:"webgl",kernelFunc:Y5};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Id(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="complex64"){const o=ru({inputs:{input:s},backend:t}),r=Id({inputs:{x:o},backend:t}),a=Dh({inputs:{input:s},backend:t}),i=Id({inputs:{x:a},backend:t}),c=Yo({inputs:{real:r,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return au({attrs:{shape:s.shape,dtype:s.dtype,value:s.dtype==="string"?"":0},backend:t})}const J5={kernelName:Ml,backendName:"webgl",kernelFunc:Id};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function jv(n){const{inputs:e,backend:t}=n,{x:s}=e;if(s.dtype==="string")throw new Error("onesLike is not supported under string dtype");if(s.dtype==="complex64"){const o=ru({inputs:{input:s},backend:t}),r=jv({inputs:{x:o},backend:t}),a=Dh({inputs:{input:s},backend:t}),i=Id({inputs:{x:a},backend:t}),c=Yo({inputs:{real:r,imag:i},backend:t});return t.disposeIntermediateTensorInfo(o),t.disposeIntermediateTensorInfo(r),t.disposeIntermediateTensorInfo(a),t.disposeIntermediateTensorInfo(i),c}else return au({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:t})}const Q5={kernelName:wl,backendName:"webgl",kernelFunc:jv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function eX(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s;if(e.length===1)return Jp({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const r=e[0].shape,a=e[0].dtype;e.forEach(l=>{Zn(r,l.shape,"All tensors passed to stack must have matching shapes"),$(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],c=e.map(l=>{const d=Jp({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(d),d}),u=Rv({inputs:c,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeIntermediateTensorInfo(l)),u}const tX={kernelName:Il,backendName:"webgl",kernelFunc:eX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class nX{constructor(e,t,s){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((u,l)=>u[0]+e[l]+u[1]);const o=e.length,r=dt(o),a=t.map(u=>u[0]).join(","),i=t.map((u,l)=>u[0]+e[l]).join(","),c=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,o);if(o===1){this.userCode=`
        int start = ${a};
        int end = ${i};

        void main() {
          int outC = getOutputCoords();
          if (outC < start || outC >= end) {
            setOutput(value);
          } else {
            setOutput(getX(outC - start));
          }
        }
      `;return}this.userCode=`
      ${r} start = ${r}(${a});
      ${r} end = ${r}(${i});

      void main() {
        ${r} outC = getOutputCoords();
        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {
          setOutput(value);
        } else {
          ${r} coords = outC - start;
          setOutput(getX(${c}));
        }
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sX{constructor(e,t,s){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((m,g)=>m[0]+e[g]+m[1]);const o=e.length,r=dt(o),a=t.map(m=>m[0]).join(","),i=t.map((m,g)=>m[0]+e[g]).join(","),c=pn("rc",o),u=pn("source",o),l=`${c[o-1]} < ${this.outputShape[o-1]}`,d=o===1?"source":`vec2(${u.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${c[o-1]} += 1;
       if(${l}) {
      `,o===1?"":`}
       rc = outputLoc;
       ${c[o-2]} += 1;
       if(${c[o-2]} < ${this.outputShape[o-2]}) {`,o===1?"":`  ${c[o-1]} += 1;
         if(${l}) {`],p=o===1?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let f="";for(let m=0,g=o===1?2:4;m<g;m++)f+=`
        ${h[m]}
        if (${p}) {
          result[${m}] = float(value);
        } else {
          ${r} source = rc - start;
          result[${m}] = getChannel(getX(${u.join()}), ${d});
        }
      `;f+=o===1?"} ":"}}",this.userCode=`
      const ${r} start = ${r}(${a});
      const ${r} end = ${r}(${i});

      void main() {
        ${r} outputLoc = getOutputCoords();
        vec4 result = vec4(0.);
        ${f}
        setOutput(result);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const qv=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{paddings:r,constantValue:a}=s;if(L(o.shape)===0){const u=r.map((l,d)=>l[0]+o.shape[d]+l[1]);return au({backend:t,attrs:{shape:u,value:a,dtype:o.dtype}})}const i=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new sX(o.shape,r,a):new nX(o.shape,r,a),c=[[a]];return t.runWebGLProgram(i,[o],o.dtype,c)},oX={kernelName:gi,backendName:"webgl",kernelFunc:qv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const rX=`
  if(a < 0.0 && floor(b) < b){
    return NAN;
  }
  if (b == 0.0) {
    return 1.0;
  }
  return (round(mod(b, 2.0)) != 1) ?
      pow(abs(a), b) : sign(a) * pow(abs(a), b);
`,aX=`
  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.
  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));
  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);
  vec4 result = multiplier * pow(abs(a), b);

  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS
  bvec4 isExpZero = equal(b, vec4(0.0));
  result.r = isExpZero.r ? 1.0 : result.r;
  result.g = isExpZero.g ? 1.0 : result.g;
  result.b = isExpZero.b ? 1.0 : result.b;
  result.a = isExpZero.a ? 1.0 : result.a;

  bvec4 isNaN1 = lessThan(a, vec4(0.0));
  bvec4 isNaN2 = lessThan(floor(b), b);
  bvec4 isNaN = bvec4(isNaN1.x && isNaN2.x, isNaN1.y && isNaN2.y, isNaN1.z && isNaN2.z, isNaN1.w && isNaN2.w);
  `+su+`
  return result;
`,iX=en({opSnippet:rX,packedOpSnippet:aX}),cX={kernelName:bi,backendName:"webgl",kernelFunc:iX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lX(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,keepDims:a}=s,i=o.shape.length,c=[],u=Re(r,o.shape);let l=u;const d=pt(l,i);let h=o;d!=null&&(h=bn({inputs:{x:o},backend:t,attrs:{perm:d}}),l=rt(l.length,i),c.push(h)),ht("prod",l,i);let p;if(t.shouldExecuteOnCPU([h])){const f=t.texData.get(h.dataId).values,{outVals:m,outShape:g,outDtype:b}=fU(h.shape,h.dtype,f,l);p=t.makeTensorInfo(g,b,m)}else{const[f,m]=bt(h.shape,l),g=L(m),b=le({inputs:{x:h},backend:t,attrs:{shape:[-1,g]}}),x=qf(o.dtype),y=Jr(b,x,"prod",t);p=le({inputs:{x:y},backend:t,attrs:{shape:f}}),c.push(b),c.push(y)}if(a){c.push(p);const f=et(p.shape,u);p=le({inputs:{x:p},backend:t,attrs:{shape:f}})}return c.forEach(f=>t.disposeIntermediateTensorInfo(f)),p}const uX={kernelName:yi,backendName:"webgl",kernelFunc:lX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dX(n){const{inputs:e,backend:t,attrs:s}=n,{paramsNestedSplits:o,paramsDenseValues:r,indices:a}=e,{outputRaggedRank:i}=s,c=o.map(b=>t.readSync(b.dataId)),u=o.map(b=>b.shape),l=t.readSync(r.dataId),d=t.readSync(a.dataId),[h,p,f]=mU(c,u,l,r.shape,r.dtype,d,a.shape,i),m=h.map(b=>t.makeTensorInfo([b.length],"int32",b)),g=t.makeTensorInfo(f,r.dtype,p);return m.concat([g])}const hX={kernelName:l0,backendName:"webgl",kernelFunc:dX};/**
 * @license
 * Copyright 2022 Google LLC.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pX(n){const{inputs:e,backend:t}=n,{starts:s,limits:o,deltas:r}=e,a=t.readSync(s.dataId),i=t.readSync(o.dataId),c=t.readSync(r.dataId),[u,l]=gU(a,s.shape,s.dtype,i,o.shape,c,r.shape),d=t.makeTensorInfo([u.length],"int32",u),h=t.makeTensorInfo([l.length],s.dtype,l);return[d,h]}const fX={kernelName:u0,backendName:"webgl",kernelFunc:pX};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mX(n){const{inputs:e,backend:t,attrs:s}=n,{shape:o,values:r,defaultValue:a,rowPartitionTensors:i}=e,{rowPartitionTypes:c}=s,u=t.readSync(o.dataId),l=t.readSync(r.dataId),d=t.readSync(a.dataId),h=i.map(g=>t.readSync(g.dataId)),p=i.map(g=>g.shape),[f,m]=bU(u,o.shape,l,r.shape,r.dtype,d,a.shape,h,p,c);return t.makeTensorInfo(f,r.dtype,m)}const gX={kernelName:d0,backendName:"webgl",kernelFunc:mX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Xv=n=>{const{backend:e,attrs:t}=n,{start:s,stop:o,step:r,dtype:a}=t,i=xU(s,o,r,a);return e.makeTensorInfo([i.length],a,i)},bX={kernelName:Md,backendName:"webgl",kernelFunc:Xv};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xX="return 1.0 / x;",yX=He({opSnippet:xX}),wX={kernelName:wi,backendName:"webgl",kernelFunc:yX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const IX=gs+`
  return (x < 0.0) ? 0.0 : x;
`,kX=`
  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,vX=He({opSnippet:IX,packedOpSnippet:kX}),$X={kernelName:Ii,backendName:"webgl",kernelFunc:vX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CX=gs+`
  return (x < 0.0) ? 0.0 : min(6.0, x);
`,SX=`
  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,NX=He({opSnippet:CX,packedOpSnippet:SX}),TX={kernelName:$i,backendName:"webgl",kernelFunc:NX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class EX{constructor(e,t,s,o,r){this.variableNames=["A"],this.outputShape=[];const[a,i,c,u]=e;this.outputShape=[a,t,s,u];const l=[o&&t>1?i-1:i,o&&s>1?c-1:c],d=[o&&t>1?t-1:t,o&&s>1?s-1:s];let h;r?h="(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":h="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));
        ivec2 sourceCeilRC = ivec2(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);
        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);
        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);
        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);

        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);

        float top = topLeft + (topRight - topLeft) * fracRC.y;
        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;
        float newValue = top + (bottom - top) * fracRC.x;

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class _X{constructor(e,t,s,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,c,u]=e;this.outputShape=[a,t,s,u];const l=[o&&t>1?i-1:i,o&&s>1?c-1:c],d=[o&&t>1?t-1:t,o&&s>1?s-1:s];let h;r?h="(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":h="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${h};

        // Compute the four integer indices.
        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));
        ivec3 sourceCeilRC = ivec3(
          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        // In parallel, construct four corners for all four components in
        // packed 2x2 cell.
        vec4 topLeft = vec4(
          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 bottomLeft = vec4(
          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);

        vec4 topRight = vec4(
          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec4 bottomRight = vec4(
          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),
          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);

        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);

        vec4 top = mix(topLeft, topRight, fracRC.yyzz);
        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);
        vec4 newValue = mix(top, bottom, fracRC.x);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function RX(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:a,size:i}=s,[c,u]=i,l=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new _X(o.shape,c,u,r,a):new EX(o.shape,c,u,r,a);return t.runWebGLProgram(l,[o],"float32")}const AX={kernelName:vi,backendName:"webgl",kernelFunc:RX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class DX{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,o,r]=t,[,a,i]=e,c=[s&&a>1?o-1:o,s&&i>1?r-1:r],u=[s&&a>1?a-1:a,s&&i>1?i-1:i],l=c[0]/u[0],d=c[1]/u[1],h=1/l,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(startRLerp - float(winHeight / 2));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(startCLerp - float(winWidth / 2));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float dxR = float(dyR) * heightScale;
            int topDxRIndex = int(floor(dxR));
            int bottomDxRIndex = int(min(ceil(dxR), ${o-1}.0));
            float dxRLerp = dxR - float(topDxRIndex);
            float inverseDxRLerp = 1.0 - dxRLerp;

            float dxC = float(dyC) * widthScale;
            int leftDxCIndex = int(floor(dxC));
            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));
            float dxCLerp = dxC - float(leftDxCIndex);
            float inverseDxCLerp = 1.0 - dxCLerp;

            if (r == topDxRIndex && c == leftDxCIndex) {
              // topLeft
              accumulator +=
                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;
            }

            if (r == topDxRIndex && c == rightDxCIndex) {
              // topRight
              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;
            }

            if (r == bottomDxRIndex && c == leftDxCIndex) {
              // bottomLeft
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;
            }

            if (r == bottomDxRIndex && c == rightDxCIndex) {
              // bottomRight
              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FX(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:a}=s,i=new DX(r.shape,o.shape,a);return t.runWebGLProgram(i,[r],r.dtype)}const OX={kernelName:Uf,backendName:"webgl",kernelFunc:FX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class MX{constructor(e,t,s,o,r){this.variableNames=["A"],this.outputShape=[];const[a,i,c,u]=e;this.outputShape=[a,t,s,u];const l=[o&&t>1?i-1:i,o&&s>1?c-1:c],d=[o&&t>1?t-1:t,o&&s>1?s-1:s],h=o?"0.5":"0.0";let p;r?p="max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":p="vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec2 effectiveInputOverOutputRatioRC = vec2(
          ${l[0]/d[0]},
          ${l[1]/d[1]});
      const vec2 inputShapeRC = vec2(${i}.0, ${c}.0);

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        ivec2 yRC = coords.yz;

        // Fractional source index.
        vec2 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec2 sourceNearestRC = ivec2(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));
        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class LX{constructor(e,t,s,o,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,c,u]=e;this.outputShape=[a,t,s,u];const l=[o&&t>1?i-1:i,o&&s>1?c-1:c],d=[o&&t>1?t-1:t,o&&s>1?s-1:s],h=o?"0.5":"0.0";let p;r?p="max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":p="vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`
      const vec3 effectiveInputOverOutputRatioRC = vec3(
          ${l[0]/d[0]},
          ${l[1]/d[1]},
          ${l[1]/d[1]});
      const vec3 inputShapeRC = vec3(${i}.0, ${c}.0,
                                     ${c}.0);

      float getAValue(int b, int r, int c, int d) {
        return getChannel(getA(b, r, c, d), vec2(c, d));
      }

      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        // Calculate values for next column in yRC.z.
        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);

        // Fractional source index.
        vec3 sourceFracIndexRC = ${p};

        // Compute the coordinators of nearest neighbor point.
        ivec3 sourceNearestRC = ivec3(
          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));

        // Should we calculate next column and row elements in 2x2 packed cell.
        bool hasNextCol = d < ${u-1};
        bool hasNextRow = coords.z < ${s-1};

        vec4 newValue = vec4(
          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),
          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)
                     : 0.0,
          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)
                     : 0.0,
          (hasNextRow && hasNextCol) ?
            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);

        setOutput(newValue);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PX(n){const{inputs:e,backend:t,attrs:s}=n,{images:o}=e,{alignCorners:r,halfPixelCenters:a,size:i}=s,[c,u]=i,l=H().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new LX(o.shape,c,u,r,a):new MX(o.shape,c,u,r,a);return t.runWebGLProgram(l,[o],o.dtype)}const BX={kernelName:ki,backendName:"webgl",kernelFunc:PX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class zX{constructor(e,t,s){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,o,r]=t,[,a,i]=e,c=[s&&a>1?o-1:o,s&&i>1?r-1:r],u=[s&&a>1?a-1:a,s&&i>1?i-1:i],l=c[0]/u[0],d=c[1]/u[1],h=1/l,p=1/d,f=Math.ceil(h)*2+2,m=Math.ceil(p)*2+2;this.userCode=`
      void main() {
        ivec4 coords = getOutputCoords();
        int b = coords[0];
        int d = coords[3];
        int r = coords[1];
        int c = coords[2];

        float accumulator = 0.0;

        const float heightScale = float(${l});
        const float widthScale = float(${d});

        const float invHeightScale = float(${h});
        const float invWidthScale = float(${p});

        const int winHeight = int(${f});
        const int winWidth = int(${m});

        // Compute bounds for where in dy we will look
        float startRLerp = floor(float(r) * invHeightScale);
        int startDyR = int(floor(startRLerp - float(winHeight / 2)));

        float startCLerp = floor(float(c) * invWidthScale);
        int startDyC = int(floor(startCLerp - float(winWidth / 2)));

        // Loop over dy
        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {
          int dyR = dyROffset + startDyR;

          // Guard against the window exceeding the bounds of dy
          if (dyR < 0 || dyR >= ${a}) {
            continue;
          }

          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {
            int dyC = dyCOffset + startDyC;

            // Guard against the window exceeding the bounds of dy
            if (dyC < 0 || dyC >= ${i}) {
              continue;
            }

            float sourceFracRow =
              float(${c[0]}) *
                (float(dyR) / float(${u[0]}));

            float sourceFracCol =
                float(${c[1]}) *
                  (float(dyC) / float(${u[1]}));

            int sourceNearestRow = int(min(
                float(int(${o}) - 1),
                ${s} ? float(round(sourceFracRow)) :
                                  float(floor(sourceFracRow))));

            int sourceNearestCol = int(min(
                float(int(${r}) - 1),
                ${s} ? float(round(sourceFracCol)) :
                                  float(floor(sourceFracCol))));

            if (r == sourceNearestRow && c == sourceNearestCol) {
              accumulator += getDy(b, dyR, dyC, d);
            }
          }
        }
        // End loop over dy

        setOutput(accumulator);
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function VX(n){const{inputs:e,backend:t,attrs:s}=n,{images:o,dy:r}=e,{alignCorners:a}=s,i=new zX(r.shape,o.shape,a);return t.runWebGLProgram(i,[r],r.dtype)}const WX={kernelName:Wf,backendName:"webgl",kernelFunc:VX};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class UX{constructor(e,t){this.variableNames=["x"];const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);if(this.outputShape=e,s===1){this.userCode=`
        void main() {
          int coord = getOutputCoords();
          setOutput(getX(${e[0]} - coord - 1));
        }
      `;return}const o=i=>t.indexOf(i)!==-1&&e[i]!==1?`${e[i]} - coords[${i}] - 1`:`coords[${i}]`,r=e.map((i,c)=>o(c)).join(","),a=dt(s);this.userCode=`
      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${r}));
      }
    `}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class GX{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const s=e.length;if(s>4)throw new Error(`WebGL backend: Reverse of rank-${s} tensor is not yet supported`);this.outputShape=e;const o=pn("rc",s),r=`${o[s-1]} + 1 < ${this.outputShape[s-1]}`,a=`${o[s-2]} + 1 < ${this.outputShape[s-2]}`,i=dt(s);s===1?this.userCode=`
        void main(){
          int rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = getChannel(getX(${e[0]} - rc - 1),
            ${e[0]} - rc - 1);
          if(${r}){
              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),
                ${e[0]} - (rc  + 1) - 1);
          }
          setOutput(result);
        }
      `:this.userCode=`
        void main() {
          ${i} rc = getOutputCoords();
          vec4 result = vec4(0.);
          result.r = ${c(o.slice())};
          if(${r}){
            result.g = ${u(o.slice())};
          }
          if(${a}) {
            result.b = ${l(o.slice())};
            if(${r}) {
              result.a = ${d(o.slice())};
            }
          }
          setOutput(result);
        }
    `;function c(f){return h(f)}function u(f){return f[s-1]="("+f[s-1]+" + 1)",h(f)}function l(f){return f[s-2]="("+f[s-2]+" + 1)",h(f)}function d(f){return f[s-1]="("+f[s-1]+" + 1)",f[s-2]="("+f[s-2]+" + 1)",h(f)}function h(f){const m=e.map((x,y)=>p(y,f)),g=m.join(","),b=m.slice(-2).join(",");return`getChannel(getX(${g}), vec2(${b}))`}function p(f,m){return t.indexOf(f)!==-1&&e[f]!==1?`${e[f]} - ${m[f]} - 1`:`${m[f]}`}}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function HX(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dims:r}=s,a=o.shape.length,i=Re(r,o.shape);if(a===0)return Ln({inputs:{x:o},backend:t});const c=H().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GX(o.shape,i):new UX(o.shape,i);return t.runWebGLProgram(c,[o],o.dtype)}const jX={kernelName:Ci,backendName:"webgl",kernelFunc:HX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class qX{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const s=e[1],o=e[2];this.outputShape=e;let r="";typeof t=="number"?r=`float outputValue = ${t.toFixed(2)};`:r=`
        vec3 fill = vec3(${t.join(",")});
        float outputValue = fill[coords[3]];`,this.userCode=`
        void main() {
          ivec4 coords = getOutputCoords();
          int x = coords[2];
          int y = coords[1];
          float coordXFloat = (float(x) - params[0]) * params[3] -
            (float(y) - params[1]) * params[2];
          float coordYFloat = (float(x) - params[0]) * params[2] +
            (float(y) - params[1]) * params[3];
          int coordX = int(round(coordXFloat + params[0]));
          int coordY = int(round(coordYFloat + params[1]));
          ${r}
          if(coordX >= 0 && coordX < ${o} && coordY >= 0 && coordY < ${s}) {
            outputValue = getImage(coords[0], coordY, coordX, coords[3]);
          }
          setOutput(outputValue);
        }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const XX={kernelName:Ll,backendName:"webgl",kernelFunc:({inputs:n,attrs:e,backend:t})=>{const{image:s}=n,{radians:o,fillValue:r,center:a}=e,i=t,c=new qX(s.shape,r),[u,l]=uh(a,s.shape[1],s.shape[2]),d=[[u,l,Math.sin(o),Math.cos(o)]];return i.runWebGLProgram(c,[s],s.dtype,d)}};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KX=`
  // OpenGL ES does not support round function.
  // The algorithm is based on banker's rounding.
  float base = floor(x);
  if ((x - base) < 0.5) {
    return floor(x);
  } else if ((x - base) > 0.5) {
    return ceil(x);
  } else {
    if (mod(base, 2.0) == 0.0) {
      return base;
    } else {
      return base + 1.0;
    }
  }
`,YX=He({opSnippet:KX}),ZX={kernelName:Si,backendName:"webgl",kernelFunc:YX};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const JX="return inversesqrt(x);",QX=He({opSnippet:JX,cpuKernelImpl:yU}),eK={kernelName:Ni,backendName:"webgl",kernelFunc:QX};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class Kv{constructor(e,t,s,o,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const c=dt(r.length),u=dt(a.length);let l="";s===1?l="i":s===2&&(l="i, j");const d=`getIndices(${l})`;let h="";o===1?h="i":o===2&&(h="i, coords[1]");const p=`getUpdates(${h})`,f=t>1?"strides[j]":"strides";this.userCode=`
        ${c} strides = ${c}(${r});

        void main() {
          ${u} coords = getOutputCoords();
          float sum = 0.0;
          bool found = false;
          for (int i = 0; i < ${e}; i++) {
            int flattenedIndex = 0;
            for (int j = 0; j < ${t}; j++) {
              int index = round(${d});
              flattenedIndex += index * ${f};
            }
            if (flattenedIndex == coords[0]) {
              sum += ${p};
              found = true;
            }
          }
          setOutput(mix(getDefaultValue(), sum, float(found)));
        }
      `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tK(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o,updates:r}=e,{shape:a}=s,{sliceRank:i,numUpdates:c,sliceSize:u,strides:l,outputSize:d}=Li(r,o,a),h=[d/u,u];if(d===0)return t.makeTensorInfo(a,o.dtype);const p=le({inputs:{x:o},backend:t,attrs:{shape:[c,i]}}),f=le({inputs:{x:r},backend:t,attrs:{shape:[c,u]}}),m=t.makeTensorInfo([],"float32",new Float32Array([0])),g=new Kv(c,i,p.shape.length,f.shape.length,l,h),b=t.runWebGLProgram(g,[f,p,m],f.dtype),x=le({inputs:{x:b},backend:t,attrs:{shape:a}});return t.disposeIntermediateTensorInfo(p),t.disposeIntermediateTensorInfo(f),t.disposeIntermediateTensorInfo(b),t.disposeIntermediateTensorInfo(m),x}const nK={kernelName:Ld,backendName:"webgl",kernelFunc:tK};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class sK{constructor(e,t,s,o){this.variableNames=["sortedSequence","values"],this.customUniforms=[{name:"numInputs",type:"int"}],this.outputShape=[e,s];const r="while (left < right) {",a=`for (int i = 0; i < ${Math.ceil(Math.log2(t+1))}; ++i) { if (left >= right) break;`,i=H().getNumber("WEBGL_VERSION")===2?r:a,c=o==="left"?"<":"<=";this.userCode=`
       int findBound(int batch, float value) {
         int left = 0;
         int right = numInputs;
         int mid;
         ${i}
           mid = (left + right) / 2;
           if (getSortedSequence(batch, mid) ${c} value) {
             left = mid + 1;
           } else {
             right = mid;
           }
         }
         return right;
       }

       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int valueIndex = coords[1];

         float value = getValues(batch, valueIndex);

         setOutput(float(findBound(batch, value)));
       }
     `}}/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function oK(n){const{inputs:e,backend:t,attrs:s}=n,{sortedSequence:o,values:r}=e,{side:a}=s,i=new sK(o.shape[0],o.shape[1],r.shape[1],a),c=[[o.shape[1]]];return t.runWebGLProgram(i,[o,r],"int32",c)}const rK={kernelName:h0,backendName:"webgl",kernelFunc:oK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class aK{constructor(e,t,s){this.variableNames=["c","a","b"],this.outputShape=t;let o,r;if(s>4)throw Error(`Where for rank ${s} is not yet supported`);if(s===1)r="resRC",o="resRC";else{const i=["resRC.x","resRC.y","resRC.z","resRC.w"],c=[],u=[];for(let l=0;l<t.length;l++)u.push(`${i[l]}`),l<e&&c.push(`${i[l]}`);o=c.join(),r=u.join()}const a=dt(s);this.userCode=`
      void main() {
        ${a} resRC = getOutputCoords();
        float cVal = getC(${o});
        if (cVal >= 1.0) {
          setOutput(getA(${r}));
        } else {
          setOutput(getB(${r}));
        }
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function iK(n){const{inputs:e,backend:t}=n,{condition:s,t:o,e:r}=e,a=new aK(s.shape.length,o.shape,o.shape.length);return t.runWebGLProgram(a,[s,o,r],Fn(o.dtype,r.dtype))}const cK={kernelName:vl,backendName:"webgl",kernelFunc:iK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lK=`
  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.
  // see: https://arxiv.org/abs/1706.02515
  float scaleAlpha = ${ph};
  float scale = ${fh};
  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);
`,uK=He({opSnippet:lK}),dK={kernelName:$l,backendName:"webgl",kernelFunc:uK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hK=Ki+`
  return 1.0 / (1.0 + exp(-1.0 * x));
`,pK=`
  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));
  bvec4 isNaN = isnan(x);

  result.r = isNaN.r ? x.r : result.r;
  result.g = isNaN.g ? x.g : result.g;
  result.b = isNaN.b ? x.b : result.b;
  result.a = isNaN.a ? x.a : result.a;

  return result;
`,fK=He({opSnippet:hK,packedOpSnippet:pK,cpuKernelImpl:IU}),mK={kernelName:Ei,backendName:"webgl",kernelFunc:fK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const gK=`
  if (isnan(x)) { return 0.0; }
  return sign(x);
`,bK=He({opSnippet:gK}),xK={kernelName:Nl,backendName:"webgl",kernelFunc:bK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yK=Ki+`
  return sin(x);
`,wK=He({opSnippet:yK}),IK={kernelName:Ti,backendName:"webgl",kernelFunc:wK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const kK=`
  float e2x = exp(x);
  return (e2x - 1.0 / e2x) / 2.0;
`,vK=He({opSnippet:kK}),$K={kernelName:Sl,backendName:"webgl",kernelFunc:vK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const CK=`
  float epsilon = 1.1920928955078125e-7;
  float threshold = log(epsilon) + 2.0;

  bool too_large = x > -threshold;
  bool too_small = x < threshold;

  float result;
  float exp_x = exp(x);

  if (too_large){
    result = x;
  }
  else if (too_small){
    result = exp_x;
  }
  else{
    result = log(exp_x + 1.0);
  }
  return result;
`,SK=He({opSnippet:CK}),NK={kernelName:Tl,backendName:"webgl",kernelFunc:SK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const TK=n=>{const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,paddings:a}=s;$(o.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const i=r.reduce((b,x)=>b*x),c=[[0,0]];c.push(...a);for(let b=1+r.length;b<o.shape.length;++b)c.push([0,0]);const u=[],l=qv({inputs:{x:o},backend:t,attrs:{paddings:c,constantValue:0}}),d=Hr(l.shape,r,i,!1),h=jr(d.length,r.length,!1),p=qr(l.shape,r,i,!1),f=le({inputs:{x:l},backend:t,attrs:{shape:d}}),m=bn({inputs:{x:f},backend:t,attrs:{perm:h}}),g=le({inputs:{x:m},backend:t,attrs:{shape:p}});return u.push(l),u.push(f),u.push(m),u.forEach(b=>t.disposeIntermediateTensorInfo(b)),g},EK={kernelName:El,backendName:"webgl",kernelFunc:TK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _K(n){const{inputs:e,backend:t}=n,{indices:s,values:o,denseShape:r,defaultValue:a}=e;if(r.shape.length!==1)throw new Error(`Dense shape must be a vector, saw:
         ${r.shape}`);if(s.shape.length!==2)throw new Error(`Indices must be a matrix, saw:
         ${s.shape}`);if(o.shape.length!==1)throw new Error(`Values must be a vector, saw:
         ${o.shape}`);if(a.shape.length!==0)throw new Error(`Default value must be a scalar, saw:
        ${a.shape}`);const i=t.readSync(s.dataId),c=t.readSync(o.dataId),u=t.readSync(r.dataId),l=t.readSync(a.dataId)[0],[d,h,p,f,m]=vU(i,s.shape,s.dtype,c,o.dtype,u,l);return[t.makeTensorInfo(h,s.dtype,d),t.makeTensorInfo([h[0]],o.dtype,p),t.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(g=>Number(g)))),t.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}const RK={kernelName:Pd,backendName:"webgl",kernelFunc:_K};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function AK(n){const{inputs:e,backend:t}=n,{inputIndices:s,inputShape:o,newShape:r}=e;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const a=Array.from(t.readSync(o.dataId)),i=t.readSync(s.dataId),c=Array.from(t.readSync(r.dataId)),[u,l,d]=$U(i,s.shape,s.dtype,a,c);return[t.makeTensorInfo(l,s.dtype,u),t.makeTensorInfo([d.length],r.dtype,new Int32Array(d))]}const DK={kernelName:Rl,backendName:"webgl",kernelFunc:AK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function FK(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
              ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
              ${r.shape}`);const a=t.readSync(s.dataId),i=t.readSync(o.dataId),c=t.readSync(r.dataId),[u,l]=xv(a,s.shape,s.dtype,i,c,!0);return t.makeTensorInfo(l,s.dtype,u)}const OK={kernelName:Bd,backendName:"webgl",kernelFunc:FK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function MK(n){const{inputs:e,backend:t}=n,{data:s,indices:o,segmentIds:r}=e;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(o.shape.length!==1)throw new Error(`Indices should be a vector but received shape
             ${o.shape}`);if(r.shape.length!==1)throw new Error(`Segment ids should be a vector but received shape
             ${r.shape}`);const a=t.readSync(s.dataId),i=t.readSync(o.dataId),c=t.readSync(r.dataId),[u,l]=xv(a,s.shape,s.dtype,i,c);return t.makeTensorInfo(l,s.dtype,u)}const LK={kernelName:zd,backendName:"webgl",kernelFunc:MK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function PK(n){const{inputs:e,backend:t,attrs:s}=n,{sparseIndices:o,sparseValues:r,defaultValue:a}=e,{outputShape:i}=s,{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=Li(r,o,i),p=!1;if(r.dtype==="string"){const b=t.bufferSync(o),x=t.bufferSync(r),y=Ao(t.readSync(a.dataId)[0]),w=wU(b,x,i,h,l,u,c,d,y,p);return t.makeTensorInfo(i,w.dtype,w.values)}const f=new Kv(u,c,o.shape.length,r.shape.length,d,[h,1],p),m=t.runWebGLProgram(f,[r,o,a],r.dtype),g=le({inputs:{x:m},backend:t,attrs:{shape:i}});return t.disposeIntermediateTensorInfo(m),g}const BK={kernelName:p0,backendName:"webgl",kernelFunc:PK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function zK(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{numOrSizeSplits:r,axis:a}=s,i=Re(a,o.shape)[0],c=mh(o,r,i),u=o.shape.length,l=new Array(u).fill(0),d=o.shape.slice();return c.map(h=>{const p=[...d];p[i]=h;const f=Yi({inputs:{x:o},backend:t,attrs:{begin:l,size:p}});return l[i]+=h,f})}const VK={kernelName:_l,backendName:"webgl",kernelFunc:zK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const dy="return sqrt(x);",WK=He({opSnippet:dy,packedOpSnippet:dy,cpuKernelImpl:CU}),UK={kernelName:_i,backendName:"webgl",kernelFunc:WK};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const GK="return x * x;",HK=He({opSnippet:GK}),jK={kernelName:Vd,backendName:"webgl",kernelFunc:HK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hy="return (a - b) * (a - b);",qK=en({opSnippet:hy,packedOpSnippet:hy}),XK={kernelName:Di,backendName:"webgl",kernelFunc:qK};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KK({inputs:n,attrs:e,backend:t}){const{x:s}=n,o=gs+`
    return x > 0.0 ? 1.0 : float(${e.alpha});
  `,r=new zs(s.shape,o);return t.runWebGLProgram(r,[s],s.dtype)}const YK={kernelName:zr,backendName:"webgl",kernelFunc:KK};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class ZK{constructor(e,t,s){this.variableNames=["x"],this.outputShape=s;const o=s.length,r=dt(s.length),a=dt(s.length);let i="";if(o===1)i="coords * strides + begin";else{let c=0;i=s.map((u,l)=>(c++,s.length===1?`coords * strides[${l}] + begin[${l}]`:`coords[${c-1}] * strides[${l}] + begin[${l}]`)).join(",")}this.userCode=`
      ${r} begin = ${r}(${e});
      ${r} strides = ${r}(${t});

      void main() {
        ${a} coords = getOutputCoords();
        setOutput(getX(${i}));
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function JK(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{begin:r,end:a,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:w}=th(o.shape,r,a,i,c,u,l,d,h);let I;if(m)I=le({inputs:{x:o},backend:t,attrs:{shape:f}});else if(g||b){$(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const v=Jd(x,y,w),C=Yi({inputs:{x:o},backend:t,attrs:{begin:x,size:v}});I=le({inputs:{x:C},backend:t,attrs:{shape:f}}),t.disposeIntermediateTensorInfo(C)}else if(t.shouldExecuteOnCPU([o])){const C=t.readSync(o.dataId),N=Me(o.shape,o.dtype,C),T=SU(p,N,w,x);I=t.makeTensorInfo(f,o.dtype,T.values)}else{const C=new ZK(x,w,p);I=t.runWebGLProgram(C,[o],o.dtype)}const k=le({inputs:{x:I},backend:t,attrs:{shape:f}});return t.disposeIntermediateTensorInfo(I),k}const QK={kernelName:Al,backendName:"webgl",kernelFunc:JK};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function e8(n){const{inputs:e,backend:t,attrs:s}=n,{separator:o,nGramWidths:r,leftPad:a,rightPad:i,padWidth:c,preserveShortSequences:u}=s,{data:l,dataSplits:d}=e,h=t.readSync(l.dataId),p=t.readSync(d.dataId),[f,m]=NU(h,p,o,r,a,i,c,u);return[t.makeTensorInfo([f.length],"string",f),t.makeTensorInfo(d.shape,"int32",m)]}const t8={kernelName:Wd,backendName:"webgl",kernelFunc:e8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function n8(n){const{inputs:e,backend:t,attrs:s}=n,{skipEmpty:o}=s,{input:r,delimiter:a}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(r.shape.length!==1)throw new Error(`Input must be a vector, got shape: ${r.shape}`);if(a.shape.length!==0)throw new Error(`Delimiter must be a scalar, got shape: ${a.shape}`);const i=t.readSync(r.dataId),c=t.readSync(a.dataId)[0],[u,l,d]=TU(i,c,o),h=l.length;return[t.makeTensorInfo([h,2],"int32",u),t.makeTensorInfo([h],"string",l),t.makeTensorInfo([2],"int32",new Int32Array(d))]}const s8={kernelName:Ud,backendName:"webgl",kernelFunc:n8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function o8(n){const{inputs:e,backend:t,attrs:s}=n,{numBuckets:o}=s,{input:r}=e;if(r.dtype!=="string")throw new Error("Input must be of datatype string");if(o<=0)throw new Error("Number of buckets must be at least 1");const a=t.readSync(r.dataId),i=EU(a,o);return t.makeTensorInfo(r.shape,"int32",i)}const r8={kernelName:Gd,backendName:"webgl",kernelFunc:o8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a8="return tan(x);",i8=He({opSnippet:a8}),c8={kernelName:Oi,backendName:"webgl",kernelFunc:i8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const l8=`
  float e2x = exp(-2.0 * abs(x));
  return sign(x) * (1.0 - e2x) / (1.0 + e2x);
`,u8=He({opSnippet:l8}),d8={kernelName:Mi,backendName:"webgl",kernelFunc:u8};/**
 * @license
 * Copyright 2017 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class h8{constructor(e,t){this.variableNames=["A"];const s=new Array(e.length);for(let a=0;a<s.length;a++)s[a]=e[a]*t[a];this.outputShape=s,this.rank=s.length;const o=dt(this.rank),r=p8(e);this.userCode=`
      void main() {
        ${o} resRC = getOutputCoords();
        setOutput(getA(${r}));
      }
    `}}function p8(n){const e=n.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(e===1)return`imod(resRC, ${n[0]})`;const t=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let o=0;o<n.length;o++)s.push(`imod(${t[o]}, ${n[o]})`);return s.join()}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Yv(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{reps:r}=s;if(o.dtype==="string"||o.shape.length>5){const c=t.readSync(o.dataId),u=o.dtype==="string"?c.map(h=>Ao(h)):c,l=Me(o.shape,o.dtype,u),d=RU(l,r);return t.makeTensorInfo(d.shape,d.dtype,d.values)}const a=new h8(o.shape,r);return t.runWebGLProgram(a,[o],o.dtype)}const f8={kernelName:Br,backendName:"webgl",kernelFunc:Yv};class m8{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode=`
       void main() {
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // We compare elements pair-wise within a group of size 2 * inc.
         // The comparing rule for each group alternates between ascending
         // and descending. Within each group, we compare each pair at
         // positions i and i+inc. To decide whether an element at position i
         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than
         // inc, it is in the first half of the group, we denote it as x0,
         // otherwise we denote it as x1.
         // For example, as shown in the Bitonic top K paper referenced above,
         // Figure5(a) shows that element[1] is in the
         // second half of the group when group size is 2, but it is in the
         // first half of the group when group size is 4.

         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;
         int i = isFirstInPair ? elemIdx : elemIdx - inc;

         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));
         float x0 = i0 < n ? getX(batch, i0) : negativeInf;
         float x1 = i1 < n ? getX(batch, i1) : negativeInf;

         // Denotes which direction indices are in (ascending or descending).
         bool reverse = imod(elemIdx, 2 * dir) >= dir;
         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);
         if (reverse == isGreater) { // Elements in opposite order of direction
           int iTemp = i0;
           i0 = i1;
           i1 = iTemp;
         }
         if (isFirstInPair) {
            setOutput(float(i0));
         } else {
            setOutput(float(i1));
         }
       }
     `}}class g8{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode=`
    void main() {
         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...
         ivec2 coords = getOutputCoords();
         int batch = coords[0];
         int elemIdx = coords[1];

         // The output size is half of the previous size.
         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),
         // we only need to output the indices at positions |, the indices at
         // positions _ can be thrown away, see Figure5(b) After Phase 2
         // (Merge phase) in the Bitonic Top K paper referenced above.
         // For example, the paper shows we only need to output the orange bars.
         // The output sequence should look like this | | | | | | | |.
         // Because the sequence is halved, to map the output index back
         // to the previous sequence to find the corresponding value,
         // we need to double the index. When we double the index,
         // we basically interpolate a position, so 2i looks like
         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position
         // of each 2k positions by - elemIdx % k. E.g. for output at
         // index 4,5,6,7, we want to get the corresponding element at
         // original index 8,9,10,11, for output at index 8,9,10,11,
         // we want to get the corresponding element at original index
         // 16,17,18,19, so on and so forth.

         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));
         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));
         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));

         float x0 = getX(batch, i0);
         float x1 = i1 < n ? getX(batch, i1) : x0;

         setOutput(x0 >= x1 ? float(i0) : float(i1));
       }
     `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function rr(n,e){e!==null&&n.disposeIntermediateTensorInfo(e)}function py(n){let e=1;for(;e<n;)e*=2;return e}function b8(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{k:r,sorted:a}=s,i=H().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),c=H().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=o.shape,l=u[u.length-1];if(t.shouldExecuteOnCPU([o])||l<i||r>c){const T=t.readSync(o.dataId),[_,O]=AU(T,u,o.dtype,r,a);return[t.makeTensorInfo(_.shape,_.dtype,_.values),t.makeTensorInfo(O.shape,O.dtype,O.values)]}if(r===0)return u[u.length-1]=0,[t.makeTensorInfo(u,o.dtype,[]),t.makeTensorInfo(u,"int32",[])];if(l===1)return[o,au({attrs:{shape:u,dtype:"int32",value:0},backend:t})];const d=t.texData.get(o.dataId),h=d!==null&&d.isPacked,p=h?t.unpackTensor(o):o,m=L(u)/l,g=le({inputs:{x:p},attrs:{shape:[m,l]},backend:t});h&&rr(t,p);const b=py(r),x=py(l);let y=null;const w=()=>y===null?[g,g]:[g,y],I=(T,_,O)=>{const P=w(),V=new m8(O),W=[[l],[y===null?1:0],[Number.NEGATIVE_INFINITY],[T],[_]],q=y;y=t.runWebGLProgram(V,P,"int32",W),rr(t,q)};for(let T=1;T<b;T*=2){const _=T*2;for(let O=T;O>=1;O/=2)I(_,O,[m,x])}for(let T=x;T>b;T/=2){const _=w(),O=new g8([m,T/2]),V=[[l],[y===null?1:0],[b]],B=y;y=t.runWebGLProgram(O,_,"int32",V),rr(t,B);const W=b/2,q=W*2;for(let z=W;z>=1;z/=2)I(q,z,y.shape)}let k=y;y=Yi({inputs:{x:y},backend:t,attrs:{begin:0,size:[m,r]}}),rr(t,k);let v=Vv({inputs:{x:g,indices:y},backend:t,attrs:{axis:1,batchDims:1}});rr(t,g);const C=u.slice(0,-1);C.push(r),k=y,y=le({inputs:{x:y},attrs:{shape:C},backend:t}),rr(t,k);const N=v;return v=le({inputs:{x:v},attrs:{shape:C},backend:t}),rr(t,N),[v,y]}const x8={kernelName:Dl,backendName:"webgl",kernelFunc:b8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class y8{constructor(e,t,s,o,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i=s==="nearest"?1:2;let c;switch(o){case"constant":c=1;break;case"reflect":c=2;break;case"wrap":c=3;break;case"nearest":c=4;break;default:c=1;break}this.userCode=`
            float mapCoord(float outCoord, float len) {
              float inCoord = outCoord;
              if(${c} == 2) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    if (inCoord < sz2) {
                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +
                      inCoord;
                    }
                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz2 = 2.0 * len;
                    inCoord -= sz2 * float(int(float(inCoord / sz2)));
                    if (inCoord >= len) {
                      inCoord = sz2 - inCoord - 1.0;
                    }
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 3) {
                if (inCoord < 0.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);
                  }
                } else if (inCoord > len - 1.0) {
                  if (len <= 1.0) {
                    inCoord = 0.0;
                  } else {
                    float sz = len - 1.0;
                    inCoord -= len * float(int(float(inCoord / sz)));
                  }
                }
                return clamp(inCoord, 0.0, len - 1.0);
              } else if (${c} == 4) {
                return clamp(outCoord, 0.0, len - 1.0);
              } else {
                return outCoord;
              }
            }

            float readWithFillValue(int batch, int coordY, int coordX,
              int channel) {
              float outputValue;
              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {
                  outputValue = getImage(batch, coordY, coordX, channel);
              } else {
                outputValue = float(${r});
              }
              return outputValue;
            }

            void main() {
              ivec4 coords = getOutputCoords();
              float outputValue;
              int batch = coords[0];
              int x = coords[2];
              int y = coords[1];
              int channel = coords[3];
              float xf = float(x);
              float yf = float(y);
              float a1 = getTransforms(batch, 0);
              float a2 = getTransforms(batch, 1);
              float a3 = getTransforms(batch, 2);
              float b1 = getTransforms(batch, 3);
              float b2 = getTransforms(batch, 4);
              float b3 = getTransforms(batch, 5);
              float c1 = getTransforms(batch, 6);
              float c2 = getTransforms(batch, 7);
              float projection = c1 * xf + c2 * yf + 1.0;
              if (projection == 0.0) {
                outputValue = float(${r});
              } else {
                float inX = (a1 * xf + a2 * yf + a3) / projection;
                float inY = (b1 * xf + b2 * yf + b3) / projection;
                float mapX = mapCoord(inX, float(${t}));
                float mapY = mapCoord(inY, float(${e}));

                if (${i} == 1) {
                  int coordY = int(round(mapY));
                  int coordX = int(round(mapX));
                  outputValue = readWithFillValue(batch, coordY, coordX,
                    channel);
                } else {
                  float yFloor = floor(mapY);
                  float xFloor = floor(mapX);
                  float yCeil = yFloor + 1.0;
                  float xCeil = xFloor + 1.0;
                  float valueYFloor = (xCeil - mapX) *
                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);
                  float valueYCeil = (xCeil - mapX) *
                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +
                  (mapX - xFloor) *
                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);
                  outputValue = (yCeil - mapY) * valueYFloor +
                  (mapY - yFloor) * valueYCeil;
                }
              }
              setOutput(outputValue);
            }
        `}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function w8(n){const{inputs:e,backend:t,attrs:s}=n,{image:o,transforms:r}=e,{interpolation:a,fillMode:i,fillValue:c,outputShape:u}=s,[l,d,h,p]=o.shape,[f,m]=u??[d,h],g=[l,f,m,p],b=new y8(d,h,a,i,c,g);return t.runWebGLProgram(b,[o,r],"float32")}const I8={kernelName:Fl,backendName:"webgl",kernelFunc:w8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function k8(n){const{inputs:e,attrs:t,backend:s}=n,{axis:o}=t,{x:r}=e;tu(r,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const a=s.readSync(r.dataId),{outputValues:i,outputShape:c,indices:u}=DU(a,o,r.shape,r.dtype);return[s.makeTensorInfo(c,r.dtype,i),s.makeTensorInfo([u.length],"int32",u)]}const v8={kernelName:Gf,backendName:"webgl",kernelFunc:k8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function $8(n){const{inputs:e,backend:t,attrs:s}=n,{value:o}=e;let{axis:r}=s;r<0&&(r+=o.shape.length);const a=o,i=a.shape.length,c=o.shape[r],u=new Array(i-1);let l=0;for(let m=0;m<i;m++)m!==r&&(u[l++]=a.shape[m]);const d=[],h=new Array(i).fill(0),p=a.shape.slice();p[r]=1;const f=new Array(c);for(let m=0;m<f.length;m++){h[r]=m;const g=Yi({inputs:{x:a},backend:t,attrs:{begin:h,size:p}}),b=le({inputs:{x:g},backend:t,attrs:{shape:u}});f[m]=b,d.push(g)}return d.forEach(m=>t.disposeIntermediateTensorInfo(m)),f}const C8={kernelName:Ol,backendName:"webgl",kernelFunc:$8};/**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */class S8{constructor(e,t){this.variableNames=["x","segmentIds"];const s=e.windowSize,o=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/s);this.outputShape=[o,i];const c="0.0",u="sumValue",l=Math.floor(s/4)*4,d=s%4,h=`
        sumValue += dot(values, segFilter);
    `;let p="";r%s>0&&(p=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return initializationValue;
        }
      `);let f="";r%s>0&&(f=`
        if (inIdx < 0 || inIdx >= ${r}) {
          return -1.0;
        }
      `),this.userCode=`
      const float initializationValue = ${c};

      float getValue(int batch, int inIdx) {
        ${p}
        return getX(batch, inIdx);
      }

      float getSegmentIdAtIndex(int inIdx) {
        ${f}
        return getSegmentIds(inIdx);
      }

      void main() {
        ivec2 coords = getOutputCoords();
        int batch = coords[0];
        int outIdx = coords[1];
        int inOffset = int(floor(float(outIdx) / float(
          ${a})) * float(${s}));
        int currentSeg = int(mod(float(outIdx), float(${a})));

        float sumValue = 0.0;

        for (int i = 0; i < ${l}; i += 4) {
          int inIdx = inOffset + i;
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            getValue(batch, inIdx + 3)
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0
          );

          ${h}
        }

        int inIdx = inOffset + ${l};
        if (${d===1}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            initializationValue,
            initializationValue,
            initializationValue
          );

          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            0,
            0,
            0
          );

          ${h}
        } else if (${d===2}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            initializationValue,
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
              0,
              0
          );

          ${h}
        } else if (${d===3}) {
          vec4 values = vec4(
            getValue(batch, inIdx),
            getValue(batch, inIdx + 1),
            getValue(batch, inIdx + 2),
            initializationValue
          );

          vec4 segFilter = vec4(
            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,
            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,
            0
          );

          ${h}
        }
        setOutput(${u});
      }
    `}}/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function N8(n){const{inputs:e,backend:t,attrs:s}=n,{x:o,segmentIds:r}=e,{numSegments:a}=s,i=o.shape.length,c=[];let u=0;const l=pt([u],i);let d=o;l!=null&&(d=bn({inputs:{x:o},backend:t,attrs:{perm:l}}),c.push(d),u=rt(1,i)[0]);const h=Hw(d.shape,u,a),p=L([d.shape[u]]),f=le({inputs:{x:d},backend:t,attrs:{shape:[-1,p]}});c.push(f);const m=qf(o.dtype),g=(w,I,k,v,C)=>{const N=w.shape[0],T=w.shape[1],_=Gw(T,C),O={windowSize:_,inSize:T,batchSize:N,numSegments:C},P=new S8(O,I),V=t.compileAndRun(P,[w,k],v);if(c.push(V),V.shape[1]===C)return V;const B=Xv({backend:t,attrs:{start:0,stop:C,step:1,dtype:"float32"}}),W=Yv({inputs:{x:B},backend:t,attrs:{reps:[T/_]}});return c.push(B),c.push(W),g(V,I,W,v,C)},b=g(f,"unsortedSegmentSum",r,m,a),x=le({inputs:{x:b},backend:t,attrs:{shape:h}});let y=x;if(l!=null){c.push(x);const w=Qs(l);y=bn({inputs:{x:y},backend:t,attrs:{perm:w}})}return c.forEach(w=>t.disposeIntermediateTensorInfo(w)),y}const T8={kernelName:Hd,backendName:"webgl",kernelFunc:N8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E8=[$G,SG,EG,AG,FG,LG,BG,VG,HG,qG,YG,QG,nH,aH,lH,dH,pH,bH,yH,IH,CH,AH,FH,MH,WH,GH,XH,iG,ZH,n6,a6,h6,f6,g6,x6,w6,v6,S6,E6,R6,D6,O6,P6,z6,G6,j6,K6,J6,ej,oj,cj,hj,mj,xj,yj,Ij,vj,Cj,Nj,Ej,Dj,Mj,Bj,Vj,Gj,qj,Zj,tq,aG,sq,e6,aq,lq,hq,lG,gq,wq,kq,Sq,Eq,Dq,Mq,zq,Gq,qq,Kq,Qq,t5,s5,i5,l5,d5,p5,m5,y5,v5,N5,O5,hG,B5,W5,H5,X5,PH,Z5,Q5,tX,oX,cX,dG,uX,hX,fX,gX,bX,BH,R5,wX,$X,TX,fG,AX,OX,BX,WX,jX,XX,ZX,eK,nK,rK,cK,dK,mK,xK,IK,$K,_H,D5,NK,EK,RK,DK,OK,LK,BK,VK,UK,jK,XK,YK,QK,t8,s8,r8,A5,IG,c8,d8,f8,x8,I8,kG,v8,C8,T8,J5];for(const n of E8)Hf(n);/** @license See the LICENSE file. *//**
 * @license
 * Copyright 2018 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 *//**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Ct;(function(n){n[n.float32=0]="float32",n[n.int32=1]="int32",n[n.bool=2]="bool",n[n.string=3]="string",n[n.complex64=4]="complex64"})(Ct||(Ct={}));var Ac;(function(n){n[n.linear=0]="linear",n[n.relu=1]="relu",n[n.relu6=2]="relu6",n[n.prelu=3]="prelu",n[n.leakyrelu=4]="leakyrelu",n[n.sigmoid=5]="sigmoid",n[n.elu=6]="elu"})(Ac||(Ac={}));/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Zv;function _8(n){Zv=n.wasm.cwrap(ka,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])}function R8(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r,bias:a,preluActivationWeights:i}=e;if(o.dtype!=="float32"||r.dtype!=="float32")throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:c,transposeB:u,activation:l,leakyreluAlpha:d}=s,h=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(r.dataId).id;let f=0;if(a!=null){const C=t.dataIdMap.get(a.dataId);if(C.shape.length!==1)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${C.shape.length}.`);f=C.id}const m=i==null?0:t.dataIdMap.get(i.dataId).id,g=Ac[l];if(g==null)throw new Error(`${l} activation not yet supported for FusedConv2D in the wasm backend.`);const b=c?o.shape[2]:o.shape[1],x=u?r.shape[1]:r.shape[2],y=Ee(o.shape.slice(0,-2),r.shape.slice(0,-2)),w=t.makeOutput([...y,b,x],o.dtype),I=t.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(o.shape).buffer),v=new Uint8Array(new Int32Array(r.shape).buffer);return Zv(h,k,o.shape.length,p,v,r.shape.length,c,u,g,f,m,d||0,I),w}const A8={kernelName:ka,backendName:"wasm",setupFunc:_8,kernelFunc:R8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Ft(n,e){let t;function s(r){t=r.wasm.cwrap(n,null,["number","number","number"])}function o(r){const{backend:a,inputs:{x:i}}=r,c=a.dataIdMap.get(i.dataId).id,u=a.makeOutput(i.shape,e||i.dtype),l=a.dataIdMap.get(u.dataId).id;return L(u.shape)===0||t(c,Ct[i.dtype],l),u}return{kernelName:n,backendName:"wasm",setupFunc:s,kernelFunc:o}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const D8=Ft(Lc);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function tn(n,e,t){let s;function o(a){s=a.wasm.cwrap(n,null,["number","array","number","number","array","number","number","number"])}function r(a){const{backend:i,inputs:c}=a,{a:u,b:l}=c,d=i.dataIdMap.get(u.dataId).id,h=i.dataIdMap.get(l.dataId).id,p=t??u.dtype,f=Ee(u.shape,l.shape),m=i.makeOutput(f,p);if(L(f)===0)return m;const g=new Uint8Array(new Int32Array(u.shape).buffer),b=new Uint8Array(new Int32Array(l.shape).buffer),x=i.dataIdMap.get(m.dataId).id;return(()=>s(d,g,u.shape.length,h,b,l.shape.length,Ct[u.dtype],x))(),m}return{kernelName:n,backendName:"wasm",setupFunc:o,kernelFunc:r}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const F8=tn(Lr);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Jv;function O8(n){Jv=n.wasm.cwrap(zc,null,["array","number","number","number"])}function M8(n){const{inputs:e,backend:t}=n,s=t.makeOutput(e[0].shape,e[0].dtype);if(L(s.shape)===0)return s;const o=e.map(i=>t.dataIdMap.get(i.dataId).id),r=new Uint8Array(new Int32Array(o).buffer),a=t.dataIdMap.get(s.dataId).id;return Jv(r,o.length,Ct[s.dtype],a),s}const L8={kernelName:zc,backendName:"wasm",setupFunc:O8,kernelFunc:M8};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Fh(n){const{inputs:{x:e},backend:t}=n;if(e.dtype==="string")return Xf(t.readSync(e.dataId),e.shape,e.dtype);const s=t.makeOutput(e.shape,e.dtype),o=t.typedArrayFromHeap(e);return t.typedArrayFromHeap(s).set(o),s}const P8={kernelName:si,backendName:"wasm",kernelFunc:Fh};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Qv;function B8(n){Qv=n.wasm.cwrap(So,null,["number","array","number","number","number","array","number"])}function Bo(n){const{inputs:e,backend:t,attrs:s}=n,[o,r]=V8(e.x.shape,s.perm);let a=!0;for(let f=0;f<r.length;f++)r[f]!==f&&(a=!1);const i=z8(e.x.shape,s.perm),c={dataId:e.x.dataId,shape:o,dtype:e.x.dtype};if(a){const f=Fh({inputs:e,backend:t});return f.shape=i,f}const u=t.makeOutput(i,c.dtype),l=t.dataIdMap.get(c.dataId).id,d=t.dataIdMap.get(u.dataId).id,h=new Uint8Array(new Int32Array(r).buffer),p=new Uint8Array(new Int32Array(c.shape).buffer);return Qv(l,p,c.shape.length,Ct[c.dtype],d,h,r.length),u}function z8(n,e){const t=new Array(n.length);for(let s=0;s<t.length;s++)t[s]=n[e[s]];return t}function V8(n,e){const t=[],s=[];for(let o=0;o<n.length;++o)n[o]!==1&&t.push(n[o]),n[e[o]]!==1&&s.push(e[o]);for(let o=0;o<s.length;++o){let r=-1;for(let a=0;a<s.length;++a)s[a]>=o&&(r===-1||s[r]>s[a])&&(r=a);s[r]=o}return[t,s]}const W8={kernelName:So,backendName:"wasm",kernelFunc:Bo,setupFunc:B8};/**
 * @license
 * Copyright 2020 Google Inc. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zo(n,e,t){const s=n.shape,o=n.shape.length,r=Re(e,s);let a=r;const i=pt(a,o);let c=null,u=!1;if(i!=null){const l=new Array(o);for(let p=0;p<l.length;p++)l[p]=s[i[p]];a=rt(a.length,o),c=Bo({inputs:{x:n},attrs:{perm:i},backend:t});const d=t.dataIdMap.get(n.dataId).id;t.dataIdMap.get(c.dataId).id!==d&&(u=!0)}return{transposed:c,originalAxes:r,axes:a,inputWasTransposed:u}}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let e$;function U8(n){e$=n.wasm.cwrap(Vc,null,["number, number, number"])}function G8(n){const{backend:e,inputs:t,attrs:s}=n,{axis:o,keepDims:r}=s,{x:a}=t;let c=e.dataIdMap.get(a.dataId).id,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Zo(a,o,e);if(p){const y=e.dataIdMap.get(l.dataId).id;u=l,c=y}const f=u.shape.length;ht("all",d,f);const[m,g]=bt(u.shape,d),b=L(g),x=e.makeOutput(m,a.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;e$(c,b,y)}if(p&&e.disposeData(l.dataId),r){const y=et(x.shape,h);x.shape=y}return x}const H8={kernelName:Vc,backendName:"wasm",setupFunc:U8,kernelFunc:G8};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let t$;function j8(n){t$=n.wasm.cwrap(Wc,null,["number, number, number"])}function q8(n){const{backend:e,inputs:t,attrs:s}=n,{axis:o,keepDims:r}=s,{x:a}=t;let c=e.dataIdMap.get(a.dataId).id,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Zo(a,o,e);if(p){const y=e.dataIdMap.get(l.dataId).id;u=l,c=y}const f=u.shape.length;ht("any",d,f);const[m,g]=bt(u.shape,d),b=L(g),x=e.makeOutput(m,a.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;t$(c,b,y)}if(p&&e.disposeData(l.dataId),r){const y=et(x.shape,h);x.shape=y}return x}const X8={kernelName:Wc,backendName:"wasm",setupFunc:j8,kernelFunc:q8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let n$;function K8(n){n$=n.wasm.cwrap(Ba,null,["number","number","number","number","number"])}function Y8(n){const{backend:e,inputs:t,attrs:s}=n,{axis:o}=s,{x:r}=t,a=e.dataIdMap.get(r.dataId).id;let i=a,c=r;const{transposed:u,axes:l,inputWasTransposed:d}=Zo(r,o,e);if(d){const b=e.dataIdMap.get(u.dataId).id;b!==a&&(c=u,i=b)}const h=c.shape.slice(0,-1),p=e.makeOutput(h,"int32"),f=e.dataIdMap.get(p.dataId).id,m=L(p.shape),g=c.shape[l[0]];return n$(i,Ct[c.dtype],m,g,f),d&&e.disposeData(u.dataId),p}const Z8={kernelName:Ba,backendName:"wasm",kernelFunc:Y8,setupFunc:K8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let s$;function J8(n){s$=n.wasm.cwrap(za,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function Q8(n){const{inputs:e,attrs:t,backend:s}=n,o=e.x,r=s.dataIdMap.get(o.dataId).id,{filterSize:a,strides:i,pad:c,dimRoundingMode:u}=t,l=Bn(o.shape,a,i,1,c,u),d=l.filterHeight,h=l.filterWidth,p=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,b=l.strideHeight,x=l.strideWidth,y=l.inChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);if(l.dilationWidth!==1||l.dilationHeight!==1)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${l.dilationHeight}, ${l.dilationWidth}].`);const w=s.makeOutput(l.outShape,"float32"),I=s.dataIdMap.get(w.dataId).id;return s$(r,o.shape[0],o.shape[1],o.shape[2],d,h,p,f,m,g,b,x,y,I),w}const eY={kernelName:za,backendName:"wasm",setupFunc:J8,kernelFunc:Q8};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function kn(n){const{inputs:e,attrs:t}=n,{x:s}=e,{shape:o}=t,r=L(s.shape),a=wf(o,r);return $(r===L(a),()=>`new shape: ${a}, old shape: ${s.shape}. New shape and old shape must have the same number of elements.`),n.backend.incRef(s.dataId),{dataId:s.dataId,shape:a,dtype:s.dtype}}const tY={kernelName:kl,backendName:"wasm",kernelFunc:kn};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let o$;function nY(n){o$=n.wasm.cwrap(Va,null,["number","array","number","number","array","number","number","number","number"])}function sY(n){const{inputs:e,backend:t,attrs:s}=n,{a:o,b:r}=e,{transposeA:a,transposeB:i}=s;if(o.dtype!=="float32"||r.dtype!=="float32")throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const c=o.shape.length,u=r.shape.length,l=a?o.shape[c-2]:o.shape[c-1],d=i?r.shape[u-1]:r.shape[u-2],h=a?o.shape[c-1]:o.shape[c-2],p=i?r.shape[u-2]:r.shape[u-1],f=o.shape.slice(0,-2),m=r.shape.slice(0,-2),g=L(f),b=L(m),y=Ee(o.shape.slice(0,-2),r.shape.slice(0,-2)).concat([h,p]);$(l===d,()=>`Error in matMul: inner shapes (${l}) and (${d}) of Tensors with shapes ${o.shape} and ${r.shape} and transposeA=${a} and transposeB=${i} must match.`);const w=a?[g,l,h]:[g,h,l],I=i?[b,p,d]:[b,d,p],k=kn({inputs:{x:o},backend:t,attrs:{shape:w}}),v=kn({inputs:{x:r},backend:t,attrs:{shape:I}}),C=t.dataIdMap.get(k.dataId).id,N=t.dataIdMap.get(v.dataId).id,T=a?k.shape[2]:k.shape[1],_=i?v.shape[1]:v.shape[2],O=Math.max(g,b),P=t.makeOutput([O,T,_],k.dtype),V=t.dataIdMap.get(P.dataId).id,B=new Uint8Array(new Int32Array(k.shape).buffer),W=new Uint8Array(new Int32Array(v.shape).buffer);return o$(C,B,k.shape.length,N,W,v.shape.length,a,i,V),t.disposeData(k.dataId),t.disposeData(v.dataId),P.shape=y,P}const oY={kernelName:Va,backendName:"wasm",setupFunc:nY,kernelFunc:sY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Or(n){const{inputs:{x:e},attrs:{begin:t,size:s},backend:o}=n,[r,a]=Pl(e,t,s),i=Qd(e.shape,r,a),c=o.readSync(e.dataId),u=o.makeOutput(a,e.dtype),l=me(e.shape),d=o.dataIdMap.get(u.dataId);if(i){const f=eh(r,l);return e.dtype==="string"?d.stringBytes=c.slice(f,f+L(a)):o.typedArrayFromHeap(u).set(c.subarray(f,f+L(a))),u}if(e.dtype==="string"){const f=fd(c,r,a,e.shape,e.dtype);return d.stringBytes=f,u}const h=o.typedArrayFromHeap(u),p=e.shape.length;if(p===2)rY(c,l[0],h,r,a);else if(p===3)aY(c,l[0],l[1],h,r,a);else if(p===4)iY(c,l[0],l[1],l[2],h,r,a);else{const f=fd(c,r,a,e.shape,e.dtype);h.set(f)}return u}function rY(n,e,t,s,o){let r=0;const a=s[0],i=s[1],c=a+o[0];for(let u=a;u<c;u++){const l=u*e+i;t.set(n.subarray(l,l+o[1]),r),r+=o[1]}}function aY(n,e,t,s,o,r){let a=0;const i=o[0],c=o[1],u=o[2],l=i+r[0],d=c+r[1];for(let h=i;h<l;h++)for(let p=c;p<d;p++){const f=h*e+p*t+u;s.set(n.subarray(f,f+r[2]),a),a+=r[2]}}function iY(n,e,t,s,o,r,a){let i=0;const c=r[0],u=r[1],l=r[2],d=c+a[0],h=u+a[1],p=l+a[2],f=r[3];for(let m=c;m<d;m++)for(let g=u;g<h;g++)for(let b=l;b<p;b++){const x=m*e+g*t+b*s+f;o.set(n.subarray(x,x+a[3]),i),i+=a[3]}}const cY={kernelName:Cl,backendName:"wasm",kernelFunc:Or};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function lY(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,crops:a}=s,i=r.reduce((b,x)=>b*x),c=Hr(o.shape,r,i),u=jr(c.length,r.length),l=qr(o.shape,r,i),d=dh(a,r.length),h=hh(l,a,r.length),p=kn({inputs:{x:o},backend:t,attrs:{shape:c}}),f=Bo({inputs:{x:p},backend:t,attrs:{perm:u}}),m=kn({inputs:{x:f},backend:t,attrs:{shape:l}}),g=Or({inputs:{x:m},backend:t,attrs:{begin:d,size:h}});return t.disposeData(p.dataId),t.disposeData(f.dataId),t.disposeData(p.dataId),g}const uY={kernelName:Xc,backendName:"wasm",kernelFunc:lY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Zi(n){const{inputs:{x:e},attrs:{dtype:t},backend:s}=n,o=s.makeOutput(e.shape,t),r=s.typedArrayFromHeap(e);return s.typedArrayFromHeap(o).set(r),o}const dY={kernelName:Wa,backendName:"wasm",kernelFunc:Zi};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const hY=Ft(Ua);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let r$;function pY(n){r$=n.wasm.cwrap(Pr,null,["number","number","number","number"])}function fY(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{clipValueMin:r,clipValueMax:a}=s,i=t.dataIdMap.get(o.dataId).id,c=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(c.dataId).id;return r$(i,r,a,u),c}const mY={kernelName:Pr,backendName:"wasm",setupFunc:pY,kernelFunc:fY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function a$(n){const{inputs:e,backend:t}=n,s=Re(n.attrs.axis,e[0].shape)[0],o=e.map(p=>p.shape);ch(o,s);let r=Xn(e.map(p=>p.shape),s);const a=e.filter(p=>L(p.shape)>0);if(a.length===1)return Fh({inputs:{x:a[0]},backend:t});const i=t.makeOutput(r,e[0].dtype);if(L(r)===0)return i;if(a[0].dtype==="string"){const p=a.map(y=>{const I=[-1,L(y.shape.slice(s))];return kn({inputs:{x:y},backend:t,attrs:{shape:I}})}),f=p.map(y=>({vals:t.readSync(y.dataId),shape:y.shape}));r=Xn(p.map(y=>y.shape),1);const m=p[0].shape[0]===1,g=Ag(f,r,e[0].dtype,m),b=Xn(a.map(y=>y.shape),s);i.shape=b;const x=t.dataIdMap.get(i.dataId);return x.stringBytes=ig(g),p.forEach(y=>t.disposeData(y.dataId)),i}const c=L(a[0].shape.slice(0,s));let u=0;const l=a.map(p=>{const f=L(p.shape.slice(s));return u+=f,f}),d=a.map(p=>t.typedArrayFromHeap(p)),h=t.typedArrayFromHeap(i);for(let p=0;p<c;p++){let f=p*u;for(let m=0;m<d.length;m++){const g=l[m],b=p*g,x=d[m].subarray(b,b+g);h.set(x,f),f+=g}}return i}const gY={kernelName:Kc,backendName:"wasm",kernelFunc:a$};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let i$;function bY(n){i$=n.wasm.cwrap(Ga,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function xY(n){const{inputs:e,attrs:t,backend:s}=n,{x:o,filter:r}=e,a=s.dataIdMap.get(o.dataId).id,i=s.dataIdMap.get(r.dataId).id,{strides:c,dilations:u,pad:l,dimRoundingMode:d,dataFormat:h}=t,p=As(h),f=Nt(o.shape,r.shape,c,u,l,d,!1,p),m=f.filterHeight,g=f.filterWidth,b=f.padInfo.top,x=f.padInfo.right,y=f.padInfo.bottom,w=f.padInfo.left,I=f.dilationHeight,k=f.dilationWidth,v=f.strideHeight,C=f.strideWidth,N=f.inChannels,T=f.outChannels,_=f.padInfo.type==="SAME"?1:0;if(f.dataFormat!=="channelsLast")throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const O=s.makeOutput(f.outShape,"float32"),P=s.dataIdMap.get(O.dataId).id;return i$(a,o.shape[0],o.shape[1],o.shape[2],i,m,g,b,x,y,w,_,I,k,v,C,N,T,P),O}const yY={kernelName:Ga,backendName:"wasm",setupFunc:bY,kernelFunc:xY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let c$;function wY(n){c$=n.wasm.cwrap(Ha,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function IY(n){const{backend:e,inputs:t,attrs:s}=n,{dy:o,filter:r}=t,{strides:a,pad:i,dataFormat:c,dimRoundingMode:u,inputShape:l}=s,d=1,h=As(c),p=Nt(l,r.shape,a,d,i,u,!1,h),{batchSize:f,filterHeight:m,filterWidth:g,inChannels:b,inHeight:x,inWidth:y,outChannels:w,outHeight:I,outWidth:k,strideHeight:v,strideWidth:C}=p,N=m-1-p.padInfo.top,T=g-1-p.padInfo.left,_=p.dataFormat==="channelsLast",O=me(p.inShape),P=me(o.shape),[V,B,W]=me(r.shape),q=O[0],z=_?O[1]:O[2],X=_?O[2]:1,Y=_?1:O[1],Z=P[0],se=_?P[1]:P[2],J=_?P[2]:1,ae=_?1:P[1],oe=e.makeOutput(p.inShape,"float32"),ue=e.dataIdMap.get(oe.dataId).id,ge=e.dataIdMap.get(o.dataId).id,ce=e.dataIdMap.get(r.dataId).id;return c$(ge,ce,f,m,g,x,y,b,I,k,w,v,C,N,T,V,B,W,q,z,X,Y,Z,se,J,ae,ue),oe}const kY={kernelName:Ha,backendName:"wasm",setupFunc:wY,kernelFunc:IY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const vY=Ft(ja);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $Y=Ft(qa);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var Qp;(function(n){n[n.bilinear=0]="bilinear",n[n.nearest=1]="nearest"})(Qp||(Qp={}));let l$;function CY(n){l$=n.wasm.cwrap(Zc,null,["number","number","number","number","array","number","number","number","number","number"])}function SY(n){const{backend:e,inputs:t,attrs:s}=n,{method:o,extrapolationValue:r,cropSize:a}=s,{image:i,boxes:c,boxInd:u}=t,l=c.shape[0],[d,h]=a,p=[l,d,h,i.shape[3]];let f=e.dataIdMap.get(i.dataId),m;i.dtype!=="float32"&&(m=Zi({backend:e,inputs:{x:i},attrs:{dtype:"float32"}}),f=e.dataIdMap.get(m.dataId));const g=f.id,b=e.dataIdMap.get(c.dataId).id,x=e.dataIdMap.get(u.dataId).id,y=e.makeOutput(p,"float32"),w=e.dataIdMap.get(y.dataId).id,I=new Uint8Array(new Int32Array(i.shape).buffer);return l$(g,b,x,l,I,d,h,Qp[o],r,w),m!=null&&e.disposeData(m.dataId),y}const NY={kernelName:Zc,backendName:"wasm",setupFunc:CY,kernelFunc:SY};/**
 * @license
 * Copyright 2022 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let u$;function TY(n){u$=n.wasm.cwrap(Yc,null,["number","number","number","number","number","number"])}function EY(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:a,reverse:i}=s,c=o.shape.length;$(o.dtype==="float32"||o.dtype==="int32",()=>`cumprod does not support ${o.dtype} tensors in the WASM backend`);const u=pt([r],c);let l=o;u!==null&&(l=Bo({inputs:{x:o},attrs:{perm:u},backend:t}));const d=rt(1,c)[0];ht("cumprod",[d],c);const h=t.makeOutput(l.shape,l.dtype),p=l.shape[d],f=t.dataIdMap.get(l.dataId).id,m=t.dataIdMap.get(h.dataId).id;u$(f,a?1:0,i?1:0,p,m,Ct[o.dtype]);let g=h;if(u!==null){const b=Qs(u);g=Bo({inputs:{x:h},attrs:{perm:b},backend:t}),t.disposeData(l.dataId),t.disposeData(h.dataId)}return g}const _Y={kernelName:Yc,backendName:"wasm",setupFunc:TY,kernelFunc:EY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let d$;function RY(n){d$=n.wasm.cwrap(Xa,null,["number","number","number","number","number","number"])}function AY(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{axis:r,exclusive:a,reverse:i}=s,c=o.shape.length;$(o.dtype==="float32"||o.dtype==="int32",()=>`cumsum does not support ${o.dtype} tensors in the WASM backend`);const u=pt([r],c);let l=o;u!==null&&(l=Bo({inputs:{x:o},attrs:{perm:u},backend:t}));const d=rt(1,c)[0];ht("cumsum",[d],c);const h=t.makeOutput(l.shape,l.dtype),p=l.shape[d],f=t.dataIdMap.get(l.dataId).id,m=t.dataIdMap.get(h.dataId).id;d$(f,a?1:0,i?1:0,p,m,Ct[o.dtype]);let g=h;if(u!==null){const b=Qs(u);g=Bo({inputs:{x:h},attrs:{perm:b},backend:t}),t.disposeData(l.dataId),t.disposeData(h.dataId)}return g}const DY={kernelName:Xa,backendName:"wasm",setupFunc:RY,kernelFunc:AY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let h$;function FY(n){h$=n.wasm.cwrap(Jc,null,["number","number","number","array","number","array","array","number","number"])}function OY(n){const{backend:e,inputs:t,attrs:s}=n,{x:o}=t,{blockSize:r,dataFormat:a}=s,i=o.shape[0],c=a==="NHWC"?o.shape[1]:o.shape[2],u=a==="NHWC"?o.shape[2]:o.shape[3],l=a==="NHWC"?o.shape[3]:o.shape[1],d=c*r,h=u*r,p=l/(r*r),f=a==="NHWC"?[i,d,h,p]:[i,p,d,h],m=e.makeOutput(f,"float32"),b=e.dataIdMap.get(o.dataId).id,x=new Uint8Array(new Int32Array(me(o.shape)).buffer),y=new Uint8Array(new Int32Array(f).buffer),w=new Uint8Array(new Int32Array(me(f)).buffer),I=e.dataIdMap.get(m.dataId).id;return h$(b,r,a==="NHWC"?1:0,x,o.shape.length-1,y,w,f.length,I),m}const MY={kernelName:Jc,backendName:"wasm",setupFunc:FY,kernelFunc:OY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let p$;function LY(n){p$=n.wasm.cwrap(Ka,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function PY(n){const{inputs:e,attrs:t,backend:s}=n,{x:o,filter:r}=e,a=s.dataIdMap.get(o.dataId).id,i=s.dataIdMap.get(r.dataId).id,{strides:c,dilations:u,pad:l,dimRoundingMode:d}=t,h=u??[1,1],p=Nt(o.shape,r.shape,c,h,l,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,b=p.padInfo.right,x=p.padInfo.bottom,y=p.padInfo.left,w=p.dilationHeight,I=p.dilationWidth,k=p.strideHeight,v=p.strideWidth,C=p.inChannels,N=p.outChannels,T=p.padInfo.type==="SAME"?1:0;if(p.dataFormat!=="channelsLast")throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const _=s.makeOutput(p.outShape,"float32"),O=s.dataIdMap.get(_.dataId).id;return p$(a,o.shape[0],o.shape[1],o.shape[2],i,f,m,g,b,x,y,T,w,I,k,v,C,N,O),_}const BY={kernelName:Ka,backendName:"wasm",setupFunc:LY,kernelFunc:PY};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const zY=Ft(Za);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const VY=!1,WY=tn(el,VY,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const UY=Ft(Ja,"float32");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function ef(n){const{inputs:e,attrs:t,backend:s}=n,{input:o}=e,{dim:r}=t,a=o.shape.length,i=o.shape.slice();let c=r;return r<0&&($(-(a+1)<=r,()=>`Axis must be in the interval [${-(a+1)}, ${a}]`),c=a+r+1),i.splice(c,0,1),kn({inputs:{x:o},backend:s,attrs:{shape:i}})}const GY={kernelName:tl,backendName:"wasm",kernelFunc:ef};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function f$(n){const{attrs:{shape:e,value:t,dtype:s},backend:o}=n,r=o.makeOutput(e,s);return o.typedArrayFromHeap(r).fill(t),r}const HY={kernelName:Ad,backendName:"wasm",kernelFunc:f$};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let m$;function jY(n){m$=n.wasm.cwrap(sl,null,["number","number","number","number","number","number"])}function qY(n){const{inputs:e,backend:t}=n,{image:s}=e,o=t.makeOutput(s.shape,s.dtype),r=t.dataIdMap.get(s.dataId).id,a=t.dataIdMap.get(o.dataId).id,[i,c,u,l]=s.shape;return m$(r,i,c,u,l,a),o}const XY={kernelName:sl,backendName:"wasm",kernelFunc:qY,setupFunc:jY};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const KY=Ft(Qa);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const YY=tn(ei);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let g$;function ZY(n){g$=n.wasm.cwrap(ti,null,["number","number","number","number","number","number","number"])}function JY(n){const{backend:e,inputs:t,attrs:s}=n,{varianceEpsilon:o}=s,{x:r,mean:a,variance:i,offset:c,scale:u}=t,l=e.dataIdMap.get(r.dataId).id,d=e.dataIdMap.get(a.dataId).id,h=e.dataIdMap.get(i.dataId).id,p=c!=null?e.dataIdMap.get(c.dataId).id:0,f=u!=null?e.dataIdMap.get(u.dataId).id:0,m=e.makeOutput(r.shape,r.dtype);if(L(r.shape)===0)return m;const g=e.dataIdMap.get(m.dataId).id;return g$(l,d,h,p,f,o,g),m}const QY={kernelName:ti,backendName:"wasm",setupFunc:ZY,kernelFunc:JY};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let b$;function e7(n){b$=n.wasm.cwrap(va,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function t7(n){const{inputs:e,attrs:t,backend:s}=n,{x:o,filter:r,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dilations:l,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=t,m=Nt(o.shape,r.shape,c,l,u,h),g=Ac[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const b=s.dataIdMap.get(o.dataId).id,x=s.dataIdMap.get(r.dataId).id,y=m.outChannels;let w=0;if(a!=null){const J=s.dataIdMap.get(a.dataId);if(J.shape.length!==1)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==y)throw new Error(`FusedConv2D bias shape (${J.shape}) does not match the number of output channels (${y})`);w=J.id}const I=m.filterHeight,k=m.filterWidth,v=m.padInfo.top,C=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,O=m.dilationWidth,P=m.strideHeight,V=m.strideWidth,B=m.inChannels,W=m.padInfo.type==="SAME"?1:0,q=m.batchSize,z=m.inHeight,X=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const Y=s.makeOutput(m.outShape,"float32"),Z=s.dataIdMap.get(Y.dataId).id,se=i==null?0:s.dataIdMap.get(i.dataId).id;return b$(b,q,z,X,x,I,k,w,v,C,N,T,W,_,O,P,V,B,y,g,se,f||0,Z),Y}const n7={kernelName:va,backendName:"wasm",setupFunc:e7,kernelFunc:t7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let x$;function s7(n){x$=n.wasm.cwrap(jd,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function o7(n){const{inputs:e,attrs:t,backend:s}=n,{x:o,filter:r,bias:a,preluActivationWeights:i}=e,{strides:c,pad:u,dilations:l,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=t,m=Nt(o.shape,r.shape,c,l,u,h,!0),g=Ac[p];if(g==null)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const b=s.dataIdMap.get(o.dataId).id,x=s.dataIdMap.get(r.dataId).id,y=m.outChannels;let w=0;if(a!=null){const J=s.dataIdMap.get(a.dataId);if(J.shape.length!==1)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${J.shape.length}.`);if(J.shape[0]!==y)throw new Error(`FusedDepthwiseConv2D bias shape (${J.shape}) does not match the number of output channels (${y})`);w=J.id}const I=m.filterHeight,k=m.filterWidth,v=m.padInfo.top,C=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,_=m.dilationHeight,O=m.dilationWidth,P=m.strideHeight,V=m.strideWidth,B=m.inChannels,W=m.padInfo.type==="SAME"?1:0,q=m.batchSize,z=m.inHeight,X=m.inWidth;if(d!=="NHWC")throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const Y=s.makeOutput(m.outShape,"float32"),Z=s.dataIdMap.get(Y.dataId).id,se=i==null?0:s.dataIdMap.get(i.dataId).id;return x$(b,q,z,X,x,I,k,w,v,C,N,T,W,_,O,P,V,B,y,g,se,f||0,Z),Y}const r7={kernelName:jd,backendName:"wasm",setupFunc:s7,kernelFunc:o7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let y$;function a7(n){y$=n.wasm.cwrap(Dd,null,["number","number","number","number","number","number","array","number"])}function i7(n){const{backend:e,inputs:t}=n,{params:s,indices:o}=t,[r,a,i,c]=Zd(s,o),u=e.makeOutput(r,s.dtype);if(a===0)return u;const l=o.shape,d=l[l.length-1],p=e.dataIdMap.get(s.dataId).id,m=e.dataIdMap.get(o.dataId).id,g=new Uint8Array(new Int32Array(c).buffer),b=e.dataIdMap.get(u.dataId).id;return y$(p,Ct[s.dtype],m,a,d,i,g,b),u}const c7={kernelName:Dd,backendName:"wasm",setupFunc:a7,kernelFunc:i7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let w$;function l7(n){w$=n.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])}function u7(n){const{backend:e,inputs:t,attrs:s}=n,{x:o,indices:r}=t,{axis:a,batchDims:i}=s,c=Re(a,o.shape)[0],u=e.readSync(r.dataId),l=o.shape[c];for(let N=0;N<u.length;++N){const T=u[N];$(T<=l-1&&T>=0,()=>`GatherV2: the index value ${T} is not in [0, ${l-1}]`)}const d=gh(o,r,c,i),h=kn({inputs:{x:o},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:e}),p=L(r.shape),f=kn({inputs:{x:r},attrs:{shape:[d.batchSize,p/d.batchSize]},backend:e}),m=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],g=e.makeOutput(m,o.dtype);if(L(o.shape)===0)return g;const b=h.shape.length-1,y=e.dataIdMap.get(h.dataId).id,I=e.dataIdMap.get(f.dataId).id,k=e.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(me(h.shape)).buffer),C=new Uint8Array(new Int32Array(me(m)).buffer);return w$(y,Ct[o.dtype],v,b,I,d.batchSize,C,k),e.disposeData(h.dataId),e.disposeData(f.dataId),g.shape=d.outputShape,g}const d7={kernelName:ol,backendName:"wasm",setupFunc:l7,kernelFunc:u7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const h7=!1,p7=tn(rl,h7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const f7=!1,m7=tn(ni,f7,"bool");/**
 * @license
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the License);
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an AS IS BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const g7=Ft(oi,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let I$;function b7(n){I$=n.wasm.cwrap(ri,null,["number","number","number","number"])}function x7(n){const{inputs:{x:e},attrs:{alpha:t},backend:s}=n,o=s.dataIdMap.get(e.dataId).id,r=s.makeOutput(e.shape,"float32");if(L(e.shape)!==0){const a=s.dataIdMap.get(r.dataId).id;I$(o,Ct[e.dtype],t,a)}return r}const y7={kernelName:ri,backendName:"wasm",setupFunc:b7,kernelFunc:x7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const w7=!1,I7=tn(cl,w7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const k7=!1,v7=tn(ll,k7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $7=Ft(ai);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const C7=!1,S7=tn(dl,C7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N7=Ft(hl);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T7=!1,E7=tn(pl,T7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const _7=!1,R7=tn(YS,_7,"bool");/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let k$;function A7(n){k$=n.wasm.cwrap(ii,null,["number","number","number","number"])}function D7(n){const{backend:e,inputs:t,attrs:s}=n,{reductionIndices:o,keepDims:r}=s,{x:a}=t;let c=e.dataIdMap.get(a.dataId).id,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Zo(a,o,e);if(p){const y=e.dataIdMap.get(l.dataId).id;u=l,c=y}const f=u.shape.length;ht("max",d,f);const[m,g]=bt(u.shape,d),b=L(g),x=e.makeOutput(m,a.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;k$(c,Ct[a.dtype],b,y)}if(p&&e.disposeData(l.dataId),r){const y=et(x.shape,h);x.shape=y}return x}const F7={kernelName:ii,backendName:"wasm",setupFunc:A7,kernelFunc:D7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const O7=tn(ci);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let v$;function M7(n){v$=n.wasm.cwrap(li,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])}function L7(n){const{inputs:e,attrs:t,backend:s}=n,o=e.x,r=s.dataIdMap.get(o.dataId).id;$(o.dtype==="float32",()=>`Error in MaxPool: only float32 input is supported. Got ${o.dtype}.`);const{filterSize:a,strides:i,pad:c,dimRoundingMode:u}=t,l=Bn(o.shape,a,i,1,c,u),d=l.filterHeight,h=l.filterWidth,p=l.padInfo.top,f=l.padInfo.right,m=l.padInfo.bottom,g=l.padInfo.left,b=l.dilationHeight,x=l.dilationWidth,y=l.strideHeight,w=l.strideWidth,I=l.inChannels,k=l.outChannels;if(l.dataFormat!=="channelsLast")throw new Error(`wasm backend does not support dataFormat:'${l.dataFormat}'. Please use 'channelsLast'.`);const v=s.makeOutput(l.outShape,"float32"),C=s.dataIdMap.get(v.dataId).id;return v$(r,o.shape[0],o.shape[1],o.shape[2],d,h,p,f,m,g,b,x,y,w,I,k,C),v}const P7={kernelName:li,backendName:"wasm",setupFunc:M7,kernelFunc:L7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let $$;function B7(n){$$=n.wasm.cwrap(ui,null,["number, number, number"])}function z7(n){const{backend:e,inputs:t,attrs:s}=n,{axis:o,keepDims:r}=s,{x:a}=t,i=e.dataIdMap.get(a.dataId).id;let c=i,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Zo(a,o,e);let f=d;if(p){const w=e.dataIdMap.get(l.dataId).id;w!==i&&(u=l,c=w,f=rt(f.length,u.shape.length))}ht("mean",f,u.shape.length);const[m,g]=bt(u.shape,f),b=L(g);let x=u;u.dtype!=="float32"&&(x=Zi({backend:e,inputs:{x:u},attrs:{dtype:"float32"}}),c=e.dataIdMap.get(x.dataId).id);const y=e.makeOutput(m,"float32");if(L(u.shape)!==0){const w=e.dataIdMap.get(y.dataId).id;$$(c,b,w)}if(p&&e.disposeData(l.dataId),r){const w=et(y.shape,h);y.shape=w}return u.dtype!=="float32"&&e.disposeData(x.dataId),y}const V7={kernelName:ui,backendName:"wasm",setupFunc:B7,kernelFunc:z7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let C$;function W7(n){C$=n.wasm.cwrap(di,null,["number","number","number","number"])}function U7(n){const{backend:e,inputs:t,attrs:s}=n,{axis:o,keepDims:r}=s,{x:a}=t,i=e.dataIdMap.get(a.dataId).id;let c=i,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Zo(a,o,e);if(p){const y=e.dataIdMap.get(l.dataId).id;y!==i&&(u=l,c=y)}const f=u.shape.length;ht("min",d,f);const[m,g]=bt(u.shape,d),b=L(g),x=e.makeOutput(m,u.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;C$(c,Ct[a.dtype],b,y)}if(p&&e.disposeData(l.dataId),r){const y=et(x.shape,h);x.shape=y}return x}const G7={kernelName:di,backendName:"wasm",setupFunc:W7,kernelFunc:U7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const H7=tn(hi);/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */var tf;(function(n){n[n.reflect=0]="reflect",n[n.symmetric=1]="symmetric"})(tf||(tf={}));let S$;function j7(n){S$=n.wasm.cwrap(pi,null,["number","array","number","number","array","array","number","number"])}function q7(n){const{inputs:{x:e},backend:t,attrs:{paddings:s,mode:o}}=n,r=s.map((f,m)=>f[0]+e.shape[m]+f[1]),a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(r,e.dtype),c=t.dataIdMap.get(i.dataId).id,u=new Uint8Array(new Int32Array(e.shape).buffer),l=s.map(f=>f[0]),d=s.map(f=>f[1]),h=new Uint8Array(new Int32Array(l).buffer),p=new Uint8Array(new Int32Array(d).buffer);return S$(a,u,e.shape.length,Ct[e.dtype],h,p,tf[o],c),i}const X7={kernelName:pi,backendName:"wasm",kernelFunc:q7,setupFunc:j7};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const K7=tn(fi);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Y7=Ft(ml);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function Jg(n,e){const t=new Int32Array(n.wasm.HEAPU8.buffer,e,4),s=t[0],o=t[1],r=t[2],a=t[3];return n.wasm._free(e),{pSelectedIndices:s,selectedSize:o,pSelectedScores:r,pValidOutputs:a}}/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let N$;function Z7(n){N$=n.wasm.cwrap(bl,"number",["number","number","number","number","number"])}function J7(n){const{backend:e,inputs:t,attrs:s}=n,{iouThreshold:o,maxOutputSize:r,scoreThreshold:a}=s,{boxes:i,scores:c}=t,u=e.dataIdMap.get(i.dataId).id,l=e.dataIdMap.get(c.dataId).id,d=N$(u,l,r,o,a),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=Jg(e,d);return e.wasm._free(f),e.wasm._free(m),e.makeOutput([p],"int32",h)}const Q7={kernelName:bl,backendName:"wasm",setupFunc:Z7,kernelFunc:J7};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let T$;function e9(n){T$=n.wasm.cwrap(xl,"number",["number","number","number","number","number","bool"])}function t9(n){const{backend:e,inputs:t,attrs:s}=n,{iouThreshold:o,maxOutputSize:r,scoreThreshold:a,padToMaxOutputSize:i}=s,{boxes:c,scores:u}=t,l=e.dataIdMap.get(c.dataId).id,d=e.dataIdMap.get(u.dataId).id,h=T$(l,d,r,o,a,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Jg(e,h);e.wasm._free(m);const b=e.makeOutput([f],"int32",p),x=e.makeOutput([],"int32",g);return[b,x]}const n9={kernelName:xl,backendName:"wasm",setupFunc:e9,kernelFunc:t9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let E$;function s9(n){E$=n.wasm.cwrap(yl,"number",["number","number","number","number","number","number"])}function o9(n){const{backend:e,inputs:t,attrs:s}=n,{iouThreshold:o,maxOutputSize:r,scoreThreshold:a,softNmsSigma:i}=s,{boxes:c,scores:u}=t,l=e.dataIdMap.get(c.dataId).id,d=e.dataIdMap.get(u.dataId).id,h=E$(l,d,r,o,a,i),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=Jg(e,h);e.wasm._free(g);const b=e.makeOutput([f],"int32",p),x=e.makeOutput([f],"float32",m);return[b,x]}const r9={kernelName:yl,backendName:"wasm",setupFunc:s9,kernelFunc:o9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const a9=!1,i9=tn(gl,a9,"bool");/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let _$;function c9(n){_$=n.wasm.cwrap(mi,null,["number","number","number","number","number"])}function l9(n){const{inputs:e,backend:t,attrs:s}=n,{indices:o}=e,{dtype:r,depth:a,onValue:i,offValue:c}=s,u=t.makeOutput([...o.shape,a],r),l=t.dataIdMap.get(u.dataId).id,h=t.dataIdMap.get(o.dataId).id;return _$(h,a,i,c,l),u}const u9={kernelName:mi,backendName:"wasm",setupFunc:c9,kernelFunc:l9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function d9(n){const{inputs:{x:e},backend:t}=n,s=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(s).fill(1),s}const h9={kernelName:wl,backendName:"wasm",kernelFunc:d9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function p9(n){const{inputs:e,backend:t,attrs:s}=n,{axis:o}=s;if(e.length===1)return ef({inputs:{input:e[0]},backend:t,attrs:{dim:o}});const r=e[0].shape,a=e[0].dtype;e.forEach(l=>{Zn(r,l.shape,"All tensors passed to stack must have matching shapes"),$(a===l.dtype,()=>"All tensors passed to stack must have matching dtypes")});const i=[],c=e.map(l=>{const d=ef({inputs:{input:l},backend:t,attrs:{dim:o}});return i.push(d),d}),u=a$({inputs:c,backend:t,attrs:{axis:o}});return i.forEach(l=>t.disposeData(l.dataId)),u}const f9={kernelName:Il,backendName:"wasm",kernelFunc:p9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let R$;function m9(n){R$=n.wasm.cwrap(gi,null,["number","array","number","number","array","array","number","number"])}function g9(n){const{inputs:{x:e},backend:t,attrs:{paddings:s,constantValue:o}}=n,r=s.map((m,g)=>m[0]+e.shape[g]+m[1]);if(L(e.shape)===0)return f$({backend:t,attrs:{shape:r,value:o,dtype:e.dtype}});const a=t.dataIdMap.get(e.dataId).id,i=t.makeOutput(r,e.dtype),u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(e.shape).buffer),d=s.map(m=>m[0]),h=s.map(m=>m[1]),p=new Uint8Array(new Int32Array(d).buffer),f=new Uint8Array(new Int32Array(h).buffer);return R$(a,l,e.shape.length,Ct[e.dtype],p,f,o,u),i}const A$={kernelName:gi,backendName:"wasm",kernelFunc:g9,setupFunc:m9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const b9=tn(bi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let D$;function x9(n){D$=n.wasm.cwrap(xi,null,["number","number","number"])}function y9(n){const{inputs:e,backend:t}=n,{x:s,alpha:o}=e,r=t.dataIdMap.get(s.dataId).id,a=t.dataIdMap.get(o.dataId).id;let i=r;const c=s;let u=c;c.dtype!=="float32"&&(u=Zi({backend:t,inputs:{x:s},attrs:{dtype:"float32"}}),i=t.dataIdMap.get(u.dataId).id);const l=t.makeOutput(s.shape,"float32"),d=t.dataIdMap.get(l.dataId).id;return D$(i,a,d),c.dtype!=="float32"&&t.disposeData(u.dataId),l}const w9={kernelName:xi,backendName:"wasm",setupFunc:x9,kernelFunc:y9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let F$;function I9(n){F$=n.wasm.cwrap(yi,null,["number","number","number","number"])}function k9(n){const{backend:e,inputs:t,attrs:s}=n,{axis:o,keepDims:r}=s,{x:a}=t,i=e.dataIdMap.get(a.dataId).id;let c=i,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Zo(a,o,e);let f=d;if(p){const y=e.dataIdMap.get(l.dataId).id;y!==i&&(u=l,c=y,f=rt(f.length,u.shape.length))}ht("prod",f,u.shape.length);const[m,g]=bt(u.shape,f),b=L(g),x=e.makeOutput(m,u.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;F$(c,b,Ct[x.dtype],y)}if(p&&e.disposeData(l.dataId),r){const y=et(x.shape,h);x.shape=y}return x}const v9={kernelName:yi,backendName:"wasm",setupFunc:I9,kernelFunc:k9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const $9=n=>{const{backend:e,attrs:t}=n,{start:s,stop:o,step:r,dtype:a}=t,i=Og(s,o,r,a),c=e.makeOutput([i.length],a);return e.typedArrayFromHeap(c).set(i),c},C9={kernelName:Md,backendName:"wasm",kernelFunc:$9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const S9=tn(Ya);/**
 * @license
 * Copyright 2022 The TensorFlow Authors. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const N9=Ft(wi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const T9=Ft(Ii);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const E9=Ft($i);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let O$;function _9(n){O$=n.wasm.cwrap(vi,null,["number","number","number","number","number","number","number","number","number","number"])}function R9(n){const{backend:e,inputs:t,attrs:s}=n,{images:o}=t,{alignCorners:r,halfPixelCenters:a,size:i}=s,[c,u]=i,[l,d,h,p]=o.shape,f=[l,c,u,p];let m=e.dataIdMap.get(o.dataId),g;m.dtype!=="float32"&&(g=Zi({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),m=e.dataIdMap.get(g.dataId));const b=m.id,x=e.makeOutput(f,"float32");if(L(o.shape)===0)return x;const y=e.dataIdMap.get(x.dataId).id;return O$(b,l,d,h,p,c,u,r?1:0,a?1:0,y),g!=null&&e.disposeData(g.dataId),x}const A9={kernelName:vi,backendName:"wasm",setupFunc:_9,kernelFunc:R9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let M$;function D9(n){M$=n.wasm.cwrap(ki,null,["number","number","number","number","number","number","number","number","number","number"])}function F9(n){const{backend:e,inputs:t,attrs:s}=n,{images:o}=t,{alignCorners:r,halfPixelCenters:a,size:i}=s,[c,u]=i,[l,d,h,p]=o.shape,f=[l,c,u,p],m=e.makeOutput(f,"float32");if(L(o.shape)===0)return m;let g=e.dataIdMap.get(o.dataId),b;g.dtype!=="float32"&&(b=Zi({backend:e,inputs:{x:o},attrs:{dtype:"float32"}}),g=e.dataIdMap.get(b.dataId));const x=g.id,y=e.dataIdMap.get(m.dataId).id;return M$(x,l,d,h,p,c,u,r?1:0,a?1:0,y),b!=null&&e.disposeData(b.dataId),m}const O9={kernelName:ki,backendName:"wasm",setupFunc:D9,kernelFunc:F9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let L$;function M9(n){L$=n.wasm.cwrap(Ci,null,["number","array","number","array","number","number"])}function L9(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{dims:r}=s,a=Re(r,o.shape);if(o.shape.length===0)return Fh({inputs:{x:o},backend:t});const i=t.makeOutput(o.shape,o.dtype),c=t.dataIdMap.get(o.dataId).id,u=t.dataIdMap.get(i.dataId).id,l=new Uint8Array(new Int32Array(a).buffer),d=new Uint8Array(new Int32Array(o.shape).buffer);L$(c,l,a.length,d,o.shape.length,u);const h=kn({inputs:{x:i},attrs:{shape:o.shape},backend:t});return t.disposeData(i.dataId),h}const P9={kernelName:Ci,backendName:"wasm",kernelFunc:L9,setupFunc:M9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let P$;function B9(n){P$=n.wasm.cwrap(Ll,null,["number","number","number","number","number","number","number","number","array","number","number"])}function z9(n){const{inputs:e,backend:t,attrs:s}=n,{image:o}=e,{radians:r,fillValue:a,center:i}=s,c=t.makeOutput(o.shape,o.dtype),u=t.dataIdMap.get(o.dataId).id,l=t.dataIdMap.get(c.dataId).id,[d,h,p,f]=o.shape,[m,g]=uh(i,h,p),b=a===0,x=255,y=typeof a=="number"?[a,a,a,b?0:x]:[...a,x],w=new Uint8Array(new Int32Array(y).buffer);return P$(u,d,h,p,f,r,m,g,w,y.length,l),c}const V9={kernelName:Ll,backendName:"wasm",kernelFunc:z9,setupFunc:B9};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const W9=Ft(Si);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const U9=Ft(Ni);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let B$;function G9(n){B$=n.wasm.cwrap(Ld,null,["number","number","number","number","number","number","array","number","number"])}function H9(n){const{backend:e,inputs:t,attrs:s}=n,{indices:o,updates:r}=t,{shape:a}=s,i=e.makeOutput(a,r.dtype);if(L(a)===0)return i;const{sliceRank:c,numUpdates:u,sliceSize:l,strides:d,outputSize:h}=Li(r,o,a),f=e.dataIdMap.get(o.dataId).id,g=e.dataIdMap.get(r.dataId).id,b=new Uint8Array(new Int32Array(d).buffer),x=e.dataIdMap.get(i.dataId).id;return B$(f,g,Ct[r.dtype],c,u,l,b,h,x),i}const j9={kernelName:Ld,backendName:"wasm",setupFunc:G9,kernelFunc:H9};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let z$;function q9(n){z$=n.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}function X9(n){const{inputs:e,backend:t}=n,{condition:s,t:o,e:r}=e,a=t.dataIdMap.get(s.dataId).id,i=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(r.dataId).id,u=t.makeOutput(o.shape,o.dtype),l=t.dataIdMap.get(u.dataId).id,d=s.shape.length,h=o.shape.length,p=d===0||d>1||h===1?1:L(o.shape.slice(1));return z$(a,i,c,p,l),u}const K9={kernelName:vl,backendName:"wasm",kernelFunc:X9,setupFunc:q9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let V$;function Y9(n){V$=n.wasm.cwrap(Ei,null,["number","number"])}function Z9(n){const{backend:e,inputs:{x:t}}=n,s=e.dataIdMap.get(t.dataId).id,o=e.makeOutput(t.shape,t.dtype),r=e.dataIdMap.get(o.dataId).id;return L(o.shape)===0||V$(s,r),o}const J9={kernelName:"Sigmoid",backendName:"wasm",setupFunc:Y9,kernelFunc:Z9};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const Q9=Ft(Ti);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let W$;function eZ(n){W$=n.wasm.cwrap(Ai,null,["number","number","number","number"])}function tZ(n){const{backend:e,inputs:{logits:t},attrs:{dim:s}}=n,o=e.dataIdMap.get(t.dataId).id,r=e.makeOutput(t.shape,t.dtype),a=e.dataIdMap.get(r.dataId).id,i=t.shape[s],c=L(t.shape)/i;return L(r.shape)===0||W$(o,a,i,c),r}const nZ={kernelName:Ai,backendName:"wasm",setupFunc:eZ,kernelFunc:tZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function sZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,{blockShape:r,paddings:a}=s,i=L(r),c=[[0,0]];c.push(...a);for(let k=1+r.length;k<o.shape.length;++k)c.push([0,0]);const u=A$.kernelFunc({inputs:{x:o},backend:t,attrs:{paddings:c,constantValue:0}}),l=Hr(u.shape,r,i,!1),d=jr(l.length,r.length,!1),h=qr(u.shape,r,i,!1),m=kn({inputs:{x:u},backend:t,attrs:{shape:l}}),x=Bo({inputs:{x:m},backend:t,attrs:{perm:d}}),I=kn({inputs:{x},backend:t,attrs:{shape:h}});return t.disposeData(u.dataId),t.disposeData(m.dataId),t.disposeData(x.dataId),I}const oZ={kernelName:El,backendName:"wasm",kernelFunc:sZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let U$;function rZ(n){U$=n.wasm.cwrap("SparseFillEmptyRows","number",["number","number","number","number","number","number","number","number","number","number","number","number"])}function aZ(n){const{backend:e,inputs:t}=n,{indices:s,values:o,denseShape:r,defaultValue:a}=t,i=s.shape[0],c=s.shape[1],u=e.readSync(r.dataId)[0],l=[i+u,c],d=e.dataIdMap.get(s.dataId).id,h=e.dataIdMap.get(o.dataId).id,p=e.dataIdMap.get(a.dataId).id,f=e.makeOutput(l,s.dtype),m=e.dataIdMap.get(f.dataId).id,g=e.makeOutput(l.slice(0,1),o.dtype),b=e.dataIdMap.get(g.dataId).id,x=e.makeOutput([u],"bool"),y=e.dataIdMap.get(x.dataId).id,w=e.makeOutput([i],s.dtype),I=e.dataIdMap.get(w.dataId).id,k=e.makeOutput([4],"int32"),v=e.dataIdMap.get(k.dataId).id,C=U$(d,h,Ct[o.dtype],i,u,c,p,m,b,y,I,v),N=e.readSync(k.dataId);let T;switch(N[0]){case 1:{T=Ym(N[1]);break}case 2:{T=Zm(N[1],N[2]);break}case 3:T=Jm(N[1],N[2],N[3]);break;default:T=""}if(e.disposeData(k.dataId),T)throw e.disposeData(f.dataId),e.disposeData(g.dataId),e.disposeData(x.dataId),e.disposeData(w.dataId),new Error(T);let _=f,O=g;return C!==l[0]&&(_=Or({inputs:{x:f},attrs:{begin:0,size:[C,c]},backend:e}),O=Or({inputs:{x:g},attrs:{begin:0,size:C},backend:e}),e.disposeData(f.dataId),e.disposeData(g.dataId)),[_,O,x,w]}const iZ={kernelName:Pd,backendName:"wasm",setupFunc:rZ,kernelFunc:aZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let G$;function cZ(n){G$=n.wasm.cwrap(Rl,null,["number","number","number","number","number","number","number"])}function lZ(n){const{backend:e,inputs:t}=n,{inputIndices:s,inputShape:o,newShape:r}=t;if(s.shape.length!==2)throw new Error(`Input indices should be a matrix but received shape
        ${s.shape}`);if(o.shape.length!==1)throw new Error(`Input shape should be a vector but received shape
        ${o.shape}`);if(r.shape.length!==1)throw new Error(`Target shape should be a vector but received shape ${r.shape}`);const a=e.dataIdMap.get(s.dataId).id,i=e.dataIdMap.get(o.dataId).id,c=e.dataIdMap.get(r.dataId).id,u=s.shape[0],l=L(r.shape),d=e.makeOutput([u,l],s.dtype),h=e.dataIdMap.get(d.dataId).id,p=e.makeOutput([l],r.dtype),f=e.dataIdMap.get(p.dataId).id,m=e.makeOutput([3],"int32"),g=e.dataIdMap.get(m.dataId).id;G$(a,i,c,u,h,f,g);const b=e.readSync(m.dataId);let x;switch(b[0]){case 0:{x=Qm(b[1],b[2]);break}case 1:{x=eg(b[1],b[2]);break}case 2:x=tg();break;case 3:{const y=Array.from(e.readSync(o.dataId)),w=Array.from(e.readSync(p.dataId));x=ng(y,w);break}case 4:{const y=Array.from(e.readSync(o.dataId)),w=Array.from(e.readSync(p.dataId));x=sg(y,w);break}default:x=""}if(e.disposeData(m.dataId),x)throw e.disposeData(d.dataId),e.disposeData(p.dataId),new Error(x);return[d,p]}const uZ={kernelName:Rl,backendName:"wasm",setupFunc:cZ,kernelFunc:lZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let H$;function j$(n){H$=n.wasm.cwrap("SparseSegmentReduction",null,["number","number","number","number","number","number","number","number","number"])}function q$(n,e){const{backend:t,inputs:s}=n,{data:o,indices:r,segmentIds:a}=s,i=r.shape[0],c=t.readSync(a.dataId,i-1,i)[0],l=i>0?c+1:0;if(l<0)throw new Error(vc());const d=o.shape.slice();d[0]=l;const h=t.dataIdMap.get(o.dataId).id,p=t.dataIdMap.get(r.dataId).id,f=t.dataIdMap.get(a.dataId).id,m=t.makeOutput(d,o.dtype),g=t.dataIdMap.get(m.dataId).id,b=t.makeOutput([4],"int32"),x=t.dataIdMap.get(b.dataId).id;H$(h,Ct[o.dtype],o.shape[0],p,f,g,x,e,0);const y=t.readSync(b.dataId);let w;switch(y[0]){case 0:{w=vc();break}case 1:{w=og();break}case 2:w=rg(y[1],y[2]);break;case 3:w=ag(y[1],y[2],y[3]);break;default:w=""}if(t.disposeData(b.dataId),w)throw t.disposeData(m.dataId),new Error(w);return m}/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function dZ(n){return q$(n,!0)}const hZ={kernelName:Bd,backendName:"wasm",setupFunc:j$,kernelFunc:dZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function pZ(n){return q$(n,!1)}const fZ={kernelName:zd,backendName:"wasm",setupFunc:j$,kernelFunc:pZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function mZ(n){const{inputs:e,attrs:t,backend:s}=n,{x:o}=e,{numOrSizeSplits:r,axis:a}=t,i=Re(a,o.shape)[0],c=mh(o,r,i),u=new Array(o.shape.length).fill(0),l=o.shape.slice();return c.map(d=>{const h=[...l];h[i]=d;const p=Or({inputs:{x:o},attrs:{begin:u,size:h},backend:s});return u[i]+=d,p})}const gZ={kernelName:_l,backendName:"wasm",kernelFunc:mZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const bZ=Ft(_i);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const xZ=Ft(Vd);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const yZ=tn(Di);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let X$;function wZ(n){X$=n.wasm.cwrap(zr,null,["number","number","number","number"])}function IZ(n){const{backend:e,inputs:t,attrs:s}=n,{alpha:o}=s,{x:r}=t,a=e.dataIdMap.get(r.dataId).id,i=e.makeOutput(r.shape,r.dtype),c=e.dataIdMap.get(i.dataId).id;return X$(a,o,Ct[r.dtype],c),i}const kZ={kernelName:zr,backendName:"wasm",setupFunc:wZ,kernelFunc:IZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let K$;function vZ(n){K$=n.wasm.cwrap(Al,null,["number","array","number","array","array","array","array","array","number","number"])}function $Z(n){const{backend:e,inputs:t,attrs:s}=n,{x:o}=t,{begin:r,end:a,strides:i,beginMask:c,endMask:u,ellipsisMask:l,newAxisMask:d,shrinkAxisMask:h}=s,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:b,begin:x,end:y,strides:w}=th(o.shape,r,a,i,c,u,l,d,h);let I;if(m)I=kn({inputs:{x:o},backend:e,attrs:{shape:f}});else if(g||b){$(o.shape.length>=1,()=>`Input must have rank at least 1, got: ${o.shape.length}`);const k=Jd(x,y,w),v=Or({inputs:{x:o},backend:e,attrs:{begin:x,size:k}});I=kn({inputs:{x:v},backend:e,attrs:{shape:f}}),e.disposeData(v.dataId)}else{const k=e.makeOutput(p,"float32"),v=e.dataIdMap.get(o.dataId).id,C=new Uint8Array(new Int32Array(me(o.shape)).buffer),N=new Uint8Array(new Int32Array(x).buffer),T=new Uint8Array(new Int32Array(y).buffer),_=new Uint8Array(new Int32Array(w).buffer),O=new Uint8Array(new Int32Array(p).buffer),P=new Uint8Array(new Int32Array(me(p)).buffer),V=e.dataIdMap.get(k.dataId).id;K$(v,C,o.shape.length,N,T,_,O,P,p.length,V),I=kn({inputs:{x:k},backend:e,attrs:{shape:f}}),e.disposeData(k.dataId)}return I}const CZ={kernelName:Al,backendName:"wasm",setupFunc:vZ,kernelFunc:$Z};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function SZ(n){const{backend:e,inputs:t,attrs:s}=n,{data:o,dataSplits:r}=t,{separator:a,nGramWidths:i,leftPad:c,rightPad:u,padWidth:l,preserveShortSequences:d}=s,h=e.readSync(o.dataId),p=e.readSync(r.dataId),[f,m]=Lg(h,p,a,i,c,u,l,d),g=e.makeOutput([f.length],"string"),b=e.dataIdMap.get(g.dataId);b.stringBytes=f;const x=e.makeOutput(r.shape,"int32");return e.typedArrayFromHeap(x).set(m),[g,x]}const NZ={kernelName:Wd,backendName:"wasm",kernelFunc:SZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function TZ(n){const{backend:e,inputs:t,attrs:s}=n,{input:o,delimiter:r}=t,{skipEmpty:a}=s,i=e.readSync(o.dataId),c=e.readSync(r.dataId),[u,l,d]=Pg(i,c[0],a),h=l.length,p=e.makeOutput([h,2],"int32");e.typedArrayFromHeap(p).set(u);const m=e.makeOutput([h],"string"),g=e.dataIdMap.get(m.dataId);g.stringBytes=l;const b=e.makeOutput([2],"int32");return e.typedArrayFromHeap(b).set(d),[p,m,b]}const EZ={kernelName:Ud,backendName:"wasm",kernelFunc:TZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function _Z(n){const{backend:e,inputs:t,attrs:s}=n,{input:o}=t,{numBuckets:r}=s,a=e.readSync(o.dataId),i=Bg(a,r),c=e.makeOutput(o.shape,"int32");return e.typedArrayFromHeap(c).set(i),c}const RZ={kernelName:Gd,backendName:"wasm",kernelFunc:_Z};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const AZ=tn(Fi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Y$;function DZ(n){Y$=n.wasm.cwrap(Ri,null,["number","number","number","number"])}function FZ(n){const{backend:e,inputs:t,attrs:s}=n,{axis:o,keepDims:r}=s,{x:a}=t,i=e.dataIdMap.get(a.dataId).id;let c=i,u=a;const{transposed:l,axes:d,originalAxes:h,inputWasTransposed:p}=Zo(a,o,e);let f=d;if(p){const y=e.dataIdMap.get(l.dataId).id;y!==i&&(u=l,c=y,f=rt(f.length,u.shape.length))}ht("sum",f,u.shape.length);const[m,g]=bt(u.shape,f),b=L(g),x=e.makeOutput(m,u.dtype);if(L(u.shape)!==0){const y=e.dataIdMap.get(x.dataId).id;Y$(c,b,Ct[x.dtype],y)}if(p&&e.disposeData(l.dataId),r){const y=et(x.shape,h);x.shape=y}return x}const OZ={kernelName:Ri,backendName:"wasm",setupFunc:DZ,kernelFunc:FZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const MZ=Ft(Oi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const LZ=Ft(Mi);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Z$;function PZ(n){Z$=n.wasm.cwrap(Br,null,["number","array","number","array","number","number"])}function BZ(n){const{inputs:e,backend:t,attrs:s}=n,{x:o}=e,r=t.dataIdMap.get(o.dataId).id,{reps:a}=s,i=new Array(o.shape.length);for(let h=0;h<i.length;h++)i[h]=o.shape[h]*a[h];const c=new Uint8Array(new Int32Array(o.shape).buffer),u=new Uint8Array(new Int32Array(i).buffer),l=t.makeOutput(i,o.dtype),d=t.dataIdMap.get(l.dataId).id;return Z$(r,c,o.shape.length,u,i.length,Ct[l.dtype],d),l}const zZ={kernelName:Br,backendName:"wasm",setupFunc:PZ,kernelFunc:BZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let J$;function VZ(n){J$=n.wasm.cwrap(Dl,null,["number","array","number","number","number","bool","number","number"])}const WZ=({inputs:n,backend:e,attrs:t})=>{const{x:s}=n,{k:o,sorted:r}=t,a=e.dataIdMap.get(s.dataId).id,i=new Uint8Array(new Int32Array(s.shape).buffer),c=s.shape.slice();c[c.length-1]=o;const u=e.makeOutput(c,s.dtype),l=e.dataIdMap.get(u.dataId).id,d=e.makeOutput(c,"int32"),h=e.dataIdMap.get(d.dataId).id;return J$(a,i,s.shape.length,Ct[s.dtype],o,r,l,h),[u,d]},UZ={kernelName:Dl,backendName:"wasm",setupFunc:VZ,kernelFunc:WZ};/**
 * @license
 * Copyright 2021 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */let Q$;function GZ(n){Q$=n.wasm.cwrap(Fl,null,["number","number","bool","number","number","number","number","number","number","array","number","array","number","number","number","number","number"])}function HZ(n){const{backend:e,inputs:t,attrs:s}=n,{image:o,transforms:r}=t,{interpolation:a,fillMode:i,fillValue:c,outputShape:u}=s,[l,d,h,p]=o.shape,[f,m]=u??[d,h],g=[l,f,m,p],b=new Uint8Array(new Int32Array(me(o.shape)).buffer),x=new Uint8Array(new Int32Array(me(g)).buffer),y=e.makeOutput(g,o.dtype),w=e.dataIdMap.get(y.dataId).id,k=e.dataIdMap.get(o.dataId).id,C=e.dataIdMap.get(r.dataId).id,N=a==="nearest"?1:2;let T;switch(i){case"constant":T=1;break;case"reflect":T=2;break;case"wrap":T=3;break;case"nearest":T=4;break;default:T=1;break}return Q$(k,C,r.shape[0]>1,l,f,m,p,h,d,b,o.shape.length-1,x,g.length-1,N,T,c,w),y}const jZ={kernelName:Fl,backendName:"wasm",setupFunc:GZ,kernelFunc:HZ};/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function qZ(n){const{inputs:e,backend:t,attrs:s}=n,{value:o}=e;let{axis:r}=s;r<0&&(r+=o.shape.length);const a=o.shape[r],i=o.shape.length,c=new Array(i-1);let u=0;for(let p=0;p<i;p++)p!==r&&(c[u++]=o.shape[p]);const l=new Array(a),d=new Array(i).fill(0),h=o.shape.slice();h[r]=1;for(let p=0;p<l.length;p++)d[r]=p,l[p]=Or({inputs:{x:o},attrs:{begin:d,size:h},backend:t});return l.map(({dataId:p,dtype:f})=>({dataId:p,dtype:f,shape:c}))}const XZ={kernelName:Ol,backendName:"wasm",kernelFunc:qZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */function KZ(n){const{inputs:{x:e},backend:t}=n,s=t.makeOutput(e.shape,e.dtype);return t.typedArrayFromHeap(s).fill(0),s}const YZ={kernelName:Ml,backendName:"wasm",kernelFunc:KZ};/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const ZZ=[A8,D8,F8,L8,H8,X8,Z8,eY,oY,uY,dY,hY,mY,gY,yY,kY,vY,$Y,NY,_Y,DY,MY,BY,zY,WY,UY,GY,HY,XY,KY,YY,QY,n7,r7,c7,d7,p7,m7,P8,g7,y7,I7,v7,$7,S7,N7,E7,R7,F7,O7,P7,V7,G7,H7,X7,K7,Y7,Q7,n9,r9,i9,u9,h9,f9,A$,b9,w9,v9,C9,S9,N9,T9,E9,tY,A9,O9,P9,V9,W9,U9,j9,K9,J9,Q9,cY,nZ,oZ,iZ,uZ,hZ,fZ,gZ,bZ,xZ,yZ,kZ,CZ,NZ,EZ,RZ,AZ,OZ,MZ,LZ,zZ,UZ,jZ,W8,XZ,YZ];for(const n of ZZ)Hf(n);/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const nf=H();nf.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch{return!1}});nf.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(nf.get("IS_NODE"))return!1;try{return new MessageChannel().port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch{return!1}});function eC(n){throw new Error('Could not dynamically require "'+n+'". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.')}var Qg={exports:{}};(function(n,e){var t=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(o){o=o||{};function r(){return z.buffer!=ce&&Ve(z.buffer),we}function a(){return z.buffer!=ce&&Ve(z.buffer),Ne}function i(){return z.buffer!=ce&&Ve(z.buffer),Fe}function c(){return z.buffer!=ce&&Ve(z.buffer),ze}function u(){return z.buffer!=ce&&Ve(z.buffer),qe}var l=typeof o<"u"?o:{},d,h;l.ready=new Promise(function(E,U){d=E,h=U});var p;typeof process<"u"&&process.listeners&&(p={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var f=Object.assign({},l),m=(E,U)=>{throw U},g=typeof window=="object",b=typeof importScripts=="function",x=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",y=l.ENVIRONMENT_IS_PTHREAD||!1,w="";function I(E){return l.locateFile?l.locateFile(E,w):w+E}var k,v,C;function N(E){if(E instanceof no)return;B("exiting due to exception: "+E)}if(x){b?w=Os.dirname(w)+"/":w=__dirname+"/";var T,_;typeof eC=="function"&&(T=Os,_=Os),k=(U,te)=>(U=_.normalize(U),T.readFileSync(U,te?void 0:"utf8")),C=U=>{var te=k(U,!0);return te.buffer||(te=new Uint8Array(te)),te},v=(U,te,fe)=>{U=_.normalize(U),T.readFile(U,function(ve,Ue){ve?fe(ve):te(Ue.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(U){if(!(U instanceof no))throw U}),process.on("unhandledRejection",function(U){throw U}),m=(U,te)=>{if(xt())throw process.exitCode=U,te;N(te),process.exit(U)},l.inspect=function(){return"[Emscripten Module object]"};let E;try{E=Os}catch(U){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),U}fo.Worker=E.Worker}else(g||b)&&(b?w=self.location.href:typeof document<"u"&&document.currentScript&&(w=document.currentScript.src),typeof s<"u"&&s&&(w=s),w.indexOf("blob:")!==0?w=w.substr(0,w.replace(/[?#].*/,"").lastIndexOf("/")+1):w="",x||(k=E=>{var U=new XMLHttpRequest;return U.open("GET",E,!1),U.send(null),U.responseText},b&&(C=E=>{var U=new XMLHttpRequest;return U.open("GET",E,!1),U.responseType="arraybuffer",U.send(null),new Uint8Array(U.response)}),v=(E,U,te)=>{var fe=new XMLHttpRequest;fe.open("GET",E,!0),fe.responseType="arraybuffer",fe.onload=()=>{if(fe.status==200||fe.status==0&&fe.response){U(fe.response);return}te()},fe.onerror=te,fe.send(null)}));x&&typeof performance>"u"&&(fo.performance=Os.performance);var O=console.log.bind(console),P=console.warn.bind(console);x&&(O=E=>T.writeSync(1,E+`
`),P=E=>T.writeSync(2,E+`
`));var V=l.print||O,B=l.printErr||P;Object.assign(l,f),f=null,l.arguments&&l.arguments,l.thisProgram&&l.thisProgram,l.quit&&(m=l.quit);var W;l.wasmBinary&&(W=l.wasmBinary);var q=l.noExitRuntime||!0;typeof WebAssembly!="object"&&xs("no native wasm support detected");var z,X,Y=!1,Z;function se(E,U){E||xs(U)}var J=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function ae(E,U,te){for(var fe=U+te,ve=U;E[ve]&&!(ve>=fe);)++ve;if(ve-U>16&&E.buffer&&J)return J.decode(E.buffer instanceof SharedArrayBuffer?E.slice(U,ve):E.subarray(U,ve));for(var Ue="";U<ve;){var _e=E[U++];if(!(_e&128)){Ue+=String.fromCharCode(_e);continue}var Ae=E[U++]&63;if((_e&224)==192){Ue+=String.fromCharCode((_e&31)<<6|Ae);continue}var _t=E[U++]&63;if((_e&240)==224?_e=(_e&15)<<12|Ae<<6|_t:_e=(_e&7)<<18|Ae<<12|_t<<6|E[U++]&63,_e<65536)Ue+=String.fromCharCode(_e);else{var Un=_e-65536;Ue+=String.fromCharCode(55296|Un>>10,56320|Un&1023)}}return Ue}function oe(E,U){return E?ae(a(),E,U):""}function ue(E,U,te,fe){if(!(fe>0))return 0;for(var ve=te,Ue=te+fe-1,_e=0;_e<E.length;++_e){var Ae=E.charCodeAt(_e);if(Ae>=55296&&Ae<=57343){var _t=E.charCodeAt(++_e);Ae=65536+((Ae&1023)<<10)|_t&1023}if(Ae<=127){if(te>=Ue)break;U[te++]=Ae}else if(Ae<=2047){if(te+1>=Ue)break;U[te++]=192|Ae>>6,U[te++]=128|Ae&63}else if(Ae<=65535){if(te+2>=Ue)break;U[te++]=224|Ae>>12,U[te++]=128|Ae>>6&63,U[te++]=128|Ae&63}else{if(te+3>=Ue)break;U[te++]=240|Ae>>18,U[te++]=128|Ae>>12&63,U[te++]=128|Ae>>6&63,U[te++]=128|Ae&63}}return U[te]=0,te-ve}function ge(E,U,te){return ue(E,a(),U,te)}var ce,we,Ne,Fe,ze,qe;y&&(ce=l.buffer);function Ve(E){ce=E,l.HEAP8=we=new Int8Array(E),l.HEAP16=new Int16Array(E),l.HEAP32=Fe=new Int32Array(E),l.HEAPU8=Ne=new Uint8Array(E),l.HEAPU16=new Uint16Array(E),l.HEAPU32=ze=new Uint32Array(E),l.HEAPF32=new Float32Array(E),l.HEAPF64=qe=new Float64Array(E)}var Ye=l.INITIAL_MEMORY||16777216;if(y)z=l.wasmMemory,ce=l.buffer;else if(l.wasmMemory)z=l.wasmMemory;else if(z=new WebAssembly.Memory({initial:Ye/65536,maximum:32768,shared:!0}),!(z.buffer instanceof SharedArrayBuffer))throw B("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),x&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");z&&(ce=z.buffer),Ye=ce.byteLength,Ve(ce);var Te,Je=[],at=[],Sn=[];function xt(){return q}function Nn(){if(l.preRun)for(typeof l.preRun=="function"&&(l.preRun=[l.preRun]);l.preRun.length;)ln(l.preRun.shift());it(Je)}function Xt(){y||it(at)}function bs(){if(!y){if(l.postRun)for(typeof l.postRun=="function"&&(l.postRun=[l.postRun]);l.postRun.length;)es(l.postRun.shift());it(Sn)}}function ln(E){Je.unshift(E)}function Vn(E){at.unshift(E)}function es(E){Sn.unshift(E)}var Kt=0,un=null;function eo(E){Kt++,l.monitorRunDependencies&&l.monitorRunDependencies(Kt)}function Qo(E){if(Kt--,l.monitorRunDependencies&&l.monitorRunDependencies(Kt),Kt==0&&un){var U=un;un=null,U()}}function xs(E){y?postMessage({cmd:"onAbort",arg:E}):l.onAbort&&l.onAbort(E),E="Aborted("+E+")",B(E),Y=!0,Z=1,E+=". Build with -sASSERTIONS for more info.";var U=new WebAssembly.RuntimeError(E);throw h(U),U}var tc="data:application/octet-stream;base64,";function to(E){return E.startsWith(tc)}function er(E){return E.startsWith("file://")}var Yt;Yt="tfjs-backend-wasm-threaded-simd.wasm",to(Yt)||(Yt=I(Yt));function iu(E){try{if(E==Yt&&W)return new Uint8Array(W);if(C)return C(E);throw"both async and sync fetching of the wasm failed"}catch(U){xs(U)}}function cu(){if(!W&&(g||b)){if(typeof fetch=="function"&&!er(Yt))return fetch(Yt,{credentials:"same-origin"}).then(function(E){if(!E.ok)throw"failed to load wasm binary file at '"+Yt+"'";return E.arrayBuffer()}).catch(function(){return iu(Yt)});if(v)return new Promise(function(E,U){v(Yt,function(te){E(new Uint8Array(te))},U)})}return Promise.resolve().then(function(){return iu(Yt)})}function lu(){var E={env:db,wasi_snapshot_preview1:db};function U(_e,Ae){var _t=_e.exports;if(l.asm=_t,pu(l.asm._emscripten_tls_init),Te=l.asm.__indirect_function_table,Vn(l.asm.__wasm_call_ctors),X=Ae,!y){var Un=de.unusedWorkers.length;de.unusedWorkers.forEach(function(ro){de.loadWasmModuleToWorker(ro,function(){--Un||Qo()})})}}y||eo();function te(_e){U(_e.instance,_e.module)}function fe(_e){return cu().then(function(Ae){return WebAssembly.instantiate(Ae,E)}).then(function(Ae){return Ae}).then(_e,function(Ae){B("failed to asynchronously prepare wasm: "+Ae),xs(Ae)})}function ve(){return!W&&typeof WebAssembly.instantiateStreaming=="function"&&!to(Yt)&&!er(Yt)&&!x&&typeof fetch=="function"?fetch(Yt,{credentials:"same-origin"}).then(function(_e){var Ae=WebAssembly.instantiateStreaming(_e,E);return Ae.then(te,function(_t){return B("wasm streaming compile failed: "+_t),B("falling back to ArrayBuffer instantiation"),fe(te)})}):fe(te)}if(l.instantiateWasm)try{var Ue=l.instantiateWasm(E,U);return Ue}catch(_e){B("Module.instantiateWasm callback failed with error: "+_e),h(_e)}return ve().catch(h),{}}var uu={};function no(E){this.name="ExitStatus",this.message="Program terminated with exit("+E+")",this.status=E}function ea(E){var U=de.pthreads[E];delete de.pthreads[E],U.terminate(),Ph(E),de.runningWorkers.splice(de.runningWorkers.indexOf(U),1),U.pthread_ptr=0}function du(E){var U=de.pthreads[E];U.postMessage({cmd:"cancel"})}function tr(E){var U=de.pthreads[E];se(U),de.returnWorkerToPool(U)}function nr(E){var U=de.getNewWorker();if(!U)return 6;de.runningWorkers.push(U),de.pthreads[E.pthread_ptr]=U,U.pthread_ptr=E.pthread_ptr;var te={cmd:"run",start_routine:E.startRoutine,arg:E.arg,pthread_ptr:E.pthread_ptr};return U.runPthread=()=>{te.time=performance.now(),U.postMessage(te,E.transferList)},U.loaded&&(U.runPthread(),delete U.runPthread),0}function hu(E){if(y)return ta(1,1,E);Z=E,xt()||(de.terminateAllThreads(),l.onExit&&l.onExit(E),Y=!0),m(E,new no(E))}function K(E,U){if(Z=E,!U&&y)throw Oe(E),"unwind";hu(E)}var re=K;function $e(E){if(E instanceof no||E=="unwind")return Z;m(1,E)}var de={unusedWorkers:[],runningWorkers:[],tlsInitFunctions:[],pthreads:{},init:function(){y?de.initWorker():de.initMainThread()},initMainThread:function(){for(var E=8;E--;)de.allocateUnusedWorker()},initWorker:function(){q=!1},setExitStatus:function(E){Z=E},terminateAllThreads:function(){for(var E of Object.values(de.pthreads))de.returnWorkerToPool(E);for(var E of de.unusedWorkers)E.terminate();de.unusedWorkers=[]},returnWorkerToPool:function(E){var U=E.pthread_ptr;delete de.pthreads[U],de.unusedWorkers.push(E),de.runningWorkers.splice(de.runningWorkers.indexOf(E),1),E.pthread_ptr=0,Ph(U)},receiveObjectTransfer:function(E){},threadInitTLS:function(){de.tlsInitFunctions.forEach(E=>E())},loadWasmModuleToWorker:function(E,U){E.onmessage=te=>{var fe=te.data,ve=fe.cmd;if(E.pthread_ptr&&(de.currentProxiedOperationCallerThread=E.pthread_ptr),fe.targetThread&&fe.targetThread!=mu()){var Ue=de.pthreads[fe.targetThread];Ue?Ue.postMessage(fe,fe.transferList):B('Internal error! Worker sent a message "'+ve+'" to target pthread '+fe.targetThread+", but that thread no longer exists!"),de.currentProxiedOperationCallerThread=void 0;return}ve==="processProxyingQueue"?Mh(fe.queue):ve==="spawnThread"?nr(fe):ve==="cleanupThread"?tr(fe.thread):ve==="killThread"?ea(fe.thread):ve==="cancelThread"?du(fe.thread):ve==="loaded"?(E.loaded=!0,U&&U(E),E.runPthread&&(E.runPthread(),delete E.runPthread)):ve==="print"?V("Thread "+fe.threadId+": "+fe.text):ve==="printErr"?B("Thread "+fe.threadId+": "+fe.text):ve==="alert"?alert("Thread "+fe.threadId+": "+fe.text):fe.target==="setimmediate"?E.postMessage(fe):ve==="onAbort"?l.onAbort&&l.onAbort(fe.arg):ve&&B("worker sent an unknown command "+ve),de.currentProxiedOperationCallerThread=void 0},E.onerror=te=>{var fe="worker sent an error!";throw B(fe+" "+te.filename+":"+te.lineno+": "+te.message),te},x&&(E.on("message",function(te){E.onmessage({data:te})}),E.on("error",function(te){E.onerror(te)}),E.on("detachedExit",function(){})),E.postMessage({cmd:"load",urlOrBlob:l.mainScriptUrlOrBlob||s,wasmMemory:z,wasmModule:X})},allocateUnusedWorker:function(){var E=I("tfjs-backend-wasm-threaded-simd.worker.js");de.unusedWorkers.push(new Worker(E))},getNewWorker:function(){return de.unusedWorkers.length==0&&(de.allocateUnusedWorker(),de.loadWasmModuleToWorker(de.unusedWorkers[0])),de.unusedWorkers.pop()}};l.PThread=de;function it(E){for(;E.length>0;)E.shift()(l)}function yt(E){var U=Bh(),te=E();return gu(U),te}function Le(){var E=mu(),U=i()[E+44>>2],te=i()[E+48>>2],fe=U-te;gb(U,fe),gu(U)}l.establishStackSpace=Le;function Oe(E){if(y)return ta(2,0,E);try{re(E)}catch(U){$e(U)}}var kt=[];function Wn(E){var U=kt[E];return U||(E>=kt.length&&(kt.length=E+1),kt[E]=U=Te.get(E)),U}function so(E,U){var te=Wn(E)(U);xt()?de.setExitStatus(te):mb(te)}l.invokeEntryPoint=so;function pu(E){de.tlsInitFunctions.push(E)}function nc(E,U){r().set(E,U)}function Oh(E){hb(E,!b,1,!g),de.threadInitTLS()}function dn(E){y?postMessage({cmd:"cleanupThread",thread:E}):tr(E)}function oo(E,U,te,fe){return y?ta(3,1,E,U,te,fe):sc(E,U,te,fe)}function sc(E,U,te,fe){if(typeof SharedArrayBuffer>"u")return B("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;var ve=[],Ue=0;if(y&&(ve.length===0||Ue))return oo(E,U,te,fe);var _e={startRoutine:te,pthread_ptr:E,arg:fe,transferList:ve};return y?(_e.cmd="spawnThread",postMessage(_e,ve),0):nr(_e)}function fC(){return 2097152}var mC=!0;function gC(){return mC}function Mh(E){Atomics.store(i(),E>>2,1),mu()&&fb(E),Atomics.compareExchange(i(),E>>2,1,0)}l.executeNotifiedProxyingQueue=Mh;function bC(E,U,te,fe){if(E==U)setTimeout(()=>Mh(fe));else if(y)postMessage({targetThread:E,cmd:"processProxyingQueue",queue:fe});else{var ve=de.pthreads[E];if(!ve)return;ve.postMessage({cmd:"processProxyingQueue",queue:fe})}return 1}function xC(E,U,te){return-1}function yC(){xs("")}function oc(E){oc.shown||(oc.shown={}),oc.shown[E]||(oc.shown[E]=1,x&&(E="warning: "+E),B(E))}function wC(){x||b||oc("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function IC(){return Date.now()}function ab(){return 2147483648}function kC(){return ab()}var fu;x?fu=()=>{var E=process.hrtime();return E[0]*1e3+E[1]/1e6}:y?fu=()=>performance.now()-l.__performance_now_clock_drift:fu=()=>performance.now();function vC(E,U,te){a().copyWithin(E,U,U+te)}function $C(){return x?Os.cpus().length:navigator.hardwareConcurrency}function ta(E,U){var te=arguments.length-2,fe=arguments;return yt(()=>{for(var ve=te,Ue=bu(ve*8),_e=Ue>>3,Ae=0;Ae<te;Ae++){var _t=fe[2+Ae];u()[_e+Ae]=_t}return pb(E,ve,Ue,U)})}var Lh=[];function CC(E,U,te){Lh.length=U;for(var fe=te>>3,ve=0;ve<U;ve++)Lh[ve]=u()[fe+ve];var Ue=E<0,_e=Ue?uu[-E-1]:DC[E];return _e.apply(null,Lh)}function SC(E){try{return z.grow(E-ce.byteLength+65535>>>16),Ve(z.buffer),1}catch{}}function NC(E){var U=a().length;if(E=E>>>0,E<=U)return!1;var te=ab();if(E>te)return!1;let fe=(_t,Un)=>_t+(Un-_t%Un)%Un;for(var ve=1;ve<=4;ve*=2){var Ue=U*(1+.2/ve);Ue=Math.min(Ue,E+100663296);var _e=Math.min(te,fe(Math.max(E,Ue),65536)),Ae=SC(_e);if(Ae)return!0}return!1}function TC(){throw"unwind"}function ib(E){return y?ta(4,1,E):52}function cb(E,U,te,fe,ve){return y?ta(5,1,E,U,te,fe,ve):70}var EC=[null,[],[]];function _C(E,U){var te=EC[E];U===0||U===10?((E===1?V:B)(ae(te,0)),te.length=0):te.push(U)}function lb(E,U,te,fe){if(y)return ta(6,1,E,U,te,fe);for(var ve=0,Ue=0;Ue<te;Ue++){var _e=c()[U>>2],Ae=c()[U+4>>2];U+=8;for(var _t=0;_t<Ae;_t++)_C(E,a()[_e+_t]);ve+=Ae}return c()[fe>>2]=ve,0}function ub(E){var U=l["_"+E];return U}function RC(E,U,te,fe,ve){var Ue={string:Tn=>{var na=0;if(Tn!=null&&Tn!==0){var yb=(Tn.length<<2)+1;na=bu(yb),ge(Tn,na,yb)}return na},array:Tn=>{var na=bu(Tn.length);return nc(Tn,na),na}};function _e(Tn){return U==="string"?oe(Tn):U==="boolean"?Boolean(Tn):Tn}var Ae=ub(E),_t=[],Un=0;if(fe)for(var ro=0;ro<fe.length;ro++){var xb=Ue[te[ro]];xb?(Un===0&&(Un=Bh()),_t[ro]=xb(fe[ro])):_t[ro]=fe[ro]}var zh=Ae.apply(null,_t);function OC(Tn){return Un!==0&&gu(Un),_e(Tn)}return zh=OC(zh),zh}function AC(E,U,te,fe){te=te||[];var ve=te.every(_e=>_e==="number"||_e==="boolean"),Ue=U!=="string";return Ue&&ve&&!fe?ub(E):function(){return RC(E,U,te,arguments)}}de.init();var DC=[null,hu,Oe,oo,ib,cb,lb],db={__emscripten_init_main_thread_js:Oh,__emscripten_thread_cleanup:dn,__pthread_create_js:sc,_emscripten_default_pthread_stack_size:fC,_emscripten_get_now_is_monotonic:gC,_emscripten_notify_task_queue:bC,_emscripten_set_offscreencanvas_size:xC,abort:yC,emscripten_check_blocking_allowed:wC,emscripten_date_now:IC,emscripten_get_heap_max:kC,emscripten_get_now:fu,emscripten_memcpy_big:vC,emscripten_num_logical_cores:$C,emscripten_receive_on_main_thread_js:CC,emscripten_resize_heap:NC,emscripten_unwind_to_js_event_loop:TC,exit:re,fd_close:ib,fd_seek:cb,fd_write:lb,memory:z||l.wasmMemory};lu(),l.___wasm_call_ctors=function(){return(l.___wasm_call_ctors=l.asm.__wasm_call_ctors).apply(null,arguments)},l._init=function(){return(l._init=l.asm.init).apply(null,arguments)},l._init_with_threads_count=function(){return(l._init_with_threads_count=l.asm.init_with_threads_count).apply(null,arguments)},l._get_threads_count=function(){return(l._get_threads_count=l.asm.get_threads_count).apply(null,arguments)},l._register_tensor=function(){return(l._register_tensor=l.asm.register_tensor).apply(null,arguments)},l._dispose_data=function(){return(l._dispose_data=l.asm.dispose_data).apply(null,arguments)},l._dispose=function(){return(l._dispose=l.asm.dispose).apply(null,arguments)},l._Abs=function(){return(l._Abs=l.asm.Abs).apply(null,arguments)},l._Add=function(){return(l._Add=l.asm.Add).apply(null,arguments)},l._AddN=function(){return(l._AddN=l.asm.AddN).apply(null,arguments)},l._All=function(){return(l._All=l.asm.All).apply(null,arguments)},l._Any=function(){return(l._Any=l.asm.Any).apply(null,arguments)},l._ArgMax=function(){return(l._ArgMax=l.asm.ArgMax).apply(null,arguments)},l._AvgPool=function(){return(l._AvgPool=l.asm.AvgPool).apply(null,arguments)},l._BatchMatMul=function(){return(l._BatchMatMul=l.asm.BatchMatMul).apply(null,arguments)},l._Ceil=function(){return(l._Ceil=l.asm.Ceil).apply(null,arguments)},l._ClipByValue=function(){return(l._ClipByValue=l.asm.ClipByValue).apply(null,arguments)},l._Conv2D=function(){return(l._Conv2D=l.asm.Conv2D).apply(null,arguments)},l._Conv2DBackpropInput=function(){return(l._Conv2DBackpropInput=l.asm.Conv2DBackpropInput).apply(null,arguments)},l._Cos=function(){return(l._Cos=l.asm.Cos).apply(null,arguments)},l._Cosh=function(){return(l._Cosh=l.asm.Cosh).apply(null,arguments)},l._CropAndResize=function(){return(l._CropAndResize=l.asm.CropAndResize).apply(null,arguments)},l._Cumprod=function(){return(l._Cumprod=l.asm.Cumprod).apply(null,arguments)},l._Cumsum=function(){return(l._Cumsum=l.asm.Cumsum).apply(null,arguments)},l._DepthToSpace=function(){return(l._DepthToSpace=l.asm.DepthToSpace).apply(null,arguments)},l._DepthwiseConv2dNative=function(){return(l._DepthwiseConv2dNative=l.asm.DepthwiseConv2dNative).apply(null,arguments)},l._Elu=function(){return(l._Elu=l.asm.Elu).apply(null,arguments)},l._Equal=function(){return(l._Equal=l.asm.Equal).apply(null,arguments)},l._Exp=function(){return(l._Exp=l.asm.Exp).apply(null,arguments)},l._FlipLeftRight=function(){return(l._FlipLeftRight=l.asm.FlipLeftRight).apply(null,arguments)},l._Floor=function(){return(l._Floor=l.asm.Floor).apply(null,arguments)},l._FloorDiv=function(){return(l._FloorDiv=l.asm.FloorDiv).apply(null,arguments)},l._FusedBatchNorm=function(){return(l._FusedBatchNorm=l.asm.FusedBatchNorm).apply(null,arguments)},l._FusedConv2D=function(){return(l._FusedConv2D=l.asm.FusedConv2D).apply(null,arguments)},l._FusedDepthwiseConv2D=function(){return(l._FusedDepthwiseConv2D=l.asm.FusedDepthwiseConv2D).apply(null,arguments)},l._Gather=function(){return(l._Gather=l.asm.Gather).apply(null,arguments)},l._GatherNd=function(){return(l._GatherNd=l.asm.GatherNd).apply(null,arguments)},l._Greater=function(){return(l._Greater=l.asm.Greater).apply(null,arguments)},l._GreaterEqual=function(){return(l._GreaterEqual=l.asm.GreaterEqual).apply(null,arguments)},l._IsNan=function(){return(l._IsNan=l.asm.IsNan).apply(null,arguments)},l._LeakyRelu=function(){return(l._LeakyRelu=l.asm.LeakyRelu).apply(null,arguments)},l._Less=function(){return(l._Less=l.asm.Less).apply(null,arguments)},l._LessEqual=function(){return(l._LessEqual=l.asm.LessEqual).apply(null,arguments)},l._Log=function(){return(l._Log=l.asm.Log).apply(null,arguments)},l._LogicalAnd=function(){return(l._LogicalAnd=l.asm.LogicalAnd).apply(null,arguments)},l._LogicalNot=function(){return(l._LogicalNot=l.asm.LogicalNot).apply(null,arguments)},l._LogicalOr=function(){return(l._LogicalOr=l.asm.LogicalOr).apply(null,arguments)},l._LogicalXor=function(){return(l._LogicalXor=l.asm.LogicalXor).apply(null,arguments)},l._Max=function(){return(l._Max=l.asm.Max).apply(null,arguments)},l._MaxPool=function(){return(l._MaxPool=l.asm.MaxPool).apply(null,arguments)},l._Maximum=function(){return(l._Maximum=l.asm.Maximum).apply(null,arguments)},l._Mean=function(){return(l._Mean=l.asm.Mean).apply(null,arguments)},l._Min=function(){return(l._Min=l.asm.Min).apply(null,arguments)},l._Minimum=function(){return(l._Minimum=l.asm.Minimum).apply(null,arguments)},l._MirrorPad=function(){return(l._MirrorPad=l.asm.MirrorPad).apply(null,arguments)},l._Multiply=function(){return(l._Multiply=l.asm.Multiply).apply(null,arguments)},l._Neg=function(){return(l._Neg=l.asm.Neg).apply(null,arguments)},l._NonMaxSuppressionV3=function(){return(l._NonMaxSuppressionV3=l.asm.NonMaxSuppressionV3).apply(null,arguments)},l._NonMaxSuppressionV4=function(){return(l._NonMaxSuppressionV4=l.asm.NonMaxSuppressionV4).apply(null,arguments)},l._NonMaxSuppressionV5=function(){return(l._NonMaxSuppressionV5=l.asm.NonMaxSuppressionV5).apply(null,arguments)},l._NotEqual=function(){return(l._NotEqual=l.asm.NotEqual).apply(null,arguments)},l._OneHot=function(){return(l._OneHot=l.asm.OneHot).apply(null,arguments)},l._PadV2=function(){return(l._PadV2=l.asm.PadV2).apply(null,arguments)},l._Pow=function(){return(l._Pow=l.asm.Pow).apply(null,arguments)},l._Prelu=function(){return(l._Prelu=l.asm.Prelu).apply(null,arguments)},l._Prod=function(){return(l._Prod=l.asm.Prod).apply(null,arguments)},l._RealDiv=function(){return(l._RealDiv=l.asm.RealDiv).apply(null,arguments)},l._Reciprocal=function(){return(l._Reciprocal=l.asm.Reciprocal).apply(null,arguments)},l._Relu=function(){return(l._Relu=l.asm.Relu).apply(null,arguments)},l._Relu6=function(){return(l._Relu6=l.asm.Relu6).apply(null,arguments)},l._ResizeBilinear=function(){return(l._ResizeBilinear=l.asm.ResizeBilinear).apply(null,arguments)},l._ResizeNearestNeighbor=function(){return(l._ResizeNearestNeighbor=l.asm.ResizeNearestNeighbor).apply(null,arguments)},l._Reverse=function(){return(l._Reverse=l.asm.Reverse).apply(null,arguments)},l._RotateWithOffset=function(){return(l._RotateWithOffset=l.asm.RotateWithOffset).apply(null,arguments)},l._Round=function(){return(l._Round=l.asm.Round).apply(null,arguments)},l._Rsqrt=function(){return(l._Rsqrt=l.asm.Rsqrt).apply(null,arguments)},l._ScatterNd=function(){return(l._ScatterNd=l.asm.ScatterNd).apply(null,arguments)},l._SelectV2=function(){return(l._SelectV2=l.asm.SelectV2).apply(null,arguments)},l._Sigmoid=function(){return(l._Sigmoid=l.asm.Sigmoid).apply(null,arguments)},l._Sin=function(){return(l._Sin=l.asm.Sin).apply(null,arguments)},l._Softmax=function(){return(l._Softmax=l.asm.Softmax).apply(null,arguments)},l._SparseFillEmptyRows=function(){return(l._SparseFillEmptyRows=l.asm.SparseFillEmptyRows).apply(null,arguments)},l._SparseReshape=function(){return(l._SparseReshape=l.asm.SparseReshape).apply(null,arguments)},l._SparseSegmentReduction=function(){return(l._SparseSegmentReduction=l.asm.SparseSegmentReduction).apply(null,arguments)},l._Sqrt=function(){return(l._Sqrt=l.asm.Sqrt).apply(null,arguments)},l._Square=function(){return(l._Square=l.asm.Square).apply(null,arguments)},l._SquaredDifference=function(){return(l._SquaredDifference=l.asm.SquaredDifference).apply(null,arguments)},l._Step=function(){return(l._Step=l.asm.Step).apply(null,arguments)},l._StridedSlice=function(){return(l._StridedSlice=l.asm.StridedSlice).apply(null,arguments)},l._Sub=function(){return(l._Sub=l.asm.Sub).apply(null,arguments)},l._Sum=function(){return(l._Sum=l.asm.Sum).apply(null,arguments)},l._Tan=function(){return(l._Tan=l.asm.Tan).apply(null,arguments)},l._Tanh=function(){return(l._Tanh=l.asm.Tanh).apply(null,arguments)},l._Tile=function(){return(l._Tile=l.asm.Tile).apply(null,arguments)},l._TopK=function(){return(l._TopK=l.asm.TopK).apply(null,arguments)},l._Transform=function(){return(l._Transform=l.asm.Transform).apply(null,arguments)},l._Transpose=function(){return(l._Transpose=l.asm.Transpose).apply(null,arguments)},l.__FusedMatMul=function(){return(l.__FusedMatMul=l.asm._FusedMatMul).apply(null,arguments)},l._malloc=function(){return(l._malloc=l.asm.malloc).apply(null,arguments)},l._free=function(){return(l._free=l.asm.free).apply(null,arguments)},l.__emscripten_tls_init=function(){return(l.__emscripten_tls_init=l.asm._emscripten_tls_init).apply(null,arguments)};var mu=l._pthread_self=function(){return(mu=l._pthread_self=l.asm.pthread_self).apply(null,arguments)};l.___errno_location=function(){return(l.___errno_location=l.asm.__errno_location).apply(null,arguments)};var hb=l.__emscripten_thread_init=function(){return(hb=l.__emscripten_thread_init=l.asm._emscripten_thread_init).apply(null,arguments)};l.__emscripten_thread_crashed=function(){return(l.__emscripten_thread_crashed=l.asm._emscripten_thread_crashed).apply(null,arguments)},l._emscripten_main_thread_process_queued_calls=function(){return(l._emscripten_main_thread_process_queued_calls=l.asm.emscripten_main_thread_process_queued_calls).apply(null,arguments)},l._emscripten_main_browser_thread_id=function(){return(l._emscripten_main_browser_thread_id=l.asm.emscripten_main_browser_thread_id).apply(null,arguments)};var pb=l._emscripten_run_in_main_runtime_thread_js=function(){return(pb=l._emscripten_run_in_main_runtime_thread_js=l.asm.emscripten_run_in_main_runtime_thread_js).apply(null,arguments)};l._emscripten_dispatch_to_thread_=function(){return(l._emscripten_dispatch_to_thread_=l.asm.emscripten_dispatch_to_thread_).apply(null,arguments)};var fb=l.__emscripten_proxy_execute_task_queue=function(){return(fb=l.__emscripten_proxy_execute_task_queue=l.asm._emscripten_proxy_execute_task_queue).apply(null,arguments)},Ph=l.__emscripten_thread_free_data=function(){return(Ph=l.__emscripten_thread_free_data=l.asm._emscripten_thread_free_data).apply(null,arguments)},mb=l.__emscripten_thread_exit=function(){return(mb=l.__emscripten_thread_exit=l.asm._emscripten_thread_exit).apply(null,arguments)},gb=l._emscripten_stack_set_limits=function(){return(gb=l._emscripten_stack_set_limits=l.asm.emscripten_stack_set_limits).apply(null,arguments)},Bh=l.stackSave=function(){return(Bh=l.stackSave=l.asm.stackSave).apply(null,arguments)},gu=l.stackRestore=function(){return(gu=l.stackRestore=l.asm.stackRestore).apply(null,arguments)},bu=l.stackAlloc=function(){return(bu=l.stackAlloc=l.asm.stackAlloc).apply(null,arguments)};l.dynCall_iijjiiii=function(){return(l.dynCall_iijjiiii=l.asm.dynCall_iijjiiii).apply(null,arguments)},l.dynCall_jiji=function(){return(l.dynCall_jiji=l.asm.dynCall_jiji).apply(null,arguments)},l.keepRuntimeAlive=xt,l.wasmMemory=z,l.cwrap=AC,l.ExitStatus=no,l.PThread=de;var xu;un=function E(){xu||bb(),xu||(un=E)};function bb(E){if(Kt>0)return;if(y){d(l),Xt(),postMessage({cmd:"loaded"});return}if(Nn(),Kt>0)return;function U(){xu||(xu=!0,l.calledRun=!0,!Y&&(Xt(),d(l),l.onRuntimeInitialized&&l.onRuntimeInitialized(),bs()))}l.setStatus?(l.setStatus("Running..."),setTimeout(function(){setTimeout(function(){l.setStatus("")},1),U()},1)):U()}if(l.preInit)for(typeof l.preInit=="function"&&(l.preInit=[l.preInit]);l.preInit.length>0;)l.preInit.pop()();bb();var yu;p&&(yu={uncaughtException:process.listeners("uncaughtException").filter(function(E){return!p.uncaughtException.indexOf(E)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(E){return!p.unhandledRejection.indexOf(E)>-1})});var wu;if(typeof WasmBackendModule<"u")wu=WasmBackendModule;else if(typeof o<"u")wu=o;else throw new Error("Could not find wasm module in post.js");if(yu){var FC=wu._dispose;wu._dispose=function(){FC(),yu.uncaughtException.forEach(function(E){process.removeListener("uncaughtException",E)}),yu.unhandledRejection.forEach(function(E){process.removeListener("unhandledRejection",E)})}}return o.ready}})();n.exports=t})(Qg);const tC=Qg.exports,JZ=rf({__proto__:null,default:tC},[Qg.exports]);var QZ=`"use strict";var Module={};var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";if(ENVIRONMENT_IS_NODE){var nodeWorkerThreads=require("worker_threads");var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",data=>onmessage({data:data}));var fs=require("fs");Object.assign(global,{self:global,require:require,Module:Module,location:{href:__filename},Worker:nodeWorkerThreads.Worker,importScripts:function(f){(0,eval)(fs.readFileSync(f,"utf8"))},postMessage:function(msg){parentPort.postMessage(msg)},performance:global.performance||{now:function(){return Date.now()}}})}var initializedJS=false;var pendingNotifiedProxyingQueues=[];function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");if(ENVIRONMENT_IS_NODE){fs.writeSync(2,text+"
");return}console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;self.alert=threadAlert;Module["instantiateWasm"]=(info,receiveInstance)=>{var instance=new WebAssembly.Instance(Module["wasmModule"],info);receiveInstance(instance);Module["wasmModule"]=null;return instance.exports};self.onunhandledrejection=e=>{throw e.reason??e};self.onmessage=e=>{try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob=="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance})}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.pthread_ptr,0,0,1);Module["establishStackSpace"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].threadInitTLS();if(!initializedJS){pendingNotifiedProxyingQueues.forEach(queue=>{Module["executeNotifiedProxyingQueue"](queue)});pendingNotifiedProxyingQueues=[];initializedJS=true}try{Module["invokeEntryPoint"](e.data.start_routine,e.data.arg)}catch(ex){if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["keepRuntimeAlive"]()){}else{Module["__emscripten_thread_exit"](ex.status)}}else{throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["__emscripten_thread_exit"](-1)}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processProxyingQueue"){if(initializedJS){Module["executeNotifiedProxyingQueue"](e.data.queue)}else{pendingNotifiedProxyingQueues.push(e.data.queue)}}else if(e.data.cmd){err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){if(Module["__emscripten_thread_crashed"]){Module["__emscripten_thread_crashed"]()}throw ex}};`,eb={exports:{}};(function(n,e){var t=(()=>{var s=typeof document<"u"&&document.currentScript?document.currentScript.src:void 0;return typeof __filename<"u"&&(s=s||__filename),function(o){o=o||{};var r=typeof o<"u"?o:{},a,i;r.ready=new Promise(function(K,re){a=K,i=re});var c;typeof process<"u"&&process.listeners&&(c={uncaughtException:process.listeners("uncaughtException"),unhandledRejection:process.listeners("unhandledRejection")});var u=Object.assign({},r),l=typeof window=="object",d=typeof importScripts=="function",h=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string",p="";function f(K){return r.locateFile?r.locateFile(K,p):p+K}var m,g,b;if(h){d?p=Os.dirname(p)+"/":p=__dirname+"/";var x,y;typeof eC=="function"&&(x=Os,y=Os),m=(K,re)=>(K=y.normalize(K),x.readFileSync(K,re?void 0:"utf8")),b=K=>{var re=m(K,!0);return re.buffer||(re=new Uint8Array(re)),re},g=(K,re,$e)=>{K=y.normalize(K),x.readFile(K,function(de,it){de?$e(de):re(it.buffer)})},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),process.argv.slice(2),process.on("uncaughtException",function(K){if(!(K instanceof xt))throw K}),process.on("unhandledRejection",function(K){throw K}),r.inspect=function(){return"[Emscripten Module object]"}}else(l||d)&&(d?p=self.location.href:typeof document<"u"&&document.currentScript&&(p=document.currentScript.src),s&&(p=s),p.indexOf("blob:")!==0?p=p.substr(0,p.replace(/[?#].*/,"").lastIndexOf("/")+1):p="",m=K=>{var re=new XMLHttpRequest;return re.open("GET",K,!1),re.send(null),re.responseText},d&&(b=K=>{var re=new XMLHttpRequest;return re.open("GET",K,!1),re.responseType="arraybuffer",re.send(null),new Uint8Array(re.response)}),g=(K,re,$e)=>{var de=new XMLHttpRequest;de.open("GET",K,!0),de.responseType="arraybuffer",de.onload=()=>{if(de.status==200||de.status==0&&de.response){re(de.response);return}$e()},de.onerror=$e,de.send(null)});var w=r.print||console.log.bind(console),I=r.printErr||console.warn.bind(console);Object.assign(r,u),u=null,r.arguments&&r.arguments,r.thisProgram&&r.thisProgram,r.quit&&r.quit;var k;r.wasmBinary&&(k=r.wasmBinary),r.noExitRuntime,typeof WebAssembly!="object"&&ze("no native wasm support detected");var v,C=!1,N=typeof TextDecoder<"u"?new TextDecoder("utf8"):void 0;function T(K,re,$e){for(var de=re+$e,it=re;K[it]&&!(it>=de);)++it;if(it-re>16&&K.buffer&&N)return N.decode(K.subarray(re,it));for(var yt="";re<it;){var Le=K[re++];if(!(Le&128)){yt+=String.fromCharCode(Le);continue}var Oe=K[re++]&63;if((Le&224)==192){yt+=String.fromCharCode((Le&31)<<6|Oe);continue}var kt=K[re++]&63;if((Le&240)==224?Le=(Le&15)<<12|Oe<<6|kt:Le=(Le&7)<<18|Oe<<12|kt<<6|K[re++]&63,Le<65536)yt+=String.fromCharCode(Le);else{var Wn=Le-65536;yt+=String.fromCharCode(55296|Wn>>10,56320|Wn&1023)}}return yt}function _(K,re){return K?T(W,K,re):""}function O(K,re,$e,de){if(!(de>0))return 0;for(var it=$e,yt=$e+de-1,Le=0;Le<K.length;++Le){var Oe=K.charCodeAt(Le);if(Oe>=55296&&Oe<=57343){var kt=K.charCodeAt(++Le);Oe=65536+((Oe&1023)<<10)|kt&1023}if(Oe<=127){if($e>=yt)break;re[$e++]=Oe}else if(Oe<=2047){if($e+1>=yt)break;re[$e++]=192|Oe>>6,re[$e++]=128|Oe&63}else if(Oe<=65535){if($e+2>=yt)break;re[$e++]=224|Oe>>12,re[$e++]=128|Oe>>6&63,re[$e++]=128|Oe&63}else{if($e+3>=yt)break;re[$e++]=240|Oe>>18,re[$e++]=128|Oe>>12&63,re[$e++]=128|Oe>>6&63,re[$e++]=128|Oe&63}}return re[$e]=0,$e-it}function P(K,re,$e){return O(K,W,re,$e)}var V,B,W,q;function z(K){V=K,r.HEAP8=B=new Int8Array(K),r.HEAP16=new Int16Array(K),r.HEAP32=new Int32Array(K),r.HEAPU8=W=new Uint8Array(K),r.HEAPU16=new Uint16Array(K),r.HEAPU32=q=new Uint32Array(K),r.HEAPF32=new Float32Array(K),r.HEAPF64=new Float64Array(K)}r.INITIAL_MEMORY;var X=[],Y=[],Z=[];function se(){if(r.preRun)for(typeof r.preRun=="function"&&(r.preRun=[r.preRun]);r.preRun.length;)oe(r.preRun.shift());Nn(X)}function J(){Nn(Y)}function ae(){if(r.postRun)for(typeof r.postRun=="function"&&(r.postRun=[r.postRun]);r.postRun.length;)ge(r.postRun.shift());Nn(Z)}function oe(K){X.unshift(K)}function ue(K){Y.unshift(K)}function ge(K){Z.unshift(K)}var ce=0,we=null;function Ne(K){ce++,r.monitorRunDependencies&&r.monitorRunDependencies(ce)}function Fe(K){if(ce--,r.monitorRunDependencies&&r.monitorRunDependencies(ce),ce==0&&we){var re=we;we=null,re()}}function ze(K){r.onAbort&&r.onAbort(K),K="Aborted("+K+")",I(K),C=!0,K+=". Build with -sASSERTIONS for more info.";var re=new WebAssembly.RuntimeError(K);throw i(re),re}var qe="data:application/octet-stream;base64,";function Ve(K){return K.startsWith(qe)}function Ye(K){return K.startsWith("file://")}var Te;Te="tfjs-backend-wasm.wasm",Ve(Te)||(Te=f(Te));function Je(K){try{if(K==Te&&k)return new Uint8Array(k);if(b)return b(K);throw"both async and sync fetching of the wasm failed"}catch(re){ze(re)}}function at(){if(!k&&(l||d)){if(typeof fetch=="function"&&!Ye(Te))return fetch(Te,{credentials:"same-origin"}).then(function(K){if(!K.ok)throw"failed to load wasm binary file at '"+Te+"'";return K.arrayBuffer()}).catch(function(){return Je(Te)});if(g)return new Promise(function(K,re){g(Te,function($e){K(new Uint8Array($e))},re)})}return Promise.resolve().then(function(){return Je(Te)})}function Sn(){var K={env:cu,wasi_snapshot_preview1:cu};function re(Le,Oe){var kt=Le.exports;r.asm=kt,v=r.asm.memory,z(v.buffer),r.asm.__indirect_function_table,ue(r.asm.__wasm_call_ctors),Fe()}Ne();function $e(Le){re(Le.instance)}function de(Le){return at().then(function(Oe){return WebAssembly.instantiate(Oe,K)}).then(function(Oe){return Oe}).then(Le,function(Oe){I("failed to asynchronously prepare wasm: "+Oe),ze(Oe)})}function it(){return!k&&typeof WebAssembly.instantiateStreaming=="function"&&!Ve(Te)&&!Ye(Te)&&!h&&typeof fetch=="function"?fetch(Te,{credentials:"same-origin"}).then(function(Le){var Oe=WebAssembly.instantiateStreaming(Le,K);return Oe.then($e,function(kt){return I("wasm streaming compile failed: "+kt),I("falling back to ArrayBuffer instantiation"),de($e)})}):de($e)}if(r.instantiateWasm)try{var yt=r.instantiateWasm(K,re);return yt}catch(Le){I("Module.instantiateWasm callback failed with error: "+Le),i(Le)}return it().catch(i),{}}function xt(K){this.name="ExitStatus",this.message="Program terminated with exit("+K+")",this.status=K}function Nn(K){for(;K.length>0;)K.shift()(r)}function Xt(K,re){B.set(K,re)}function bs(){ze("")}function ln(){return 2147483648}function Vn(){return ln()}function es(K,re,$e){W.copyWithin(K,re,re+$e)}function Kt(K){try{return v.grow(K-V.byteLength+65535>>>16),z(v.buffer),1}catch{}}function un(K){var re=W.length;K=K>>>0;var $e=ln();if(K>$e)return!1;let de=(kt,Wn)=>kt+(Wn-kt%Wn)%Wn;for(var it=1;it<=4;it*=2){var yt=re*(1+.2/it);yt=Math.min(yt,K+100663296);var Le=Math.min($e,de(Math.max(K,yt),65536)),Oe=Kt(Le);if(Oe)return!0}return!1}function eo(K){return 52}function Qo(K,re,$e,de,it){return 70}var xs=[null,[],[]];function tc(K,re){var $e=xs[K];re===0||re===10?((K===1?w:I)(T($e,0)),$e.length=0):$e.push(re)}function to(K,re,$e,de){for(var it=0,yt=0;yt<$e;yt++){var Le=q[re>>2],Oe=q[re+4>>2];re+=8;for(var kt=0;kt<Oe;kt++)tc(K,W[Le+kt]);it+=Oe}return q[de>>2]=it,0}function er(K){var re=r["_"+K];return re}function Yt(K,re,$e,de,it){var yt={string:dn=>{var oo=0;if(dn!=null&&dn!==0){var sc=(dn.length<<2)+1;oo=no(sc),P(dn,oo,sc)}return oo},array:dn=>{var oo=no(dn.length);return Xt(dn,oo),oo}};function Le(dn){return re==="string"?_(dn):re==="boolean"?Boolean(dn):dn}var Oe=er(K),kt=[],Wn=0;if(de)for(var so=0;so<de.length;so++){var pu=yt[$e[so]];pu?(Wn===0&&(Wn=lu()),kt[so]=pu(de[so])):kt[so]=de[so]}var nc=Oe.apply(null,kt);function Oh(dn){return Wn!==0&&uu(Wn),Le(dn)}return nc=Oh(nc),nc}function iu(K,re,$e,de){$e=$e||[];var it=$e.every(Le=>Le==="number"||Le==="boolean"),yt=re!=="string";return yt&&it&&!de?er(K):function(){return Yt(K,re,$e,arguments)}}var cu={abort:bs,emscripten_get_heap_max:Vn,emscripten_memcpy_big:es,emscripten_resize_heap:un,fd_close:eo,fd_seek:Qo,fd_write:to};Sn(),r.___wasm_call_ctors=function(){return(r.___wasm_call_ctors=r.asm.__wasm_call_ctors).apply(null,arguments)},r._init=function(){return(r._init=r.asm.init).apply(null,arguments)},r._init_with_threads_count=function(){return(r._init_with_threads_count=r.asm.init_with_threads_count).apply(null,arguments)},r._get_threads_count=function(){return(r._get_threads_count=r.asm.get_threads_count).apply(null,arguments)},r._register_tensor=function(){return(r._register_tensor=r.asm.register_tensor).apply(null,arguments)},r._dispose_data=function(){return(r._dispose_data=r.asm.dispose_data).apply(null,arguments)},r._dispose=function(){return(r._dispose=r.asm.dispose).apply(null,arguments)},r._Abs=function(){return(r._Abs=r.asm.Abs).apply(null,arguments)},r._Add=function(){return(r._Add=r.asm.Add).apply(null,arguments)},r._AddN=function(){return(r._AddN=r.asm.AddN).apply(null,arguments)},r._All=function(){return(r._All=r.asm.All).apply(null,arguments)},r._Any=function(){return(r._Any=r.asm.Any).apply(null,arguments)},r._ArgMax=function(){return(r._ArgMax=r.asm.ArgMax).apply(null,arguments)},r._AvgPool=function(){return(r._AvgPool=r.asm.AvgPool).apply(null,arguments)},r._BatchMatMul=function(){return(r._BatchMatMul=r.asm.BatchMatMul).apply(null,arguments)},r._Ceil=function(){return(r._Ceil=r.asm.Ceil).apply(null,arguments)},r._ClipByValue=function(){return(r._ClipByValue=r.asm.ClipByValue).apply(null,arguments)},r._Conv2D=function(){return(r._Conv2D=r.asm.Conv2D).apply(null,arguments)},r._Conv2DBackpropInput=function(){return(r._Conv2DBackpropInput=r.asm.Conv2DBackpropInput).apply(null,arguments)},r._Cos=function(){return(r._Cos=r.asm.Cos).apply(null,arguments)},r._Cosh=function(){return(r._Cosh=r.asm.Cosh).apply(null,arguments)},r._CropAndResize=function(){return(r._CropAndResize=r.asm.CropAndResize).apply(null,arguments)},r._Cumprod=function(){return(r._Cumprod=r.asm.Cumprod).apply(null,arguments)},r._Cumsum=function(){return(r._Cumsum=r.asm.Cumsum).apply(null,arguments)},r._DepthToSpace=function(){return(r._DepthToSpace=r.asm.DepthToSpace).apply(null,arguments)},r._DepthwiseConv2dNative=function(){return(r._DepthwiseConv2dNative=r.asm.DepthwiseConv2dNative).apply(null,arguments)},r._Elu=function(){return(r._Elu=r.asm.Elu).apply(null,arguments)},r._Equal=function(){return(r._Equal=r.asm.Equal).apply(null,arguments)},r._Exp=function(){return(r._Exp=r.asm.Exp).apply(null,arguments)},r._FlipLeftRight=function(){return(r._FlipLeftRight=r.asm.FlipLeftRight).apply(null,arguments)},r._Floor=function(){return(r._Floor=r.asm.Floor).apply(null,arguments)},r._FloorDiv=function(){return(r._FloorDiv=r.asm.FloorDiv).apply(null,arguments)},r._FusedBatchNorm=function(){return(r._FusedBatchNorm=r.asm.FusedBatchNorm).apply(null,arguments)},r._FusedConv2D=function(){return(r._FusedConv2D=r.asm.FusedConv2D).apply(null,arguments)},r._FusedDepthwiseConv2D=function(){return(r._FusedDepthwiseConv2D=r.asm.FusedDepthwiseConv2D).apply(null,arguments)},r._Gather=function(){return(r._Gather=r.asm.Gather).apply(null,arguments)},r._GatherNd=function(){return(r._GatherNd=r.asm.GatherNd).apply(null,arguments)},r._Greater=function(){return(r._Greater=r.asm.Greater).apply(null,arguments)},r._GreaterEqual=function(){return(r._GreaterEqual=r.asm.GreaterEqual).apply(null,arguments)},r._IsNan=function(){return(r._IsNan=r.asm.IsNan).apply(null,arguments)},r._LeakyRelu=function(){return(r._LeakyRelu=r.asm.LeakyRelu).apply(null,arguments)},r._Less=function(){return(r._Less=r.asm.Less).apply(null,arguments)},r._LessEqual=function(){return(r._LessEqual=r.asm.LessEqual).apply(null,arguments)},r._Log=function(){return(r._Log=r.asm.Log).apply(null,arguments)},r._LogicalAnd=function(){return(r._LogicalAnd=r.asm.LogicalAnd).apply(null,arguments)},r._LogicalNot=function(){return(r._LogicalNot=r.asm.LogicalNot).apply(null,arguments)},r._LogicalOr=function(){return(r._LogicalOr=r.asm.LogicalOr).apply(null,arguments)},r._LogicalXor=function(){return(r._LogicalXor=r.asm.LogicalXor).apply(null,arguments)},r._Max=function(){return(r._Max=r.asm.Max).apply(null,arguments)},r._MaxPool=function(){return(r._MaxPool=r.asm.MaxPool).apply(null,arguments)},r._Maximum=function(){return(r._Maximum=r.asm.Maximum).apply(null,arguments)},r._Mean=function(){return(r._Mean=r.asm.Mean).apply(null,arguments)},r._Min=function(){return(r._Min=r.asm.Min).apply(null,arguments)},r._Minimum=function(){return(r._Minimum=r.asm.Minimum).apply(null,arguments)},r._MirrorPad=function(){return(r._MirrorPad=r.asm.MirrorPad).apply(null,arguments)},r._Multiply=function(){return(r._Multiply=r.asm.Multiply).apply(null,arguments)},r._Neg=function(){return(r._Neg=r.asm.Neg).apply(null,arguments)},r._NonMaxSuppressionV3=function(){return(r._NonMaxSuppressionV3=r.asm.NonMaxSuppressionV3).apply(null,arguments)},r._NonMaxSuppressionV4=function(){return(r._NonMaxSuppressionV4=r.asm.NonMaxSuppressionV4).apply(null,arguments)},r._NonMaxSuppressionV5=function(){return(r._NonMaxSuppressionV5=r.asm.NonMaxSuppressionV5).apply(null,arguments)},r._NotEqual=function(){return(r._NotEqual=r.asm.NotEqual).apply(null,arguments)},r._OneHot=function(){return(r._OneHot=r.asm.OneHot).apply(null,arguments)},r._PadV2=function(){return(r._PadV2=r.asm.PadV2).apply(null,arguments)},r._Pow=function(){return(r._Pow=r.asm.Pow).apply(null,arguments)},r._Prelu=function(){return(r._Prelu=r.asm.Prelu).apply(null,arguments)},r._Prod=function(){return(r._Prod=r.asm.Prod).apply(null,arguments)},r._RealDiv=function(){return(r._RealDiv=r.asm.RealDiv).apply(null,arguments)},r._Reciprocal=function(){return(r._Reciprocal=r.asm.Reciprocal).apply(null,arguments)},r._Relu=function(){return(r._Relu=r.asm.Relu).apply(null,arguments)},r._Relu6=function(){return(r._Relu6=r.asm.Relu6).apply(null,arguments)},r._ResizeBilinear=function(){return(r._ResizeBilinear=r.asm.ResizeBilinear).apply(null,arguments)},r._ResizeNearestNeighbor=function(){return(r._ResizeNearestNeighbor=r.asm.ResizeNearestNeighbor).apply(null,arguments)},r._Reverse=function(){return(r._Reverse=r.asm.Reverse).apply(null,arguments)},r._RotateWithOffset=function(){return(r._RotateWithOffset=r.asm.RotateWithOffset).apply(null,arguments)},r._Round=function(){return(r._Round=r.asm.Round).apply(null,arguments)},r._Rsqrt=function(){return(r._Rsqrt=r.asm.Rsqrt).apply(null,arguments)},r._ScatterNd=function(){return(r._ScatterNd=r.asm.ScatterNd).apply(null,arguments)},r._SelectV2=function(){return(r._SelectV2=r.asm.SelectV2).apply(null,arguments)},r._Sigmoid=function(){return(r._Sigmoid=r.asm.Sigmoid).apply(null,arguments)},r._Sin=function(){return(r._Sin=r.asm.Sin).apply(null,arguments)},r._Softmax=function(){return(r._Softmax=r.asm.Softmax).apply(null,arguments)},r._SparseFillEmptyRows=function(){return(r._SparseFillEmptyRows=r.asm.SparseFillEmptyRows).apply(null,arguments)},r._SparseReshape=function(){return(r._SparseReshape=r.asm.SparseReshape).apply(null,arguments)},r._SparseSegmentReduction=function(){return(r._SparseSegmentReduction=r.asm.SparseSegmentReduction).apply(null,arguments)},r._Sqrt=function(){return(r._Sqrt=r.asm.Sqrt).apply(null,arguments)},r._Square=function(){return(r._Square=r.asm.Square).apply(null,arguments)},r._SquaredDifference=function(){return(r._SquaredDifference=r.asm.SquaredDifference).apply(null,arguments)},r._Step=function(){return(r._Step=r.asm.Step).apply(null,arguments)},r._StridedSlice=function(){return(r._StridedSlice=r.asm.StridedSlice).apply(null,arguments)},r._Sub=function(){return(r._Sub=r.asm.Sub).apply(null,arguments)},r._Sum=function(){return(r._Sum=r.asm.Sum).apply(null,arguments)},r._Tan=function(){return(r._Tan=r.asm.Tan).apply(null,arguments)},r._Tanh=function(){return(r._Tanh=r.asm.Tanh).apply(null,arguments)},r._Tile=function(){return(r._Tile=r.asm.Tile).apply(null,arguments)},r._TopK=function(){return(r._TopK=r.asm.TopK).apply(null,arguments)},r._Transform=function(){return(r._Transform=r.asm.Transform).apply(null,arguments)},r._Transpose=function(){return(r._Transpose=r.asm.Transpose).apply(null,arguments)},r.__FusedMatMul=function(){return(r.__FusedMatMul=r.asm._FusedMatMul).apply(null,arguments)},r._malloc=function(){return(r._malloc=r.asm.malloc).apply(null,arguments)},r._free=function(){return(r._free=r.asm.free).apply(null,arguments)},r.___errno_location=function(){return(r.___errno_location=r.asm.__errno_location).apply(null,arguments)};var lu=r.stackSave=function(){return(lu=r.stackSave=r.asm.stackSave).apply(null,arguments)},uu=r.stackRestore=function(){return(uu=r.stackRestore=r.asm.stackRestore).apply(null,arguments)},no=r.stackAlloc=function(){return(no=r.stackAlloc=r.asm.stackAlloc).apply(null,arguments)};r.dynCall_iijjiiii=function(){return(r.dynCall_iijjiiii=r.asm.dynCall_iijjiiii).apply(null,arguments)},r.dynCall_jiji=function(){return(r.dynCall_jiji=r.asm.dynCall_jiji).apply(null,arguments)},r.cwrap=iu;var ea;we=function K(){ea||du(),ea||(we=K)};function du(K){if(ce>0||(se(),ce>0))return;function re(){ea||(ea=!0,r.calledRun=!0,!C&&(J(),a(r),r.onRuntimeInitialized&&r.onRuntimeInitialized(),ae()))}r.setStatus?(r.setStatus("Running..."),setTimeout(function(){setTimeout(function(){r.setStatus("")},1),re()},1)):re()}if(r.preInit)for(typeof r.preInit=="function"&&(r.preInit=[r.preInit]);r.preInit.length>0;)r.preInit.pop()();du();var tr;c&&(tr={uncaughtException:process.listeners("uncaughtException").filter(function(K){return!c.uncaughtException.indexOf(K)>-1}),unhandledRejection:process.listeners("unhandledRejection").filter(function(K){return!c.unhandledRejection.indexOf(K)>-1})});var nr;if(typeof o<"u")nr=o;else if(typeof WasmBackendModuleThreadedSimd<"u")nr=WasmBackendModuleThreadedSimd;else throw new Error("Could not find wasm module in post.js");if(tr){var hu=nr._dispose;nr._dispose=function(){hu(),tr.uncaughtException.forEach(function(K){process.removeListener("uncaughtException",K)}),tr.unhandledRejection.forEach(function(K){process.removeListener("unhandledRejection",K)})}}return o.ready}})();n.exports=t})(eb);const nC=eb.exports,eJ=rf({__proto__:null,default:nC},[eb.exports]);/**
 * @license
 * Copyright 2019 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const fy=tC||JZ,tJ=nC||eJ;class nJ extends Sd{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(iJ),cJ=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new xf(this,Is())}write(e,t,s){const o={id:this.dataIdNextNumber++};return this.move(o,e,t,s,1),o}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=nn();return e(),{kernelMs:nn()-t}}move(e,t,s,o,r){const a=this.dataIdNextNumber++;if(o==="string"){const l=t;this.dataIdMap.set(e,{id:a,stringBytes:l,shape:s,dtype:o,memoryOffset:null,refCount:r});return}const i=L(s),c=i*xc(o),u=this.wasm._malloc(c);this.dataIdMap.set(e,{id:a,memoryOffset:u,shape:s,dtype:o,refCount:r}),this.wasm.tfjs.registerTensor(a,i,u),t!=null&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,c),u)}async read(e){return this.readSync(e)}readSync(e,t,s){const{memoryOffset:o,dtype:r,shape:a,stringBytes:i}=this.dataIdMap.get(e);if(r==="string")return(t==null||t===0)&&(s==null||s>=i.length)?i:i.slice(t,s);t=t||0,s=s||L(a);const c=xc(r),u=this.wasm.HEAPU8.slice(o+t*c,o+s*c);return rJ(u.buffer,r)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const s=this.dataIdMap.get(e);if(s.refCount--,!t&&s.refCount>0)return!1;this.wasm._free(s.memoryOffset),this.wasm.tfjs.disposeData(s.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);t!=null&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,s){let o;if(s==null)o=this.write(null,e,t);else{const r=this.dataIdNextNumber++;o={id:r},this.dataIdMap.set(o,{id:r,memoryOffset:s,shape:e,dtype:t,refCount:1});const a=L(e);this.wasm.tfjs.registerTensor(r,a,s)}return{dataId:o,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:s}){const o=this.wasm.HEAPU8.buffer,{memoryOffset:r}=this.dataIdMap.get(s),a=L(e);switch(t){case"float32":return new Float32Array(o,r,a);case"int32":return new Int32Array(o,r,a);case"bool":return new Uint8Array(o,r,a);default:throw new Error(`Unknown dtype ${t}`)}}}function sJ(n,e,t){let s="tfjs-backend-wasm.wasm";return n&&e?s="tfjs-backend-wasm-threaded-simd.wasm":n&&(s="tfjs-backend-wasm-simd.wasm"),rp!=null&&rp[s]!=null?rp[s]:t+s}async function oJ(){const[n,e]=await Promise.all([H().getAsync("WASM_HAS_SIMD_SUPPORT"),H().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((t,s)=>{const o={};o.locateFile=(i,c)=>{if(i.endsWith(".worker.js")){const u=QZ.replace(/\n/g,"\\n"),l=new Blob([u],{type:"application/javascript"});return URL.createObjectURL(l)}return i.endsWith(".wasm")?sJ(n,e,c):c+i};let r=!1;o.onAbort=()=>{if(r||ap)return;ap=!0,s({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"})};let a;e&&n&&aJ==null?(o.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+fy.toString()],{type:"text/javascript"}),a=fy(o)):a=tJ(o),a.then(i=>{r=!0,ap=!1;const c=null;i.tfjs={init:i.cwrap("init",null,[]),initWithThreadsCount:i.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:i.cwrap("get_threads_count","number",[]),registerTensor:i.cwrap("register_tensor",null,["number","number","number"]),disposeData:i.cwrap("dispose_data",c,["number"]),dispose:i.cwrap("dispose",c,[])},t({wasm:i})}).catch(s)})}function rJ(n,e){switch(e){case"float32":return new Float32Array(n);case"int32":return new Int32Array(n);case"bool":return new Uint8Array(n);default:throw new Error(`Unknown dtype ${e}`)}}let aJ=null,rp={},ap=!1,iJ=-1,cJ=-1;/**
 * @license
 * Copyright 2020 Google LLC. All Rights Reserved.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * =============================================================================
 */const lJ=2;Zf("wasm",async()=>{const{wasm:n}=await oJ();return new nJ(n)},lJ);const uJ=ot("div")({background:"#24283b",padding:"20px","border-radius":"5px"}),dJ={type:"Function",fn:()=>({type:"Function",fn:n=>ne(uJ,{style:{color:"#db4b4b","white-space":"pre-wrap","max-width":"200px"},get children(){return n.body.value.message}})})},hJ=()=>{const[n,e]=Bt(document.body);return{set:t=>e(t),offset:()=>{const{x:t,y:s}=n().getBoundingClientRect();return[t,s]},fullOffset:()=>{const t=n().getBoundingClientRect(),s=window.frameElement;if(!s)return[t.x,t.y];const o=s.getBoundingClientRect();return[t.x+o.x,t.y+o.y]}}},sC=Zs(),pJ=n=>{const e=hJ();return ne(sC.Provider,{value:e,get children(){return n.children}})},tb=()=>Js(sC),oC=Zs(),fJ=n=>ne(oC.Provider,{get value(){return n.graph},get children(){return n.children}}),zn=()=>Js(oC),mJ=(n,e,t)=>{const s={},[o,r]=Xy({}),a=()=>{const[c,u]=t.offset(),l=Wy(e.transform());return d=>{const h=s[d];if(!h)return;const p=h.getBoundingClientRect(),[f,m]=dp(l,[p.x-c,p.y-u,1]),[g,b]=dp(l,[p.x-c+p.width,p.y-u+p.height,1]),x=g-f,y=b-m;r(d,[f+x/2,m+y/2])}},i=c=>{requestAnimationFrame(()=>{const u=a(),l=n.database.nodes[c],d=l.kind===Dc.SOURCE?[]:l.inputs,h=l.kind===Dc.SINK?[]:l.outputs,p=[...d,...h];Cy(()=>{for(const f of p)u(f)})})};return n.subscribe(i),{track:(c,u)=>{s[c]=u,a()(c)},position:c=>o[c]??CS,retrack:i}},rC=Zs(),gJ=n=>{const e=Mr(),t=zn(),s=tb(),o=mJ(t,e,s);return ne(rC.Provider,{value:o,get children(){return n.children}})},Ji=()=>Js(rC),aC=Zs(),bJ=n=>{const t=document.createElement("canvas").getContext("2d"),s=(o,r)=>(t.font=o,t.measureText(r).width);return ne(aC.Provider,{value:{width:s},get children(){return n.children}})},nb=()=>Js(aC),xJ=fs('<input type="number" step="any">',1),yJ=ot("div")({background:"#24283b",padding:"20px 30px","border-radius":"5px"}),wJ={type:"Function",fn:()=>({type:"Function",fn:n=>{const e=zn(),t=Ji(),s=nb(),[o,r]=Bt(!1);let a;const i=()=>n.body.value.data.toString(),c="normal 20px monospace",u=()=>Math.floor(s.width(c,i()))+70;return ne(Fc,{get children(){return[ne(qs,{get when(){return!o()},get children(){return ne(yJ,{onClick:()=>{r(!0),t.retrack(n.body.node),a.value=i(),a.focus(),a.click()},get children(){return n.body.value.data}})}}),ne(qs,{get when(){return o()},get children(){const l=xJ.cloneNode(!0);l.addEventListener("blur",()=>{r(!1),t.retrack(n.body.node)}),l.$$input=()=>{const h={type:"Number",data:a.valueAsNumber};e.setValue(n.body.id,h)},l.$$pointerdown=h=>h.stopPropagation();const d=a;return typeof d=="function"?hf(d,l):a=l,l.style.setProperty("padding","20px"),l.style.setProperty("background","#24283b"),l.style.setProperty("border-radius","5px"),l.style.setProperty("border","none"),l.style.setProperty("color","#ffffff"),l.style.setProperty("font-family","monospace"),l.style.setProperty("font-size","20px"),mn(()=>l.style.setProperty("width",`${u()}px`)),l}})]}})}})};Cd(["pointerdown","input"]);const IJ=fs("<div></div>",2),my=ot("div")({background:"#24283b",padding:"20px","border-radius":"5px"}),kJ={type:"Function",fn:()=>({type:"Function",fn:n=>ne(Fc,{get fallback(){return"NOT IMPLEMENTED!"},get children(){return[ne(qs,{get when(){return n.body.value.rank==0},get children(){return ne(my,{get children(){return n.body.value.data.toFixed(2)}})}}),ne(qs,{get when(){return n.body.value.rank==1},get children(){return ne(my,{style:{display:"grid","text-align":"end",overflow:"scroll","max-height":"300px"},onWheel:e=>{e.currentTarget.scrollTop+=e.deltaY,e.stopPropagation(),e.preventDefault()},get children(){return ne(po,{get each(){return n.body.value.data},children:e=>(()=>{const t=IJ.cloneNode(!0);return gr(t,()=>e.toFixed(2)),t})()})}})}})]}})})},kd=(n,e,t)=>{const[s,o]=e,[r,a]=t;return n.map(i=>(i-s)/(o-s)*(a-r)+r)},vJ=fs('<svg><path stroke="#bb9af7" stroke-width="2" fill="none"></path></svg>',4,!0),iC=n=>{const e=rn(()=>kd(n.value.x,n.domain,n.to)),t=rn(()=>kd(n.value.y,n.range,n.to)),s=()=>e().map((o,r)=>`${r==0?"M":"L"}${o},${t()[r]}`).join("");return(()=>{const o=vJ.cloneNode(!0);return mn(()=>Vs(o,"d",s())),o})()},$J=fs('<svg><circle r="3" fill="#bb9af7"></circle></svg>',4,!0),cC=n=>{const e=rn(()=>kd(n.value.x,n.domain,n.to)),t=rn(()=>kd(n.value.y,n.range,n.to));return ne(po,{get each(){return e()},children:(s,o)=>(()=>{const r=$J.cloneNode(!0);return Vs(r,"cx",s),mn(()=>Vs(r,"cy",t()[o()])),r})()})},CJ=ot("svg")({background:"#24283b","border-radius":"5px",transform:"scale(1, -1)"}),SJ=n=>{const e=()=>`${n.size[0]}px`,t=()=>`${n.size[1]}px`;return ne(CJ,{get style(){return{width:e(),height:t()}},get children(){return n.children}})},NJ=n=>ne(po,{get each(){return n.value.plots},children:e=>ne(Fc,{get children(){return[ne(qs,{get when(){return e.type=="Scatter"},get children(){return ne(cC,{value:e,get domain(){return n.domain},get range(){return n.range},get to(){return n.to}})}}),ne(qs,{get when(){return e.type=="Line"},get children(){return ne(iC,{value:e,get domain(){return n.domain},get range(){return n.range},get to(){return n.to}})}})]}})}),ip=n=>({type:"Function",fn:()=>({type:"Function",fn:e=>{const t=[300,300],s=[10,290];return ne(SJ,{size:t,get children(){return ne(n,{get value(){return e.body.value},get domain(){return e.body.value.domain},get range(){return e.body.value.range},to:s})}})}})}),TJ={Scatter:ip(cC),Line:ip(iC),Overlay:ip(NJ)},EJ=fs("<input>",1),_J=ot("div")({background:"#24283b",padding:"20px 30px","border-radius":"5px"}),RJ={type:"Function",fn:()=>({type:"Function",fn:n=>{const e=zn(),t=Ji(),s=nb(),[o,r]=Bt(!1);let a;const i="normal 20px monospace",c=()=>Math.floor(s.width(i,n.body.value.name))+70;return ne(Fc,{get children(){return[ne(qs,{get when(){return!o()},get children(){return ne(_J,{onClick:()=>{r(!0),t.retrack(n.body.node),a.value=n.body.value.name,a.focus(),a.click()},get children(){return n.body.value.name}})}}),ne(qs,{get when(){return o()},get children(){const u=EJ.cloneNode(!0);u.addEventListener("blur",()=>{r(!1),t.retrack(n.body.node)}),u.$$input=()=>{const d={type:"Label",name:a.value};e.setValue(n.body.id,d)},u.$$pointerdown=d=>d.stopPropagation();const l=a;return typeof l=="function"?hf(l,u):a=u,u.style.setProperty("padding","20px"),u.style.setProperty("background","#24283b"),u.style.setProperty("border-radius","5px"),u.style.setProperty("border","none"),u.style.setProperty("color","#ffffff"),u.style.setProperty("font-family","monospace"),u.style.setProperty("font-size","20px"),mn(()=>u.style.setProperty("width",`${c()}px`)),u}})]}})}})};Cd(["pointerdown","input"]);const AJ=fs("<input>",1),DJ=ot("div")({background:"#24283b",padding:"20px 30px","border-radius":"5px"}),FJ={type:"Function",fn:()=>({type:"Function",fn:n=>{const e=zn(),t=Ji(),s=nb(),[o,r]=Bt(!1);let a;const i="normal 20px monospace",c=()=>Math.floor(s.width(i,n.body.value.name))+70;return ne(Fc,{get children(){return[ne(qs,{get when(){return!o()},get children(){return ne(DJ,{onClick:()=>{r(!0),t.retrack(n.body.node),a.value=n.body.value.name,a.focus(),a.click()},get children(){return n.body.value.name}})}}),ne(qs,{get when(){return o()},get children(){const u=AJ.cloneNode(!0);u.addEventListener("blur",()=>{r(!1),t.retrack(n.body.node)}),u.$$input=()=>{const d={type:"Read",name:a.value};e.untrackLabel(n.body.node,n.body.value.name),e.setValue(n.body.id,d)},u.$$pointerdown=d=>d.stopPropagation();const l=a;return typeof l=="function"?hf(l,u):a=u,u.style.setProperty("padding","20px"),u.style.setProperty("background","#24283b"),u.style.setProperty("border-radius","5px"),u.style.setProperty("border","none"),u.style.setProperty("color","#ffffff"),u.style.setProperty("font-family","monospace"),u.style.setProperty("font-size","20px"),mn(()=>u.style.setProperty("width",`${c()}px`)),u}})]}})}})};Cd(["pointerdown","input"]);const OJ={type:"Function",fn:()=>({type:"Function",fn:()=>[]})},MJ={type:"Functions",fns:{Number:wJ,Tensor:kJ,Label:RJ,Read:FJ,None:OJ,Error:dJ,...TJ}};lN("cpu");const Gn=n=>({type:"Function",fn:e=>{const t=[];for(const r of e){if(r.type==="None")return{type:"None"};t.push(r.data)}const s=n.apply(null,t);return{type:"Tensor",data:s.arraySync(),size:s.size,shape:s.shape,rank:s.rank,dtype:s.dtype}}}),LJ={type:"Function",fn:n=>({type:"None"})},vd=n=>{const e=wc(n).arraySync(),t=us(n).arraySync(),s=e-Math.abs(e*.05)-Number.MIN_VALUE,o=t+Math.abs(t*.05)+Number.MIN_VALUE;return[s,o]},PJ={type:"Function",fn:n=>{let e=[];for(const a of n){if(a.type!=="Tensor"||a.size<2)return{type:"None"};e.push(a.data)}const[t,s]=e,o=vd(t),r=vd(s);return{type:"Scatter",x:t,y:s,domain:o,range:r}}},BJ={type:"Function",fn:n=>{let e=[];for(const a of n){if(a.type!=="Tensor"||a.size<2)return{type:"None"};e.push(a.data)}const[t,s]=e,o=vd(t),r=vd(s);return{type:"Line",x:t,y:s,domain:o,range:r}}},zJ={type:"Function",fn:n=>{const{domain:e,range:t}=n.reduce((s,o)=>{const r=[Math.min(s.domain[0],o.domain[0]),Math.max(s.domain[1],o.domain[1])],a=[Math.min(s.range[0],o.range[0]),Math.max(s.range[1],o.range[1])];return{domain:r,range:a}},{domain:[Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER],range:[Number.MAX_SAFE_INTEGER,Number.MIN_SAFE_INTEGER]});return{type:"Overlay",plots:n,domain:e,range:t}}},VJ={type:"Function",fn:n=>n[0]},sf={type:"Module",add:Gn(ee),sub:Gn(xe),mul:Gn(R),div:Gn(ke),abs:Gn(Mt),mean:Gn(St),maximum:Gn(yo),minimum:Gn(Wl),mod:Gn(cw),pow:Gn(Nr),linspace:Gn(EE),"squared difference":Gn(Im),square:Gn(nt),id:VJ,label:LJ,scatter:PJ,overlay:zJ,line:BJ,show:MJ};var Dc=(n=>(n[n.SOURCE=0]="SOURCE",n[n.TRANSFORM=1]="TRANSFORM",n[n.SINK=2]="SINK",n))(Dc||{});const WJ=(n,e,t,s)=>{const{setDatabase:o,notifySubscribers:r}=n;o("nodes",e,"position",a=>pf(a,Vy(t,1/s))),r(e)},UJ=(n,e,t)=>{const{database:s,setDatabase:o,generateId:r,notifySubscribers:a}=n,i=r(),c=bf[e];return o(La(u=>{const l=[];if(c.kind!==io.SINK)for(const f of c.outputs){const m={id:r(),name:f,node:i,edges:[]};u.outputs[m.id]=m,l.push(m.id)}const d=(()=>{switch(c.kind){case io.SOURCE:switch(c.name){case"num":return{type:"Number",data:0};case"read":return{type:"Read",name:""};default:return{type:"None"}}case io.TRANSFORM:return{type:"None"};case io.SINK:switch(c.name){case"label":return{type:"Label",name:""};default:return{type:"None"}}}})(),h={id:r(),value:d,node:i};u.bodies[h.id]=h;const p=[];if(c.kind!==io.SOURCE)for(const f of c.inputs){const m={id:r(),name:f,node:i};u.inputs[m.id]=m,p.push(m.id)}if(c.kind===io.SOURCE){const f={kind:0,id:i,name:e,position:t,outputs:l,body:h.id};u.nodes[i]=f}else if(c.kind===io.TRANSFORM){const f={kind:1,id:i,name:e,position:t,inputs:p,outputs:l,body:h.id,func:c.func};u.nodes[i]=f}else{const f={kind:2,id:i,name:e,position:t,inputs:p,body:h.id,func:c.func};u.nodes[i]=f}})),a(i),s.nodes[i]},gy=(n,e)=>{if(e.kind===2)return;const{database:t}=n;for(const s of e.outputs)for(const o of t.outputs[s].edges){const r=t.edges[o];Jo(n,t.inputs[r.input].node)}},Jo=(n,e)=>{const{database:t,setDatabase:s,notifySubscribers:o}=n,r=t.nodes[e];if(r.kind===0)return gy(n,r);const a=[];for(const i of r.inputs){const c=t.inputs[i].edge;if(c){const u=t.edges[c],l=t.nodes[t.outputs[u.output].node],d=t.bodies[l.body];if(d.value.type==="Read"){const h=n.labels[d.value.name];h&&a.push(h)}else a.push(d.value)}}if(r.kind===1){const i=a.length===r.inputs.length?pp(sf,r.func,a):{type:"None"};s("bodies",r.body,"value",i),gy(n,r),o(r.id)}else if(r.kind===2){pp(sf,r.func,a);const i=t.bodies[r.body];if(i.value.type==="Label"){a.length>0?n.labels[i.value.name]=a[0]:n.labels[i.value.name]={type:"None"};const c=n.readers[i.value.name];if(!c)return;for(const u of c)Jo(n,u)}}},GJ=(n,e,t)=>{const{database:s}=n,o=new Set([e,t]),r=a=>{const i=s.nodes[a];if(i.kind===2)return!1;const c=new Set;for(const u of i.outputs)for(const l of s.outputs[u].edges){const d=s.edges[l];c.add(s.inputs[d.input].node)}for(const u of c)if(o.has(u)||(o.add(u),r(u)))return!0;return!1};return r(t)},HJ=(n,{input:e,output:t})=>{const{database:s,setDatabase:o,generateId:r}=n,a=s.inputs[e],i=a.node,u=s.outputs[t].node;if(i===u)return;const l=a.edge?s.edges[a.edge]:void 0;if(l&&l.output===t||GJ(n,u,i))return;const d={id:r(),output:t,input:e};return o(La(h=>{if(l){const p=h.outputs[l.output];p.edges=p.edges.filter(f=>f!==l.id),delete h.edges[l.id]}h.edges[d.id]=d,h.outputs[t].edges.push(d.id),h.inputs[e].edge=d.id})),Jo(n,i),d},jJ=(n,e,t)=>{const{database:s,setDatabase:o,notifySubscribers:r}=n;o("bodies",e,"value",t);const a=s.bodies[e];if(a.value.type==="Read"){const i=n.readers[a.value.name];i?i.add(a.node):n.readers[a.value.name]=new Set([a.node])}r(a.node),Jo(n,a.node)},qJ=(n,e)=>{const{database:t,setDatabase:s}=n,o=t.nodes[e],r=[];s(La(a=>{delete a.nodes[e],delete a.bodies[o.body];const i=[];if(o.kind!==2)for(const d of o.outputs)i.push(...a.outputs[d].edges),delete a.outputs[d];const c=[];if(o.kind!==0)for(const d of o.inputs){const h=a.inputs[d].edge;h&&c.push(h),delete a.inputs[d]}const u=[],l=[];for(const d of i){const h=a.edges[d].input;r.push(a.inputs[h].node),u.push(h),delete a.edges[d]}for(const d of c)l.push(a.edges[d].output),delete a.edges[d];for(const d of u)a.inputs[d].edge=void 0;l.forEach((d,h)=>{const p=c[h],f=a.outputs[d];f.edges=f.edges.filter(m=>m!==p)})}));for(const a of r)Jo(n,a)},XJ=(n,e)=>{const{database:t,setDatabase:s}=n,o=t.inputs[e],r=o.edge;!r||(s(La(a=>{const i=a.outputs[a.edges[r].output];i.edges=i.edges.filter(c=>c!==r),delete a.edges[r],a.inputs[e].edge=void 0})),Jo(n,o.node))},KJ=(n,e)=>{const{database:t,setDatabase:s}=n,o=t.outputs[e],r=[];s(La(a=>{for(const i of o.edges){r.push(a.inputs[a.edges[i].input].node);const c=a.edges[i];a.inputs[c.input].edge=void 0,delete a.edges[i]}a.outputs[e].edges=[]}));for(const a of r)Jo(n,a)},YJ=(n,e,t)=>{const{setDatabase:s}=n,o=bf[t];o.kind===io.TRANSFORM&&(s(La(r=>{const a=r.nodes[e];a.kind===1&&o.inputs.length===a.inputs.length&&o.outputs.length===a.outputs.length&&(a.name=t,a.func=o.func)})),Jo(n,e))},ZJ=(n,e,t)=>{const s=n.readers[t];!s||s.delete(e)},JJ=()=>{const[n,e]=Xy({nodes:{},edges:{},inputs:{},outputs:{},bodies:{}});let t=0;const s=()=>t++;let o=new Set;const r=u=>{o.add(u)},i={database:n,setDatabase:e,notifySubscribers:u=>{for(const l of o)l(u)},generateId:s,labels:{},readers:{}};return{database:n,subscribe:r,dragNode:WJ.bind(null,i),addNode:UJ.bind(null,i),addEdge:HJ.bind(null,i),setValue:jJ.bind(null,i),deleteNode:qJ.bind(null,i),deleteInputEdge:XJ.bind(null,i),deleteOutputEdges:KJ.bind(null,i),replaceNode:YJ.bind(null,i),untrackLabel:ZJ.bind(null,i)}},QJ=({haystack:n,needle:e})=>{let t=0,s=0;for(;s<e.length;){const o=e[s].toLowerCase();for(;t<n.length&&o!==n[t].toLowerCase();)++t;if(t===n.length)return!1;++s}return!0};var zo=(n=>(n[n.INSERT=0]="INSERT",n[n.REPLACE=1]="REPLACE",n[n.HIDDEN=2]="HIDDEN",n))(zo||{});const by={kind:2},eQ=()=>{const n=Object.keys(bf),[e,t]=Bt(by),[s,o]=Bt("");return{mode:e,visible:()=>e().kind!==2,show:a=>{t(a),o("")},hide:()=>t(by),search:s,setSearch:o,filtered:()=>n.filter(a=>QJ({haystack:a,needle:s()}))}},lC=Zs(),tQ=n=>{const e=eQ();return ne(lC.Provider,{value:e,get children(){return n.children}})},Qi=()=>Js(lC),nQ=fs('<svg fill="currentColor" stroke-width="0" xmlns="http://www.w3.org/2000/svg"></svg>',2),sQ=fs("<title></title>",2);function ec(n,e){const t=Lu(n.a,e);return(()=>{const s=nQ.cloneNode(!0);return df(s,t,!0,!0),gr(s,()=>pS,null),gr(s,(()=>{const o=rn(()=>!!e.title,!0);return()=>o()&&(()=>{const r=sQ.cloneNode(!0);return gr(r,()=>e.title),r})()})(),null),mn(o=>{const r=n.a.stroke,a={...e.style,overflow:"visible",color:e.color||"currentColor"},i=e.size||"1em",c=e.size||"1em",u=n.c;return r!==o._v$&&Vs(s,"stroke",o._v$=r),o._v$2=By(s,a,o._v$2),i!==o._v$3&&Vs(s,"height",o._v$3=i),c!==o._v$4&&Vs(s,"width",o._v$4=c),u!==o._v$5&&(s.innerHTML=o._v$5=u),o},{_v$:void 0,_v$2:void 0,_v$3:void 0,_v$4:void 0,_v$5:void 0}),s})()}function oQ(n){return ec({a:{fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",viewBox:"0 0 24 24"},c:'<path d="M5 12h14"/>'},n)}function sb(n){return ec({a:{fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",viewBox:"0 0 24 24"},c:'<circle cx="11" cy="11" r="8"/><path d="M21 21l-4.35-4.35"/>'},n)}const rQ=ot("div")({padding:"10px 20px","backdrop-filter":"blur(12px)","-webkit-backdrop-filter":"blur(12px)",background:"#00000033",display:"flex","align-items":"center",gap:"10px"}),aQ=ot("input")({"font-size":"26px",width:"100%",outline:"none",background:"none",color:"#ffffff",border:"none"}),iQ=()=>{const n=Qi(),e=zn(),t=Mr();let s;$y(()=>n.visible()&&s.focus());const o=a=>{switch(a.key){case"Escape":return n.hide();case"Enter":const i=n.filtered()[0];if(i){const c=n.mode();switch(c.kind){case zo.INSERT:e.addNode(i,t.worldSpace(c.position));break;case zo.REPLACE:e.replaceNode(c.node,i);break}}return n.hide();default:return}},r=()=>n.setSearch(s.value);return ne(rQ,{get children(){return[ne(sb,{}),ne(aQ,{placeholder:"search",ref(a){const i=s;typeof i=="function"?i(a):s=a},onkeydown:o,get value(){return n.search()},onInput:r})]}})},cQ=ot("div")({overflowY:"scroll",height:"350px"}),lQ=ot("div")({padding:"10px 20px",cursor:"pointer","&:hover":{"backdrop-filter":"blur(12px)","-webkit-backdrop-filter":"blur(12px)",background:"#00000022"}}),uQ=()=>{const n=Qi(),e=zn(),t=Mr();return ne(cQ,{onWheel:s=>s.currentTarget.scrollTop+=s.deltaY,get children(){return ne(po,{get each(){return n.filtered()},children:s=>ne(lQ,{onClick:()=>{const r=n.mode();switch(r.kind){case zo.INSERT:e.addNode(s,t.worldSpace(r.position));break;case zo.REPLACE:e.replaceNode(r.node,s);break}n.hide()},children:s})})}})},dQ=ot("div")({width:"100%",height:"100%",position:"absolute",top:"0px",left:"0px",padding:"50px"}),hQ=ot("div")({margin:"0 auto",width:"100%","max-width":"700px","backdrop-filter":"blur(12px)","-webkit-backdrop-filter":"blur(12px)",background:"#00000066","box-shadow":"0 8px 32px 0 #00000044","border-radius":"10px",border:"1px solid #00000022","font-size":"26px",color:"#ffffff"}),pQ=()=>{const n=Qi();return ne(ju,{get when(){return n.visible()},get children(){return ne(dQ,{get onClick(){return n.hide},onWheel:e=>e.preventDefault(),onContextMenu:e=>e.preventDefault(),get children(){return ne(hQ,{onClick:e=>e.stopPropagation(),get children(){return[ne(iQ,{}),ne(uQ,{})]}})}})}})},fQ=()=>{const[n,e]=Bt(!1),[t,s]=Bt([0,0]),[o,r]=Bt([]);return{visible:n,position:t,show:({position:a,options:i})=>{e(!0),s(a),r(i)},hide:()=>e(!1),options:o}},uC=Zs(),mQ=n=>{const e=fQ();return ne(uC.Provider,{value:e,get children(){return n.children}})},Qr=()=>Js(uC),of=54,xy=60,gQ=Math.PI/3,bQ=ot("div")({position:"absolute",color:"#ffffff","-webkit-backdrop-filter":"blur(10px)","backdrop-filter":"blur(10px)","border-radius":"50%",width:`${of}px`,height:`${of}px`,display:"flex","flex-direction":"column","justify-content":"center","align-items":"center","font-size":"20px",cursor:"pointer"}),xQ=ot("div")({"font-size":"10px","padding-top":"2px"}),yQ=n=>{const e=Qr(),t=gQ*n.i(),s=Math.cos(t)*xy,o=Math.sin(t)*xy,r=`translate(${s}px, ${-o}px)`,[a,i]=Bt(!1);return ne(bQ,{get style(){return{transform:r,background:a()?"#000000AA":"#00000066"}},onPointerEnter:()=>i(!0),onPointerLeave:()=>i(!1),onPointerUp:()=>{n.option.onClick(),e.hide()},get children(){return[ne(n.option.icon,{}),ne(xQ,{get children(){return n.option.label}})]}})},wQ=fs("<div></div>",2),yy=of/2,IQ=ot("div")({position:"absolute",top:0,left:0,width:"100%",height:"100%"}),kQ=()=>{const n=Qr(),e=()=>{const[t,s]=n.position();return`translate(${t-yy}px, ${s-yy}px)`};return ne(ju,{get when(){return n.visible()},get children(){return ne(IQ,{get onPointerUp(){return n.hide},get children(){const t=wQ.cloneNode(!0);return gr(t,ne(po,{get each(){return n.options()},children:(s,o)=>ne(yQ,{i:o,option:s})})),mn(()=>t.style.setProperty("transform",e())),t}})}})},vQ=n=>{const e=n.addNode("num",[50,50]);n.setValue(e.body,{type:"Number",data:-10});const t=n.addNode("num",[50,200]);n.setValue(t.body,{type:"Number",data:10});const s=n.addNode("num",[50,350]);n.setValue(s.body,{type:"Number",data:10});const o=n.addNode("linspace",[300,50]);n.addEdge({output:e.outputs[0],input:o.inputs[0]}),n.addEdge({output:t.outputs[0],input:o.inputs[1]}),n.addEdge({output:s.outputs[0],input:o.inputs[2]});const r=n.addNode("label",[730,50]);n.setValue(r.body,{type:"Label",name:"x"}),n.addEdge({output:o.outputs[0],input:r.inputs[0]});const a=n.addNode("num",[50,550]);n.setValue(a.body,{type:"Number",data:3});const i=n.addNode("read",[50,700]);n.setValue(i.body,{type:"Read",name:"x"});const c=n.addNode("num",[300,550]);n.setValue(c.body,{type:"Number",data:5});const u=n.addNode("mul",[300,700]);n.addEdge({output:a.outputs[0],input:u.inputs[0]}),n.addEdge({output:i.outputs[0],input:u.inputs[1]});const l=n.addNode("add",[530,550]);n.addEdge({output:c.outputs[0],input:l.inputs[0]}),n.addEdge({output:u.outputs[0],input:l.inputs[1]});const d=n.addNode("label",[800,550]);n.setValue(d.body,{type:"Label",name:"y"}),n.addEdge({output:l.outputs[0],input:d.inputs[0]});const h=n.addNode("num",[50,1100]);n.setValue(h.body,{type:"Number",data:1});const p=n.addNode("read",[50,1250]);n.setValue(p.body,{type:"Read",name:"x"});const f=n.addNode("mul",[300,1250]);n.addEdge({output:h.outputs[0],input:f.inputs[0]}),n.addEdge({output:p.outputs[0],input:f.inputs[1]});const m=n.addNode("num",[300,1100]);n.setValue(m.body,{type:"Number",data:2});const g=n.addNode("add",[530,1100]);n.addEdge({output:m.outputs[0],input:g.inputs[0]}),n.addEdge({output:f.outputs[0],input:g.inputs[1]});const b=n.addNode("label",[800,1100]);n.setValue(b.body,{type:"Label",name:"y hat"}),n.addEdge({output:g.outputs[0],input:b.inputs[0]});const x=n.addNode("read",[1200,50]);n.setValue(x.body,{type:"Read",name:"x"});const y=n.addNode("read",[1200,200]);n.setValue(y.body,{type:"Read",name:"y"});const w=n.addNode("scatter",[1400,50]);n.addEdge({output:x.outputs[0],input:w.inputs[0]}),n.addEdge({output:y.outputs[0],input:w.inputs[1]});const I=n.addNode("read",[1200,450]);n.setValue(I.body,{type:"Read",name:"x"});const k=n.addNode("read",[1200,600]);n.setValue(k.body,{type:"Read",name:"y hat"});const v=n.addNode("line",[1450,450]);n.addEdge({output:I.outputs[0],input:v.inputs[0]}),n.addEdge({output:k.outputs[0],input:v.inputs[1]});const C=n.addNode("overlay",[1900,50]);n.addEdge({output:w.outputs[0],input:C.inputs[0]}),n.addEdge({output:v.outputs[0],input:C.inputs[1]});const N=n.addNode("read",[1200,850]);n.setValue(N.body,{type:"Read",name:"y"});const T=n.addNode("read",[1200,1e3]);n.setValue(T.body,{type:"Read",name:"y hat"});const _=n.addNode("sub",[1450,850]);n.addEdge({output:N.outputs[0],input:_.inputs[0]}),n.addEdge({output:T.outputs[0],input:_.inputs[1]});const O=n.addNode("abs",[1650,850]);n.addEdge({output:_.outputs[0],input:O.inputs[0]});const P=n.addNode("mean",[1850,850]);n.addEdge({output:O.outputs[0],input:P.inputs[0]});const V=n.addNode("label",[2100,850]);n.setValue(V.body,{type:"Label",name:"loss"}),n.addEdge({output:P.outputs[0],input:V.inputs[0]})};function $Q(n){return ec({a:{fill:"none",stroke:"currentColor","stroke-linecap":"round","stroke-linejoin":"round","stroke-width":"2",viewBox:"0 0 24 24"},c:'<path stroke="none" d="M0 0h24v24H0z"/><path d="M8 10V3L6 5M6 16a2 2 0 114 0c0 .591-.601 1.46-1 2l-3 3.001h4M15 14a2 2 0 102-2 2 2 0 10-2-2M6.5 10h3"/>'},n)}function CQ(n){return ec({a:{fill:"currentColor",viewBox:"0 0 16 16"},c:'<path d="M14 7v1H8v6H7V8H1V7h6V1h1v6h6z"/>'},n)}function SQ(n){return ec({a:{viewBox:"0 0 24 24"},c:'<path d="M20 9a1 1 0 001-1V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v1H9V4a1 1 0 00-1-1H4a1 1 0 00-1 1v4a1 1 0 001 1h1v6H4a1 1 0 00-1 1v4a1 1 0 001 1h4a1 1 0 001-1v-1h6v1a1 1 0 001 1h4a1 1 0 001-1v-4a1 1 0 00-1-1h-1V9h1zm-3-4h2v2h-2V5zM5 5h2v2H5V5zm2 14H5v-2h2v2zm12 0h-2v-2h2v2zm-2-4h-1a1 1 0 00-1 1v1H9v-1a1 1 0 00-1-1H7V9h1a1 1 0 001-1V7h6v1a1 1 0 001 1h1v6z"/>'},n)}const NQ=fs("<svg><g></g></svg>",4,!0),TQ=fs('<svg><path fill="none" stroke="#7aa2f7" stroke-width="3"></path></svg>',4,!0),EQ=ot("svg")({width:"100%",height:"100%",position:"absolute","pointer-events":"none"}),_Q=()=>{const n=zn(),e=Mr(),t=Ji(),s=()=>{const[i,c]=e.position();return`translate(${i} ${c})`},o=()=>`scale(${e.zoom()} ${e.zoom()})`,r=()=>`${s()} ${o()}`,a=(i,c)=>{const[u,l]=t.position(i),[d,h]=t.position(c),p=u<d,f=Math.min(Math.abs(d-u),50),m=p?u+f:u-f,g=p?d-f:d+f;return`M${u},${l} C${m},${l} ${g},${h} ${d},${h}`};return ne(EQ,{get children(){const i=NQ.cloneNode(!0);return gr(i,ne(po,{get each(){return Object.values(n.database.edges)},children:c=>(()=>{const u=TQ.cloneNode(!0);return mn(()=>Vs(u,"d",a(c.output,c.input))),u})()})),mn(()=>Vs(i,"transform",r())),i}})};function ob(n){return ec({a:{viewBox:"0 0 448 512"},c:'<path d="M135.2 17.69C140.6 6.848 151.7 0 163.8 0h120.4c12.1 0 23.2 6.848 28.6 17.69L320 32h96c17.7 0 32 14.33 32 32s-14.3 32-32 32H32C14.33 96 0 81.67 0 64s14.33-32 32-32h96l7.2-14.31zM31.1 128H416v320c0 35.3-28.7 64-64 64H95.1c-34.45 0-64-28.7-64-64V128zm80 80v224c0 8.8 8.1 16 16 16 9.7 0 16-7.2 16-16V208c0-8.8-6.3-16-16-16-7.9 0-16 7.2-16 16zm96 0v224c0 8.8 8.1 16 16 16 9.7 0 16.9-7.2 16.9-16V208c0-8.8-7.2-16-16.9-16-7.9 0-16 7.2-16 16zm96.9 0v224c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16s-16 7.2-16 16z"/>'},n)}let tt;(function(n){n[n.ZERO=0]="ZERO",n[n.ONE=1]="ONE",n[n.TWO=2]="TWO",n[n.THREE_OR_MORE=3]="THREE_OR_MORE"})(tt||(tt={}));let Ro;(function(n){n[n.BACKGROUND=0]="BACKGROUND",n[n.NODE=1]="NODE"})(Ro||(Ro={}));const wy=(n,e,t)=>{switch(n.kind){case tt.ZERO:return{kind:tt.ONE,pointer:e,target:t};case tt.ONE:return{kind:tt.TWO,data:{[n.pointer.id]:n.pointer,[e.id]:e},midpoint:ff(n.pointer.position,e.position),distance:mf(n.pointer.position,e.position)};case tt.TWO:case tt.THREE_OR_MORE:return{kind:tt.THREE_OR_MORE,data:{...n.data,[e.id]:e}}}},RQ=(n,e,t,s,o)=>{switch(n.kind){case tt.ZERO:return n;case tt.ONE:{const r=n.target;switch(r.kind){case Ro.BACKGROUND:return s.drag(dr(e.position,n.pointer.position)),{kind:tt.ONE,pointer:e,target:r};case Ro.NODE:return o.dragNode(r.id,dr(e.position,n.pointer.position),s.zoom()),{kind:tt.ONE,pointer:e,target:r}}}case tt.TWO:{const r={...n.data,[e.id]:e},[a,i]=Object.values(r),c=ff(a.position,i.position),u=mf(a.position,i.position),l=n.distance-u;return s.drag(dr(c,n.midpoint)),s.pinch(dr(c,t.offset()),l),{kind:tt.TWO,data:r,midpoint:c,distance:u}}case tt.THREE_OR_MORE:return{kind:tt.THREE_OR_MORE,data:{...n.data,[e.id]:e}}}},AQ=(n,e)=>{switch(n.kind){case tt.ZERO:return n;case tt.ONE:return{kind:tt.ZERO};case tt.TWO:{const{[e.id]:t,...s}=n.data,[o]=Object.values(s);return{kind:tt.ONE,pointer:o,target:{kind:Ro.BACKGROUND}}}case tt.THREE_OR_MORE:{const{[e.id]:t,...s}=n.data;if(Object.keys(n.data).length===3){const[o,r]=Object.values(s);return{kind:tt.TWO,data:s,midpoint:ff(o.position,r.position),distance:mf(o.position,r.position)}}return{kind:tt.THREE_OR_MORE,data:s}}}},Ou=n=>({id:n.pointerId,position:[n.clientX,n.clientY]}),DQ=(n,e,t)=>{const[s,o]=Bt({kind:tt.ZERO});return{downOnBackground:r=>{r.stopPropagation();const a=Ou(r),i={kind:Ro.BACKGROUND};o(wy(s(),a,i))},downOnNode:(r,a)=>{r.stopPropagation();const i=Ou(r),c={kind:Ro.NODE,id:a};o(wy(s(),i,c))},move:r=>{const a=Ou(r);o(RQ(s(),a,e,n,t))},up:r=>{const a=Ou(r);o(AQ(s(),a))},draggingNode:()=>{const r=s();return r.kind===tt.ONE&&r.target.kind===Ro.NODE},twoPointersDown:()=>s().kind==tt.TWO}},dC=Zs(),FQ=n=>{const e=Mr(),t=tb(),s=zn(),o=DQ(e,t,s);return ne(dC.Provider,{value:o,get children(){return n.children}})},hC=()=>Js(dC),OQ=n=>{const[e,t]=Bt(),[s,o]=Bt();return $y(()=>{e()&&s()&&(n.addEdge({input:e(),output:s()}),t(void 0),o(void 0))}),{input:e,setInput:r=>{t(r)},output:s,setOutput:r=>{o(r)},clear:()=>{t(void 0),o(void 0)}}},pC=Zs(),MQ=n=>{const e=zn(),t=OQ(e);return ne(pC.Provider,{value:t,get children(){return n.children}})},rb=()=>Js(pC),LQ=ot("div")({display:"flex",gap:"10px",cursor:"pointer"}),PQ=ot("div")({width:"20px",height:"20px","border-radius":"50%"}),BQ=n=>{const e=rb(),t=Qr(),s=zn(),o=Ji(),r=a=>i=>requestAnimationFrame(()=>o.track(a,i));return ne(LQ,{onClick:()=>{e.setInput(n.input.id)},onContextMenu:a=>{t.show({position:[a.clientX,a.clientY],options:[{icon:ob,label:"delete",onClick:()=>s.deleteInputEdge(n.input.id)}]}),a.preventDefault(),a.stopPropagation()},get children(){return[ne(PQ,{ref(a){const i=r(n.input.id);typeof i=="function"&&i(a)},get style(){return{background:e.input()===n.input.id?"#bb9af7":"#7aa2f7"}}}),rn(()=>n.input.name)]}})},zQ=ot("div")({display:"flex",gap:"10px",cursor:"pointer"}),VQ=ot("div")({width:"20px",height:"20px","border-radius":"50%"}),WQ=n=>{const e=rb(),t=Qr(),s=zn(),o=Ji(),r=a=>i=>requestAnimationFrame(()=>o.track(a,i));return ne(zQ,{onClick:()=>{e.setOutput(n.output.id)},onContextMenu:a=>{t.show({position:[a.clientX,a.clientY],options:[{icon:ob,label:"delete",onClick:()=>s.deleteOutputEdges(n.output.id)}]}),a.preventDefault(),a.stopPropagation()},get children(){return[rn(()=>n.output.name),ne(VQ,{ref(a){const i=r(n.output.id);typeof i=="function"&&i(a)},get style(){return{background:e.output()===n.output.id?"#bb9af7":"#7aa2f7"}}})]}})},UQ=n=>rn(()=>{const t=pp(sf,"show",[n.body.value]).fn;return ne(t,{get body(){return n.body}})}),Iy=fs("<div></div>",2),GQ=ot("div")({position:"absolute",display:"flex",padding:"10px 0",gap:"10px",background:"#3b4261","border-radius":"10px",color:"white","font-family":"monospace","font-size":"20px","box-shadow":"0 0 4px rgba(0, 0, 0, 0.5)"}),HQ=ot("div")({display:"flex","flex-direction":"column",gap:"10px",transform:"translateX(-10px)"}),jQ=ot("div")({display:"flex","flex-direction":"column",gap:"10px",transform:"translateX(10px)"}),qQ=ot("div")({display:"flex","flex-direction":"column","align-items":"center",gap:"10px"}),XQ=ot("div")({color:"#bb9af7"}),KQ=n=>{const e=()=>{const[c,u]=n.node.position;return`translate(${c}px, ${u}px)`},t=()=>n.node.kind===Dc.SOURCE?[]:n.node.inputs.map(c=>a.database.inputs[c]),s=()=>n.node.kind===Dc.SINK?[]:n.node.outputs.map(c=>a.database.outputs[c]),o=hC(),r=Qr(),a=zn(),i=Qi();return ne(GQ,{get style(){return{transform:e()}},onPointerDown:c=>{c.button===0&&o.downOnNode(c,n.node.id)},onContextMenu:c=>{r.show({position:[c.clientX,c.clientY],options:[{icon:ob,label:"delete",onClick:()=>a.deleteNode(n.node.id)},{icon:sb,label:"replace",onClick:()=>i.show({kind:zo.REPLACE,node:n.node.id})}]}),c.preventDefault(),c.stopPropagation()},get children(){return[ne(HQ,{get children(){return ne(ju,{get when(){return t().length>0},get fallback(){return(()=>{const c=Iy.cloneNode(!0);return c.style.setProperty("width","10px"),c})()},get children(){return ne(po,{get each(){return t()},children:c=>ne(BQ,{input:c})})}})}}),ne(qQ,{get children(){return[ne(XQ,{get children(){return n.node.name}}),ne(UQ,{get body(){return a.database.bodies[n.node.body]}})]}}),ne(jQ,{get children(){return ne(ju,{get when(){return s().length>0},get fallback(){return(()=>{const c=Iy.cloneNode(!0);return c.style.setProperty("width","10px"),c})()},get children(){return ne(po,{get each(){return s()},children:c=>ne(WQ,{output:c})})}})}})]}})},YQ=ot("div")({"transform-origin":"top left"}),ZQ=()=>{const n=Mr(),e=zn(),t=()=>{const[r,a]=n.position();return`translate(${r}px, ${a}px)`},s=()=>`scale(${n.zoom()}, ${n.zoom()})`,o=()=>`${t()} ${s()}`;return ne(YQ,{get style(){return{transform:o()}},get children(){return ne(po,{get each(){return Object.values(e.database.nodes)},children:r=>ne(KQ,{node:r})})}})},JQ=ot("div")({overflow:"hidden",position:"relative",width:"100%",height:"100%",background:"#24283b","background-size":"40px 40px","background-image":"radial-gradient(circle, #3b4261 1px, rgba(0, 0, 0, 0) 1px)"}),QQ=()=>{const n=Qi(),e=Qr(),t=Mr(),s=zn(),o=hC(),r=rb(),a=tb(),[i,c]=Bt(!1),[u,l]=Bt([0,0]),[d,h]=Bt(!1),p=y=>{y.button===0?(c(!1),o.up(y)):y.button===1&&h(!1)},f=y=>{if(c(!1),!e.visible())if(d()){const w=[y.clientX,y.clientY],I=dr(w,u());l(w),t.drag(I)}else o.move(y)};document.addEventListener("pointerup",p),document.addEventListener("pointermove",f),cf(()=>{document.removeEventListener("pointerup",p),document.removeEventListener("pointermove",f)});const m=y=>{y.preventDefault(),y.ctrlKey||y.metaKey?t.pinch(dr([y.clientX,y.clientY],a.fullOffset()),y.deltaY):y.shiftKey?t.drag([-y.deltaX-y.deltaY,0]):t.drag([-y.deltaX,-y.deltaY])},g=(y,w)=>()=>s.addNode(y,t.worldSpace(w)),b=y=>{e.show({position:y,options:[{icon:SQ,label:"select",onClick:()=>console.log("select")},{icon:sb,label:"search",onClick:()=>n.show({kind:zo.INSERT,position:y})},{icon:$Q,label:"num",onClick:g("num",y)},{icon:CQ,label:"add",onClick:g("add",y)},{icon:oQ,label:"sub",onClick:g("sub",y)}]})};return ne(JQ,{ref(y){const w=a.set;typeof w=="function"?w(y):a.set=y},onPointerDown:y=>{r.clear(),y.button===0?(o.downOnBackground(y),c(!0),setTimeout(()=>{i()&&b([y.clientX,y.clientY])},300)):y.button===1&&(h(!0),l([y.clientX,y.clientY]))},onWheel:m,onContextMenu:y=>{y.preventDefault(),b([y.clientX,y.clientY])},get children(){return[ne(_Q,{}),ne(ZQ,{})]}})},eee=()=>ne(pJ,{get children(){return ne(gJ,{get children(){return ne(FQ,{get children(){return ne(MQ,{get children(){return ne(QQ,{})}})}})}})}}),tee=ot("div")({width:"100vw",height:"100vh"}),nee=()=>{const n=Qi(),e=Qr(),t=s=>{if(!(n.visible()||e.visible()))switch(s.key){case"f":return s.preventDefault(),n.show({kind:zo.INSERT,position:[window.innerWidth/2,window.innerHeight/2]});default:return}};return document.addEventListener("keydown",t),cf(()=>document.removeEventListener("keydown",t)),[ne(eee,{}),ne(pQ,{}),ne(kQ,{})]},see=()=>{const n=JJ();return vQ(n),ne(fJ,{graph:n,get children(){return ne(_S,{get children(){return ne(tQ,{get children(){return ne(mQ,{get children(){return ne(bJ,{get children(){return ne(tee,{get children(){return ne(nee,{})}})}})}})}})}})}})};sS(()=>ne(see,{}),document.getElementById("root"));
